// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn batch_forward::<impl at cita-auth/src/batch_forward.rs:35:1: 35:18>::new(_1: usize, _2: u64, _3: pubsub::crossbeam_channel::Receiver<libproto::Request>, _4: pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>) -> BatchForward {
    debug batch_size => _1;              // in scope 0 at cita-auth/src/batch_forward.rs:37:9: 37:19
    debug timeout => _2;                 // in scope 0 at cita-auth/src/batch_forward.rs:38:9: 38:16
    debug rx_request => _3;              // in scope 0 at cita-auth/src/batch_forward.rs:39:9: 39:19
    debug tx_pub => _4;                  // in scope 0 at cita-auth/src/batch_forward.rs:40:9: 40:15
    let mut _0: batch_forward::BatchForward; // return place in scope 0 at cita-auth/src/batch_forward.rs:41:10: 41:14
    let mut _5: u64;                     // in scope 0 at cita-auth/src/batch_forward.rs:46:29: 46:61
    let _6: &std::time::Duration;        // in scope 0 at cita-auth/src/batch_forward.rs:46:49: 46:60
    let _7: std::time::Duration;         // in scope 0 at cita-auth/src/batch_forward.rs:46:50: 46:60
    let mut _8: std::vec::Vec<libproto::Request>; // in scope 0 at cita-auth/src/batch_forward.rs:47:29: 47:39
    let mut _9: pubsub::crossbeam_channel::Receiver<libproto::Request>; // in scope 0 at cita-auth/src/batch_forward.rs:48:13: 48:23
    let mut _10: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-auth/src/batch_forward.rs:49:13: 49:19

    bb0: {
        _7 = unix_now() -> [return: bb1, unwind: bb4]; // scope 0 at cita-auth/src/batch_forward.rs:46:50: 46:60
                                         // mir::Constant
                                         // + span: cita-auth/src/batch_forward.rs:46:50: 46:58
                                         // + literal: Const { ty: fn() -> Duration {unix_now}, val: Value(<ZST>) }
    }

    bb1: {
        _6 = &_7;                        // scope 0 at cita-auth/src/batch_forward.rs:46:49: 46:60
        _5 = <Duration as AsMillis>::as_millis(_6) -> [return: bb2, unwind: bb4]; // scope 0 at cita-auth/src/batch_forward.rs:46:29: 46:61
                                         // mir::Constant
                                         // + span: cita-auth/src/batch_forward.rs:46:29: 46:48
                                         // + literal: Const { ty: for<'a> fn(&'a Duration) -> u64 {<Duration as AsMillis>::as_millis}, val: Value(<ZST>) }
    }

    bb2: {
        _8 = Vec::<libproto::Request>::new() -> [return: bb3, unwind: bb4]; // scope 0 at cita-auth/src/batch_forward.rs:47:29: 47:39
                                         // mir::Constant
                                         // + span: cita-auth/src/batch_forward.rs:47:29: 47:37
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn() -> Vec<libproto::Request> {Vec::<libproto::Request>::new}, val: Value(<ZST>) }
    }

    bb3: {
        _9 = move _3;                    // scope 0 at cita-auth/src/batch_forward.rs:48:13: 48:23
        _10 = move _4;                   // scope 0 at cita-auth/src/batch_forward.rs:49:13: 49:19
        _0 = BatchForward { batch_size: _1, timeout: _2, check_duration: const 5_u32, last_timestamp: move _5, request_buffer: move _8, rx_request: move _9, tx_pub: move _10 }; // scope 0 at cita-auth/src/batch_forward.rs:42:9: 50:10
        return;                          // scope 0 at cita-auth/src/batch_forward.rs:51:6: 51:6
    }

    bb4 (cleanup): {
        drop(_4) -> bb5;                 // scope 0 at cita-auth/src/batch_forward.rs:51:5: 51:6
    }

    bb5 (cleanup): {
        drop(_3) -> bb6;                 // scope 0 at cita-auth/src/batch_forward.rs:51:5: 51:6
    }

    bb6 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/batch_forward.rs:36:5: 51:6
    }
}

fn batch_forward::<impl at cita-auth/src/batch_forward.rs:35:1: 35:18>::run(_1: &mut BatchForward) -> () {
    debug self => _1;                    // in scope 0 at cita-auth/src/batch_forward.rs:53:16: 53:25
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/batch_forward.rs:53:27: 53:27
    let mut _2: std::result::Result<libproto::Request, pubsub::crossbeam_channel::TryRecvError>; // in scope 0 at cita-auth/src/batch_forward.rs:55:33: 55:59
    let mut _3: &pubsub::crossbeam_channel::Receiver<libproto::Request>; // in scope 0 at cita-auth/src/batch_forward.rs:55:33: 55:59
    let mut _4: isize;                   // in scope 0 at cita-auth/src/batch_forward.rs:55:20: 55:30
    let _6: ();                          // in scope 0 at cita-auth/src/batch_forward.rs:56:17: 56:49
    let mut _7: &mut std::vec::Vec<libproto::Request>; // in scope 0 at cita-auth/src/batch_forward.rs:56:17: 56:49
    let mut _8: bool;                    // in scope 0 at cita-auth/src/batch_forward.rs:57:20: 57:63
    let mut _9: usize;                   // in scope 0 at cita-auth/src/batch_forward.rs:57:20: 57:45
    let mut _10: &std::vec::Vec<libproto::Request>; // in scope 0 at cita-auth/src/batch_forward.rs:57:20: 57:45
    let mut _11: usize;                  // in scope 0 at cita-auth/src/batch_forward.rs:57:48: 57:63
    let _12: ();                         // in scope 0 at cita-auth/src/batch_forward.rs:58:21: 58:41
    let _13: ();                         // in scope 0 at cita-auth/src/batch_forward.rs:61:17: 61:81
    let mut _14: std::time::Duration;    // in scope 0 at cita-auth/src/batch_forward.rs:61:31: 61:80
    let mut _15: u32;                    // in scope 0 at cita-auth/src/batch_forward.rs:61:48: 61:79
    let mut _16: u32;                    // in scope 0 at cita-auth/src/batch_forward.rs:61:48: 61:67
    let mut _17: (u32, bool);            // in scope 0 at cita-auth/src/batch_forward.rs:61:48: 61:79
    let _18: u64;                        // in scope 0 at cita-auth/src/batch_forward.rs:62:21: 62:24
    let _19: &std::time::Duration;       // in scope 0 at cita-auth/src/batch_forward.rs:62:47: 62:58
    let _20: std::time::Duration;        // in scope 0 at cita-auth/src/batch_forward.rs:62:48: 62:58
    let mut _21: bool;                   // in scope 0 at cita-auth/src/batch_forward.rs:63:20: 64:55
    let mut _22: bool;                   // in scope 0 at cita-auth/src/batch_forward.rs:63:20: 63:74
    let mut _23: u64;                    // in scope 0 at cita-auth/src/batch_forward.rs:63:20: 63:59
    let mut _24: u64;                    // in scope 0 at cita-auth/src/batch_forward.rs:63:20: 63:23
    let mut _25: u64;                    // in scope 0 at cita-auth/src/batch_forward.rs:63:39: 63:58
    let mut _26: u64;                    // in scope 0 at cita-auth/src/batch_forward.rs:63:62: 63:74
    let mut _27: bool;                   // in scope 0 at cita-auth/src/batch_forward.rs:64:24: 64:55
    let mut _28: bool;                   // in scope 0 at cita-auth/src/batch_forward.rs:64:25: 64:55
    let mut _29: &std::vec::Vec<libproto::Request>; // in scope 0 at cita-auth/src/batch_forward.rs:64:25: 64:55
    let _30: ();                         // in scope 0 at cita-auth/src/batch_forward.rs:66:21: 66:41
    let mut _31: bool;                   // in scope 0 at cita-auth/src/batch_forward.rs:69:9: 69:10
    let mut _32: isize;                  // in scope 0 at cita-auth/src/batch_forward.rs:69:9: 69:10
    let mut _33: isize;                  // in scope 0 at cita-auth/src/batch_forward.rs:69:9: 69:10
    scope 1 {
        debug tx_req => _5;              // in scope 1 at cita-auth/src/batch_forward.rs:55:23: 55:29
        let _5: libproto::Request;       // in scope 1 at cita-auth/src/batch_forward.rs:55:23: 55:29
    }
    scope 2 {
        debug now => _18;                // in scope 2 at cita-auth/src/batch_forward.rs:62:21: 62:24
    }

    bb0: {
        _31 = const false;               // scope 0 at cita-auth/src/batch_forward.rs:54:9: 69:10
        goto -> bb1;                     // scope 0 at cita-auth/src/batch_forward.rs:54:9: 69:10
    }

    bb1: {
        _3 = &((*_1).5: pubsub::crossbeam_channel::Receiver<libproto::Request>); // scope 1 at cita-auth/src/batch_forward.rs:55:33: 55:59
        _31 = const true;                // scope 1 at cita-auth/src/batch_forward.rs:55:33: 55:59
        _2 = pubsub::crossbeam_channel::Receiver::<libproto::Request>::try_recv(move _3) -> bb2; // scope 1 at cita-auth/src/batch_forward.rs:55:33: 55:59
                                         // mir::Constant
                                         // + span: cita-auth/src/batch_forward.rs:55:49: 55:57
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Receiver<libproto::Request>) -> Result<libproto::Request, pubsub::crossbeam_channel::TryRecvError> {pubsub::crossbeam_channel::Receiver::<libproto::Request>::try_recv}, val: Value(<ZST>) }
    }

    bb2: {
        _4 = discriminant(_2);           // scope 1 at cita-auth/src/batch_forward.rs:55:20: 55:30
        switchInt(move _4) -> [0: bb3, otherwise: bb7]; // scope 1 at cita-auth/src/batch_forward.rs:55:20: 55:30
    }

    bb3: {
        _31 = const false;               // scope 1 at cita-auth/src/batch_forward.rs:55:23: 55:29
        _5 = move ((_2 as Ok).0: libproto::Request); // scope 1 at cita-auth/src/batch_forward.rs:55:23: 55:29
        _7 = &mut ((*_1).4: std::vec::Vec<libproto::Request>); // scope 1 at cita-auth/src/batch_forward.rs:56:17: 56:49
        _6 = Vec::<libproto::Request>::push(move _7, move _5) -> [return: bb4, unwind: bb26]; // scope 1 at cita-auth/src/batch_forward.rs:56:17: 56:49
                                         // mir::Constant
                                         // + span: cita-auth/src/batch_forward.rs:56:37: 56:41
                                         // + literal: Const { ty: for<'a> fn(&'a mut Vec<libproto::Request>, libproto::Request) {Vec::<libproto::Request>::push}, val: Value(<ZST>) }
    }

    bb4: {
        _10 = &((*_1).4: std::vec::Vec<libproto::Request>); // scope 1 at cita-auth/src/batch_forward.rs:57:20: 57:45
        _9 = Vec::<libproto::Request>::len(move _10) -> [return: bb5, unwind: bb26]; // scope 1 at cita-auth/src/batch_forward.rs:57:20: 57:45
                                         // mir::Constant
                                         // + span: cita-auth/src/batch_forward.rs:57:40: 57:43
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<libproto::Request>) -> usize {Vec::<libproto::Request>::len}, val: Value(<ZST>) }
    }

    bb5: {
        _11 = ((*_1).0: usize);          // scope 1 at cita-auth/src/batch_forward.rs:57:48: 57:63
        _8 = Gt(move _9, move _11);      // scope 1 at cita-auth/src/batch_forward.rs:57:20: 57:63
        switchInt(move _8) -> [0: bb23, otherwise: bb6]; // scope 1 at cita-auth/src/batch_forward.rs:57:20: 57:63
    }

    bb6: {
        _12 = BatchForward::batch_forward(_1) -> [return: bb27, unwind: bb26]; // scope 1 at cita-auth/src/batch_forward.rs:58:21: 58:41
                                         // mir::Constant
                                         // + span: cita-auth/src/batch_forward.rs:58:26: 58:39
                                         // + literal: Const { ty: for<'a> fn(&'a mut BatchForward) {BatchForward::batch_forward}, val: Value(<ZST>) }
    }

    bb7: {
        _16 = ((*_1).2: u32);            // scope 0 at cita-auth/src/batch_forward.rs:61:48: 61:67
        _17 = CheckedMul(_16, const 1000000_u32); // scope 0 at cita-auth/src/batch_forward.rs:61:48: 61:79
        assert(!move (_17.1: bool), "attempt to compute `{} * {}`, which would overflow", move _16, const 1000000_u32) -> [success: bb8, unwind: bb26]; // scope 0 at cita-auth/src/batch_forward.rs:61:48: 61:79
    }

    bb8: {
        _15 = move (_17.0: u32);         // scope 0 at cita-auth/src/batch_forward.rs:61:48: 61:79
        _14 = Duration::new(const 0_u64, move _15) -> [return: bb9, unwind: bb26]; // scope 0 at cita-auth/src/batch_forward.rs:61:31: 61:80
                                         // mir::Constant
                                         // + span: cita-auth/src/batch_forward.rs:61:31: 61:44
                                         // + literal: Const { ty: fn(u64, u32) -> Duration {Duration::new}, val: Value(<ZST>) }
    }

    bb9: {
        _13 = sleep(move _14) -> [return: bb10, unwind: bb26]; // scope 0 at cita-auth/src/batch_forward.rs:61:17: 61:81
                                         // mir::Constant
                                         // + span: cita-auth/src/batch_forward.rs:61:17: 61:30
                                         // + literal: Const { ty: fn(Duration) {sleep}, val: Value(<ZST>) }
    }

    bb10: {
        _20 = unix_now() -> [return: bb11, unwind: bb26]; // scope 0 at cita-auth/src/batch_forward.rs:62:48: 62:58
                                         // mir::Constant
                                         // + span: cita-auth/src/batch_forward.rs:62:48: 62:56
                                         // + literal: Const { ty: fn() -> Duration {unix_now}, val: Value(<ZST>) }
    }

    bb11: {
        _19 = &_20;                      // scope 0 at cita-auth/src/batch_forward.rs:62:47: 62:58
        _18 = <Duration as AsMillis>::as_millis(_19) -> [return: bb12, unwind: bb26]; // scope 0 at cita-auth/src/batch_forward.rs:62:27: 62:59
                                         // mir::Constant
                                         // + span: cita-auth/src/batch_forward.rs:62:27: 62:46
                                         // + literal: Const { ty: for<'a> fn(&'a Duration) -> u64 {<Duration as AsMillis>::as_millis}, val: Value(<ZST>) }
    }

    bb12: {
        _24 = _18;                       // scope 2 at cita-auth/src/batch_forward.rs:63:20: 63:23
        _25 = ((*_1).3: u64);            // scope 2 at cita-auth/src/batch_forward.rs:63:39: 63:58
        _23 = core::num::<impl u64>::saturating_sub(move _24, move _25) -> [return: bb16, unwind: bb26]; // scope 2 at cita-auth/src/batch_forward.rs:63:20: 63:59
                                         // mir::Constant
                                         // + span: cita-auth/src/batch_forward.rs:63:24: 63:38
                                         // + literal: Const { ty: fn(u64, u64) -> u64 {core::num::<impl u64>::saturating_sub}, val: Value(<ZST>) }
    }

    bb13: {
        _21 = const false;               // scope 2 at cita-auth/src/batch_forward.rs:63:20: 64:55
        goto -> bb15;                    // scope 2 at cita-auth/src/batch_forward.rs:63:20: 64:55
    }

    bb14: {
        _29 = &((*_1).4: std::vec::Vec<libproto::Request>); // scope 2 at cita-auth/src/batch_forward.rs:64:25: 64:55
        _28 = Vec::<libproto::Request>::is_empty(move _29) -> [return: bb17, unwind: bb26]; // scope 2 at cita-auth/src/batch_forward.rs:64:25: 64:55
                                         // mir::Constant
                                         // + span: cita-auth/src/batch_forward.rs:64:45: 64:53
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<libproto::Request>) -> bool {Vec::<libproto::Request>::is_empty}, val: Value(<ZST>) }
    }

    bb15: {
        switchInt(move _21) -> [0: bb23, otherwise: bb18]; // scope 2 at cita-auth/src/batch_forward.rs:63:20: 64:55
    }

    bb16: {
        _26 = ((*_1).1: u64);            // scope 2 at cita-auth/src/batch_forward.rs:63:62: 63:74
        _22 = Gt(move _23, move _26);    // scope 2 at cita-auth/src/batch_forward.rs:63:20: 63:74
        switchInt(move _22) -> [0: bb13, otherwise: bb14]; // scope 2 at cita-auth/src/batch_forward.rs:63:20: 64:55
    }

    bb17: {
        _27 = Not(move _28);             // scope 2 at cita-auth/src/batch_forward.rs:64:24: 64:55
        _21 = move _27;                  // scope 2 at cita-auth/src/batch_forward.rs:63:20: 64:55
        goto -> bb15;                    // scope 2 at cita-auth/src/batch_forward.rs:63:20: 64:55
    }

    bb18: {
        _30 = BatchForward::batch_forward(_1) -> [return: bb28, unwind: bb26]; // scope 2 at cita-auth/src/batch_forward.rs:66:21: 66:41
                                         // mir::Constant
                                         // + span: cita-auth/src/batch_forward.rs:66:26: 66:39
                                         // + literal: Const { ty: for<'a> fn(&'a mut BatchForward) {BatchForward::batch_forward}, val: Value(<ZST>) }
    }

    bb19 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/batch_forward.rs:53:5: 70:6
    }

    bb20: {
        _31 = const false;               // scope 0 at cita-auth/src/batch_forward.rs:69:9: 69:10
        goto -> bb1;                     // scope 0 at cita-auth/src/batch_forward.rs:54:9: 69:10
    }

    bb21: {
        switchInt(_31) -> [0: bb20, otherwise: bb22]; // scope 0 at cita-auth/src/batch_forward.rs:69:9: 69:10
    }

    bb22: {
        drop(((_2 as Ok).0: libproto::Request)) -> bb20; // scope 0 at cita-auth/src/batch_forward.rs:69:9: 69:10
    }

    bb23: {
        _32 = discriminant(_2);          // scope 0 at cita-auth/src/batch_forward.rs:69:9: 69:10
        switchInt(move _32) -> [0: bb21, otherwise: bb20]; // scope 0 at cita-auth/src/batch_forward.rs:69:9: 69:10
    }

    bb24 (cleanup): {
        switchInt(_31) -> [0: bb19, otherwise: bb25]; // scope 0 at cita-auth/src/batch_forward.rs:69:9: 69:10
    }

    bb25 (cleanup): {
        drop(((_2 as Ok).0: libproto::Request)) -> bb19; // scope 0 at cita-auth/src/batch_forward.rs:69:9: 69:10
    }

    bb26 (cleanup): {
        _33 = discriminant(_2);          // scope 0 at cita-auth/src/batch_forward.rs:69:9: 69:10
        switchInt(move _33) -> [0: bb24, otherwise: bb19]; // scope 0 at cita-auth/src/batch_forward.rs:69:9: 69:10
    }

    bb27: {
        goto -> bb23;                    // scope 1 at cita-auth/src/batch_forward.rs:58:21: 58:41
    }

    bb28: {
        goto -> bb23;                    // scope 2 at cita-auth/src/batch_forward.rs:66:21: 66:41
    }
}

fn batch_forward::<impl at cita-auth/src/batch_forward.rs:35:1: 35:18>::batch_forward(_1: &mut BatchForward) -> () {
    debug self => _1;                    // in scope 0 at cita-auth/src/batch_forward.rs:72:22: 72:31
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/batch_forward.rs:72:33: 72:33
    let _2: log::Level;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
    let mut _3: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _4: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _5: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _6: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _7: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _8: &log::LevelFilter;       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _9: log::LevelFilter;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _10: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _11: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _12: &[&str];                // in scope 0 at cita-auth/src/batch_forward.rs:74:13: 74:74
    let mut _13: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _14: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _15: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _16: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/batch_forward.rs:75:13: 75:38
    let _17: &usize;                     // in scope 0 at cita-auth/src/batch_forward.rs:75:13: 75:38
    let _18: usize;                      // in scope 0 at cita-auth/src/batch_forward.rs:75:13: 75:38
    let mut _19: &std::vec::Vec<libproto::Request>; // in scope 0 at cita-auth/src/batch_forward.rs:75:13: 75:38
    let mut _20: libproto::BatchRequest; // in scope 0 at cita-auth/src/batch_forward.rs:77:13: 77:30
    let _21: ();                         // in scope 0 at cita-auth/src/batch_forward.rs:78:9: 78:78
    let mut _22: &mut libproto::BatchRequest; // in scope 0 at cita-auth/src/batch_forward.rs:78:9: 78:78
    let mut _23: protobuf::repeated::RepeatedField<libproto::Request>; // in scope 0 at cita-auth/src/batch_forward.rs:78:43: 78:77
    let mut _24: std::vec::Vec<libproto::Request>; // in scope 0 at cita-auth/src/batch_forward.rs:78:43: 78:70
    let mut _25: &std::vec::Vec<libproto::Request>; // in scope 0 at cita-auth/src/batch_forward.rs:78:43: 78:70
    let mut _27: &[u8];                  // in scope 0 at cita-auth/src/batch_forward.rs:80:26: 80:60
    let mut _28: &[u8; 16];              // in scope 0 at cita-auth/src/batch_forward.rs:80:26: 80:60
    let _29: &[u8; 16];                  // in scope 0 at cita-auth/src/batch_forward.rs:80:26: 80:51
    let mut _30: &uuid::Uuid;            // in scope 0 at cita-auth/src/batch_forward.rs:80:26: 80:51
    let _31: uuid::Uuid;                 // in scope 0 at cita-auth/src/batch_forward.rs:80:26: 80:40
    let _33: ();                         // in scope 0 at cita-auth/src/batch_forward.rs:82:9: 82:45
    let mut _34: &mut libproto::Request; // in scope 0 at cita-auth/src/batch_forward.rs:82:9: 82:45
    let mut _35: libproto::BatchRequest; // in scope 0 at cita-auth/src/batch_forward.rs:82:31: 82:44
    let _36: ();                         // in scope 0 at cita-auth/src/batch_forward.rs:83:9: 83:43
    let mut _37: &mut libproto::Request; // in scope 0 at cita-auth/src/batch_forward.rs:83:9: 83:43
    let mut _38: std::vec::Vec<u8>;      // in scope 0 at cita-auth/src/batch_forward.rs:83:32: 83:42
    let mut _40: libproto::Request;      // in scope 0 at cita-auth/src/batch_forward.rs:85:28: 85:35
    let _41: ();                         // in scope 0 at cita-auth/src/batch_forward.rs:86:9: 91:22
    let mut _42: std::result::Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>>; // in scope 0 at cita-auth/src/batch_forward.rs:86:9: 90:15
    let mut _43: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-auth/src/batch_forward.rs:86:9: 90:15
    let mut _44: (std::string::String, std::vec::Vec<u8>); // in scope 0 at cita-auth/src/batch_forward.rs:87:19: 90:14
    let mut _45: std::string::String;    // in scope 0 at cita-auth/src/batch_forward.rs:88:17: 88:53
    let mut _46: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _47: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _48: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _49: std::vec::Vec<u8>;      // in scope 0 at cita-auth/src/batch_forward.rs:89:17: 89:40
    let mut _50: std::result::Result<std::vec::Vec<u8>, libproto::TryIntoConvertError>; // in scope 0 at cita-auth/src/batch_forward.rs:89:17: 89:31
    let mut _51: libproto::Message;      // in scope 0 at cita-auth/src/batch_forward.rs:89:17: 89:20
    let mut _52: u64;                    // in scope 0 at cita-auth/src/batch_forward.rs:93:31: 93:63
    let _53: &std::time::Duration;       // in scope 0 at cita-auth/src/batch_forward.rs:93:51: 93:62
    let _54: std::time::Duration;        // in scope 0 at cita-auth/src/batch_forward.rs:93:52: 93:62
    let _55: ();                         // in scope 0 at cita-auth/src/batch_forward.rs:94:9: 94:36
    let mut _56: &mut std::vec::Vec<libproto::Request>; // in scope 0 at cita-auth/src/batch_forward.rs:94:9: 94:36
    let mut _60: bool;                   // in scope 0 at cita-auth/src/batch_forward.rs:95:5: 95:6
    let mut _61: bool;                   // in scope 0 at cita-auth/src/batch_forward.rs:95:5: 95:6
    let mut _62: bool;                   // in scope 0 at cita-auth/src/batch_forward.rs:95:5: 95:6
    let mut _63: bool;                   // in scope 0 at cita-auth/src/batch_forward.rs:95:5: 95:6
    scope 1 {
        debug lvl => _2;                 // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _57: &(&str, &str, &str, u32); // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        let mut _58: &[&str; 2];         // in scope 1 at cita-auth/src/batch_forward.rs:74:13: 74:74
        let mut _59: &log::LevelFilter;  // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
    scope 2 {
        debug batch_request => _20;      // in scope 2 at cita-auth/src/batch_forward.rs:77:13: 77:30
        let _26: std::vec::Vec<u8>;      // in scope 2 at cita-auth/src/batch_forward.rs:80:13: 80:23
        scope 3 {
            debug request_id => _26;     // in scope 3 at cita-auth/src/batch_forward.rs:80:13: 80:23
            let mut _32: libproto::Request; // in scope 3 at cita-auth/src/batch_forward.rs:81:13: 81:24
            scope 4 {
                debug request => _32;    // in scope 4 at cita-auth/src/batch_forward.rs:81:13: 81:24
                let _39: libproto::Message; // in scope 4 at cita-auth/src/batch_forward.rs:85:13: 85:16
                scope 5 {
                    debug msg => _39;    // in scope 5 at cita-auth/src/batch_forward.rs:85:13: 85:16
                }
            }
        }
    }

    bb0: {
        _61 = const false;               // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:34:56: 43:6
        _62 = const false;               // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:34:56: 43:6
        _60 = const false;               // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:34:56: 43:6
        _63 = const false;               // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:34:56: 43:6
        _2 = log::Level::Trace;          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _5 = &_2;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _59 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(BatchForward::batch_forward, [], Some(promoted[2])) }
        _4 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _5, _59) -> bb4; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = const false;                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb3;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb2: {
        _7 = &_2;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _9 = log::max_level() -> bb5;    // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb3: {
        switchInt(move _3) -> [0: bb11, otherwise: bb7]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb4: {
        switchInt(move _4) -> [0: bb1, otherwise: bb2]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb5: {
        _8 = &_9;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _6 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _7, move _8) -> bb6; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb6: {
        _3 = move _6;                    // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb3;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        _58 = const _;                   // scope 1 at cita-auth/src/batch_forward.rs:74:13: 74:74
                                         // mir::Constant
                                         // + span: cita-auth/src/batch_forward.rs:74:13: 74:74
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(BatchForward::batch_forward, [], Some(promoted[1])) }
        _12 = _58 as &[&str] (Pointer(Unsize)); // scope 1 at cita-auth/src/batch_forward.rs:74:13: 74:74
        _19 = &((*_1).4: std::vec::Vec<libproto::Request>); // scope 1 at cita-auth/src/batch_forward.rs:75:13: 75:38
        _18 = Vec::<libproto::Request>::len(move _19) -> bb8; // scope 1 at cita-auth/src/batch_forward.rs:75:13: 75:38
                                         // mir::Constant
                                         // + span: cita-auth/src/batch_forward.rs:75:33: 75:36
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<libproto::Request>) -> usize {Vec::<libproto::Request>::len}, val: Value(<ZST>) }
    }

    bb8: {
        _17 = &_18;                      // scope 1 at cita-auth/src/batch_forward.rs:75:13: 75:38
        _16 = core::fmt::ArgumentV1::<'_>::new_display::<usize>(_17) -> bb9; // scope 1 at cita-auth/src/batch_forward.rs:75:13: 75:38
                                         // mir::Constant
                                         // + span: cita-auth/src/batch_forward.rs:75:13: 75:38
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b usize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<usize>}, val: Value(<ZST>) }
    }

    bb9: {
        _15 = [move _16];                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _14 = &_15;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _13 = _14 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _11 = Arguments::<'_>::new_v1(move _12, move _13) -> bb10; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb10: {
        _57 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(BatchForward::batch_forward, [], Some(promoted[0])) }
        _10 = log::__private_api_log(move _11, _2, _57) -> bb11; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb11: {
        _63 = const true;                // scope 0 at cita-auth/src/batch_forward.rs:77:33: 77:52
        _20 = BatchRequest::new() -> bb12; // scope 0 at cita-auth/src/batch_forward.rs:77:33: 77:52
                                         // mir::Constant
                                         // + span: cita-auth/src/batch_forward.rs:77:33: 77:50
                                         // + literal: Const { ty: fn() -> BatchRequest {BatchRequest::new}, val: Value(<ZST>) }
    }

    bb12: {
        _22 = &mut _20;                  // scope 2 at cita-auth/src/batch_forward.rs:78:9: 78:78
        _25 = &((*_1).4: std::vec::Vec<libproto::Request>); // scope 2 at cita-auth/src/batch_forward.rs:78:43: 78:70
        _24 = <Vec<libproto::Request> as Clone>::clone(move _25) -> [return: bb13, unwind: bb40]; // scope 2 at cita-auth/src/batch_forward.rs:78:43: 78:70
                                         // mir::Constant
                                         // + span: cita-auth/src/batch_forward.rs:78:63: 78:68
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<libproto::Request>) -> Vec<libproto::Request> {<Vec<libproto::Request> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb13: {
        _23 = <Vec<libproto::Request> as Into<protobuf::repeated::RepeatedField<libproto::Request>>>::into(move _24) -> [return: bb14, unwind: bb40]; // scope 2 at cita-auth/src/batch_forward.rs:78:43: 78:77
                                         // mir::Constant
                                         // + span: cita-auth/src/batch_forward.rs:78:71: 78:75
                                         // + literal: Const { ty: fn(Vec<libproto::Request>) -> protobuf::repeated::RepeatedField<libproto::Request> {<Vec<libproto::Request> as Into<protobuf::repeated::RepeatedField<libproto::Request>>>::into}, val: Value(<ZST>) }
    }

    bb14: {
        _21 = BatchRequest::set_new_tx_requests(move _22, move _23) -> [return: bb15, unwind: bb40]; // scope 2 at cita-auth/src/batch_forward.rs:78:9: 78:78
                                         // mir::Constant
                                         // + span: cita-auth/src/batch_forward.rs:78:23: 78:42
                                         // + literal: Const { ty: for<'a> fn(&'a mut BatchRequest, protobuf::repeated::RepeatedField<libproto::Request>) {BatchRequest::set_new_tx_requests}, val: Value(<ZST>) }
    }

    bb15: {
        _31 = uuid::v4::<impl Uuid>::new_v4() -> [return: bb16, unwind: bb40]; // scope 2 at cita-auth/src/batch_forward.rs:80:26: 80:40
                                         // mir::Constant
                                         // + span: cita-auth/src/batch_forward.rs:80:26: 80:38
                                         // + literal: Const { ty: fn() -> Uuid {uuid::v4::<impl Uuid>::new_v4}, val: Value(<ZST>) }
    }

    bb16: {
        _30 = &_31;                      // scope 2 at cita-auth/src/batch_forward.rs:80:26: 80:51
        _29 = Uuid::as_bytes(move _30) -> [return: bb17, unwind: bb40]; // scope 2 at cita-auth/src/batch_forward.rs:80:26: 80:51
                                         // mir::Constant
                                         // + span: cita-auth/src/batch_forward.rs:80:41: 80:49
                                         // + literal: Const { ty: for<'a> fn(&'a Uuid) -> &'a [u8; 16] {Uuid::as_bytes}, val: Value(<ZST>) }
    }

    bb17: {
        _28 = _29;                       // scope 2 at cita-auth/src/batch_forward.rs:80:26: 80:60
        _27 = move _28 as &[u8] (Pointer(Unsize)); // scope 2 at cita-auth/src/batch_forward.rs:80:26: 80:60
        _26 = std::slice::<impl [u8]>::to_vec(move _27) -> [return: bb18, unwind: bb40]; // scope 2 at cita-auth/src/batch_forward.rs:80:26: 80:60
                                         // mir::Constant
                                         // + span: cita-auth/src/batch_forward.rs:80:52: 80:58
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> Vec<u8> {std::slice::<impl [u8]>::to_vec}, val: Value(<ZST>) }
    }

    bb18: {
        _62 = const true;                // scope 2 at cita-auth/src/batch_forward.rs:80:59: 80:60
        _32 = libproto::Request::new() -> [return: bb19, unwind: bb38]; // scope 3 at cita-auth/src/batch_forward.rs:81:27: 81:41
                                         // mir::Constant
                                         // + span: cita-auth/src/batch_forward.rs:81:27: 81:39
                                         // + literal: Const { ty: fn() -> libproto::Request {libproto::Request::new}, val: Value(<ZST>) }
    }

    bb19: {
        _61 = const true;                // scope 4 at cita-auth/src/batch_forward.rs:82:9: 82:45
        _34 = &mut _32;                  // scope 4 at cita-auth/src/batch_forward.rs:82:9: 82:45
        _63 = const false;               // scope 4 at cita-auth/src/batch_forward.rs:82:31: 82:44
        _35 = move _20;                  // scope 4 at cita-auth/src/batch_forward.rs:82:31: 82:44
        _33 = libproto::Request::set_batch_req(move _34, move _35) -> [return: bb20, unwind: bb36]; // scope 4 at cita-auth/src/batch_forward.rs:82:9: 82:45
                                         // mir::Constant
                                         // + span: cita-auth/src/batch_forward.rs:82:17: 82:30
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Request, BatchRequest) {libproto::Request::set_batch_req}, val: Value(<ZST>) }
    }

    bb20: {
        _37 = &mut _32;                  // scope 4 at cita-auth/src/batch_forward.rs:83:9: 83:43
        _62 = const false;               // scope 4 at cita-auth/src/batch_forward.rs:83:32: 83:42
        _38 = move _26;                  // scope 4 at cita-auth/src/batch_forward.rs:83:32: 83:42
        _36 = libproto::Request::set_request_id(move _37, move _38) -> [return: bb21, unwind: bb36]; // scope 4 at cita-auth/src/batch_forward.rs:83:9: 83:43
                                         // mir::Constant
                                         // + span: cita-auth/src/batch_forward.rs:83:17: 83:31
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Request, Vec<u8>) {libproto::Request::set_request_id}, val: Value(<ZST>) }
    }

    bb21: {
        _61 = const false;               // scope 4 at cita-auth/src/batch_forward.rs:85:28: 85:35
        _40 = move _32;                  // scope 4 at cita-auth/src/batch_forward.rs:85:28: 85:35
        _39 = <libproto::Request as Into<libproto::Message>>::into(move _40) -> [return: bb22, unwind: bb36]; // scope 4 at cita-auth/src/batch_forward.rs:85:28: 85:42
                                         // mir::Constant
                                         // + span: cita-auth/src/batch_forward.rs:85:36: 85:40
                                         // + literal: Const { ty: fn(libproto::Request) -> libproto::Message {<libproto::Request as Into<libproto::Message>>::into}, val: Value(<ZST>) }
    }

    bb22: {
        _60 = const true;                // scope 4 at cita-auth/src/batch_forward.rs:85:41: 85:42
        _43 = &((*_1).6: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 5 at cita-auth/src/batch_forward.rs:86:9: 90:15
        _47 = const Auth;                // scope 5 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x04)) }
        _48 = const libproto::router::MsgType::Request; // scope 5 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x01)) }
        _46 = RoutingKey(move _47, move _48); // scope 5 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _45 = <RoutingKey as Into<std::string::String>>::into(move _46) -> [return: bb23, unwind: bb34]; // scope 5 at cita-auth/src/batch_forward.rs:88:17: 88:53
                                         // mir::Constant
                                         // + span: cita-auth/src/batch_forward.rs:88:47: 88:51
                                         // + literal: Const { ty: fn(RoutingKey) -> std::string::String {<RoutingKey as Into<std::string::String>>::into}, val: Value(<ZST>) }
    }

    bb23: {
        _60 = const false;               // scope 5 at cita-auth/src/batch_forward.rs:89:17: 89:20
        _51 = move _39;                  // scope 5 at cita-auth/src/batch_forward.rs:89:17: 89:20
        _50 = <libproto::Message as libproto::TryInto<Vec<u8>>>::try_into(move _51) -> [return: bb24, unwind: bb31]; // scope 5 at cita-auth/src/batch_forward.rs:89:17: 89:31
                                         // mir::Constant
                                         // + span: cita-auth/src/batch_forward.rs:89:21: 89:29
                                         // + literal: Const { ty: fn(libproto::Message) -> Result<Vec<u8>, <libproto::Message as libproto::TryInto<Vec<u8>>>::Error> {<libproto::Message as libproto::TryInto<Vec<u8>>>::try_into}, val: Value(<ZST>) }
    }

    bb24: {
        _49 = Result::<Vec<u8>, TryIntoConvertError>::unwrap(move _50) -> [return: bb25, unwind: bb31]; // scope 5 at cita-auth/src/batch_forward.rs:89:17: 89:40
                                         // mir::Constant
                                         // + span: cita-auth/src/batch_forward.rs:89:32: 89:38
                                         // + literal: Const { ty: fn(Result<Vec<u8>, TryIntoConvertError>) -> Vec<u8> {Result::<Vec<u8>, TryIntoConvertError>::unwrap}, val: Value(<ZST>) }
    }

    bb25: {
        _44 = (move _45, move _49);      // scope 5 at cita-auth/src/batch_forward.rs:87:19: 90:14
        _42 = pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send(move _43, move _44) -> [return: bb26, unwind: bb34]; // scope 5 at cita-auth/src/batch_forward.rs:86:9: 90:15
                                         // mir::Constant
                                         // + span: cita-auth/src/batch_forward.rs:87:14: 87:18
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, (std::string::String, Vec<u8>)) -> Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>> {pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send}, val: Value(<ZST>) }
    }

    bb26: {
        _41 = Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap(move _42) -> [return: bb27, unwind: bb34]; // scope 5 at cita-auth/src/batch_forward.rs:86:9: 91:22
                                         // mir::Constant
                                         // + span: cita-auth/src/batch_forward.rs:91:14: 91:20
                                         // + literal: Const { ty: fn(Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>) {Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap}, val: Value(<ZST>) }
    }

    bb27: {
        _54 = unix_now() -> [return: bb28, unwind: bb34]; // scope 5 at cita-auth/src/batch_forward.rs:93:52: 93:62
                                         // mir::Constant
                                         // + span: cita-auth/src/batch_forward.rs:93:52: 93:60
                                         // + literal: Const { ty: fn() -> Duration {unix_now}, val: Value(<ZST>) }
    }

    bb28: {
        _53 = &_54;                      // scope 5 at cita-auth/src/batch_forward.rs:93:51: 93:62
        _52 = <Duration as AsMillis>::as_millis(_53) -> [return: bb29, unwind: bb34]; // scope 5 at cita-auth/src/batch_forward.rs:93:31: 93:63
                                         // mir::Constant
                                         // + span: cita-auth/src/batch_forward.rs:93:31: 93:50
                                         // + literal: Const { ty: for<'a> fn(&'a Duration) -> u64 {<Duration as AsMillis>::as_millis}, val: Value(<ZST>) }
    }

    bb29: {
        ((*_1).3: u64) = move _52;       // scope 5 at cita-auth/src/batch_forward.rs:93:9: 93:63
        _56 = &mut ((*_1).4: std::vec::Vec<libproto::Request>); // scope 5 at cita-auth/src/batch_forward.rs:94:9: 94:36
        _55 = Vec::<libproto::Request>::clear(move _56) -> [return: bb30, unwind: bb34]; // scope 5 at cita-auth/src/batch_forward.rs:94:9: 94:36
                                         // mir::Constant
                                         // + span: cita-auth/src/batch_forward.rs:94:29: 94:34
                                         // + literal: Const { ty: for<'a> fn(&'a mut Vec<libproto::Request>) {Vec::<libproto::Request>::clear}, val: Value(<ZST>) }
    }

    bb30: {
        _60 = const false;               // scope 4 at cita-auth/src/batch_forward.rs:95:5: 95:6
        _61 = const false;               // scope 3 at cita-auth/src/batch_forward.rs:95:5: 95:6
        _62 = const false;               // scope 2 at cita-auth/src/batch_forward.rs:95:5: 95:6
        _63 = const false;               // scope 0 at cita-auth/src/batch_forward.rs:95:5: 95:6
        return;                          // scope 0 at cita-auth/src/batch_forward.rs:95:6: 95:6
    }

    bb31 (cleanup): {
        drop(_45) -> bb34;               // scope 5 at cita-auth/src/batch_forward.rs:90:13: 90:14
    }

    bb32 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/batch_forward.rs:72:5: 95:6
    }

    bb33 (cleanup): {
        drop(_39) -> bb36;               // scope 4 at cita-auth/src/batch_forward.rs:95:5: 95:6
    }

    bb34 (cleanup): {
        switchInt(_60) -> [0: bb36, otherwise: bb33]; // scope 4 at cita-auth/src/batch_forward.rs:95:5: 95:6
    }

    bb35 (cleanup): {
        drop(_32) -> bb38;               // scope 3 at cita-auth/src/batch_forward.rs:95:5: 95:6
    }

    bb36 (cleanup): {
        switchInt(_61) -> [0: bb38, otherwise: bb35]; // scope 3 at cita-auth/src/batch_forward.rs:95:5: 95:6
    }

    bb37 (cleanup): {
        drop(_26) -> bb40;               // scope 2 at cita-auth/src/batch_forward.rs:95:5: 95:6
    }

    bb38 (cleanup): {
        switchInt(_62) -> [0: bb40, otherwise: bb37]; // scope 2 at cita-auth/src/batch_forward.rs:95:5: 95:6
    }

    bb39 (cleanup): {
        drop(_20) -> bb32;               // scope 0 at cita-auth/src/batch_forward.rs:95:5: 95:6
    }

    bb40 (cleanup): {
        switchInt(_63) -> [0: bb32, otherwise: bb39]; // scope 0 at cita-auth/src/batch_forward.rs:95:5: 95:6
    }
}

promoted[0] in batch_forward::<impl at cita-auth/src/batch_forward.rs:35:1: 35:18>::batch_forward: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/batch_forward.rs:73:9: 76:10
    let mut _7: &str;                    // in scope 0 at cita-auth/src/batch_forward.rs:73:9: 76:10

    bb0: {
        _3 = const "cita_auth::batch_forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::batch_forward"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/batch_forward.rs"; // scope 0 at cita-auth/src/batch_forward.rs:73:9: 76:10
                                         // mir::Constant
                                         // + span: cita-auth/src/batch_forward.rs:73:9: 76:10
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/batch_forward.rs:73:9: 76:10
        _1 = (move _2, move _4, move _6, const 73_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in batch_forward::<impl at cita-auth/src/batch_forward.rs:35:1: 35:18>::batch_forward: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-auth/src/batch_forward.rs:74:13: 74:74
    let mut _1: [&str; 2];               // in scope 0 at cita-auth/src/batch_forward.rs:74:13: 74:74

    bb0: {
        _1 = [const "batch_forward_tx_to_peer is going to send ", const " new tx to peer"]; // scope 0 at cita-auth/src/batch_forward.rs:74:13: 74:74
                                         // mir::Constant
                                         // + span: cita-auth/src/batch_forward.rs:74:13: 74:74
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-auth/src/batch_forward.rs:74:13: 74:74
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/batch_forward.rs:74:13: 74:74
        return;                          // scope 0 at cita-auth/src/batch_forward.rs:74:13: 74:74
    }
}

promoted[2] in batch_forward::<impl at cita-auth/src/batch_forward.rs:35:1: 35:18>::batch_forward: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn block_txn::<impl at cita-auth/src/block_txn.rs:31:1: 31:31>::deref(_1: &BlockTxnMessage) -> &libproto::BlockTxn {
    debug self => _1;                    // in scope 0 at cita-auth/src/block_txn.rs:34:14: 34:19
    let mut _0: &libproto::BlockTxn;     // return place in scope 0 at cita-auth/src/block_txn.rs:35:9: 35:24

    bb0: {
        _0 = &((*_1).1: libproto::BlockTxn); // scope 0 at cita-auth/src/block_txn.rs:35:9: 35:24
        return;                          // scope 0 at cita-auth/src/block_txn.rs:36:6: 36:6
    }
}

fn block_txn::<impl at cita-auth/src/block_txn.rs:39:1: 39:34>::deref_mut(_1: &mut BlockTxnMessage) -> &mut libproto::BlockTxn {
    debug self => _1;                    // in scope 0 at cita-auth/src/block_txn.rs:40:18: 40:27
    let mut _0: &mut libproto::BlockTxn; // return place in scope 0 at cita-auth/src/block_txn.rs:41:9: 41:28

    bb0: {
        _0 = &mut ((*_1).1: libproto::BlockTxn); // scope 0 at cita-auth/src/block_txn.rs:41:9: 41:28
        return;                          // scope 0 at cita-auth/src/block_txn.rs:42:6: 42:6
    }
}

fn block_txn::<impl at cita-auth/src/block_txn.rs:45:10: 45:15>::fmt(_1: &block_txn::Error, _2: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at cita-auth/src/block_txn.rs:45:10: 45:15
    debug f => _2;                       // in scope 0 at cita-auth/src/block_txn.rs:45:10: 45:15
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at cita-auth/src/block_txn.rs:45:10: 45:15
    let mut _3: isize;                   // in scope 0 at cita-auth/src/block_txn.rs:45:10: 45:15
    let _4: &u32;                        // in scope 0 at cita-auth/src/block_txn.rs:47:17: 47:33
    let _5: &u32;                        // in scope 0 at cita-auth/src/block_txn.rs:47:35: 47:46
    let _6: &str;                        // in scope 0 at cita-auth/src/block_txn.rs:45:10: 45:15
    let _7: &str;                        // in scope 0 at cita-auth/src/block_txn.rs:47:17: 47:33
    let mut _8: &dyn std::fmt::Debug;    // in scope 0 at cita-auth/src/block_txn.rs:47:17: 47:33
    let _9: &str;                        // in scope 0 at cita-auth/src/block_txn.rs:47:35: 47:46
    let mut _10: &dyn std::fmt::Debug;   // in scope 0 at cita-auth/src/block_txn.rs:47:35: 47:46
    let _11: &&u32;                      // in scope 0 at cita-auth/src/block_txn.rs:47:35: 47:46
    let _12: &cita_types::H256;          // in scope 0 at cita-auth/src/block_txn.rs:48:20: 48:34
    let _13: &cita_types::H256;          // in scope 0 at cita-auth/src/block_txn.rs:48:36: 48:45
    let _14: &str;                       // in scope 0 at cita-auth/src/block_txn.rs:45:10: 45:15
    let _15: &str;                       // in scope 0 at cita-auth/src/block_txn.rs:48:20: 48:34
    let mut _16: &dyn std::fmt::Debug;   // in scope 0 at cita-auth/src/block_txn.rs:48:20: 48:34
    let _17: &str;                       // in scope 0 at cita-auth/src/block_txn.rs:48:36: 48:45
    let mut _18: &dyn std::fmt::Debug;   // in scope 0 at cita-auth/src/block_txn.rs:48:36: 48:45
    let _19: &&cita_types::H256;         // in scope 0 at cita-auth/src/block_txn.rs:48:36: 48:45
    let _20: &str;                       // in scope 0 at cita-auth/src/block_txn.rs:45:10: 45:15
    let _21: &str;                       // in scope 0 at cita-auth/src/block_txn.rs:45:10: 45:15
    scope 1 {
        debug __self_0 => _4;            // in scope 1 at cita-auth/src/block_txn.rs:47:17: 47:33
        debug __self_1 => _5;            // in scope 1 at cita-auth/src/block_txn.rs:47:35: 47:46
    }
    scope 2 {
        debug __self_0 => _12;           // in scope 2 at cita-auth/src/block_txn.rs:48:20: 48:34
        debug __self_1 => _13;           // in scope 2 at cita-auth/src/block_txn.rs:48:36: 48:45
    }

    bb0: {
        _3 = discriminant((*_1));        // scope 0 at cita-auth/src/block_txn.rs:45:10: 45:15
        switchInt(move _3) -> [0: bb3, 1: bb4, 2: bb5, 3: bb1, otherwise: bb2]; // scope 0 at cita-auth/src/block_txn.rs:45:10: 45:15
    }

    bb1: {
        _21 = const "BadTxSignature";    // scope 0 at cita-auth/src/block_txn.rs:45:10: 45:15
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:45:10: 45:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = std::fmt::Formatter::<'_>::write_str(_2, _21) -> bb6; // scope 0 at cita-auth/src/block_txn.rs:45:10: 45:15
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:45:10: 45:15
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut std::fmt::Formatter<'_>, &'b str) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::write_str}, val: Value(<ZST>) }
    }

    bb2: {
        unreachable;                     // scope 0 at cita-auth/src/block_txn.rs:45:10: 45:15
    }

    bb3: {
        _4 = &(((*_1) as BadOrigin).0: u32); // scope 0 at cita-auth/src/block_txn.rs:47:17: 47:33
        _5 = &(((*_1) as BadOrigin).1: u32); // scope 0 at cita-auth/src/block_txn.rs:47:35: 47:46
        _6 = const "BadOrigin";          // scope 1 at cita-auth/src/block_txn.rs:45:10: 45:15
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:45:10: 45:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _7 = const "expected";           // scope 1 at cita-auth/src/block_txn.rs:47:17: 47:33
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:47:17: 47:33
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _8 = _4 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at cita-auth/src/block_txn.rs:47:17: 47:33
        _9 = const "got";                // scope 1 at cita-auth/src/block_txn.rs:47:35: 47:46
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:47:35: 47:46
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _11 = &_5;                       // scope 1 at cita-auth/src/block_txn.rs:47:35: 47:46
        _10 = _11 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at cita-auth/src/block_txn.rs:47:35: 47:46
        _0 = std::fmt::Formatter::<'_>::debug_struct_field2_finish(_2, _6, _7, move _8, _9, move _10) -> bb6; // scope 1 at cita-auth/src/block_txn.rs:45:10: 45:15
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:45:10: 45:15
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b, 'a, 'c, 'd, 'e, 'f> fn(&'b mut std::fmt::Formatter<'_>, &'a str, &'c str, &'d (dyn Debug + 'd), &'e str, &'f (dyn Debug + 'f)) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::debug_struct_field2_finish}, val: Value(<ZST>) }
    }

    bb4: {
        _12 = &(((*_1) as BadBlockHash).0: cita_types::H256); // scope 0 at cita-auth/src/block_txn.rs:48:20: 48:34
        _13 = &(((*_1) as BadBlockHash).1: cita_types::H256); // scope 0 at cita-auth/src/block_txn.rs:48:36: 48:45
        _14 = const "BadBlockHash";      // scope 2 at cita-auth/src/block_txn.rs:45:10: 45:15
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:45:10: 45:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _15 = const "expected";          // scope 2 at cita-auth/src/block_txn.rs:48:20: 48:34
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:48:20: 48:34
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _16 = _12 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 2 at cita-auth/src/block_txn.rs:48:20: 48:34
        _17 = const "got";               // scope 2 at cita-auth/src/block_txn.rs:48:36: 48:45
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:48:36: 48:45
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _19 = &_13;                      // scope 2 at cita-auth/src/block_txn.rs:48:36: 48:45
        _18 = _19 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 2 at cita-auth/src/block_txn.rs:48:36: 48:45
        _0 = std::fmt::Formatter::<'_>::debug_struct_field2_finish(_2, _14, _15, move _16, _17, move _18) -> bb6; // scope 2 at cita-auth/src/block_txn.rs:45:10: 45:15
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:45:10: 45:15
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b, 'a, 'c, 'd, 'e, 'f> fn(&'b mut std::fmt::Formatter<'_>, &'a str, &'c str, &'d (dyn Debug + 'd), &'e str, &'f (dyn Debug + 'f)) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::debug_struct_field2_finish}, val: Value(<ZST>) }
    }

    bb5: {
        _20 = const "BadShortID";        // scope 0 at cita-auth/src/block_txn.rs:45:10: 45:15
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:45:10: 45:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = std::fmt::Formatter::<'_>::write_str(_2, _20) -> bb6; // scope 0 at cita-auth/src/block_txn.rs:45:10: 45:15
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:45:10: 45:15
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut std::fmt::Formatter<'_>, &'b str) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::write_str}, val: Value(<ZST>) }
    }

    bb6: {
        return;                          // scope 0 at cita-auth/src/block_txn.rs:45:15: 45:15
    }
}

fn block_txn::<impl at cita-auth/src/block_txn.rs:45:17: 45:26>::eq(_1: &block_txn::Error, _2: &block_txn::Error) -> bool {
    debug self => _1;                    // in scope 0 at cita-auth/src/block_txn.rs:45:17: 45:26
    debug other => _2;                   // in scope 0 at cita-auth/src/block_txn.rs:45:17: 45:26
    let mut _0: bool;                    // return place in scope 0 at cita-auth/src/block_txn.rs:45:17: 45:26
    let _3: isize;                       // in scope 0 at cita-auth/src/block_txn.rs:45:17: 45:26
    let mut _5: bool;                    // in scope 0 at cita-auth/src/block_txn.rs:45:17: 45:26
    let mut _6: bool;                    // in scope 0 at cita-auth/src/block_txn.rs:45:17: 45:26
    let mut _7: (&block_txn::Error, &block_txn::Error); // in scope 0 at cita-auth/src/block_txn.rs:45:17: 45:26
    let mut _8: isize;                   // in scope 0 at cita-auth/src/block_txn.rs:45:17: 45:26
    let mut _9: isize;                   // in scope 0 at cita-auth/src/block_txn.rs:45:17: 45:26
    let mut _10: isize;                  // in scope 0 at cita-auth/src/block_txn.rs:45:17: 45:26
    let mut _15: bool;                   // in scope 0 at cita-auth/src/block_txn.rs:47:17: 47:33
    let mut _16: u32;                    // in scope 0 at cita-auth/src/block_txn.rs:47:17: 47:33
    let mut _17: u32;                    // in scope 0 at cita-auth/src/block_txn.rs:47:17: 47:33
    let mut _18: bool;                   // in scope 0 at cita-auth/src/block_txn.rs:47:35: 47:46
    let mut _19: u32;                    // in scope 0 at cita-auth/src/block_txn.rs:47:35: 47:46
    let mut _20: u32;                    // in scope 0 at cita-auth/src/block_txn.rs:47:35: 47:46
    let mut _25: bool;                   // in scope 0 at cita-auth/src/block_txn.rs:48:20: 48:34
    let mut _26: bool;                   // in scope 0 at cita-auth/src/block_txn.rs:48:36: 48:45
    let mut _27: &block_txn::Error;      // in scope 0 at cita-auth/src/block_txn.rs:45:17: 45:26
    let mut _28: &block_txn::Error;      // in scope 0 at cita-auth/src/block_txn.rs:45:17: 45:26
    let mut _29: &block_txn::Error;      // in scope 0 at cita-auth/src/block_txn.rs:45:17: 45:26
    let mut _30: &block_txn::Error;      // in scope 0 at cita-auth/src/block_txn.rs:45:17: 45:26
    let mut _31: &block_txn::Error;      // in scope 0 at cita-auth/src/block_txn.rs:45:17: 45:26
    let mut _32: &block_txn::Error;      // in scope 0 at cita-auth/src/block_txn.rs:45:17: 45:26
    let mut _33: &block_txn::Error;      // in scope 0 at cita-auth/src/block_txn.rs:45:17: 45:26
    let mut _34: &block_txn::Error;      // in scope 0 at cita-auth/src/block_txn.rs:45:17: 45:26
    let mut _35: &block_txn::Error;      // in scope 0 at cita-auth/src/block_txn.rs:45:17: 45:26
    let mut _36: &block_txn::Error;      // in scope 0 at cita-auth/src/block_txn.rs:45:17: 45:26
    let mut _37: &block_txn::Error;      // in scope 0 at cita-auth/src/block_txn.rs:45:17: 45:26
    scope 1 {
        debug __self_tag => _3;          // in scope 1 at cita-auth/src/block_txn.rs:45:17: 45:26
        let _4: isize;                   // in scope 1 at cita-auth/src/block_txn.rs:45:17: 45:26
        scope 2 {
            debug __arg1_tag => _4;      // in scope 2 at cita-auth/src/block_txn.rs:45:17: 45:26
            let _11: &u32;               // in scope 2 at cita-auth/src/block_txn.rs:47:17: 47:33
            let _12: &u32;               // in scope 2 at cita-auth/src/block_txn.rs:47:35: 47:46
            let _13: &u32;               // in scope 2 at cita-auth/src/block_txn.rs:47:17: 47:33
            let _14: &u32;               // in scope 2 at cita-auth/src/block_txn.rs:47:35: 47:46
            let _21: &cita_types::H256;  // in scope 2 at cita-auth/src/block_txn.rs:48:20: 48:34
            let _22: &cita_types::H256;  // in scope 2 at cita-auth/src/block_txn.rs:48:36: 48:45
            let _23: &cita_types::H256;  // in scope 2 at cita-auth/src/block_txn.rs:48:20: 48:34
            let _24: &cita_types::H256;  // in scope 2 at cita-auth/src/block_txn.rs:48:36: 48:45
            scope 3 {
                debug __self_0 => _11;   // in scope 3 at cita-auth/src/block_txn.rs:47:17: 47:33
                debug __self_1 => _12;   // in scope 3 at cita-auth/src/block_txn.rs:47:35: 47:46
                debug __arg1_0 => _13;   // in scope 3 at cita-auth/src/block_txn.rs:47:17: 47:33
                debug __arg1_1 => _14;   // in scope 3 at cita-auth/src/block_txn.rs:47:35: 47:46
            }
            scope 4 {
                debug __self_0 => _21;   // in scope 4 at cita-auth/src/block_txn.rs:48:20: 48:34
                debug __self_1 => _22;   // in scope 4 at cita-auth/src/block_txn.rs:48:36: 48:45
                debug __arg1_0 => _23;   // in scope 4 at cita-auth/src/block_txn.rs:48:20: 48:34
                debug __arg1_1 => _24;   // in scope 4 at cita-auth/src/block_txn.rs:48:36: 48:45
            }
        }
    }

    bb0: {
        _3 = discriminant((*_1));        // scope 0 at cita-auth/src/block_txn.rs:45:17: 45:26
        _4 = discriminant((*_2));        // scope 1 at cita-auth/src/block_txn.rs:45:17: 45:26
        _5 = Eq(_3, _4);                 // scope 2 at cita-auth/src/block_txn.rs:45:17: 45:26
        switchInt(move _5) -> [0: bb1, otherwise: bb2]; // scope 2 at cita-auth/src/block_txn.rs:45:17: 45:26
    }

    bb1: {
        _0 = const false;                // scope 2 at cita-auth/src/block_txn.rs:45:17: 45:26
        goto -> bb3;                     // scope 2 at cita-auth/src/block_txn.rs:45:17: 45:26
    }

    bb2: {
        _7 = (_1, _2);                   // scope 2 at cita-auth/src/block_txn.rs:45:17: 45:26
        _27 = deref_copy (_7.0: &block_txn::Error); // scope 2 at cita-auth/src/block_txn.rs:45:17: 45:26
        _10 = discriminant((*_27));      // scope 2 at cita-auth/src/block_txn.rs:45:17: 45:26
        switchInt(move _10) -> [0: bb4, 1: bb6, otherwise: bb5]; // scope 2 at cita-auth/src/block_txn.rs:45:17: 45:26
    }

    bb3: {
        return;                          // scope 0 at cita-auth/src/block_txn.rs:45:26: 45:26
    }

    bb4: {
        _28 = deref_copy (_7.1: &block_txn::Error); // scope 2 at cita-auth/src/block_txn.rs:45:17: 45:26
        _8 = discriminant((*_28));       // scope 2 at cita-auth/src/block_txn.rs:45:17: 45:26
        switchInt(move _8) -> [0: bb7, otherwise: bb5]; // scope 2 at cita-auth/src/block_txn.rs:45:17: 45:26
    }

    bb5: {
        _6 = const true;                 // scope 2 at cita-auth/src/block_txn.rs:45:17: 45:26
        goto -> bb15;                    // scope 2 at cita-auth/src/block_txn.rs:45:17: 45:26
    }

    bb6: {
        _29 = deref_copy (_7.1: &block_txn::Error); // scope 2 at cita-auth/src/block_txn.rs:45:17: 45:26
        _9 = discriminant((*_29));       // scope 2 at cita-auth/src/block_txn.rs:45:17: 45:26
        switchInt(move _9) -> [1: bb10, otherwise: bb5]; // scope 2 at cita-auth/src/block_txn.rs:45:17: 45:26
    }

    bb7: {
        _30 = deref_copy (_7.0: &block_txn::Error); // scope 2 at cita-auth/src/block_txn.rs:47:17: 47:33
        _11 = &(((*_30) as BadOrigin).0: u32); // scope 2 at cita-auth/src/block_txn.rs:47:17: 47:33
        _31 = deref_copy (_7.0: &block_txn::Error); // scope 2 at cita-auth/src/block_txn.rs:47:35: 47:46
        _12 = &(((*_31) as BadOrigin).1: u32); // scope 2 at cita-auth/src/block_txn.rs:47:35: 47:46
        _32 = deref_copy (_7.1: &block_txn::Error); // scope 2 at cita-auth/src/block_txn.rs:47:17: 47:33
        _13 = &(((*_32) as BadOrigin).0: u32); // scope 2 at cita-auth/src/block_txn.rs:47:17: 47:33
        _33 = deref_copy (_7.1: &block_txn::Error); // scope 2 at cita-auth/src/block_txn.rs:47:35: 47:46
        _14 = &(((*_33) as BadOrigin).1: u32); // scope 2 at cita-auth/src/block_txn.rs:47:35: 47:46
        _16 = (*_11);                    // scope 3 at cita-auth/src/block_txn.rs:47:17: 47:33
        _17 = (*_13);                    // scope 3 at cita-auth/src/block_txn.rs:47:17: 47:33
        _15 = Eq(move _16, move _17);    // scope 3 at cita-auth/src/block_txn.rs:47:17: 47:33
        switchInt(move _15) -> [0: bb8, otherwise: bb9]; // scope 3 at cita-auth/src/block_txn.rs:47:35: 47:46
    }

    bb8: {
        _6 = const false;                // scope 3 at cita-auth/src/block_txn.rs:47:35: 47:46
        goto -> bb15;                    // scope 3 at cita-auth/src/block_txn.rs:47:35: 47:46
    }

    bb9: {
        _19 = (*_12);                    // scope 3 at cita-auth/src/block_txn.rs:47:35: 47:46
        _20 = (*_14);                    // scope 3 at cita-auth/src/block_txn.rs:47:35: 47:46
        _18 = Eq(move _19, move _20);    // scope 3 at cita-auth/src/block_txn.rs:47:35: 47:46
        _6 = move _18;                   // scope 3 at cita-auth/src/block_txn.rs:47:35: 47:46
        goto -> bb15;                    // scope 3 at cita-auth/src/block_txn.rs:47:35: 47:46
    }

    bb10: {
        _34 = deref_copy (_7.0: &block_txn::Error); // scope 2 at cita-auth/src/block_txn.rs:48:20: 48:34
        _21 = &(((*_34) as BadBlockHash).0: cita_types::H256); // scope 2 at cita-auth/src/block_txn.rs:48:20: 48:34
        _35 = deref_copy (_7.0: &block_txn::Error); // scope 2 at cita-auth/src/block_txn.rs:48:36: 48:45
        _22 = &(((*_35) as BadBlockHash).1: cita_types::H256); // scope 2 at cita-auth/src/block_txn.rs:48:36: 48:45
        _36 = deref_copy (_7.1: &block_txn::Error); // scope 2 at cita-auth/src/block_txn.rs:48:20: 48:34
        _23 = &(((*_36) as BadBlockHash).0: cita_types::H256); // scope 2 at cita-auth/src/block_txn.rs:48:20: 48:34
        _37 = deref_copy (_7.1: &block_txn::Error); // scope 2 at cita-auth/src/block_txn.rs:48:36: 48:45
        _24 = &(((*_37) as BadBlockHash).1: cita_types::H256); // scope 2 at cita-auth/src/block_txn.rs:48:36: 48:45
        _25 = <H256 as PartialEq>::eq(_21, _23) -> bb13; // scope 4 at cita-auth/src/block_txn.rs:48:20: 48:34
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:48:20: 48:34
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a H256, &'b H256) -> bool {<H256 as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb11: {
        _6 = const false;                // scope 4 at cita-auth/src/block_txn.rs:48:36: 48:45
        goto -> bb15;                    // scope 4 at cita-auth/src/block_txn.rs:48:36: 48:45
    }

    bb12: {
        _26 = <H256 as PartialEq>::eq(_22, _24) -> bb14; // scope 4 at cita-auth/src/block_txn.rs:48:36: 48:45
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:48:36: 48:45
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a H256, &'b H256) -> bool {<H256 as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb13: {
        switchInt(move _25) -> [0: bb11, otherwise: bb12]; // scope 4 at cita-auth/src/block_txn.rs:48:36: 48:45
    }

    bb14: {
        _6 = move _26;                   // scope 4 at cita-auth/src/block_txn.rs:48:36: 48:45
        goto -> bb15;                    // scope 4 at cita-auth/src/block_txn.rs:48:36: 48:45
    }

    bb15: {
        _0 = move _6;                    // scope 2 at cita-auth/src/block_txn.rs:45:17: 45:26
        goto -> bb3;                     // scope 2 at cita-auth/src/block_txn.rs:45:17: 45:26
    }
}

fn block_txn::<impl at cita-auth/src/block_txn.rs:53:1: 53:28>::fmt(_1: &block_txn::Error, _2: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at cita-auth/src/block_txn.rs:54:12: 54:17
    debug f => _2;                       // in scope 0 at cita-auth/src/block_txn.rs:54:19: 54:20
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at cita-auth/src/block_txn.rs:54:46: 54:57
    let mut _3: isize;                   // in scope 0 at cita-auth/src/block_txn.rs:57:13: 57:40
    let _4: u32;                         // in scope 0 at cita-auth/src/block_txn.rs:57:25: 57:33
    let _5: u32;                         // in scope 0 at cita-auth/src/block_txn.rs:57:35: 57:38
    let mut _6: std::fmt::Arguments<'_>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
    let mut _7: &[&str];                 // in scope 0 at cita-auth/src/block_txn.rs:58:27: 58:58
    let mut _8: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
    let _9: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
    let _10: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
    let mut _11: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/block_txn.rs:58:60: 58:68
    let _12: &u32;                       // in scope 0 at cita-auth/src/block_txn.rs:58:60: 58:68
    let mut _13: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/block_txn.rs:58:70: 58:73
    let _14: &u32;                       // in scope 0 at cita-auth/src/block_txn.rs:58:70: 58:73
    let _15: cita_types::H256;           // in scope 0 at cita-auth/src/block_txn.rs:60:28: 60:36
    let _16: cita_types::H256;           // in scope 0 at cita-auth/src/block_txn.rs:60:38: 60:41
    let mut _17: std::fmt::Arguments<'_>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
    let mut _18: &[&str];                // in scope 0 at cita-auth/src/block_txn.rs:61:27: 61:64
    let mut _19: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
    let _20: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
    let _21: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
    let mut _22: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/block_txn.rs:61:66: 61:74
    let _23: &cita_types::H256;          // in scope 0 at cita-auth/src/block_txn.rs:61:66: 61:74
    let mut _24: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/block_txn.rs:61:76: 61:79
    let _25: &cita_types::H256;          // in scope 0 at cita-auth/src/block_txn.rs:61:76: 61:79
    let mut _26: std::fmt::Arguments<'_>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
    let mut _27: &[&str];                // in scope 0 at cita-auth/src/block_txn.rs:63:37: 63:78
    let mut _28: std::fmt::Arguments<'_>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
    let mut _29: &[&str];                // in scope 0 at cita-auth/src/block_txn.rs:64:41: 64:83
    let mut _32: &[&str; 1];             // in scope 0 at cita-auth/src/block_txn.rs:63:37: 63:78
    let mut _33: &[&str; 1];             // in scope 0 at cita-auth/src/block_txn.rs:64:41: 64:83
    scope 1 {
        debug expected => _4;            // in scope 1 at cita-auth/src/block_txn.rs:57:25: 57:33
        debug got => _5;                 // in scope 1 at cita-auth/src/block_txn.rs:57:35: 57:38
        let mut _30: &[&str; 2];         // in scope 1 at cita-auth/src/block_txn.rs:58:27: 58:58
    }
    scope 2 {
        debug expected => _15;           // in scope 2 at cita-auth/src/block_txn.rs:60:28: 60:36
        debug got => _16;                // in scope 2 at cita-auth/src/block_txn.rs:60:38: 60:41
        let mut _31: &[&str; 2];         // in scope 2 at cita-auth/src/block_txn.rs:61:27: 61:64
    }

    bb0: {
        _3 = discriminant((*_1));        // scope 0 at cita-auth/src/block_txn.rs:56:15: 56:20
        switchInt(move _3) -> [0: bb3, 1: bb7, 2: bb11, 3: bb1, otherwise: bb2]; // scope 0 at cita-auth/src/block_txn.rs:56:9: 56:20
    }

    bb1: {
        _33 = const _;                   // scope 0 at cita-auth/src/block_txn.rs:64:41: 64:83
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:64:41: 64:83
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(<block_txn::Error as std::fmt::Display>::fmt, [], Some(promoted[3])) }
        _29 = _33 as &[&str] (Pointer(Unsize)); // scope 0 at cita-auth/src/block_txn.rs:64:41: 64:83
        _28 = Arguments::<'_>::new_const(move _29) -> bb13; // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb2: {
        unreachable;                     // scope 0 at cita-auth/src/block_txn.rs:56:15: 56:20
    }

    bb3: {
        _4 = (((*_1) as BadOrigin).0: u32); // scope 0 at cita-auth/src/block_txn.rs:57:25: 57:33
        _5 = (((*_1) as BadOrigin).1: u32); // scope 0 at cita-auth/src/block_txn.rs:57:35: 57:38
        _30 = const _;                   // scope 1 at cita-auth/src/block_txn.rs:58:27: 58:58
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:58:27: 58:58
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(<block_txn::Error as std::fmt::Display>::fmt, [], Some(promoted[0])) }
        _7 = _30 as &[&str] (Pointer(Unsize)); // scope 1 at cita-auth/src/block_txn.rs:58:27: 58:58
        _12 = &_4;                       // scope 1 at cita-auth/src/block_txn.rs:58:60: 58:68
        _11 = core::fmt::ArgumentV1::<'_>::new_display::<u32>(_12) -> bb4; // scope 1 at cita-auth/src/block_txn.rs:58:60: 58:68
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:58:60: 58:68
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b u32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u32>}, val: Value(<ZST>) }
    }

    bb4: {
        _14 = &_5;                       // scope 1 at cita-auth/src/block_txn.rs:58:70: 58:73
        _13 = core::fmt::ArgumentV1::<'_>::new_display::<u32>(_14) -> bb5; // scope 1 at cita-auth/src/block_txn.rs:58:70: 58:73
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:58:70: 58:73
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b u32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u32>}, val: Value(<ZST>) }
    }

    bb5: {
        _10 = [move _11, move _13];      // scope 1 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
        _9 = &_10;                       // scope 1 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
        _8 = _9 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
        _6 = Arguments::<'_>::new_v1(move _7, move _8) -> bb6; // scope 1 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb6: {
        _0 = std::fmt::Formatter::<'_>::write_fmt(_2, move _6) -> bb14; // scope 1 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:9: 520:55
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:14: 520:23
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut std::fmt::Formatter<'_>, Arguments<'b>) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::write_fmt}, val: Value(<ZST>) }
    }

    bb7: {
        _15 = (((*_1) as BadBlockHash).0: cita_types::H256); // scope 0 at cita-auth/src/block_txn.rs:60:28: 60:36
        _16 = (((*_1) as BadBlockHash).1: cita_types::H256); // scope 0 at cita-auth/src/block_txn.rs:60:38: 60:41
        _31 = const _;                   // scope 2 at cita-auth/src/block_txn.rs:61:27: 61:64
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:61:27: 61:64
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(<block_txn::Error as std::fmt::Display>::fmt, [], Some(promoted[1])) }
        _18 = _31 as &[&str] (Pointer(Unsize)); // scope 2 at cita-auth/src/block_txn.rs:61:27: 61:64
        _23 = &_15;                      // scope 2 at cita-auth/src/block_txn.rs:61:66: 61:74
        _22 = core::fmt::ArgumentV1::<'_>::new_display::<H256>(_23) -> bb8; // scope 2 at cita-auth/src/block_txn.rs:61:66: 61:74
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:61:66: 61:74
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'b> fn(&'b H256) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<H256>}, val: Value(<ZST>) }
    }

    bb8: {
        _25 = &_16;                      // scope 2 at cita-auth/src/block_txn.rs:61:76: 61:79
        _24 = core::fmt::ArgumentV1::<'_>::new_display::<H256>(_25) -> bb9; // scope 2 at cita-auth/src/block_txn.rs:61:76: 61:79
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:61:76: 61:79
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: for<'b> fn(&'b H256) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<H256>}, val: Value(<ZST>) }
    }

    bb9: {
        _21 = [move _22, move _24];      // scope 2 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
        _20 = &_21;                      // scope 2 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
        _19 = _20 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
        _17 = Arguments::<'_>::new_v1(move _18, move _19) -> bb10; // scope 2 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb10: {
        _0 = std::fmt::Formatter::<'_>::write_fmt(_2, move _17) -> bb14; // scope 2 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:9: 520:55
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:14: 520:23
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut std::fmt::Formatter<'_>, Arguments<'b>) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::write_fmt}, val: Value(<ZST>) }
    }

    bb11: {
        _32 = const _;                   // scope 0 at cita-auth/src/block_txn.rs:63:37: 63:78
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:63:37: 63:78
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(<block_txn::Error as std::fmt::Display>::fmt, [], Some(promoted[2])) }
        _27 = _32 as &[&str] (Pointer(Unsize)); // scope 0 at cita-auth/src/block_txn.rs:63:37: 63:78
        _26 = Arguments::<'_>::new_const(move _27) -> bb12; // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb12: {
        _0 = std::fmt::Formatter::<'_>::write_fmt(_2, move _26) -> bb14; // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:9: 520:55
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:14: 520:23
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut std::fmt::Formatter<'_>, Arguments<'b>) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::write_fmt}, val: Value(<ZST>) }
    }

    bb13: {
        _0 = std::fmt::Formatter::<'_>::write_fmt(_2, move _28) -> bb14; // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:9: 520:55
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:14: 520:23
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut std::fmt::Formatter<'_>, Arguments<'b>) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::write_fmt}, val: Value(<ZST>) }
    }

    bb14: {
        return;                          // scope 0 at cita-auth/src/block_txn.rs:66:6: 66:6
    }
}

promoted[0] in block_txn::<impl at cita-auth/src/block_txn.rs:53:1: 53:28>::fmt: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-auth/src/block_txn.rs:58:27: 58:58
    let mut _1: [&str; 2];               // in scope 0 at cita-auth/src/block_txn.rs:58:27: 58:58

    bb0: {
        _1 = [const "Bad origin: expect ", const ", got "]; // scope 0 at cita-auth/src/block_txn.rs:58:27: 58:58
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:58:27: 58:58
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:58:27: 58:58
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/block_txn.rs:58:27: 58:58
        return;                          // scope 0 at cita-auth/src/block_txn.rs:58:27: 58:58
    }
}

promoted[1] in block_txn::<impl at cita-auth/src/block_txn.rs:53:1: 53:28>::fmt: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-auth/src/block_txn.rs:61:27: 61:64
    let mut _1: [&str; 2];               // in scope 0 at cita-auth/src/block_txn.rs:61:27: 61:64

    bb0: {
        _1 = [const "Bad block hash: expected ", const ", got "]; // scope 0 at cita-auth/src/block_txn.rs:61:27: 61:64
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:61:27: 61:64
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:61:27: 61:64
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/block_txn.rs:61:27: 61:64
        return;                          // scope 0 at cita-auth/src/block_txn.rs:61:27: 61:64
    }
}

promoted[2] in block_txn::<impl at cita-auth/src/block_txn.rs:53:1: 53:28>::fmt: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/block_txn.rs:63:37: 63:78
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/block_txn.rs:63:37: 63:78

    bb0: {
        _1 = [const "Including transaction with bad short id"]; // scope 0 at cita-auth/src/block_txn.rs:63:37: 63:78
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:63:37: 63:78
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/block_txn.rs:63:37: 63:78
        return;                          // scope 0 at cita-auth/src/block_txn.rs:63:37: 63:78
    }
}

promoted[3] in block_txn::<impl at cita-auth/src/block_txn.rs:53:1: 53:28>::fmt: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/block_txn.rs:64:41: 64:83
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/block_txn.rs:64:41: 64:83

    bb0: {
        _1 = [const "Including transaction with bad signature"]; // scope 0 at cita-auth/src/block_txn.rs:64:41: 64:83
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:64:41: 64:83
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/block_txn.rs:64:41: 64:83
        return;                          // scope 0 at cita-auth/src/block_txn.rs:64:41: 64:83
    }
}

fn block_txn::<impl at cita-auth/src/block_txn.rs:69:1: 69:21>::validate(_1: &mut BlockTxnMessage, _2: &(u32, libproto::GetBlockTxn)) -> Result<Vec<SignedTransaction>, block_txn::Error> {
    debug self => _1;                    // in scope 0 at cita-auth/src/block_txn.rs:70:21: 70:30
    debug req => _2;                     // in scope 0 at cita-auth/src/block_txn.rs:70:32: 70:35
    let mut _0: std::result::Result<std::vec::Vec<libproto::SignedTransaction>, block_txn::Error>; // return place in scope 0 at cita-auth/src/block_txn.rs:70:54: 70:91
    let _3: &u32;                        // in scope 0 at cita-auth/src/block_txn.rs:71:14: 71:29
    let _4: &libproto::GetBlockTxn;      // in scope 0 at cita-auth/src/block_txn.rs:71:31: 71:47
    let mut _6: bool;                    // in scope 0 at cita-auth/src/block_txn.rs:75:12: 75:38
    let mut _7: u32;                     // in scope 0 at cita-auth/src/block_txn.rs:75:12: 75:28
    let mut _8: block_txn::Error;        // in scope 0 at cita-auth/src/block_txn.rs:76:24: 79:14
    let mut _9: u32;                     // in scope 0 at cita-auth/src/block_txn.rs:77:27: 77:43
    let mut _13: &mut libproto::BlockTxn; // in scope 0 at cita-auth/src/block_txn.rs:84:26: 84:48
    let mut _14: &mut libproto::BlockTxn; // in scope 0 at cita-auth/src/block_txn.rs:84:26: 84:48
    let mut _16: &mut libproto::BlockTxn; // in scope 0 at cita-auth/src/block_txn.rs:85:28: 85:52
    let mut _17: &mut libproto::BlockTxn; // in scope 0 at cita-auth/src/block_txn.rs:85:28: 85:52
    let mut _18: bool;                   // in scope 0 at cita-auth/src/block_txn.rs:88:12: 88:45
    let mut _19: &std::vec::Vec<u8>;     // in scope 0 at cita-auth/src/block_txn.rs:88:12: 88:22
    let mut _20: &&[u8];                 // in scope 0 at cita-auth/src/block_txn.rs:88:26: 88:45
    let mut _21: block_txn::Error;       // in scope 0 at cita-auth/src/block_txn.rs:89:24: 92:14
    let mut _22: cita_types::H256;       // in scope 0 at cita-auth/src/block_txn.rs:90:27: 90:58
    let mut _23: &[u8];                  // in scope 0 at cita-auth/src/block_txn.rs:90:38: 90:57
    let mut _24: cita_types::H256;       // in scope 0 at cita-auth/src/block_txn.rs:91:22: 91:55
    let mut _25: &[u8];                  // in scope 0 at cita-auth/src/block_txn.rs:91:33: 91:54
    let mut _26: &std::vec::Vec<u8>;     // in scope 0 at cita-auth/src/block_txn.rs:91:33: 91:54
    let mut _27: bool;                   // in scope 0 at cita-auth/src/block_txn.rs:96:12: 96:58
    let mut _28: usize;                  // in scope 0 at cita-auth/src/block_txn.rs:96:12: 96:36
    let mut _29: &[std::vec::Vec<u8>];   // in scope 0 at cita-auth/src/block_txn.rs:96:12: 96:36
    let mut _30: usize;                  // in scope 0 at cita-auth/src/block_txn.rs:96:40: 96:58
    let mut _31: &protobuf::repeated::RepeatedField<libproto::UnverifiedTransaction>; // in scope 0 at cita-auth/src/block_txn.rs:96:40: 96:58
    let mut _32: block_txn::Error;       // in scope 0 at cita-auth/src/block_txn.rs:97:24: 97:41
    let mut _33: bool;                   // in scope 0 at cita-auth/src/block_txn.rs:100:12: 103:91
    let mut _34: &mut std::iter::Zip<std::slice::Iter<'_, std::vec::Vec<u8>>, std::slice::Iter<'_, libproto::UnverifiedTransaction>>; // in scope 0 at cita-auth/src/block_txn.rs:100:12: 103:91
    let mut _35: std::iter::Zip<std::slice::Iter<'_, std::vec::Vec<u8>>, std::slice::Iter<'_, libproto::UnverifiedTransaction>>; // in scope 0 at cita-auth/src/block_txn.rs:100:12: 102:38
    let mut _36: std::slice::Iter<'_, std::vec::Vec<u8>>; // in scope 0 at cita-auth/src/block_txn.rs:100:12: 101:20
    let mut _37: &[std::vec::Vec<u8>];   // in scope 0 at cita-auth/src/block_txn.rs:100:12: 101:20
    let mut _38: std::slice::Iter<'_, libproto::UnverifiedTransaction>; // in scope 0 at cita-auth/src/block_txn.rs:102:18: 102:37
    let mut _39: &protobuf::repeated::RepeatedField<libproto::UnverifiedTransaction>; // in scope 0 at cita-auth/src/block_txn.rs:102:18: 102:37
    let mut _40: block_txn::Error;       // in scope 0 at cita-auth/src/block_txn.rs:105:24: 105:41
    let mut _42: rayon::iter::Map<rayon::iter::Zip<rayon::slice::Iter<'_, std::vec::Vec<u8>>, rayon::slice::Iter<'_, libproto::UnverifiedTransaction>>, [closure@cita-auth/src/block_txn.rs:112:18: 112:43]>; // in scope 0 at cita-auth/src/block_txn.rs:109:55: 129:15
    let mut _43: rayon::iter::Zip<rayon::slice::Iter<'_, std::vec::Vec<u8>>, rayon::slice::Iter<'_, libproto::UnverifiedTransaction>>; // in scope 0 at cita-auth/src/block_txn.rs:109:55: 111:47
    let mut _44: rayon::slice::Iter<'_, std::vec::Vec<u8>>; // in scope 0 at cita-auth/src/block_txn.rs:109:55: 110:29
    let mut _45: &[std::vec::Vec<u8>];   // in scope 0 at cita-auth/src/block_txn.rs:109:55: 110:29
    let mut _46: rayon::slice::Iter<'_, libproto::UnverifiedTransaction>; // in scope 0 at cita-auth/src/block_txn.rs:111:18: 111:46
    let mut _47: &[libproto::UnverifiedTransaction]; // in scope 0 at cita-auth/src/block_txn.rs:111:18: 111:46
    let _48: &[libproto::UnverifiedTransaction]; // in scope 0 at cita-auth/src/block_txn.rs:111:18: 111:46
    let mut _49: &protobuf::repeated::RepeatedField<libproto::UnverifiedTransaction>; // in scope 0 at cita-auth/src/block_txn.rs:111:18: 111:46
    let mut _50: bool;                   // in scope 0 at cita-auth/src/block_txn.rs:132:12: 132:47
    let mut _51: &mut std::slice::Iter<'_, std::option::Option<libproto::SignedTransaction>>; // in scope 0 at cita-auth/src/block_txn.rs:132:12: 132:47
    let mut _52: std::slice::Iter<'_, std::option::Option<libproto::SignedTransaction>>; // in scope 0 at cita-auth/src/block_txn.rs:132:12: 132:26
    let mut _53: &[std::option::Option<libproto::SignedTransaction>]; // in scope 0 at cita-auth/src/block_txn.rs:132:12: 132:26
    let _54: &[std::option::Option<libproto::SignedTransaction>]; // in scope 0 at cita-auth/src/block_txn.rs:132:12: 132:26
    let mut _55: &std::vec::Vec<std::option::Option<libproto::SignedTransaction>>; // in scope 0 at cita-auth/src/block_txn.rs:132:12: 132:26
    let mut _56: block_txn::Error;       // in scope 0 at cita-auth/src/block_txn.rs:133:24: 133:45
    let mut _57: std::vec::Vec<libproto::SignedTransaction>; // in scope 0 at cita-auth/src/block_txn.rs:136:12: 136:61
    let mut _58: std::iter::Map<std::vec::IntoIter<std::option::Option<libproto::SignedTransaction>>, fn(std::option::Option<libproto::SignedTransaction>) -> libproto::SignedTransaction {std::option::Option::<libproto::SignedTransaction>::unwrap}>; // in scope 0 at cita-auth/src/block_txn.rs:136:12: 136:51
    let mut _59: std::vec::IntoIter<std::option::Option<libproto::SignedTransaction>>; // in scope 0 at cita-auth/src/block_txn.rs:136:12: 136:31
    let mut _60: std::vec::Vec<std::option::Option<libproto::SignedTransaction>>; // in scope 0 at cita-auth/src/block_txn.rs:136:12: 136:19
    let mut _61: bool;                   // in scope 0 at cita-auth/src/block_txn.rs:137:5: 137:6
    scope 1 {
        debug expected_origin => _3;     // in scope 1 at cita-auth/src/block_txn.rs:71:14: 71:29
        debug expect_block_txn => _4;    // in scope 1 at cita-auth/src/block_txn.rs:71:31: 71:47
        let _5: u32;                     // in scope 1 at cita-auth/src/block_txn.rs:74:13: 74:19
        scope 2 {
            debug origin => _5;          // in scope 2 at cita-auth/src/block_txn.rs:74:13: 74:19
            let _10: &[u8];              // in scope 2 at cita-auth/src/block_txn.rs:82:13: 82:32
            scope 3 {
                debug expected_block_hash => _10; // in scope 3 at cita-auth/src/block_txn.rs:82:13: 82:32
                let _11: &[std::vec::Vec<u8>]; // in scope 3 at cita-auth/src/block_txn.rs:83:13: 83:31
                scope 4 {
                    debug expected_short_ids => _11; // in scope 4 at cita-auth/src/block_txn.rs:83:13: 83:31
                    let _12: std::vec::Vec<u8>; // in scope 4 at cita-auth/src/block_txn.rs:84:13: 84:23
                    scope 5 {
                        debug block_hash => _12; // in scope 5 at cita-auth/src/block_txn.rs:84:13: 84:23
                        let _15: protobuf::repeated::RepeatedField<libproto::UnverifiedTransaction>; // in scope 5 at cita-auth/src/block_txn.rs:85:13: 85:25
                        scope 6 {
                            debug transactions => _15; // in scope 6 at cita-auth/src/block_txn.rs:85:13: 85:25
                            let _41: std::vec::Vec<std::option::Option<libproto::SignedTransaction>>; // in scope 6 at cita-auth/src/block_txn.rs:109:13: 109:20
                            scope 7 {
                                debug results => _41; // in scope 7 at cita-auth/src/block_txn.rs:109:13: 109:20
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _61 = const false;               // scope 0 at cita-auth/src/block_txn.rs:71:14: 71:29
        _3 = &((*_2).0: u32);            // scope 0 at cita-auth/src/block_txn.rs:71:14: 71:29
        _4 = &((*_2).1: libproto::GetBlockTxn); // scope 0 at cita-auth/src/block_txn.rs:71:31: 71:47
        _5 = ((*_1).0: u32);             // scope 1 at cita-auth/src/block_txn.rs:74:22: 74:33
        _7 = (*_3);                      // scope 2 at cita-auth/src/block_txn.rs:75:12: 75:28
        _6 = Ne(move _7, _5);            // scope 2 at cita-auth/src/block_txn.rs:75:12: 75:38
        switchInt(move _6) -> [0: bb2, otherwise: bb1]; // scope 2 at cita-auth/src/block_txn.rs:75:12: 75:38
    }

    bb1: {
        _9 = (*_3);                      // scope 2 at cita-auth/src/block_txn.rs:77:27: 77:43
        _8 = block_txn::Error::BadOrigin { expected: move _9, got: _5 }; // scope 2 at cita-auth/src/block_txn.rs:76:24: 79:14
        _0 = Result::<Vec<SignedTransaction>, block_txn::Error>::Err(move _8); // scope 2 at cita-auth/src/block_txn.rs:76:20: 79:15
        goto -> bb43;                    // scope 2 at no-location
    }

    bb2: {
        _10 = libproto::GetBlockTxn::get_block_hash(_4) -> bb3; // scope 2 at cita-auth/src/block_txn.rs:82:35: 82:68
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:82:52: 82:66
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::GetBlockTxn) -> &'a [u8] {libproto::GetBlockTxn::get_block_hash}, val: Value(<ZST>) }
    }

    bb3: {
        _11 = libproto::GetBlockTxn::get_short_ids(_4) -> bb4; // scope 3 at cita-auth/src/block_txn.rs:83:34: 83:66
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:83:51: 83:64
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::GetBlockTxn) -> &'a [Vec<u8>] {libproto::GetBlockTxn::get_short_ids}, val: Value(<ZST>) }
    }

    bb4: {
        _14 = <BlockTxnMessage as DerefMut>::deref_mut(_1) -> bb5; // scope 4 at cita-auth/src/block_txn.rs:84:26: 84:48
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:84:26: 84:48
                                         // + literal: Const { ty: for<'a> fn(&'a mut BlockTxnMessage) -> &'a mut <BlockTxnMessage as Deref>::Target {<BlockTxnMessage as DerefMut>::deref_mut}, val: Value(<ZST>) }
    }

    bb5: {
        _13 = _14;                       // scope 4 at cita-auth/src/block_txn.rs:84:26: 84:48
        _12 = libproto::BlockTxn::take_block_hash(move _13) -> bb6; // scope 4 at cita-auth/src/block_txn.rs:84:26: 84:48
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:84:31: 84:46
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::BlockTxn) -> Vec<u8> {libproto::BlockTxn::take_block_hash}, val: Value(<ZST>) }
    }

    bb6: {
        _17 = <BlockTxnMessage as DerefMut>::deref_mut(_1) -> [return: bb7, unwind: bb45]; // scope 5 at cita-auth/src/block_txn.rs:85:28: 85:52
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:85:28: 85:52
                                         // + literal: Const { ty: for<'a> fn(&'a mut BlockTxnMessage) -> &'a mut <BlockTxnMessage as Deref>::Target {<BlockTxnMessage as DerefMut>::deref_mut}, val: Value(<ZST>) }
    }

    bb7: {
        _16 = _17;                       // scope 5 at cita-auth/src/block_txn.rs:85:28: 85:52
        _15 = libproto::BlockTxn::take_transactions(move _16) -> [return: bb8, unwind: bb45]; // scope 5 at cita-auth/src/block_txn.rs:85:28: 85:52
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:85:33: 85:50
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::BlockTxn) -> protobuf::repeated::RepeatedField<UnverifiedTransaction> {libproto::BlockTxn::take_transactions}, val: Value(<ZST>) }
    }

    bb8: {
        _19 = &_12;                      // scope 6 at cita-auth/src/block_txn.rs:88:12: 88:22
        _20 = &_10;                      // scope 6 at cita-auth/src/block_txn.rs:88:26: 88:45
        _18 = <Vec<u8> as PartialEq<&[u8]>>::ne(move _19, move _20) -> [return: bb9, unwind: bb44]; // scope 6 at cita-auth/src/block_txn.rs:88:12: 88:45
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:88:12: 88:45
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Vec<u8>, &'b &[u8]) -> bool {<Vec<u8> as PartialEq<&[u8]>>::ne}, val: Value(<ZST>) }
    }

    bb9: {
        switchInt(move _18) -> [0: bb14, otherwise: bb10]; // scope 6 at cita-auth/src/block_txn.rs:88:12: 88:45
    }

    bb10: {
        _23 = _10;                       // scope 6 at cita-auth/src/block_txn.rs:90:38: 90:57
        _22 = <H256 as From<&[u8]>>::from(move _23) -> [return: bb11, unwind: bb44]; // scope 6 at cita-auth/src/block_txn.rs:90:27: 90:58
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:90:27: 90:37
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[u8]) -> H256 {<H256 as From<&[u8]>>::from}, val: Value(<ZST>) }
    }

    bb11: {
        _26 = &_12;                      // scope 6 at cita-auth/src/block_txn.rs:91:33: 91:54
        _25 = Vec::<u8>::as_slice(move _26) -> [return: bb12, unwind: bb44]; // scope 6 at cita-auth/src/block_txn.rs:91:33: 91:54
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:91:44: 91:52
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<u8>) -> &'a [u8] {Vec::<u8>::as_slice}, val: Value(<ZST>) }
    }

    bb12: {
        _24 = <H256 as From<&[u8]>>::from(move _25) -> [return: bb13, unwind: bb44]; // scope 6 at cita-auth/src/block_txn.rs:91:22: 91:55
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:91:22: 91:32
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&[u8]) -> H256 {<H256 as From<&[u8]>>::from}, val: Value(<ZST>) }
    }

    bb13: {
        _21 = block_txn::Error::BadBlockHash { expected: move _22, got: move _24 }; // scope 6 at cita-auth/src/block_txn.rs:89:24: 92:14
        _0 = Result::<Vec<SignedTransaction>, block_txn::Error>::Err(move _21); // scope 6 at cita-auth/src/block_txn.rs:89:20: 92:15
        goto -> bb41;                    // scope 6 at no-location
    }

    bb14: {
        _29 = _11;                       // scope 6 at cita-auth/src/block_txn.rs:96:12: 96:36
        _28 = core::slice::<impl [Vec<u8>]>::len(move _29) -> [return: bb15, unwind: bb44]; // scope 6 at cita-auth/src/block_txn.rs:96:12: 96:36
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:96:31: 96:34
                                         // + literal: Const { ty: for<'a> fn(&'a [Vec<u8>]) -> usize {core::slice::<impl [Vec<u8>]>::len}, val: Value(<ZST>) }
    }

    bb15: {
        _31 = &_15;                      // scope 6 at cita-auth/src/block_txn.rs:96:40: 96:58
        _30 = protobuf::repeated::RepeatedField::<UnverifiedTransaction>::len(move _31) -> [return: bb16, unwind: bb44]; // scope 6 at cita-auth/src/block_txn.rs:96:40: 96:58
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:96:53: 96:56
                                         // + literal: Const { ty: for<'a> fn(&'a protobuf::repeated::RepeatedField<UnverifiedTransaction>) -> usize {protobuf::repeated::RepeatedField::<UnverifiedTransaction>::len}, val: Value(<ZST>) }
    }

    bb16: {
        _27 = Ne(move _28, move _30);    // scope 6 at cita-auth/src/block_txn.rs:96:12: 96:58
        switchInt(move _27) -> [0: bb18, otherwise: bb17]; // scope 6 at cita-auth/src/block_txn.rs:96:12: 96:58
    }

    bb17: {
        _32 = block_txn::Error::BadShortID; // scope 6 at cita-auth/src/block_txn.rs:97:24: 97:41
        _0 = Result::<Vec<SignedTransaction>, block_txn::Error>::Err(move _32); // scope 6 at cita-auth/src/block_txn.rs:97:20: 97:42
        goto -> bb41;                    // scope 6 at no-location
    }

    bb18: {
        _37 = _11;                       // scope 6 at cita-auth/src/block_txn.rs:100:12: 101:20
        _36 = core::slice::<impl [Vec<u8>]>::iter(move _37) -> [return: bb19, unwind: bb44]; // scope 6 at cita-auth/src/block_txn.rs:100:12: 101:20
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:101:14: 101:18
                                         // + literal: Const { ty: for<'a> fn(&'a [Vec<u8>]) -> std::slice::Iter<'a, Vec<u8>> {core::slice::<impl [Vec<u8>]>::iter}, val: Value(<ZST>) }
    }

    bb19: {
        _39 = &_15;                      // scope 6 at cita-auth/src/block_txn.rs:102:18: 102:37
        _38 = protobuf::repeated::RepeatedField::<UnverifiedTransaction>::iter(move _39) -> [return: bb20, unwind: bb44]; // scope 6 at cita-auth/src/block_txn.rs:102:18: 102:37
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:102:31: 102:35
                                         // + literal: Const { ty: for<'a> fn(&'a protobuf::repeated::RepeatedField<UnverifiedTransaction>) -> std::slice::Iter<'a, UnverifiedTransaction> {protobuf::repeated::RepeatedField::<UnverifiedTransaction>::iter}, val: Value(<ZST>) }
    }

    bb20: {
        _35 = <std::slice::Iter<'_, Vec<u8>> as Iterator>::zip::<std::slice::Iter<'_, UnverifiedTransaction>>(move _36, move _38) -> [return: bb21, unwind: bb44]; // scope 6 at cita-auth/src/block_txn.rs:100:12: 102:38
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:102:14: 102:17
                                         // + literal: Const { ty: fn(std::slice::Iter<'_, Vec<u8>>, std::slice::Iter<'_, UnverifiedTransaction>) -> std::iter::Zip<std::slice::Iter<'_, Vec<u8>>, <std::slice::Iter<'_, UnverifiedTransaction> as IntoIterator>::IntoIter> {<std::slice::Iter<'_, Vec<u8>> as Iterator>::zip::<std::slice::Iter<'_, UnverifiedTransaction>>}, val: Value(<ZST>) }
    }

    bb21: {
        _34 = &mut _35;                  // scope 6 at cita-auth/src/block_txn.rs:100:12: 103:91
        _33 = <std::iter::Zip<std::slice::Iter<'_, Vec<u8>>, std::slice::Iter<'_, UnverifiedTransaction>> as Iterator>::any::<[closure@cita-auth/src/block_txn.rs:103:18: 103:43]>(move _34, const ZeroSized: [closure@cita-auth/src/block_txn.rs:103:18: 103:43]) -> [return: bb22, unwind: bb44]; // scope 6 at cita-auth/src/block_txn.rs:100:12: 103:91
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:103:14: 103:17
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::iter::Zip<std::slice::Iter<'_, Vec<u8>>, std::slice::Iter<'_, UnverifiedTransaction>>, [closure@cita-auth/src/block_txn.rs:103:18: 103:43]) -> bool {<std::iter::Zip<std::slice::Iter<'_, Vec<u8>>, std::slice::Iter<'_, UnverifiedTransaction>> as Iterator>::any::<[closure@cita-auth/src/block_txn.rs:103:18: 103:43]>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: [closure@cita-auth/src/block_txn.rs:103:18: 103:43], val: Value(<ZST>) }
    }

    bb22: {
        switchInt(move _33) -> [0: bb24, otherwise: bb23]; // scope 6 at cita-auth/src/block_txn.rs:100:12: 103:91
    }

    bb23: {
        _40 = block_txn::Error::BadShortID; // scope 6 at cita-auth/src/block_txn.rs:105:24: 105:41
        _0 = Result::<Vec<SignedTransaction>, block_txn::Error>::Err(move _40); // scope 6 at cita-auth/src/block_txn.rs:105:20: 105:42
        goto -> bb41;                    // scope 6 at no-location
    }

    bb24: {
        _45 = _11;                       // scope 6 at cita-auth/src/block_txn.rs:109:55: 110:29
        _44 = <&[Vec<u8>] as IntoParallelIterator>::into_par_iter(move _45) -> [return: bb25, unwind: bb44]; // scope 6 at cita-auth/src/block_txn.rs:109:55: 110:29
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:110:14: 110:27
                                         // + literal: Const { ty: fn(&[Vec<u8>]) -> <&[Vec<u8>] as IntoParallelIterator>::Iter {<&[Vec<u8>] as IntoParallelIterator>::into_par_iter}, val: Value(<ZST>) }
    }

    bb25: {
        _49 = &_15;                      // scope 6 at cita-auth/src/block_txn.rs:111:18: 111:46
        _48 = <protobuf::repeated::RepeatedField<UnverifiedTransaction> as Deref>::deref(move _49) -> [return: bb26, unwind: bb44]; // scope 6 at cita-auth/src/block_txn.rs:111:18: 111:46
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:111:18: 111:46
                                         // + literal: Const { ty: for<'a> fn(&'a protobuf::repeated::RepeatedField<UnverifiedTransaction>) -> &'a <protobuf::repeated::RepeatedField<UnverifiedTransaction> as Deref>::Target {<protobuf::repeated::RepeatedField<UnverifiedTransaction> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb26: {
        _47 = _48;                       // scope 6 at cita-auth/src/block_txn.rs:111:18: 111:46
        _46 = <&[UnverifiedTransaction] as IntoParallelIterator>::into_par_iter(move _47) -> [return: bb27, unwind: bb44]; // scope 6 at cita-auth/src/block_txn.rs:111:18: 111:46
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:111:31: 111:44
                                         // + literal: Const { ty: fn(&[UnverifiedTransaction]) -> <&[UnverifiedTransaction] as IntoParallelIterator>::Iter {<&[UnverifiedTransaction] as IntoParallelIterator>::into_par_iter}, val: Value(<ZST>) }
    }

    bb27: {
        _43 = <rayon::slice::Iter<'_, Vec<u8>> as IndexedParallelIterator>::zip::<rayon::slice::Iter<'_, UnverifiedTransaction>>(move _44, move _46) -> [return: bb28, unwind: bb44]; // scope 6 at cita-auth/src/block_txn.rs:109:55: 111:47
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:111:14: 111:17
                                         // + literal: Const { ty: fn(rayon::slice::Iter<'_, Vec<u8>>, rayon::slice::Iter<'_, UnverifiedTransaction>) -> rayon::iter::Zip<rayon::slice::Iter<'_, Vec<u8>>, <rayon::slice::Iter<'_, UnverifiedTransaction> as IntoParallelIterator>::Iter> {<rayon::slice::Iter<'_, Vec<u8>> as IndexedParallelIterator>::zip::<rayon::slice::Iter<'_, UnverifiedTransaction>>}, val: Value(<ZST>) }
    }

    bb28: {
        _42 = <rayon::iter::Zip<rayon::slice::Iter<'_, Vec<u8>>, rayon::slice::Iter<'_, UnverifiedTransaction>> as ParallelIterator>::map::<[closure@cita-auth/src/block_txn.rs:112:18: 112:43], std::option::Option<SignedTransaction>>(move _43, const ZeroSized: [closure@cita-auth/src/block_txn.rs:112:18: 112:43]) -> [return: bb29, unwind: bb44]; // scope 6 at cita-auth/src/block_txn.rs:109:55: 129:15
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:112:14: 112:17
                                         // + literal: Const { ty: fn(rayon::iter::Zip<rayon::slice::Iter<'_, Vec<u8>>, rayon::slice::Iter<'_, UnverifiedTransaction>>, [closure@cita-auth/src/block_txn.rs:112:18: 112:43]) -> rayon::iter::Map<rayon::iter::Zip<rayon::slice::Iter<'_, Vec<u8>>, rayon::slice::Iter<'_, UnverifiedTransaction>>, [closure@cita-auth/src/block_txn.rs:112:18: 112:43]> {<rayon::iter::Zip<rayon::slice::Iter<'_, Vec<u8>>, rayon::slice::Iter<'_, UnverifiedTransaction>> as ParallelIterator>::map::<[closure@cita-auth/src/block_txn.rs:112:18: 112:43], std::option::Option<SignedTransaction>>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: [closure@cita-auth/src/block_txn.rs:112:18: 112:43], val: Value(<ZST>) }
    }

    bb29: {
        _41 = <rayon::iter::Map<rayon::iter::Zip<rayon::slice::Iter<'_, Vec<u8>>, rayon::slice::Iter<'_, UnverifiedTransaction>>, [closure@cita-auth/src/block_txn.rs:112:18: 112:43]> as ParallelIterator>::collect::<Vec<std::option::Option<SignedTransaction>>>(move _42) -> [return: bb30, unwind: bb44]; // scope 6 at cita-auth/src/block_txn.rs:109:55: 130:23
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:130:14: 130:21
                                         // + literal: Const { ty: fn(rayon::iter::Map<rayon::iter::Zip<rayon::slice::Iter<'_, Vec<u8>>, rayon::slice::Iter<'_, UnverifiedTransaction>>, [closure@cita-auth/src/block_txn.rs:112:18: 112:43]>) -> Vec<std::option::Option<SignedTransaction>> {<rayon::iter::Map<rayon::iter::Zip<rayon::slice::Iter<'_, Vec<u8>>, rayon::slice::Iter<'_, UnverifiedTransaction>>, [closure@cita-auth/src/block_txn.rs:112:18: 112:43]> as ParallelIterator>::collect::<Vec<std::option::Option<SignedTransaction>>>}, val: Value(<ZST>) }
    }

    bb30: {
        _61 = const true;                // scope 6 at cita-auth/src/block_txn.rs:130:22: 130:23
        _55 = &_41;                      // scope 7 at cita-auth/src/block_txn.rs:132:12: 132:26
        _54 = <Vec<std::option::Option<SignedTransaction>> as Deref>::deref(move _55) -> [return: bb31, unwind: bb48]; // scope 7 at cita-auth/src/block_txn.rs:132:12: 132:26
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:132:12: 132:26
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<std::option::Option<SignedTransaction>>) -> &'a <Vec<std::option::Option<SignedTransaction>> as Deref>::Target {<Vec<std::option::Option<SignedTransaction>> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb31: {
        _53 = _54;                       // scope 7 at cita-auth/src/block_txn.rs:132:12: 132:26
        _52 = core::slice::<impl [std::option::Option<SignedTransaction>]>::iter(move _53) -> [return: bb32, unwind: bb48]; // scope 7 at cita-auth/src/block_txn.rs:132:12: 132:26
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:132:20: 132:24
                                         // + literal: Const { ty: for<'a> fn(&'a [std::option::Option<SignedTransaction>]) -> std::slice::Iter<'a, std::option::Option<SignedTransaction>> {core::slice::<impl [std::option::Option<SignedTransaction>]>::iter}, val: Value(<ZST>) }
    }

    bb32: {
        _51 = &mut _52;                  // scope 7 at cita-auth/src/block_txn.rs:132:12: 132:47
        _50 = <std::slice::Iter<'_, std::option::Option<SignedTransaction>> as Iterator>::any::<for<'a> fn(&'a std::option::Option<SignedTransaction>) -> bool {std::option::Option::<SignedTransaction>::is_none}>(move _51, std::option::Option::<SignedTransaction>::is_none) -> [return: bb33, unwind: bb48]; // scope 7 at cita-auth/src/block_txn.rs:132:12: 132:47
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:132:27: 132:30
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::slice::Iter<'_, std::option::Option<SignedTransaction>>, for<'a> fn(&'a std::option::Option<SignedTransaction>) -> bool {std::option::Option::<SignedTransaction>::is_none}) -> bool {<std::slice::Iter<'_, std::option::Option<SignedTransaction>> as Iterator>::any::<for<'a> fn(&'a std::option::Option<SignedTransaction>) -> bool {std::option::Option::<SignedTransaction>::is_none}>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:132:31: 132:46
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'a> fn(&'a std::option::Option<SignedTransaction>) -> bool {std::option::Option::<SignedTransaction>::is_none}, val: Value(<ZST>) }
    }

    bb33: {
        switchInt(move _50) -> [0: bb35, otherwise: bb34]; // scope 7 at cita-auth/src/block_txn.rs:132:12: 132:47
    }

    bb34: {
        _56 = block_txn::Error::BadTxSignature; // scope 7 at cita-auth/src/block_txn.rs:133:24: 133:45
        _0 = Result::<Vec<SignedTransaction>, block_txn::Error>::Err(move _56); // scope 7 at cita-auth/src/block_txn.rs:133:20: 133:46
        drop(_41) -> [return: bb40, unwind: bb44]; // scope 6 at cita-auth/src/block_txn.rs:137:5: 137:6
    }

    bb35: {
        _61 = const false;               // scope 7 at cita-auth/src/block_txn.rs:136:12: 136:19
        _60 = move _41;                  // scope 7 at cita-auth/src/block_txn.rs:136:12: 136:19
        _59 = <Vec<std::option::Option<SignedTransaction>> as IntoIterator>::into_iter(move _60) -> [return: bb36, unwind: bb48]; // scope 7 at cita-auth/src/block_txn.rs:136:12: 136:31
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:136:20: 136:29
                                         // + literal: Const { ty: fn(Vec<std::option::Option<SignedTransaction>>) -> <Vec<std::option::Option<SignedTransaction>> as IntoIterator>::IntoIter {<Vec<std::option::Option<SignedTransaction>> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb36: {
        _58 = <std::vec::IntoIter<std::option::Option<SignedTransaction>> as Iterator>::map::<SignedTransaction, fn(std::option::Option<SignedTransaction>) -> SignedTransaction {std::option::Option::<SignedTransaction>::unwrap}>(move _59, std::option::Option::<SignedTransaction>::unwrap) -> [return: bb37, unwind: bb48]; // scope 7 at cita-auth/src/block_txn.rs:136:12: 136:51
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:136:32: 136:35
                                         // + literal: Const { ty: fn(std::vec::IntoIter<std::option::Option<SignedTransaction>>, fn(std::option::Option<SignedTransaction>) -> SignedTransaction {std::option::Option::<SignedTransaction>::unwrap}) -> std::iter::Map<std::vec::IntoIter<std::option::Option<SignedTransaction>>, fn(std::option::Option<SignedTransaction>) -> SignedTransaction {std::option::Option::<SignedTransaction>::unwrap}> {<std::vec::IntoIter<std::option::Option<SignedTransaction>> as Iterator>::map::<SignedTransaction, fn(std::option::Option<SignedTransaction>) -> SignedTransaction {std::option::Option::<SignedTransaction>::unwrap}>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:136:36: 136:50
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: fn(std::option::Option<SignedTransaction>) -> SignedTransaction {std::option::Option::<SignedTransaction>::unwrap}, val: Value(<ZST>) }
    }

    bb37: {
        _57 = <std::iter::Map<std::vec::IntoIter<std::option::Option<SignedTransaction>>, fn(std::option::Option<SignedTransaction>) -> SignedTransaction {std::option::Option::<SignedTransaction>::unwrap}> as Iterator>::collect::<Vec<SignedTransaction>>(move _58) -> [return: bb38, unwind: bb48]; // scope 7 at cita-auth/src/block_txn.rs:136:12: 136:61
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:136:52: 136:59
                                         // + literal: Const { ty: fn(std::iter::Map<std::vec::IntoIter<std::option::Option<SignedTransaction>>, fn(std::option::Option<SignedTransaction>) -> SignedTransaction {std::option::Option::<SignedTransaction>::unwrap}>) -> Vec<SignedTransaction> {<std::iter::Map<std::vec::IntoIter<std::option::Option<SignedTransaction>>, fn(std::option::Option<SignedTransaction>) -> SignedTransaction {std::option::Option::<SignedTransaction>::unwrap}> as Iterator>::collect::<Vec<SignedTransaction>>}, val: Value(<ZST>) }
    }

    bb38: {
        _0 = Result::<Vec<SignedTransaction>, block_txn::Error>::Ok(move _57); // scope 7 at cita-auth/src/block_txn.rs:136:9: 136:62
        _61 = const false;               // scope 6 at cita-auth/src/block_txn.rs:137:5: 137:6
        drop(_15) -> [return: bb39, unwind: bb45]; // scope 5 at cita-auth/src/block_txn.rs:137:5: 137:6
    }

    bb39: {
        drop(_12) -> bb43;               // scope 4 at cita-auth/src/block_txn.rs:137:5: 137:6
    }

    bb40: {
        _61 = const false;               // scope 6 at cita-auth/src/block_txn.rs:137:5: 137:6
        goto -> bb41;                    // scope 6 at no-location
    }

    bb41: {
        drop(_15) -> [return: bb42, unwind: bb45]; // scope 5 at cita-auth/src/block_txn.rs:137:5: 137:6
    }

    bb42: {
        drop(_12) -> bb43;               // scope 4 at cita-auth/src/block_txn.rs:137:5: 137:6
    }

    bb43: {
        return;                          // scope 0 at cita-auth/src/block_txn.rs:137:6: 137:6
    }

    bb44 (cleanup): {
        drop(_15) -> bb45;               // scope 5 at cita-auth/src/block_txn.rs:137:5: 137:6
    }

    bb45 (cleanup): {
        drop(_12) -> bb46;               // scope 4 at cita-auth/src/block_txn.rs:137:5: 137:6
    }

    bb46 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/block_txn.rs:70:5: 137:6
    }

    bb47 (cleanup): {
        drop(_41) -> bb44;               // scope 6 at cita-auth/src/block_txn.rs:137:5: 137:6
    }

    bb48 (cleanup): {
        switchInt(_61) -> [0: bb44, otherwise: bb47]; // scope 6 at cita-auth/src/block_txn.rs:137:5: 137:6
    }
}

fn block_txn::<impl at cita-auth/src/block_txn.rs:69:1: 69:21>::validate::{closure#0}(_1: &mut [closure@cita-auth/src/block_txn.rs:103:18: 103:43], _2: (&Vec<u8>, &UnverifiedTransaction)) -> bool {
    let mut _0: bool;                    // return place in scope 0 at cita-auth/src/block_txn.rs:103:44: 103:44
    let _3: &std::vec::Vec<u8>;          // in scope 0 at cita-auth/src/block_txn.rs:103:20: 103:28
    let _4: &libproto::UnverifiedTransaction; // in scope 0 at cita-auth/src/block_txn.rs:103:30: 103:41
    let mut _5: &&std::vec::Vec<u8>;     // in scope 0 at cita-auth/src/block_txn.rs:103:44: 103:52
    let mut _6: &&std::vec::Vec<u8>;     // in scope 0 at cita-auth/src/block_txn.rs:103:56: 103:90
    let _7: &std::vec::Vec<u8>;          // in scope 0 at cita-auth/src/block_txn.rs:103:56: 103:90
    let _8: std::vec::Vec<u8>;           // in scope 0 at cita-auth/src/block_txn.rs:103:57: 103:90
    let mut _9: &[u8];                   // in scope 0 at cita-auth/src/block_txn.rs:103:57: 103:90
    let _10: &[u8];                      // in scope 0 at cita-auth/src/block_txn.rs:103:57: 103:90
    let mut _11: &cita_types::H256;      // in scope 0 at cita-auth/src/block_txn.rs:103:57: 103:90
    let _12: cita_types::H256;           // in scope 0 at cita-auth/src/block_txn.rs:103:57: 103:81
    scope 1 {
        debug short_id => _3;            // in scope 1 at cita-auth/src/block_txn.rs:103:20: 103:28
        debug transaction => _4;         // in scope 1 at cita-auth/src/block_txn.rs:103:30: 103:41
    }

    bb0: {
        _3 = (_2.0: &std::vec::Vec<u8>); // scope 0 at cita-auth/src/block_txn.rs:103:20: 103:28
        _4 = (_2.1: &libproto::UnverifiedTransaction); // scope 0 at cita-auth/src/block_txn.rs:103:30: 103:41
        _5 = &_3;                        // scope 1 at cita-auth/src/block_txn.rs:103:44: 103:52
        _12 = libproto::<impl UnverifiedTransaction>::crypt_hash(_4) -> bb1; // scope 1 at cita-auth/src/block_txn.rs:103:57: 103:81
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:103:69: 103:79
                                         // + literal: Const { ty: for<'a> fn(&'a UnverifiedTransaction) -> H256 {libproto::<impl UnverifiedTransaction>::crypt_hash}, val: Value(<ZST>) }
    }

    bb1: {
        _11 = &_12;                      // scope 1 at cita-auth/src/block_txn.rs:103:57: 103:90
        _10 = <H256 as Deref>::deref(move _11) -> bb2; // scope 1 at cita-auth/src/block_txn.rs:103:57: 103:90
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:103:57: 103:90
                                         // + literal: Const { ty: for<'a> fn(&'a H256) -> &'a <H256 as Deref>::Target {<H256 as Deref>::deref}, val: Value(<ZST>) }
    }

    bb2: {
        _9 = _10;                        // scope 1 at cita-auth/src/block_txn.rs:103:57: 103:90
        _8 = std::slice::<impl [u8]>::to_vec(move _9) -> bb3; // scope 1 at cita-auth/src/block_txn.rs:103:57: 103:90
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:103:82: 103:88
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> Vec<u8> {std::slice::<impl [u8]>::to_vec}, val: Value(<ZST>) }
    }

    bb3: {
        _7 = &_8;                        // scope 1 at cita-auth/src/block_txn.rs:103:56: 103:90
        _6 = &_7;                        // scope 1 at cita-auth/src/block_txn.rs:103:56: 103:90
        _0 = <&Vec<u8> as PartialEq>::ne(move _5, move _6) -> [return: bb4, unwind: bb6]; // scope 1 at cita-auth/src/block_txn.rs:103:44: 103:90
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:103:44: 103:90
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a &Vec<u8>, &'b &Vec<u8>) -> bool {<&Vec<u8> as PartialEq>::ne}, val: Value(<ZST>) }
    }

    bb4: {
        drop(_8) -> bb5;                 // scope 1 at cita-auth/src/block_txn.rs:103:89: 103:90
    }

    bb5: {
        return;                          // scope 0 at cita-auth/src/block_txn.rs:103:90: 103:90
    }

    bb6 (cleanup): {
        drop(_8) -> bb7;                 // scope 1 at cita-auth/src/block_txn.rs:103:89: 103:90
    }

    bb7 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/block_txn.rs:103:18: 103:90
    }
}

fn block_txn::<impl at cita-auth/src/block_txn.rs:69:1: 69:21>::validate::{closure#1}(_1: &[closure@cita-auth/src/block_txn.rs:112:18: 112:43], _2: (&Vec<u8>, &UnverifiedTransaction)) -> std::option::Option<SignedTransaction> {
    let mut _0: std::option::Option<libproto::SignedTransaction>; // return place in scope 0 at cita-auth/src/block_txn.rs:112:44: 112:44
    let _3: &std::vec::Vec<u8>;          // in scope 0 at cita-auth/src/block_txn.rs:112:20: 112:28
    let _4: &libproto::UnverifiedTransaction; // in scope 0 at cita-auth/src/block_txn.rs:112:30: 112:41
    let mut _6: &[u8];                   // in scope 0 at cita-auth/src/block_txn.rs:113:48: 113:56
    let _7: &[u8];                       // in scope 0 at cita-auth/src/block_txn.rs:113:48: 113:56
    let mut _9: std::result::Result<std::vec::Vec<u8>, libproto::TryIntoConvertError>; // in scope 0 at cita-auth/src/block_txn.rs:115:38: 115:78
    let mut _10: &libproto::Transaction; // in scope 0 at cita-auth/src/block_txn.rs:115:38: 115:78
    let _11: &libproto::Transaction;     // in scope 0 at cita-auth/src/block_txn.rs:115:38: 115:67
    let mut _13: &std::vec::Vec<u8>;     // in scope 0 at cita-auth/src/block_txn.rs:116:28: 116:46
    let mut _15: libproto::Crypto;       // in scope 0 at cita-auth/src/block_txn.rs:118:35: 118:59
    let _16: &cita_types::H256;          // in scope 0 at cita-auth/src/block_txn.rs:118:61: 118:66
    let mut _17: &[u8];                  // in scope 0 at cita-auth/src/block_txn.rs:118:68: 118:95
    let _18: &[u8];                      // in scope 0 at cita-auth/src/block_txn.rs:118:68: 118:95
    let mut _19: isize;                  // in scope 0 at cita-auth/src/block_txn.rs:120:21: 120:31
    let _22: ();                         // in scope 0 at cita-auth/src/block_txn.rs:122:25: 122:80
    let mut _23: &mut libproto::SignedTransaction; // in scope 0 at cita-auth/src/block_txn.rs:122:25: 122:80
    let mut _24: libproto::UnverifiedTransaction; // in scope 0 at cita-auth/src/block_txn.rs:122:60: 122:79
    let _25: ();                         // in scope 0 at cita-auth/src/block_txn.rs:123:25: 123:64
    let mut _26: &mut libproto::SignedTransaction; // in scope 0 at cita-auth/src/block_txn.rs:123:25: 123:64
    let mut _27: std::vec::Vec<u8>;      // in scope 0 at cita-auth/src/block_txn.rs:123:47: 123:63
    let mut _28: &[u8];                  // in scope 0 at cita-auth/src/block_txn.rs:123:47: 123:63
    let _29: &[u8];                      // in scope 0 at cita-auth/src/block_txn.rs:123:47: 123:63
    let mut _30: &cita_types::H256;      // in scope 0 at cita-auth/src/block_txn.rs:123:47: 123:63
    let _31: ();                         // in scope 0 at cita-auth/src/block_txn.rs:124:25: 124:53
    let mut _32: &mut libproto::SignedTransaction; // in scope 0 at cita-auth/src/block_txn.rs:124:25: 124:53
    let mut _33: std::vec::Vec<u8>;      // in scope 0 at cita-auth/src/block_txn.rs:124:46: 124:52
    let mut _34: libproto::SignedTransaction; // in scope 0 at cita-auth/src/block_txn.rs:125:30: 125:39
    let mut _35: bool;                   // in scope 0 at cita-auth/src/block_txn.rs:126:21: 126:22
    scope 1 {
        debug short_id => _3;            // in scope 1 at cita-auth/src/block_txn.rs:112:20: 112:28
        debug transaction => _4;         // in scope 1 at cita-auth/src/block_txn.rs:112:30: 112:41
        let _5: cita_types::H256;        // in scope 1 at cita-auth/src/block_txn.rs:113:21: 113:28
        scope 2 {
            debug tx_hash => _5;         // in scope 2 at cita-auth/src/block_txn.rs:113:21: 113:28
            let _8: std::vec::Vec<u8>;   // in scope 2 at cita-auth/src/block_txn.rs:115:21: 115:26
            scope 3 {
                debug bytes => _8;       // in scope 3 at cita-auth/src/block_txn.rs:115:21: 115:26
                let _12: cita_types::H256; // in scope 3 at cita-auth/src/block_txn.rs:116:21: 116:25
                scope 4 {
                    debug hash => _12;   // in scope 4 at cita-auth/src/block_txn.rs:116:21: 116:25
                    let _14: std::result::Result<std::vec::Vec<u8>, ()>; // in scope 4 at cita-auth/src/block_txn.rs:117:21: 117:27
                    scope 5 {
                        debug result => _14; // in scope 5 at cita-auth/src/block_txn.rs:117:21: 117:27
                        let _20: std::vec::Vec<u8>; // in scope 5 at cita-auth/src/block_txn.rs:120:24: 120:30
                        scope 6 {
                            debug pubkey => _20; // in scope 6 at cita-auth/src/block_txn.rs:120:24: 120:30
                            let mut _21: libproto::SignedTransaction; // in scope 6 at cita-auth/src/block_txn.rs:121:29: 121:42
                            scope 7 {
                                debug signed_tx => _21; // in scope 7 at cita-auth/src/block_txn.rs:121:29: 121:42
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _35 = const false;               // scope 0 at cita-auth/src/block_txn.rs:112:20: 112:28
        _3 = (_2.0: &std::vec::Vec<u8>); // scope 0 at cita-auth/src/block_txn.rs:112:20: 112:28
        _4 = (_2.1: &libproto::UnverifiedTransaction); // scope 0 at cita-auth/src/block_txn.rs:112:30: 112:41
        _7 = <Vec<u8> as Deref>::deref(_3) -> bb1; // scope 1 at cita-auth/src/block_txn.rs:113:48: 113:56
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:113:48: 113:56
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<u8>) -> &'a <Vec<u8> as Deref>::Target {<Vec<u8> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb1: {
        _6 = _7;                         // scope 1 at cita-auth/src/block_txn.rs:113:48: 113:56
        _5 = H256::from_slice(move _6) -> bb2; // scope 1 at cita-auth/src/block_txn.rs:113:31: 113:57
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:113:31: 113:47
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> H256 {H256::from_slice}, val: Value(<ZST>) }
    }

    bb2: {
        _11 = UnverifiedTransaction::get_transaction(_4) -> bb3; // scope 2 at cita-auth/src/block_txn.rs:115:38: 115:67
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:115:50: 115:65
                                         // + literal: Const { ty: for<'a> fn(&'a UnverifiedTransaction) -> &'a Transaction {UnverifiedTransaction::get_transaction}, val: Value(<ZST>) }
    }

    bb3: {
        _10 = _11;                       // scope 2 at cita-auth/src/block_txn.rs:115:38: 115:78
        _9 = <&Transaction as libproto::TryInto<Vec<u8>>>::try_into(move _10) -> bb4; // scope 2 at cita-auth/src/block_txn.rs:115:38: 115:78
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:115:68: 115:76
                                         // + literal: Const { ty: fn(&Transaction) -> Result<Vec<u8>, <&Transaction as libproto::TryInto<Vec<u8>>>::Error> {<&Transaction as libproto::TryInto<Vec<u8>>>::try_into}, val: Value(<ZST>) }
    }

    bb4: {
        _8 = Result::<Vec<u8>, TryIntoConvertError>::unwrap(move _9) -> bb5; // scope 2 at cita-auth/src/block_txn.rs:115:38: 115:87
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:115:79: 115:85
                                         // + literal: Const { ty: fn(Result<Vec<u8>, TryIntoConvertError>) -> Vec<u8> {Result::<Vec<u8>, TryIntoConvertError>::unwrap}, val: Value(<ZST>) }
    }

    bb5: {
        _13 = &_8;                       // scope 3 at cita-auth/src/block_txn.rs:116:28: 116:46
        _12 = <Vec<u8> as Hashable>::crypt_hash(move _13) -> [return: bb6, unwind: bb22]; // scope 3 at cita-auth/src/block_txn.rs:116:28: 116:46
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:116:34: 116:44
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<u8>) -> H256 {<Vec<u8> as Hashable>::crypt_hash}, val: Value(<ZST>) }
    }

    bb6: {
        _15 = UnverifiedTransaction::get_crypto(_4) -> [return: bb7, unwind: bb22]; // scope 4 at cita-auth/src/block_txn.rs:118:35: 118:59
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:118:47: 118:57
                                         // + literal: Const { ty: for<'a> fn(&'a UnverifiedTransaction) -> Crypto {UnverifiedTransaction::get_crypto}, val: Value(<ZST>) }
    }

    bb7: {
        _16 = &_12;                      // scope 4 at cita-auth/src/block_txn.rs:118:61: 118:66
        _18 = UnverifiedTransaction::get_signature(_4) -> [return: bb8, unwind: bb22]; // scope 4 at cita-auth/src/block_txn.rs:118:68: 118:95
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:118:80: 118:93
                                         // + literal: Const { ty: for<'a> fn(&'a UnverifiedTransaction) -> &'a [u8] {UnverifiedTransaction::get_signature}, val: Value(<ZST>) }
    }

    bb8: {
        _17 = _18;                       // scope 4 at cita-auth/src/block_txn.rs:118:68: 118:95
        _14 = verify_tx_sig(move _15, _16, move _17) -> [return: bb9, unwind: bb22]; // scope 4 at cita-auth/src/block_txn.rs:118:21: 118:96
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:118:21: 118:34
                                         // + literal: Const { ty: for<'a, 'b> fn(Crypto, &'a H256, &'b [u8]) -> Result<Vec<u8>, ()> {verify_tx_sig}, val: Value(<ZST>) }
    }

    bb9: {
        _19 = discriminant(_14);         // scope 5 at cita-auth/src/block_txn.rs:119:23: 119:29
        switchInt(move _19) -> [0: bb12, 1: bb10, otherwise: bb11]; // scope 5 at cita-auth/src/block_txn.rs:119:17: 119:29
    }

    bb10: {
        _0 = std::option::Option::<SignedTransaction>::None; // scope 5 at cita-auth/src/block_txn.rs:127:31: 127:35
        goto -> bb24;                    // scope 5 at cita-auth/src/block_txn.rs:127:31: 127:35
    }

    bb11: {
        unreachable;                     // scope 5 at cita-auth/src/block_txn.rs:119:23: 119:29
    }

    bb12: {
        _35 = const true;                // scope 5 at cita-auth/src/block_txn.rs:120:24: 120:30
        _20 = move ((_14 as Ok).0: std::vec::Vec<u8>); // scope 5 at cita-auth/src/block_txn.rs:120:24: 120:30
        _21 = SignedTransaction::new() -> [return: bb13, unwind: bb26]; // scope 6 at cita-auth/src/block_txn.rs:121:45: 121:69
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:121:45: 121:67
                                         // + literal: Const { ty: fn() -> SignedTransaction {SignedTransaction::new}, val: Value(<ZST>) }
    }

    bb13: {
        _23 = &mut _21;                  // scope 7 at cita-auth/src/block_txn.rs:122:25: 122:80
        _24 = <UnverifiedTransaction as Clone>::clone(_4) -> [return: bb14, unwind: bb21]; // scope 7 at cita-auth/src/block_txn.rs:122:60: 122:79
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:122:72: 122:77
                                         // + literal: Const { ty: for<'a> fn(&'a UnverifiedTransaction) -> UnverifiedTransaction {<UnverifiedTransaction as Clone>::clone}, val: Value(<ZST>) }
    }

    bb14: {
        _22 = SignedTransaction::set_transaction_with_sig(move _23, move _24) -> [return: bb15, unwind: bb21]; // scope 7 at cita-auth/src/block_txn.rs:122:25: 122:80
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:122:35: 122:59
                                         // + literal: Const { ty: for<'a> fn(&'a mut SignedTransaction, UnverifiedTransaction) {SignedTransaction::set_transaction_with_sig}, val: Value(<ZST>) }
    }

    bb15: {
        _26 = &mut _21;                  // scope 7 at cita-auth/src/block_txn.rs:123:25: 123:64
        _30 = &_5;                       // scope 7 at cita-auth/src/block_txn.rs:123:47: 123:63
        _29 = <H256 as Deref>::deref(move _30) -> [return: bb16, unwind: bb21]; // scope 7 at cita-auth/src/block_txn.rs:123:47: 123:63
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:123:47: 123:63
                                         // + literal: Const { ty: for<'a> fn(&'a H256) -> &'a <H256 as Deref>::Target {<H256 as Deref>::deref}, val: Value(<ZST>) }
    }

    bb16: {
        _28 = _29;                       // scope 7 at cita-auth/src/block_txn.rs:123:47: 123:63
        _27 = std::slice::<impl [u8]>::to_vec(move _28) -> [return: bb17, unwind: bb21]; // scope 7 at cita-auth/src/block_txn.rs:123:47: 123:63
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:123:55: 123:61
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> Vec<u8> {std::slice::<impl [u8]>::to_vec}, val: Value(<ZST>) }
    }

    bb17: {
        _25 = SignedTransaction::set_tx_hash(move _26, move _27) -> [return: bb18, unwind: bb21]; // scope 7 at cita-auth/src/block_txn.rs:123:25: 123:64
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:123:35: 123:46
                                         // + literal: Const { ty: for<'a> fn(&'a mut SignedTransaction, Vec<u8>) {SignedTransaction::set_tx_hash}, val: Value(<ZST>) }
    }

    bb18: {
        _32 = &mut _21;                  // scope 7 at cita-auth/src/block_txn.rs:124:25: 124:53
        _35 = const false;               // scope 7 at cita-auth/src/block_txn.rs:124:46: 124:52
        _33 = move _20;                  // scope 7 at cita-auth/src/block_txn.rs:124:46: 124:52
        _31 = SignedTransaction::set_signer(move _32, move _33) -> [return: bb19, unwind: bb21]; // scope 7 at cita-auth/src/block_txn.rs:124:25: 124:53
                                         // mir::Constant
                                         // + span: cita-auth/src/block_txn.rs:124:35: 124:45
                                         // + literal: Const { ty: for<'a> fn(&'a mut SignedTransaction, Vec<u8>) {SignedTransaction::set_signer}, val: Value(<ZST>) }
    }

    bb19: {
        _34 = move _21;                  // scope 7 at cita-auth/src/block_txn.rs:125:30: 125:39
        _0 = std::option::Option::<SignedTransaction>::Some(move _34); // scope 7 at cita-auth/src/block_txn.rs:125:25: 125:40
        _35 = const false;               // scope 5 at cita-auth/src/block_txn.rs:126:21: 126:22
        goto -> bb24;                    // scope 4 at cita-auth/src/block_txn.rs:129:13: 129:14
    }

    bb20: {
        return;                          // scope 0 at cita-auth/src/block_txn.rs:129:14: 129:14
    }

    bb21 (cleanup): {
        drop(_21) -> bb26;               // scope 6 at cita-auth/src/block_txn.rs:126:21: 126:22
    }

    bb22 (cleanup): {
        drop(_8) -> bb23;                // scope 2 at cita-auth/src/block_txn.rs:129:13: 129:14
    }

    bb23 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/block_txn.rs:112:18: 129:14
    }

    bb24: {
        drop(_8) -> bb20;                // scope 2 at cita-auth/src/block_txn.rs:129:13: 129:14
    }

    bb25 (cleanup): {
        drop(_20) -> bb22;               // scope 5 at cita-auth/src/block_txn.rs:126:21: 126:22
    }

    bb26 (cleanup): {
        switchInt(_35) -> [0: bb22, otherwise: bb25]; // scope 5 at cita-auth/src/block_txn.rs:126:21: 126:22
    }
}

fn block_verify::<impl at cita-auth/src/block_verify.rs:27:1: 27:25>::transactions(_1: &BlockVerify<'_>) -> &[SignedTransaction] {
    debug self => _1;                    // in scope 0 at cita-auth/src/block_verify.rs:28:25: 28:30
    let mut _0: &[libproto::SignedTransaction]; // return place in scope 0 at cita-auth/src/block_verify.rs:29:9: 29:27
    let _2: &&std::vec::Vec<libproto::SignedTransaction>; // in scope 0 at cita-auth/src/block_verify.rs:29:9: 29:27
    let mut _3: &std::vec::Vec<libproto::SignedTransaction>; // in scope 0 at cita-auth/src/block_verify.rs:29:9: 29:27

    bb0: {
        _2 = &((*_1).0: &std::vec::Vec<libproto::SignedTransaction>); // scope 0 at cita-auth/src/block_verify.rs:29:9: 29:27
        _3 = deref_copy (*_2);           // scope 0 at cita-auth/src/block_verify.rs:29:9: 29:27
        _0 = <Vec<SignedTransaction> as Deref>::deref(_3) -> bb1; // scope 0 at cita-auth/src/block_verify.rs:29:9: 29:27
                                         // mir::Constant
                                         // + span: cita-auth/src/block_verify.rs:29:9: 29:27
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<SignedTransaction>) -> &'a <Vec<SignedTransaction> as Deref>::Target {<Vec<SignedTransaction> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-auth/src/block_verify.rs:30:6: 30:6
    }
}

fn block_verify::<impl at cita-auth/src/block_verify.rs:33:1: 33:25>::verify_quota(_1: &BlockVerify<'_>, _2: u64, _3: &AccountGasLimit, _4: bool) -> bool {
    debug self => _1;                    // in scope 0 at cita-auth/src/block_verify.rs:35:9: 35:14
    debug block_quota_limit => _2;       // in scope 0 at cita-auth/src/block_verify.rs:36:9: 36:26
    debug account_quota_limit => _3;     // in scope 0 at cita-auth/src/block_verify.rs:37:9: 37:28
    debug check_quota => _4;             // in scope 0 at cita-auth/src/block_verify.rs:38:9: 38:20
    let mut _0: bool;                    // return place in scope 0 at cita-auth/src/block_verify.rs:39:10: 39:14
    let _5: u64;                         // in scope 0 at cita-auth/src/block_verify.rs:40:13: 40:24
    let mut _7: &std::collections::HashMap<std::string::String, u64>; // in scope 0 at cita-auth/src/block_verify.rs:41:40: 41:94
    let _8: &std::collections::HashMap<std::string::String, u64>; // in scope 0 at cita-auth/src/block_verify.rs:41:40: 41:86
    let mut _12: std::slice::Iter<'_, libproto::SignedTransaction>; // in scope 0 at cita-auth/src/block_verify.rs:45:19: 45:31
    let mut _13: &[libproto::SignedTransaction]; // in scope 0 at cita-auth/src/block_verify.rs:45:19: 45:31
    let mut _15: std::option::Option<&libproto::SignedTransaction>; // in scope 0 at cita-auth/src/block_verify.rs:45:19: 45:31
    let mut _16: &mut std::slice::Iter<'_, libproto::SignedTransaction>; // in scope 0 at cita-auth/src/block_verify.rs:45:19: 45:31
    let mut _17: isize;                  // in scope 0 at cita-auth/src/block_verify.rs:45:9: 72:10
    let mut _20: &libproto::Transaction; // in scope 0 at cita-auth/src/block_verify.rs:46:25: 46:84
    let _21: &libproto::Transaction;     // in scope 0 at cita-auth/src/block_verify.rs:46:25: 46:72
    let mut _22: &libproto::UnverifiedTransaction; // in scope 0 at cita-auth/src/block_verify.rs:46:25: 46:72
    let _23: &libproto::UnverifiedTransaction; // in scope 0 at cita-auth/src/block_verify.rs:46:25: 46:54
    let _25: &cita_types::H512;          // in scope 0 at cita-auth/src/block_verify.rs:47:44: 47:74
    let _26: cita_types::H512;           // in scope 0 at cita-auth/src/block_verify.rs:47:45: 47:74
    let mut _27: &[u8];                  // in scope 0 at cita-auth/src/block_verify.rs:47:58: 47:73
    let mut _28: bool;                   // in scope 0 at cita-auth/src/block_verify.rs:49:16: 49:41
    let mut _29: u64;                    // in scope 0 at cita-auth/src/block_verify.rs:49:16: 49:33
    let mut _30: u64;                    // in scope 0 at cita-auth/src/block_verify.rs:49:36: 49:41
    let mut _31: bool;                   // in scope 0 at cita-auth/src/block_verify.rs:53:16: 53:92
    let mut _32: bool;                   // in scope 0 at cita-auth/src/block_verify.rs:53:17: 53:92
    let mut _33: &libproto::Transaction; // in scope 0 at cita-auth/src/block_verify.rs:53:44: 53:91
    let _34: &libproto::Transaction;     // in scope 0 at cita-auth/src/block_verify.rs:53:44: 53:91
    let mut _35: &libproto::UnverifiedTransaction; // in scope 0 at cita-auth/src/block_verify.rs:53:44: 53:91
    let _36: &libproto::UnverifiedTransaction; // in scope 0 at cita-auth/src/block_verify.rs:53:44: 53:73
    let mut _38: std::collections::hash_map::Entry<'_, cita_types::H160, u64>; // in scope 0 at cita-auth/src/block_verify.rs:58:29: 58:59
    let mut _39: &mut std::collections::HashMap<cita_types::H160, u64>; // in scope 0 at cita-auth/src/block_verify.rs:58:29: 58:59
    let mut _40: cita_types::H160;       // in scope 0 at cita-auth/src/block_verify.rs:58:52: 58:58
    let mut _41: [closure@cita-auth/src/block_verify.rs:58:75: 58:77]; // in scope 0 at cita-auth/src/block_verify.rs:58:75: 64:18
    let mut _42: &mut std::collections::HashMap<std::string::String, u64>; // in scope 0 at cita-auth/src/block_verify.rs:58:75: 64:18
    let mut _43: &cita_types::H160;      // in scope 0 at cita-auth/src/block_verify.rs:58:75: 64:18
    let mut _44: &u64;                   // in scope 0 at cita-auth/src/block_verify.rs:58:75: 64:18
    let mut _45: bool;                   // in scope 0 at cita-auth/src/block_verify.rs:65:20: 65:34
    let mut _46: u64;                    // in scope 0 at cita-auth/src/block_verify.rs:65:20: 65:26
    let mut _47: u64;                    // in scope 0 at cita-auth/src/block_verify.rs:65:29: 65:34
    let mut _48: u64;                    // in scope 0 at cita-auth/src/block_verify.rs:68:31: 68:36
    let mut _49: (u64, bool);            // in scope 0 at cita-auth/src/block_verify.rs:68:21: 68:36
    let mut _50: u64;                    // in scope 0 at cita-auth/src/block_verify.rs:71:34: 71:39
    let mut _51: (u64, bool);            // in scope 0 at cita-auth/src/block_verify.rs:71:13: 71:39
    scope 1 {
        debug quota_limit => _5;         // in scope 1 at cita-auth/src/block_verify.rs:40:13: 40:24
        let mut _6: std::collections::HashMap<std::string::String, u64>; // in scope 1 at cita-auth/src/block_verify.rs:41:13: 41:37
        scope 2 {
            debug specific_quota_limit => _6; // in scope 2 at cita-auth/src/block_verify.rs:41:13: 41:37
            let mut _9: std::collections::HashMap<cita_types::H160, u64>; // in scope 2 at cita-auth/src/block_verify.rs:42:13: 42:33
            scope 3 {
                debug account_gas_used => _9; // in scope 3 at cita-auth/src/block_verify.rs:42:13: 42:33
                let mut _10: u64;        // in scope 3 at cita-auth/src/block_verify.rs:43:13: 43:34
                scope 4 {
                    debug block_quota_limit => _10; // in scope 4 at cita-auth/src/block_verify.rs:43:13: 43:34
                    let _11: &[libproto::SignedTransaction]; // in scope 4 at cita-auth/src/block_verify.rs:44:13: 44:25
                    scope 5 {
                        debug transactions => _11; // in scope 5 at cita-auth/src/block_verify.rs:44:13: 44:25
                        let mut _14: std::slice::Iter<'_, libproto::SignedTransaction>; // in scope 5 at cita-auth/src/block_verify.rs:45:19: 45:31
                        scope 6 {
                            debug iter => _14; // in scope 6 at cita-auth/src/block_verify.rs:45:19: 45:31
                            let _18: &libproto::SignedTransaction; // in scope 6 at cita-auth/src/block_verify.rs:45:13: 45:15
                            scope 7 {
                                debug tx => _18; // in scope 7 at cita-auth/src/block_verify.rs:45:13: 45:15
                                let _19: u64; // in scope 7 at cita-auth/src/block_verify.rs:46:17: 46:22
                                scope 8 {
                                    debug quota => _19; // in scope 8 at cita-auth/src/block_verify.rs:46:17: 46:22
                                    let _24: cita_types::H160; // in scope 8 at cita-auth/src/block_verify.rs:47:17: 47:23
                                    scope 9 {
                                        debug signer => _24; // in scope 9 at cita-auth/src/block_verify.rs:47:17: 47:23
                                        let _37: &mut u64; // in scope 9 at cita-auth/src/block_verify.rs:58:21: 58:26
                                        scope 10 {
                                            debug value => _37; // in scope 10 at cita-auth/src/block_verify.rs:58:21: 58:26
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _5 = AccountGasLimit::get_common_quota_limit(_3) -> bb1; // scope 0 at cita-auth/src/block_verify.rs:40:27: 40:71
                                         // mir::Constant
                                         // + span: cita-auth/src/block_verify.rs:40:47: 40:69
                                         // + literal: Const { ty: for<'a> fn(&'a AccountGasLimit) -> u64 {AccountGasLimit::get_common_quota_limit}, val: Value(<ZST>) }
    }

    bb1: {
        _8 = AccountGasLimit::get_specific_quota_limit(_3) -> bb2; // scope 1 at cita-auth/src/block_verify.rs:41:40: 41:86
                                         // mir::Constant
                                         // + span: cita-auth/src/block_verify.rs:41:60: 41:84
                                         // + literal: Const { ty: for<'a> fn(&'a AccountGasLimit) -> &'a HashMap<std::string::String, u64> {AccountGasLimit::get_specific_quota_limit}, val: Value(<ZST>) }
    }

    bb2: {
        _7 = _8;                         // scope 1 at cita-auth/src/block_verify.rs:41:40: 41:94
        _6 = <HashMap<std::string::String, u64> as Clone>::clone(move _7) -> bb3; // scope 1 at cita-auth/src/block_verify.rs:41:40: 41:94
                                         // mir::Constant
                                         // + span: cita-auth/src/block_verify.rs:41:87: 41:92
                                         // + literal: Const { ty: for<'a> fn(&'a HashMap<std::string::String, u64>) -> HashMap<std::string::String, u64> {<HashMap<std::string::String, u64> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb3: {
        _9 = HashMap::<H160, u64>::new() -> [return: bb4, unwind: bb38]; // scope 2 at cita-auth/src/block_verify.rs:42:59: 42:73
                                         // mir::Constant
                                         // + span: cita-auth/src/block_verify.rs:42:59: 42:71
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn() -> HashMap<H160, u64> {HashMap::<H160, u64>::new}, val: Value(<ZST>) }
    }

    bb4: {
        _10 = _2;                        // scope 3 at cita-auth/src/block_verify.rs:43:37: 43:54
        _11 = BlockVerify::<'_>::transactions(_1) -> [return: bb5, unwind: bb37]; // scope 4 at cita-auth/src/block_verify.rs:44:28: 44:47
                                         // mir::Constant
                                         // + span: cita-auth/src/block_verify.rs:44:33: 44:45
                                         // + literal: Const { ty: for<'a> fn(&'a BlockVerify<'_>) -> &'a [SignedTransaction] {BlockVerify::<'_>::transactions}, val: Value(<ZST>) }
    }

    bb5: {
        _13 = _11;                       // scope 5 at cita-auth/src/block_verify.rs:45:19: 45:31
        _12 = <&[SignedTransaction] as IntoIterator>::into_iter(move _13) -> [return: bb6, unwind: bb37]; // scope 5 at cita-auth/src/block_verify.rs:45:19: 45:31
                                         // mir::Constant
                                         // + span: cita-auth/src/block_verify.rs:45:19: 45:31
                                         // + literal: Const { ty: fn(&[SignedTransaction]) -> <&[SignedTransaction] as IntoIterator>::IntoIter {<&[SignedTransaction] as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb6: {
        _14 = move _12;                  // scope 5 at cita-auth/src/block_verify.rs:45:19: 45:31
        goto -> bb7;                     // scope 6 at cita-auth/src/block_verify.rs:45:9: 72:10
    }

    bb7: {
        _16 = &mut _14;                  // scope 6 at cita-auth/src/block_verify.rs:45:19: 45:31
        _15 = <std::slice::Iter<'_, SignedTransaction> as Iterator>::next(_16) -> [return: bb8, unwind: bb37]; // scope 6 at cita-auth/src/block_verify.rs:45:19: 45:31
                                         // mir::Constant
                                         // + span: cita-auth/src/block_verify.rs:45:19: 45:31
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::slice::Iter<'_, SignedTransaction>) -> std::option::Option<<std::slice::Iter<'_, SignedTransaction> as Iterator>::Item> {<std::slice::Iter<'_, SignedTransaction> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb8: {
        _17 = discriminant(_15);         // scope 6 at cita-auth/src/block_verify.rs:45:19: 45:31
        switchInt(move _17) -> [0: bb11, 1: bb9, otherwise: bb10]; // scope 6 at cita-auth/src/block_verify.rs:45:19: 45:31
    }

    bb9: {
        _18 = ((_15 as Some).0: &libproto::SignedTransaction); // scope 6 at cita-auth/src/block_verify.rs:45:13: 45:15
        _23 = SignedTransaction::get_transaction_with_sig(_18) -> [return: bb12, unwind: bb37]; // scope 7 at cita-auth/src/block_verify.rs:46:25: 46:54
                                         // mir::Constant
                                         // + span: cita-auth/src/block_verify.rs:46:28: 46:52
                                         // + literal: Const { ty: for<'a> fn(&'a SignedTransaction) -> &'a UnverifiedTransaction {SignedTransaction::get_transaction_with_sig}, val: Value(<ZST>) }
    }

    bb10: {
        unreachable;                     // scope 6 at cita-auth/src/block_verify.rs:45:19: 45:31
    }

    bb11: {
        _0 = const true;                 // scope 5 at cita-auth/src/block_verify.rs:73:9: 73:13
        drop(_9) -> [return: bb33, unwind: bb38]; // scope 2 at cita-auth/src/block_verify.rs:74:5: 74:6
    }

    bb12: {
        _22 = _23;                       // scope 7 at cita-auth/src/block_verify.rs:46:25: 46:72
        _21 = UnverifiedTransaction::get_transaction(move _22) -> [return: bb13, unwind: bb37]; // scope 7 at cita-auth/src/block_verify.rs:46:25: 46:72
                                         // mir::Constant
                                         // + span: cita-auth/src/block_verify.rs:46:55: 46:70
                                         // + literal: Const { ty: for<'a> fn(&'a UnverifiedTransaction) -> &'a Transaction {UnverifiedTransaction::get_transaction}, val: Value(<ZST>) }
    }

    bb13: {
        _20 = _21;                       // scope 7 at cita-auth/src/block_verify.rs:46:25: 46:84
        _19 = Transaction::get_quota(move _20) -> [return: bb14, unwind: bb37]; // scope 7 at cita-auth/src/block_verify.rs:46:25: 46:84
                                         // mir::Constant
                                         // + span: cita-auth/src/block_verify.rs:46:73: 46:82
                                         // + literal: Const { ty: for<'a> fn(&'a Transaction) -> u64 {Transaction::get_quota}, val: Value(<ZST>) }
    }

    bb14: {
        _27 = SignedTransaction::get_signer(_18) -> [return: bb15, unwind: bb37]; // scope 8 at cita-auth/src/block_verify.rs:47:58: 47:73
                                         // mir::Constant
                                         // + span: cita-auth/src/block_verify.rs:47:61: 47:71
                                         // + literal: Const { ty: for<'a> fn(&'a SignedTransaction) -> &'a [u8] {SignedTransaction::get_signer}, val: Value(<ZST>) }
    }

    bb15: {
        _26 = <H512 as From<&[u8]>>::from(move _27) -> [return: bb16, unwind: bb37]; // scope 8 at cita-auth/src/block_verify.rs:47:45: 47:74
                                         // mir::Constant
                                         // + span: cita-auth/src/block_verify.rs:47:45: 47:57
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(&[u8]) -> H512 {<H512 as From<&[u8]>>::from}, val: Value(<ZST>) }
    }

    bb16: {
        _25 = &_26;                      // scope 8 at cita-auth/src/block_verify.rs:47:44: 47:74
        _24 = pubkey_to_address(_25) -> [return: bb17, unwind: bb37]; // scope 8 at cita-auth/src/block_verify.rs:47:26: 47:75
                                         // mir::Constant
                                         // + span: cita-auth/src/block_verify.rs:47:26: 47:43
                                         // + literal: Const { ty: for<'a> fn(&'a H512) -> H160 {pubkey_to_address}, val: Value(<ZST>) }
    }

    bb17: {
        _29 = _10;                       // scope 9 at cita-auth/src/block_verify.rs:49:16: 49:33
        _30 = _19;                       // scope 9 at cita-auth/src/block_verify.rs:49:36: 49:41
        _28 = Lt(move _29, move _30);    // scope 9 at cita-auth/src/block_verify.rs:49:16: 49:41
        switchInt(move _28) -> [0: bb19, otherwise: bb18]; // scope 9 at cita-auth/src/block_verify.rs:49:16: 49:41
    }

    bb18: {
        _0 = const false;                // scope 9 at cita-auth/src/block_verify.rs:50:24: 50:29
        goto -> bb34;                    // scope 9 at no-location
    }

    bb19: {
        _36 = SignedTransaction::get_transaction_with_sig(_18) -> [return: bb20, unwind: bb37]; // scope 9 at cita-auth/src/block_verify.rs:53:44: 53:73
                                         // mir::Constant
                                         // + span: cita-auth/src/block_verify.rs:53:47: 53:71
                                         // + literal: Const { ty: for<'a> fn(&'a SignedTransaction) -> &'a UnverifiedTransaction {SignedTransaction::get_transaction_with_sig}, val: Value(<ZST>) }
    }

    bb20: {
        _35 = _36;                       // scope 9 at cita-auth/src/block_verify.rs:53:44: 53:91
        _34 = UnverifiedTransaction::get_transaction(move _35) -> [return: bb21, unwind: bb37]; // scope 9 at cita-auth/src/block_verify.rs:53:44: 53:91
                                         // mir::Constant
                                         // + span: cita-auth/src/block_verify.rs:53:74: 53:89
                                         // + literal: Const { ty: for<'a> fn(&'a UnverifiedTransaction) -> &'a Transaction {UnverifiedTransaction::get_transaction}, val: Value(<ZST>) }
    }

    bb21: {
        _33 = _34;                       // scope 9 at cita-auth/src/block_verify.rs:53:44: 53:91
        _32 = verify_base_quota_required(move _33) -> [return: bb22, unwind: bb37]; // scope 9 at cita-auth/src/block_verify.rs:53:17: 53:92
                                         // mir::Constant
                                         // + span: cita-auth/src/block_verify.rs:53:17: 53:43
                                         // + literal: Const { ty: for<'a> fn(&'a Transaction) -> bool {verify_base_quota_required}, val: Value(<ZST>) }
    }

    bb22: {
        _31 = Not(move _32);             // scope 9 at cita-auth/src/block_verify.rs:53:16: 53:92
        switchInt(move _31) -> [0: bb24, otherwise: bb23]; // scope 9 at cita-auth/src/block_verify.rs:53:16: 53:92
    }

    bb23: {
        _0 = const false;                // scope 9 at cita-auth/src/block_verify.rs:54:24: 54:29
        goto -> bb34;                    // scope 9 at no-location
    }

    bb24: {
        switchInt(_4) -> [0: bb31, otherwise: bb25]; // scope 9 at cita-auth/src/block_verify.rs:57:16: 57:27
    }

    bb25: {
        _39 = &mut _9;                   // scope 9 at cita-auth/src/block_verify.rs:58:29: 58:59
        _40 = _24;                       // scope 9 at cita-auth/src/block_verify.rs:58:52: 58:58
        _38 = HashMap::<H160, u64>::entry(move _39, move _40) -> [return: bb26, unwind: bb37]; // scope 9 at cita-auth/src/block_verify.rs:58:29: 58:59
                                         // mir::Constant
                                         // + span: cita-auth/src/block_verify.rs:58:46: 58:51
                                         // + literal: Const { ty: for<'a> fn(&'a mut HashMap<H160, u64>, H160) -> std::collections::hash_map::Entry<'a, H160, u64> {HashMap::<H160, u64>::entry}, val: Value(<ZST>) }
    }

    bb26: {
        _42 = &mut _6;                   // scope 9 at cita-auth/src/block_verify.rs:58:75: 64:18
        _43 = &_24;                      // scope 9 at cita-auth/src/block_verify.rs:58:75: 64:18
        _44 = &_5;                       // scope 9 at cita-auth/src/block_verify.rs:58:75: 64:18
        _41 = [closure@cita-auth/src/block_verify.rs:58:75: 58:77] { specific_quota_limit: move _42, signer: move _43, quota_limit: move _44 }; // scope 9 at cita-auth/src/block_verify.rs:58:75: 64:18
                                         // closure
                                         // + def_id: DefId(0:108 ~ cita_auth[81d6]::block_verify::{impl#1}::verify_quota::{closure#0})
                                         // + substs: [
                                         //     ReErased,
                                         //     i32,
                                         //     extern "rust-call" fn(()) -> u64,
                                         //     (&mut std::collections::HashMap<std::string::String, u64>, &cita_types::H160, &u64),
                                         // ]
        _37 = std::collections::hash_map::Entry::<'_, H160, u64>::or_insert_with::<[closure@cita-auth/src/block_verify.rs:58:75: 58:77]>(move _38, move _41) -> [return: bb27, unwind: bb37]; // scope 9 at cita-auth/src/block_verify.rs:58:29: 64:19
                                         // mir::Constant
                                         // + span: cita-auth/src/block_verify.rs:58:60: 58:74
                                         // + literal: Const { ty: fn(std::collections::hash_map::Entry<'_, H160, u64>, [closure@cita-auth/src/block_verify.rs:58:75: 58:77]) -> &mut u64 {std::collections::hash_map::Entry::<'_, H160, u64>::or_insert_with::<[closure@cita-auth/src/block_verify.rs:58:75: 58:77]>}, val: Value(<ZST>) }
    }

    bb27: {
        _46 = (*_37);                    // scope 10 at cita-auth/src/block_verify.rs:65:20: 65:26
        _47 = _19;                       // scope 10 at cita-auth/src/block_verify.rs:65:29: 65:34
        _45 = Lt(move _46, move _47);    // scope 10 at cita-auth/src/block_verify.rs:65:20: 65:34
        switchInt(move _45) -> [0: bb29, otherwise: bb28]; // scope 10 at cita-auth/src/block_verify.rs:65:20: 65:34
    }

    bb28: {
        _0 = const false;                // scope 10 at cita-auth/src/block_verify.rs:66:28: 66:33
        goto -> bb34;                    // scope 9 at no-location
    }

    bb29: {
        _48 = _19;                       // scope 10 at cita-auth/src/block_verify.rs:68:31: 68:36
        _49 = CheckedSub((*_37), _48);   // scope 10 at cita-auth/src/block_verify.rs:68:21: 68:36
        assert(!move (_49.1: bool), "attempt to compute `{} - {}`, which would overflow", (*_37), move _48) -> [success: bb30, unwind: bb37]; // scope 10 at cita-auth/src/block_verify.rs:68:21: 68:36
    }

    bb30: {
        (*_37) = move (_49.0: u64);      // scope 10 at cita-auth/src/block_verify.rs:68:21: 68:36
        goto -> bb31;                    // scope 9 at cita-auth/src/block_verify.rs:57:13: 70:14
    }

    bb31: {
        _50 = _19;                       // scope 9 at cita-auth/src/block_verify.rs:71:34: 71:39
        _51 = CheckedSub(_10, _50);      // scope 9 at cita-auth/src/block_verify.rs:71:13: 71:39
        assert(!move (_51.1: bool), "attempt to compute `{} - {}`, which would overflow", _10, move _50) -> [success: bb32, unwind: bb37]; // scope 9 at cita-auth/src/block_verify.rs:71:13: 71:39
    }

    bb32: {
        _10 = move (_51.0: u64);         // scope 9 at cita-auth/src/block_verify.rs:71:13: 71:39
        goto -> bb7;                     // scope 6 at cita-auth/src/block_verify.rs:45:9: 72:10
    }

    bb33: {
        drop(_6) -> bb36;                // scope 1 at cita-auth/src/block_verify.rs:74:5: 74:6
    }

    bb34: {
        drop(_9) -> [return: bb35, unwind: bb38]; // scope 2 at cita-auth/src/block_verify.rs:74:5: 74:6
    }

    bb35: {
        drop(_6) -> bb36;                // scope 1 at cita-auth/src/block_verify.rs:74:5: 74:6
    }

    bb36: {
        return;                          // scope 0 at cita-auth/src/block_verify.rs:74:6: 74:6
    }

    bb37 (cleanup): {
        drop(_9) -> bb38;                // scope 2 at cita-auth/src/block_verify.rs:74:5: 74:6
    }

    bb38 (cleanup): {
        drop(_6) -> bb39;                // scope 1 at cita-auth/src/block_verify.rs:74:5: 74:6
    }

    bb39 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/block_verify.rs:34:5: 74:6
    }
}

fn block_verify::<impl at cita-auth/src/block_verify.rs:33:1: 33:25>::verify_quota::{closure#0}(_1: [closure@cita-auth/src/block_verify.rs:58:75: 58:77]) -> u64 {
    debug specific_quota_limit => (*(_1.0: &mut std::collections::HashMap<std::string::String, u64>)); // in scope 0 at cita-auth/src/block_verify.rs:41:17: 41:37
    debug signer => (*(_1.1: &cita_types::H160)); // in scope 0 at cita-auth/src/block_verify.rs:47:17: 47:23
    debug quota_limit => (*(_1.2: &u64)); // in scope 0 at cita-auth/src/block_verify.rs:40:13: 40:24
    let mut _0: u64;                     // return place in scope 0 at cita-auth/src/block_verify.rs:58:78: 58:78
    let mut _2: std::option::Option<u64>; // in scope 0 at cita-auth/src/block_verify.rs:59:42: 59:90
    let _3: &std::string::String;        // in scope 0 at cita-auth/src/block_verify.rs:59:70: 59:89
    let _4: std::string::String;         // in scope 0 at cita-auth/src/block_verify.rs:59:71: 59:89
    let mut _5: isize;                   // in scope 0 at cita-auth/src/block_verify.rs:59:28: 59:39
    let mut _7: &mut std::collections::HashMap<std::string::String, u64>; // in scope 0 at cita-auth/src/block_verify.rs:58:75: 64:18
    let mut _8: &cita_types::H160;       // in scope 0 at cita-auth/src/block_verify.rs:58:75: 64:18
    let mut _9: &u64;                    // in scope 0 at cita-auth/src/block_verify.rs:58:75: 64:18
    scope 1 {
        debug value => _6;               // in scope 1 at cita-auth/src/block_verify.rs:59:33: 59:38
        let _6: u64;                     // in scope 1 at cita-auth/src/block_verify.rs:59:33: 59:38
    }

    bb0: {
        _7 = deref_copy (_1.0: &mut std::collections::HashMap<std::string::String, u64>); // scope 1 at cita-auth/src/block_verify.rs:59:42: 59:90
        _8 = deref_copy (_1.1: &cita_types::H160); // scope 1 at cita-auth/src/block_verify.rs:59:71: 59:89
        _4 = <H160 as cita_types::traits::LowerHex>::lower_hex(_8) -> bb1; // scope 1 at cita-auth/src/block_verify.rs:59:71: 59:89
                                         // mir::Constant
                                         // + span: cita-auth/src/block_verify.rs:59:78: 59:87
                                         // + literal: Const { ty: for<'a> fn(&'a H160) -> std::string::String {<H160 as cita_types::traits::LowerHex>::lower_hex}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = &_4;                        // scope 1 at cita-auth/src/block_verify.rs:59:70: 59:89
        _2 = HashMap::<std::string::String, u64>::remove::<std::string::String>(_7, _3) -> [return: bb2, unwind: bb7]; // scope 1 at cita-auth/src/block_verify.rs:59:42: 59:90
                                         // mir::Constant
                                         // + span: cita-auth/src/block_verify.rs:59:63: 59:69
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut HashMap<std::string::String, u64>, &'b std::string::String) -> std::option::Option<u64> {HashMap::<std::string::String, u64>::remove::<std::string::String>}, val: Value(<ZST>) }
    }

    bb2: {
        _5 = discriminant(_2);           // scope 1 at cita-auth/src/block_verify.rs:59:28: 59:39
        switchInt(move _5) -> [1: bb3, otherwise: bb4]; // scope 1 at cita-auth/src/block_verify.rs:59:28: 59:39
    }

    bb3: {
        _6 = ((_2 as Some).0: u64);      // scope 1 at cita-auth/src/block_verify.rs:59:33: 59:38
        _0 = _6;                         // scope 1 at cita-auth/src/block_verify.rs:60:25: 60:30
        goto -> bb5;                     // scope 0 at cita-auth/src/block_verify.rs:59:21: 63:22
    }

    bb4: {
        _9 = deref_copy (_1.2: &u64);    // scope 0 at cita-auth/src/block_verify.rs:62:25: 62:36
        _0 = (*_9);                      // scope 0 at cita-auth/src/block_verify.rs:62:25: 62:36
        goto -> bb5;                     // scope 0 at cita-auth/src/block_verify.rs:59:21: 63:22
    }

    bb5: {
        drop(_4) -> bb6;                 // scope 0 at cita-auth/src/block_verify.rs:64:17: 64:18
    }

    bb6: {
        return;                          // scope 0 at cita-auth/src/block_verify.rs:64:18: 64:18
    }

    bb7 (cleanup): {
        drop(_4) -> bb8;                 // scope 0 at cita-auth/src/block_verify.rs:64:17: 64:18
    }

    bb8 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/block_verify.rs:58:75: 64:18
    }
}

fn block_verify::<impl at cita-auth/src/block_verify.rs:33:1: 33:25>::verify_version() -> bool {
    let mut _0: bool;                    // return place in scope 0 at cita-auth/src/block_verify.rs:76:32: 76:36
    let _1: !;                           // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:706:9: 706:52

    bb0: {
        _1 = core::panicking::panic(const "not implemented"); // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:706:9: 706:52
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:706:9: 706:33
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:706:34: 706:51
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }
}

fn block_verify::<impl at cita-auth/src/block_verify.rs:33:1: 33:25>::verify_valid_until_block() -> bool {
    let mut _0: bool;                    // return place in scope 0 at cita-auth/src/block_verify.rs:80:42: 80:46
    let _1: !;                           // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:706:9: 706:52

    bb0: {
        _1 = core::panicking::panic(const "not implemented"); // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:706:9: 706:52
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:706:9: 706:33
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:706:34: 706:51
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }
}

fn block_verify::<impl at cita-auth/src/block_verify.rs:33:1: 33:25>::verify_emergency_intervention() -> bool {
    let mut _0: bool;                    // return place in scope 0 at cita-auth/src/block_verify.rs:84:47: 84:51
    let mut _1: !;                       // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:706:9: 706:52

    bb0: {
        _1 = core::panicking::panic(const "not implemented"); // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:706:9: 706:52
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:706:9: 706:33
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:706:34: 706:51
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }
}

fn config::<impl at cita-auth/src/config.rs:15:10: 15:15>::fmt(_1: &config::Config, _2: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at cita-auth/src/config.rs:15:10: 15:15
    debug f => _2;                       // in scope 0 at cita-auth/src/config.rs:15:10: 15:15
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at cita-auth/src/config.rs:15:10: 15:15
    let _4: &[&dyn std::fmt::Debug; 8];  // in scope 0 at cita-auth/src/config.rs:15:10: 15:15
    let _5: [&dyn std::fmt::Debug; 8];   // in scope 0 at cita-auth/src/config.rs:15:10: 15:15
    let mut _6: &dyn std::fmt::Debug;    // in scope 0 at cita-auth/src/config.rs:17:5: 17:31
    let _7: &usize;                      // in scope 0 at cita-auth/src/config.rs:17:5: 17:31
    let mut _8: &dyn std::fmt::Debug;    // in scope 0 at cita-auth/src/config.rs:18:5: 18:29
    let _9: &u64;                        // in scope 0 at cita-auth/src/config.rs:18:5: 18:29
    let mut _10: &dyn std::fmt::Debug;   // in scope 0 at cita-auth/src/config.rs:19:5: 19:36
    let _11: &usize;                     // in scope 0 at cita-auth/src/config.rs:19:5: 19:36
    let mut _12: &dyn std::fmt::Debug;   // in scope 0 at cita-auth/src/config.rs:20:5: 20:36
    let _13: &usize;                     // in scope 0 at cita-auth/src/config.rs:20:5: 20:36
    let mut _14: &dyn std::fmt::Debug;   // in scope 0 at cita-auth/src/config.rs:21:5: 21:29
    let _15: &usize;                     // in scope 0 at cita-auth/src/config.rs:21:5: 21:29
    let mut _16: &dyn std::fmt::Debug;   // in scope 0 at cita-auth/src/config.rs:22:5: 22:25
    let _17: &bool;                      // in scope 0 at cita-auth/src/config.rs:22:5: 22:25
    let mut _18: &dyn std::fmt::Debug;   // in scope 0 at cita-auth/src/config.rs:23:5: 23:24
    let _19: &u64;                       // in scope 0 at cita-auth/src/config.rs:23:5: 23:24
    let mut _20: &dyn std::fmt::Debug;   // in scope 0 at cita-auth/src/config.rs:24:5: 24:27
    let _21: &&u64;                      // in scope 0 at cita-auth/src/config.rs:24:5: 24:27
    let _22: &u64;                       // in scope 0 at cita-auth/src/config.rs:24:5: 24:27
    let _23: &str;                       // in scope 0 at cita-auth/src/config.rs:15:10: 15:15
    let mut _24: &[&str];                // in scope 0 at cita-auth/src/config.rs:15:10: 15:15
    let mut _25: &[&str; 8];             // in scope 0 at cita-auth/src/config.rs:15:10: 15:15
    scope 1 {
        debug names => _25;              // in scope 1 at cita-auth/src/config.rs:15:10: 15:15
        let _3: &[&dyn std::fmt::Debug]; // in scope 1 at cita-auth/src/config.rs:15:10: 15:15
        scope 2 {
            debug values => _3;          // in scope 2 at cita-auth/src/config.rs:15:10: 15:15
        }
    }

    bb0: {
        _25 = const _;                   // scope 0 at cita-auth/src/config.rs:15:10: 15:15
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:10: 15:15
                                         // + literal: Const { ty: &[&str; 8], val: Unevaluated(<config::Config as Debug>::fmt, [], Some(promoted[0])) }
        _7 = &((*_1).0: usize);          // scope 1 at cita-auth/src/config.rs:17:5: 17:31
        _6 = _7 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at cita-auth/src/config.rs:17:5: 17:31
        _9 = &((*_1).1: u64);            // scope 1 at cita-auth/src/config.rs:18:5: 18:29
        _8 = _9 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at cita-auth/src/config.rs:18:5: 18:29
        _11 = &((*_1).2: usize);         // scope 1 at cita-auth/src/config.rs:19:5: 19:36
        _10 = _11 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at cita-auth/src/config.rs:19:5: 19:36
        _13 = &((*_1).3: usize);         // scope 1 at cita-auth/src/config.rs:20:5: 20:36
        _12 = _13 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at cita-auth/src/config.rs:20:5: 20:36
        _15 = &((*_1).4: usize);         // scope 1 at cita-auth/src/config.rs:21:5: 21:29
        _14 = _15 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at cita-auth/src/config.rs:21:5: 21:29
        _17 = &((*_1).5: bool);          // scope 1 at cita-auth/src/config.rs:22:5: 22:25
        _16 = _17 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at cita-auth/src/config.rs:22:5: 22:25
        _19 = &((*_1).6: u64);           // scope 1 at cita-auth/src/config.rs:23:5: 23:24
        _18 = _19 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at cita-auth/src/config.rs:23:5: 23:24
        _22 = &((*_1).7: u64);           // scope 1 at cita-auth/src/config.rs:24:5: 24:27
        _21 = &_22;                      // scope 1 at cita-auth/src/config.rs:24:5: 24:27
        _20 = _21 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at cita-auth/src/config.rs:24:5: 24:27
        _5 = [move _6, move _8, move _10, move _12, move _14, move _16, move _18, move _20]; // scope 1 at cita-auth/src/config.rs:15:10: 15:15
        _4 = &_5;                        // scope 1 at cita-auth/src/config.rs:15:10: 15:15
        _3 = _4 as &[&dyn std::fmt::Debug] (Pointer(Unsize)); // scope 1 at cita-auth/src/config.rs:15:10: 15:15
        _23 = const "Config";            // scope 2 at cita-auth/src/config.rs:15:10: 15:15
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:10: 15:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _24 = _25 as &[&str] (Pointer(Unsize)); // scope 2 at cita-auth/src/config.rs:15:10: 15:15
        _0 = std::fmt::Formatter::<'_>::debug_struct_fields_finish(_2, _23, move _24, _3) -> bb1; // scope 2 at cita-auth/src/config.rs:15:10: 15:15
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:10: 15:15
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'b, 'a, 'c, 'd, 'e, 'f> fn(&'b mut std::fmt::Formatter<'_>, &'a str, &'c [&'d str], &'e [&'f (dyn Debug + 'f)]) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::debug_struct_fields_finish}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-auth/src/config.rs:15:15: 15:15
    }
}

promoted[0] in config::<impl at cita-auth/src/config.rs:15:10: 15:15>::fmt: &[&str; 8] = {
    let mut _0: &[&str; 8];              // return place in scope 0 at cita-auth/src/config.rs:15:10: 15:15
    let mut _1: [&str; 8];               // in scope 0 at cita-auth/src/config.rs:15:10: 15:15
    let mut _2: &str;                    // in scope 0 at cita-auth/src/config.rs:18:5: 18:29
    let mut _3: &str;                    // in scope 0 at cita-auth/src/config.rs:18:5: 18:29
    let mut _4: &str;                    // in scope 0 at cita-auth/src/config.rs:19:5: 19:36
    let mut _5: &str;                    // in scope 0 at cita-auth/src/config.rs:19:5: 19:36
    let mut _6: &str;                    // in scope 0 at cita-auth/src/config.rs:20:5: 20:36
    let mut _7: &str;                    // in scope 0 at cita-auth/src/config.rs:20:5: 20:36
    let mut _8: &str;                    // in scope 0 at cita-auth/src/config.rs:21:5: 21:29
    let mut _9: &str;                    // in scope 0 at cita-auth/src/config.rs:21:5: 21:29
    let mut _10: &str;                   // in scope 0 at cita-auth/src/config.rs:22:5: 22:25
    let mut _11: &str;                   // in scope 0 at cita-auth/src/config.rs:22:5: 22:25
    let mut _12: &str;                   // in scope 0 at cita-auth/src/config.rs:23:5: 23:24
    let mut _13: &str;                   // in scope 0 at cita-auth/src/config.rs:23:5: 23:24
    let mut _14: &str;                   // in scope 0 at cita-auth/src/config.rs:24:5: 24:27
    let mut _15: &str;                   // in scope 0 at cita-auth/src/config.rs:24:5: 24:27

    bb0: {
        _3 = const "buffer_duration";    // scope 0 at cita-auth/src/config.rs:18:5: 18:29
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:18:5: 18:29
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at cita-auth/src/config.rs:18:5: 18:29
        _5 = const "tx_verify_thread_num"; // scope 0 at cita-auth/src/config.rs:19:5: 19:36
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:19:5: 19:36
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at cita-auth/src/config.rs:19:5: 19:36
        _7 = const "tx_verify_cache_size"; // scope 0 at cita-auth/src/config.rs:20:5: 20:36
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:20:5: 20:36
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/config.rs:20:5: 20:36
        _9 = const "tx_pool_limit";      // scope 0 at cita-auth/src/config.rs:21:5: 21:29
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:21:5: 21:29
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _8 = &(*_9);                     // scope 0 at cita-auth/src/config.rs:21:5: 21:29
        _11 = const "wal_enable";        // scope 0 at cita-auth/src/config.rs:22:5: 22:25
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:22:5: 22:25
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _10 = &(*_11);                   // scope 0 at cita-auth/src/config.rs:22:5: 22:25
        _13 = const "prof_start";        // scope 0 at cita-auth/src/config.rs:23:5: 23:24
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:23:5: 23:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _12 = &(*_13);                   // scope 0 at cita-auth/src/config.rs:23:5: 23:24
        _15 = const "prof_duration";     // scope 0 at cita-auth/src/config.rs:24:5: 24:27
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:24:5: 24:27
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _14 = &(*_15);                   // scope 0 at cita-auth/src/config.rs:24:5: 24:27
        _1 = [const "count_per_batch", move _2, move _4, move _6, move _8, move _10, move _12, move _14]; // scope 0 at cita-auth/src/config.rs:15:10: 15:15
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:17:5: 17:31
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/config.rs:15:10: 15:15
        return;                          // scope 0 at cita-auth/src/config.rs:15:10: 15:15
    }
}

fn config::<impl at cita-auth/src/config.rs:15:17: 15:26>::eq(_1: &config::Config, _2: &config::Config) -> bool {
    debug self => _1;                    // in scope 0 at cita-auth/src/config.rs:15:17: 15:26
    debug other => _2;                   // in scope 0 at cita-auth/src/config.rs:15:17: 15:26
    let mut _0: bool;                    // return place in scope 0 at cita-auth/src/config.rs:15:17: 15:26
    let mut _3: bool;                    // in scope 0 at cita-auth/src/config.rs:23:5: 23:24
    let mut _4: bool;                    // in scope 0 at cita-auth/src/config.rs:22:5: 22:25
    let mut _5: bool;                    // in scope 0 at cita-auth/src/config.rs:21:5: 21:29
    let mut _6: bool;                    // in scope 0 at cita-auth/src/config.rs:20:5: 20:36
    let mut _7: bool;                    // in scope 0 at cita-auth/src/config.rs:19:5: 19:36
    let mut _8: bool;                    // in scope 0 at cita-auth/src/config.rs:18:5: 18:29
    let mut _9: bool;                    // in scope 0 at cita-auth/src/config.rs:17:5: 17:31
    let mut _10: usize;                  // in scope 0 at cita-auth/src/config.rs:17:5: 17:31
    let mut _11: usize;                  // in scope 0 at cita-auth/src/config.rs:17:5: 17:31
    let mut _12: bool;                   // in scope 0 at cita-auth/src/config.rs:18:5: 18:29
    let mut _13: u64;                    // in scope 0 at cita-auth/src/config.rs:18:5: 18:29
    let mut _14: u64;                    // in scope 0 at cita-auth/src/config.rs:18:5: 18:29
    let mut _15: bool;                   // in scope 0 at cita-auth/src/config.rs:19:5: 19:36
    let mut _16: usize;                  // in scope 0 at cita-auth/src/config.rs:19:5: 19:36
    let mut _17: usize;                  // in scope 0 at cita-auth/src/config.rs:19:5: 19:36
    let mut _18: bool;                   // in scope 0 at cita-auth/src/config.rs:20:5: 20:36
    let mut _19: usize;                  // in scope 0 at cita-auth/src/config.rs:20:5: 20:36
    let mut _20: usize;                  // in scope 0 at cita-auth/src/config.rs:20:5: 20:36
    let mut _21: bool;                   // in scope 0 at cita-auth/src/config.rs:21:5: 21:29
    let mut _22: usize;                  // in scope 0 at cita-auth/src/config.rs:21:5: 21:29
    let mut _23: usize;                  // in scope 0 at cita-auth/src/config.rs:21:5: 21:29
    let mut _24: bool;                   // in scope 0 at cita-auth/src/config.rs:22:5: 22:25
    let mut _25: bool;                   // in scope 0 at cita-auth/src/config.rs:22:5: 22:25
    let mut _26: bool;                   // in scope 0 at cita-auth/src/config.rs:22:5: 22:25
    let mut _27: bool;                   // in scope 0 at cita-auth/src/config.rs:23:5: 23:24
    let mut _28: u64;                    // in scope 0 at cita-auth/src/config.rs:23:5: 23:24
    let mut _29: u64;                    // in scope 0 at cita-auth/src/config.rs:23:5: 23:24
    let mut _30: bool;                   // in scope 0 at cita-auth/src/config.rs:24:5: 24:27
    let mut _31: u64;                    // in scope 0 at cita-auth/src/config.rs:24:5: 24:27
    let mut _32: u64;                    // in scope 0 at cita-auth/src/config.rs:24:5: 24:27

    bb0: {
        _10 = ((*_1).0: usize);          // scope 0 at cita-auth/src/config.rs:17:5: 17:31
        _11 = ((*_2).0: usize);          // scope 0 at cita-auth/src/config.rs:17:5: 17:31
        _9 = Eq(move _10, move _11);     // scope 0 at cita-auth/src/config.rs:17:5: 17:31
        switchInt(move _9) -> [0: bb19, otherwise: bb20]; // scope 0 at cita-auth/src/config.rs:18:5: 18:29
    }

    bb1: {
        _0 = const false;                // scope 0 at cita-auth/src/config.rs:24:5: 24:27
        goto -> bb3;                     // scope 0 at cita-auth/src/config.rs:24:5: 24:27
    }

    bb2: {
        _31 = ((*_1).7: u64);            // scope 0 at cita-auth/src/config.rs:24:5: 24:27
        _32 = ((*_2).7: u64);            // scope 0 at cita-auth/src/config.rs:24:5: 24:27
        _30 = Eq(move _31, move _32);    // scope 0 at cita-auth/src/config.rs:24:5: 24:27
        _0 = move _30;                   // scope 0 at cita-auth/src/config.rs:24:5: 24:27
        goto -> bb3;                     // scope 0 at cita-auth/src/config.rs:24:5: 24:27
    }

    bb3: {
        return;                          // scope 0 at cita-auth/src/config.rs:15:26: 15:26
    }

    bb4: {
        _3 = const false;                // scope 0 at cita-auth/src/config.rs:23:5: 23:24
        goto -> bb6;                     // scope 0 at cita-auth/src/config.rs:23:5: 23:24
    }

    bb5: {
        _28 = ((*_1).6: u64);            // scope 0 at cita-auth/src/config.rs:23:5: 23:24
        _29 = ((*_2).6: u64);            // scope 0 at cita-auth/src/config.rs:23:5: 23:24
        _27 = Eq(move _28, move _29);    // scope 0 at cita-auth/src/config.rs:23:5: 23:24
        _3 = move _27;                   // scope 0 at cita-auth/src/config.rs:23:5: 23:24
        goto -> bb6;                     // scope 0 at cita-auth/src/config.rs:23:5: 23:24
    }

    bb6: {
        switchInt(move _3) -> [0: bb1, otherwise: bb2]; // scope 0 at cita-auth/src/config.rs:24:5: 24:27
    }

    bb7: {
        _4 = const false;                // scope 0 at cita-auth/src/config.rs:22:5: 22:25
        goto -> bb9;                     // scope 0 at cita-auth/src/config.rs:22:5: 22:25
    }

    bb8: {
        _25 = ((*_1).5: bool);           // scope 0 at cita-auth/src/config.rs:22:5: 22:25
        _26 = ((*_2).5: bool);           // scope 0 at cita-auth/src/config.rs:22:5: 22:25
        _24 = Eq(move _25, move _26);    // scope 0 at cita-auth/src/config.rs:22:5: 22:25
        _4 = move _24;                   // scope 0 at cita-auth/src/config.rs:22:5: 22:25
        goto -> bb9;                     // scope 0 at cita-auth/src/config.rs:22:5: 22:25
    }

    bb9: {
        switchInt(move _4) -> [0: bb4, otherwise: bb5]; // scope 0 at cita-auth/src/config.rs:23:5: 23:24
    }

    bb10: {
        _5 = const false;                // scope 0 at cita-auth/src/config.rs:21:5: 21:29
        goto -> bb12;                    // scope 0 at cita-auth/src/config.rs:21:5: 21:29
    }

    bb11: {
        _22 = ((*_1).4: usize);          // scope 0 at cita-auth/src/config.rs:21:5: 21:29
        _23 = ((*_2).4: usize);          // scope 0 at cita-auth/src/config.rs:21:5: 21:29
        _21 = Eq(move _22, move _23);    // scope 0 at cita-auth/src/config.rs:21:5: 21:29
        _5 = move _21;                   // scope 0 at cita-auth/src/config.rs:21:5: 21:29
        goto -> bb12;                    // scope 0 at cita-auth/src/config.rs:21:5: 21:29
    }

    bb12: {
        switchInt(move _5) -> [0: bb7, otherwise: bb8]; // scope 0 at cita-auth/src/config.rs:22:5: 22:25
    }

    bb13: {
        _6 = const false;                // scope 0 at cita-auth/src/config.rs:20:5: 20:36
        goto -> bb15;                    // scope 0 at cita-auth/src/config.rs:20:5: 20:36
    }

    bb14: {
        _19 = ((*_1).3: usize);          // scope 0 at cita-auth/src/config.rs:20:5: 20:36
        _20 = ((*_2).3: usize);          // scope 0 at cita-auth/src/config.rs:20:5: 20:36
        _18 = Eq(move _19, move _20);    // scope 0 at cita-auth/src/config.rs:20:5: 20:36
        _6 = move _18;                   // scope 0 at cita-auth/src/config.rs:20:5: 20:36
        goto -> bb15;                    // scope 0 at cita-auth/src/config.rs:20:5: 20:36
    }

    bb15: {
        switchInt(move _6) -> [0: bb10, otherwise: bb11]; // scope 0 at cita-auth/src/config.rs:21:5: 21:29
    }

    bb16: {
        _7 = const false;                // scope 0 at cita-auth/src/config.rs:19:5: 19:36
        goto -> bb18;                    // scope 0 at cita-auth/src/config.rs:19:5: 19:36
    }

    bb17: {
        _16 = ((*_1).2: usize);          // scope 0 at cita-auth/src/config.rs:19:5: 19:36
        _17 = ((*_2).2: usize);          // scope 0 at cita-auth/src/config.rs:19:5: 19:36
        _15 = Eq(move _16, move _17);    // scope 0 at cita-auth/src/config.rs:19:5: 19:36
        _7 = move _15;                   // scope 0 at cita-auth/src/config.rs:19:5: 19:36
        goto -> bb18;                    // scope 0 at cita-auth/src/config.rs:19:5: 19:36
    }

    bb18: {
        switchInt(move _7) -> [0: bb13, otherwise: bb14]; // scope 0 at cita-auth/src/config.rs:20:5: 20:36
    }

    bb19: {
        _8 = const false;                // scope 0 at cita-auth/src/config.rs:18:5: 18:29
        goto -> bb21;                    // scope 0 at cita-auth/src/config.rs:18:5: 18:29
    }

    bb20: {
        _13 = ((*_1).1: u64);            // scope 0 at cita-auth/src/config.rs:18:5: 18:29
        _14 = ((*_2).1: u64);            // scope 0 at cita-auth/src/config.rs:18:5: 18:29
        _12 = Eq(move _13, move _14);    // scope 0 at cita-auth/src/config.rs:18:5: 18:29
        _8 = move _12;                   // scope 0 at cita-auth/src/config.rs:18:5: 18:29
        goto -> bb21;                    // scope 0 at cita-auth/src/config.rs:18:5: 18:29
    }

    bb21: {
        switchInt(move _8) -> [0: bb16, otherwise: bb17]; // scope 0 at cita-auth/src/config.rs:19:5: 19:36
    }
}

const _IMPL_DESERIALIZE_FOR_Config: () = {
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/config.rs:15:28: 15:39

    bb0: {
        _0 = const ();                   // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        return;                          // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }
}

fn _IMPL_DESERIALIZE_FOR_Config::<impl at cita-auth/src/config.rs:15:28: 15:39>::deserialize(_1: __D) -> Result<config::Config, <__D as _serde::Deserializer<'_>>::Error> {
    debug __deserializer => _1;          // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _0: std::result::Result<config::Config, <__D as config::_IMPL_DESERIALIZE_FOR_Config::_serde::Deserializer<'_>>::Error>; // return place in scope 0 at cita-auth/src/config.rs:15:28: 15:39

    bb0: {
        _0 = <__D as _serde::Deserializer<'_>>::deserialize_struct::<__Visitor<'_>>(move _1, const "Config", const _, const __Visitor::<'_> {{ marker: PhantomData::<config::Config>, lifetime: PhantomData::<&()> }}) -> bb1; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: fn(__D, &'static str, &'static [&'static str], __Visitor<'_>) -> Result<<__Visitor<'_> as Visitor<'_>>::Value, <__D as _serde::Deserializer<'_>>::Error> {<__D as _serde::Deserializer<'_>>::deserialize_struct::<__Visitor<'_>>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &[&str], val: Unevaluated(FIELDS, [], None) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: __Visitor<'_>, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-auth/src/config.rs:15:39: 15:39
    }
}

fn _IMPL_DESERIALIZE_FOR_Config::<impl at cita-auth/src/config.rs:15:28: 15:39>::deserialize::<impl at cita-auth/src/config.rs:15:28: 15:39>::expecting(_1: &__FieldVisitor, _2: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    debug __formatter => _2;             // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let _3: &str;                        // in scope 0 at cita-auth/src/config.rs:15:28: 15:39

    bb0: {
        _3 = const "field identifier";   // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = std::fmt::Formatter::<'_>::write_str(_2, _3) -> bb1; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut std::fmt::Formatter<'_>, &'b str) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::write_str}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-auth/src/config.rs:15:39: 15:39
    }
}

fn _IMPL_DESERIALIZE_FOR_Config::<impl at cita-auth/src/config.rs:15:28: 15:39>::deserialize::<impl at cita-auth/src/config.rs:15:28: 15:39>::visit_u64(_1: __FieldVisitor, _2: u64) -> Result<__Field, __E> {
    debug self => const __FieldVisitor;  // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    debug __value => _2;                 // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _0: std::result::Result<config::_IMPL_DESERIALIZE_FOR_Config::<impl config::_IMPL_DESERIALIZE_FOR_Config::_serde::Deserialize<'de> for config::Config>::deserialize::__Field, __E>; // return place in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _3: config::_IMPL_DESERIALIZE_FOR_Config::<impl config::_IMPL_DESERIALIZE_FOR_Config::_serde::Deserialize<'de> for config::Config>::deserialize::__Field; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _4: config::_IMPL_DESERIALIZE_FOR_Config::<impl config::_IMPL_DESERIALIZE_FOR_Config::_serde::Deserialize<'de> for config::Config>::deserialize::__Field; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _5: config::_IMPL_DESERIALIZE_FOR_Config::<impl config::_IMPL_DESERIALIZE_FOR_Config::_serde::Deserialize<'de> for config::Config>::deserialize::__Field; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _6: config::_IMPL_DESERIALIZE_FOR_Config::<impl config::_IMPL_DESERIALIZE_FOR_Config::_serde::Deserialize<'de> for config::Config>::deserialize::__Field; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _7: config::_IMPL_DESERIALIZE_FOR_Config::<impl config::_IMPL_DESERIALIZE_FOR_Config::_serde::Deserialize<'de> for config::Config>::deserialize::__Field; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _8: config::_IMPL_DESERIALIZE_FOR_Config::<impl config::_IMPL_DESERIALIZE_FOR_Config::_serde::Deserialize<'de> for config::Config>::deserialize::__Field; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _9: config::_IMPL_DESERIALIZE_FOR_Config::<impl config::_IMPL_DESERIALIZE_FOR_Config::_serde::Deserialize<'de> for config::Config>::deserialize::__Field; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _10: config::_IMPL_DESERIALIZE_FOR_Config::<impl config::_IMPL_DESERIALIZE_FOR_Config::_serde::Deserialize<'de> for config::Config>::deserialize::__Field; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _11: __E;                    // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _12: config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::Unexpected<'_>; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _13: &dyn config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::Expected; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _14: &&str;                  // in scope 0 at cita-auth/src/config.rs:15:28: 15:39

    bb0: {
        switchInt(_2) -> [0: bb2, 1: bb3, 2: bb4, 3: bb5, 4: bb6, 5: bb7, 6: bb8, 7: bb9, otherwise: bb1]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb1: {
        _12 = _serde::de::Unexpected::<'_>::Unsigned(_2); // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        _14 = const _;                   // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &&str, val: Unevaluated(<__FieldVisitor as Visitor<'de>>::visit_u64, [ReErased, __E], Some(promoted[0])) }
        _13 = _14 as &dyn config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::Expected (Pointer(Unsize)); // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        _11 = <__E as _serde::de::Error>::invalid_value(move _12, move _13) -> bb10; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: for<'a, 'b> fn(_serde::de::Unexpected<'a>, &'b (dyn _serde::de::Expected + 'b)) -> __E {<__E as _serde::de::Error>::invalid_value}, val: Value(<ZST>) }
    }

    bb2: {
        _3 = const __Field::__field0;    // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: __Field, val: Value(Scalar(0x00)) }
        _0 = Result::<__Field, __E>::Ok(move _3); // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb11;                    // scope 0 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb3: {
        _4 = const __Field::__field1;    // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: __Field, val: Value(Scalar(0x01)) }
        _0 = Result::<__Field, __E>::Ok(move _4); // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb11;                    // scope 0 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb4: {
        _5 = const __Field::__field2;    // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: __Field, val: Value(Scalar(0x02)) }
        _0 = Result::<__Field, __E>::Ok(move _5); // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb11;                    // scope 0 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb5: {
        _6 = const __Field::__field3;    // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: __Field, val: Value(Scalar(0x03)) }
        _0 = Result::<__Field, __E>::Ok(move _6); // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb11;                    // scope 0 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb6: {
        _7 = const __Field::__field4;    // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: __Field, val: Value(Scalar(0x04)) }
        _0 = Result::<__Field, __E>::Ok(move _7); // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb11;                    // scope 0 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb7: {
        _8 = const __Field::__field5;    // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: __Field, val: Value(Scalar(0x05)) }
        _0 = Result::<__Field, __E>::Ok(move _8); // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb11;                    // scope 0 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb8: {
        _9 = const __Field::__field6;    // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: __Field, val: Value(Scalar(0x06)) }
        _0 = Result::<__Field, __E>::Ok(move _9); // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb11;                    // scope 0 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb9: {
        _10 = const __Field::__field7;   // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: __Field, val: Value(Scalar(0x07)) }
        _0 = Result::<__Field, __E>::Ok(move _10); // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb11;                    // scope 0 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb10: {
        _0 = Result::<__Field, __E>::Err(move _11); // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb11;                    // scope 0 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb11: {
        return;                          // scope 0 at cita-auth/src/config.rs:15:39: 15:39
    }
}

promoted[0] in _IMPL_DESERIALIZE_FOR_Config::<impl at cita-auth/src/config.rs:15:28: 15:39>::deserialize::<impl at cita-auth/src/config.rs:15:28: 15:39>::visit_u64: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _1: &str;                    // in scope 0 at cita-auth/src/config.rs:15:28: 15:39

    bb0: {
        _1 = const "field index 0 <= i < 8"; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        return;                          // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }
}

fn _IMPL_DESERIALIZE_FOR_Config::<impl at cita-auth/src/config.rs:15:28: 15:39>::deserialize::<impl at cita-auth/src/config.rs:15:28: 15:39>::visit_str(_1: __FieldVisitor, _2: &str) -> Result<__Field, __E> {
    debug self => const __FieldVisitor;  // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    debug __value => _2;                 // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _0: std::result::Result<config::_IMPL_DESERIALIZE_FOR_Config::<impl config::_IMPL_DESERIALIZE_FOR_Config::_serde::Deserialize<'de> for config::Config>::deserialize::__Field, __E>; // return place in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _3: bool;                    // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _4: bool;                    // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _5: bool;                    // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _6: bool;                    // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _7: bool;                    // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _8: bool;                    // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _9: bool;                    // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _10: bool;                   // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _11: config::_IMPL_DESERIALIZE_FOR_Config::<impl config::_IMPL_DESERIALIZE_FOR_Config::_serde::Deserialize<'de> for config::Config>::deserialize::__Field; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _12: config::_IMPL_DESERIALIZE_FOR_Config::<impl config::_IMPL_DESERIALIZE_FOR_Config::_serde::Deserialize<'de> for config::Config>::deserialize::__Field; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _13: config::_IMPL_DESERIALIZE_FOR_Config::<impl config::_IMPL_DESERIALIZE_FOR_Config::_serde::Deserialize<'de> for config::Config>::deserialize::__Field; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _14: config::_IMPL_DESERIALIZE_FOR_Config::<impl config::_IMPL_DESERIALIZE_FOR_Config::_serde::Deserialize<'de> for config::Config>::deserialize::__Field; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _15: config::_IMPL_DESERIALIZE_FOR_Config::<impl config::_IMPL_DESERIALIZE_FOR_Config::_serde::Deserialize<'de> for config::Config>::deserialize::__Field; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _16: config::_IMPL_DESERIALIZE_FOR_Config::<impl config::_IMPL_DESERIALIZE_FOR_Config::_serde::Deserialize<'de> for config::Config>::deserialize::__Field; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _17: config::_IMPL_DESERIALIZE_FOR_Config::<impl config::_IMPL_DESERIALIZE_FOR_Config::_serde::Deserialize<'de> for config::Config>::deserialize::__Field; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _18: config::_IMPL_DESERIALIZE_FOR_Config::<impl config::_IMPL_DESERIALIZE_FOR_Config::_serde::Deserialize<'de> for config::Config>::deserialize::__Field; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _19: config::_IMPL_DESERIALIZE_FOR_Config::<impl config::_IMPL_DESERIALIZE_FOR_Config::_serde::Deserialize<'de> for config::Config>::deserialize::__Field; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39

    bb0: {
        _3 = <str as PartialEq>::eq(_2, const "count_per_batch") -> bb1; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a str, &'b str) -> bool {<str as PartialEq>::eq}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb1: {
        switchInt(move _3) -> [0: bb2, otherwise: bb17]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb2: {
        _4 = <str as PartialEq>::eq(_2, const "buffer_duration") -> bb3; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a str, &'b str) -> bool {<str as PartialEq>::eq}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb3: {
        switchInt(move _4) -> [0: bb4, otherwise: bb18]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb4: {
        _5 = <str as PartialEq>::eq(_2, const "tx_verify_thread_num") -> bb5; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a str, &'b str) -> bool {<str as PartialEq>::eq}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb5: {
        switchInt(move _5) -> [0: bb6, otherwise: bb19]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb6: {
        _6 = <str as PartialEq>::eq(_2, const "tx_verify_cache_size") -> bb7; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a str, &'b str) -> bool {<str as PartialEq>::eq}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb7: {
        switchInt(move _6) -> [0: bb8, otherwise: bb20]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb8: {
        _7 = <str as PartialEq>::eq(_2, const "tx_pool_limit") -> bb9; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a str, &'b str) -> bool {<str as PartialEq>::eq}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb9: {
        switchInt(move _7) -> [0: bb10, otherwise: bb21]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb10: {
        _8 = <str as PartialEq>::eq(_2, const "wal_enable") -> bb11; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a str, &'b str) -> bool {<str as PartialEq>::eq}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb11: {
        switchInt(move _8) -> [0: bb12, otherwise: bb22]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb12: {
        _9 = <str as PartialEq>::eq(_2, const "prof_start") -> bb13; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a str, &'b str) -> bool {<str as PartialEq>::eq}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb13: {
        switchInt(move _9) -> [0: bb14, otherwise: bb23]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb14: {
        _10 = <str as PartialEq>::eq(_2, const "prof_duration") -> bb15; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a str, &'b str) -> bool {<str as PartialEq>::eq}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb15: {
        switchInt(move _10) -> [0: bb16, otherwise: bb24]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb16: {
        _19 = const __Field::__ignore;   // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: __Field, val: Value(Scalar(0x08)) }
        _0 = Result::<__Field, __E>::Ok(move _19); // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb25;                    // scope 0 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb17: {
        _11 = const __Field::__field0;   // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: __Field, val: Value(Scalar(0x00)) }
        _0 = Result::<__Field, __E>::Ok(move _11); // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb25;                    // scope 0 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb18: {
        _12 = const __Field::__field1;   // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: __Field, val: Value(Scalar(0x01)) }
        _0 = Result::<__Field, __E>::Ok(move _12); // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb25;                    // scope 0 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb19: {
        _13 = const __Field::__field2;   // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: __Field, val: Value(Scalar(0x02)) }
        _0 = Result::<__Field, __E>::Ok(move _13); // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb25;                    // scope 0 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb20: {
        _14 = const __Field::__field3;   // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: __Field, val: Value(Scalar(0x03)) }
        _0 = Result::<__Field, __E>::Ok(move _14); // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb25;                    // scope 0 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb21: {
        _15 = const __Field::__field4;   // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: __Field, val: Value(Scalar(0x04)) }
        _0 = Result::<__Field, __E>::Ok(move _15); // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb25;                    // scope 0 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb22: {
        _16 = const __Field::__field5;   // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: __Field, val: Value(Scalar(0x05)) }
        _0 = Result::<__Field, __E>::Ok(move _16); // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb25;                    // scope 0 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb23: {
        _17 = const __Field::__field6;   // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: __Field, val: Value(Scalar(0x06)) }
        _0 = Result::<__Field, __E>::Ok(move _17); // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb25;                    // scope 0 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb24: {
        _18 = const __Field::__field7;   // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: __Field, val: Value(Scalar(0x07)) }
        _0 = Result::<__Field, __E>::Ok(move _18); // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb25;                    // scope 0 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb25: {
        return;                          // scope 0 at cita-auth/src/config.rs:15:39: 15:39
    }
}

fn _IMPL_DESERIALIZE_FOR_Config::<impl at cita-auth/src/config.rs:15:28: 15:39>::deserialize::<impl at cita-auth/src/config.rs:15:28: 15:39>::visit_bytes(_1: __FieldVisitor, _2: &[u8]) -> Result<__Field, __E> {
    debug self => const __FieldVisitor;  // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    debug __value => _2;                 // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _0: std::result::Result<config::_IMPL_DESERIALIZE_FOR_Config::<impl config::_IMPL_DESERIALIZE_FOR_Config::_serde::Deserialize<'de> for config::Config>::deserialize::__Field, __E>; // return place in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _3: usize;                   // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _4: usize;                   // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _5: bool;                    // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _6: usize;                   // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _7: usize;                   // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _8: bool;                    // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _9: usize;                   // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _10: usize;                  // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _11: bool;                   // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _12: usize;                  // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _13: usize;                  // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _14: bool;                   // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _15: config::_IMPL_DESERIALIZE_FOR_Config::<impl config::_IMPL_DESERIALIZE_FOR_Config::_serde::Deserialize<'de> for config::Config>::deserialize::__Field; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _16: config::_IMPL_DESERIALIZE_FOR_Config::<impl config::_IMPL_DESERIALIZE_FOR_Config::_serde::Deserialize<'de> for config::Config>::deserialize::__Field; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _17: config::_IMPL_DESERIALIZE_FOR_Config::<impl config::_IMPL_DESERIALIZE_FOR_Config::_serde::Deserialize<'de> for config::Config>::deserialize::__Field; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _18: config::_IMPL_DESERIALIZE_FOR_Config::<impl config::_IMPL_DESERIALIZE_FOR_Config::_serde::Deserialize<'de> for config::Config>::deserialize::__Field; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _19: config::_IMPL_DESERIALIZE_FOR_Config::<impl config::_IMPL_DESERIALIZE_FOR_Config::_serde::Deserialize<'de> for config::Config>::deserialize::__Field; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _20: config::_IMPL_DESERIALIZE_FOR_Config::<impl config::_IMPL_DESERIALIZE_FOR_Config::_serde::Deserialize<'de> for config::Config>::deserialize::__Field; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _21: config::_IMPL_DESERIALIZE_FOR_Config::<impl config::_IMPL_DESERIALIZE_FOR_Config::_serde::Deserialize<'de> for config::Config>::deserialize::__Field; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _22: config::_IMPL_DESERIALIZE_FOR_Config::<impl config::_IMPL_DESERIALIZE_FOR_Config::_serde::Deserialize<'de> for config::Config>::deserialize::__Field; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _23: config::_IMPL_DESERIALIZE_FOR_Config::<impl config::_IMPL_DESERIALIZE_FOR_Config::_serde::Deserialize<'de> for config::Config>::deserialize::__Field; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39

    bb0: {
        _12 = Len((*_2));                // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        _13 = const 15_usize;            // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        _14 = Eq(move _12, move _13);    // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _14) -> [0: bb31, otherwise: bb1]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb1: {
        switchInt((*_2)[0 of 15]) -> [99: bb2, 98: bb17, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb2: {
        switchInt((*_2)[1 of 15]) -> [111: bb3, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb3: {
        switchInt((*_2)[2 of 15]) -> [117: bb4, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb4: {
        switchInt((*_2)[3 of 15]) -> [110: bb5, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb5: {
        switchInt((*_2)[4 of 15]) -> [116: bb6, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb6: {
        switchInt((*_2)[5 of 15]) -> [95: bb7, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb7: {
        switchInt((*_2)[6 of 15]) -> [112: bb8, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb8: {
        switchInt((*_2)[7 of 15]) -> [101: bb9, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb9: {
        switchInt((*_2)[8 of 15]) -> [114: bb10, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb10: {
        switchInt((*_2)[9 of 15]) -> [95: bb11, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb11: {
        switchInt((*_2)[10 of 15]) -> [98: bb12, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb12: {
        switchInt((*_2)[11 of 15]) -> [97: bb13, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb13: {
        switchInt((*_2)[12 of 15]) -> [116: bb14, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb14: {
        switchInt((*_2)[13 of 15]) -> [99: bb15, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb15: {
        switchInt((*_2)[14 of 15]) -> [104: bb107, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb16: {
        _23 = const __Field::__ignore;   // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: __Field, val: Value(Scalar(0x08)) }
        _0 = Result::<__Field, __E>::Ok(move _23); // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb115;                   // scope 0 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb17: {
        switchInt((*_2)[1 of 15]) -> [117: bb18, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb18: {
        switchInt((*_2)[2 of 15]) -> [102: bb19, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb19: {
        switchInt((*_2)[3 of 15]) -> [102: bb20, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb20: {
        switchInt((*_2)[4 of 15]) -> [101: bb21, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb21: {
        switchInt((*_2)[5 of 15]) -> [114: bb22, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb22: {
        switchInt((*_2)[6 of 15]) -> [95: bb23, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb23: {
        switchInt((*_2)[7 of 15]) -> [100: bb24, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb24: {
        switchInt((*_2)[8 of 15]) -> [117: bb25, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb25: {
        switchInt((*_2)[9 of 15]) -> [114: bb26, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb26: {
        switchInt((*_2)[10 of 15]) -> [97: bb27, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb27: {
        switchInt((*_2)[11 of 15]) -> [116: bb28, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb28: {
        switchInt((*_2)[12 of 15]) -> [105: bb29, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb29: {
        switchInt((*_2)[13 of 15]) -> [111: bb30, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb30: {
        switchInt((*_2)[14 of 15]) -> [110: bb108, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb31: {
        _9 = Len((*_2));                 // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        _10 = const 20_usize;            // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        _11 = Eq(move _9, move _10);     // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _11) -> [0: bb61, otherwise: bb32]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb32: {
        switchInt((*_2)[0 of 20]) -> [116: bb33, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb33: {
        switchInt((*_2)[1 of 20]) -> [120: bb34, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb34: {
        switchInt((*_2)[2 of 20]) -> [95: bb35, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb35: {
        switchInt((*_2)[3 of 20]) -> [118: bb36, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb36: {
        switchInt((*_2)[4 of 20]) -> [101: bb37, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb37: {
        switchInt((*_2)[5 of 20]) -> [114: bb38, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb38: {
        switchInt((*_2)[6 of 20]) -> [105: bb39, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb39: {
        switchInt((*_2)[7 of 20]) -> [102: bb40, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb40: {
        switchInt((*_2)[8 of 20]) -> [121: bb41, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb41: {
        switchInt((*_2)[9 of 20]) -> [95: bb42, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb42: {
        switchInt((*_2)[10 of 20]) -> [116: bb43, 99: bb52, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb43: {
        switchInt((*_2)[11 of 20]) -> [104: bb44, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb44: {
        switchInt((*_2)[12 of 20]) -> [114: bb45, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb45: {
        switchInt((*_2)[13 of 20]) -> [101: bb46, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb46: {
        switchInt((*_2)[14 of 20]) -> [97: bb47, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb47: {
        switchInt((*_2)[15 of 20]) -> [100: bb48, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb48: {
        switchInt((*_2)[16 of 20]) -> [95: bb49, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb49: {
        switchInt((*_2)[17 of 20]) -> [110: bb50, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb50: {
        switchInt((*_2)[18 of 20]) -> [117: bb51, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb51: {
        switchInt((*_2)[19 of 20]) -> [109: bb109, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb52: {
        switchInt((*_2)[11 of 20]) -> [97: bb53, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb53: {
        switchInt((*_2)[12 of 20]) -> [99: bb54, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb54: {
        switchInt((*_2)[13 of 20]) -> [104: bb55, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb55: {
        switchInt((*_2)[14 of 20]) -> [101: bb56, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb56: {
        switchInt((*_2)[15 of 20]) -> [95: bb57, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb57: {
        switchInt((*_2)[16 of 20]) -> [115: bb58, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb58: {
        switchInt((*_2)[17 of 20]) -> [105: bb59, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb59: {
        switchInt((*_2)[18 of 20]) -> [122: bb60, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb60: {
        switchInt((*_2)[19 of 20]) -> [101: bb110, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb61: {
        _6 = Len((*_2));                 // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        _7 = const 13_usize;             // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        _8 = Eq(move _6, move _7);       // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _8) -> [0: bb87, otherwise: bb62]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb62: {
        switchInt((*_2)[0 of 13]) -> [116: bb63, 112: bb75, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb63: {
        switchInt((*_2)[1 of 13]) -> [120: bb64, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb64: {
        switchInt((*_2)[2 of 13]) -> [95: bb65, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb65: {
        switchInt((*_2)[3 of 13]) -> [112: bb66, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb66: {
        switchInt((*_2)[4 of 13]) -> [111: bb67, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb67: {
        switchInt((*_2)[5 of 13]) -> [111: bb68, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb68: {
        switchInt((*_2)[6 of 13]) -> [108: bb69, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb69: {
        switchInt((*_2)[7 of 13]) -> [95: bb70, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb70: {
        switchInt((*_2)[8 of 13]) -> [108: bb71, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb71: {
        switchInt((*_2)[9 of 13]) -> [105: bb72, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb72: {
        switchInt((*_2)[10 of 13]) -> [109: bb73, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb73: {
        switchInt((*_2)[11 of 13]) -> [105: bb74, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb74: {
        switchInt((*_2)[12 of 13]) -> [116: bb111, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb75: {
        switchInt((*_2)[1 of 13]) -> [114: bb76, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb76: {
        switchInt((*_2)[2 of 13]) -> [111: bb77, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb77: {
        switchInt((*_2)[3 of 13]) -> [102: bb78, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb78: {
        switchInt((*_2)[4 of 13]) -> [95: bb79, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb79: {
        switchInt((*_2)[5 of 13]) -> [100: bb80, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb80: {
        switchInt((*_2)[6 of 13]) -> [117: bb81, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb81: {
        switchInt((*_2)[7 of 13]) -> [114: bb82, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb82: {
        switchInt((*_2)[8 of 13]) -> [97: bb83, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb83: {
        switchInt((*_2)[9 of 13]) -> [116: bb84, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb84: {
        switchInt((*_2)[10 of 13]) -> [105: bb85, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb85: {
        switchInt((*_2)[11 of 13]) -> [111: bb86, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb86: {
        switchInt((*_2)[12 of 13]) -> [110: bb114, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb87: {
        _3 = Len((*_2));                 // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        _4 = const 10_usize;             // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        _5 = Eq(move _3, move _4);       // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _5) -> [0: bb16, otherwise: bb88]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb88: {
        switchInt((*_2)[0 of 10]) -> [119: bb89, 112: bb98, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb89: {
        switchInt((*_2)[1 of 10]) -> [97: bb90, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb90: {
        switchInt((*_2)[2 of 10]) -> [108: bb91, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb91: {
        switchInt((*_2)[3 of 10]) -> [95: bb92, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb92: {
        switchInt((*_2)[4 of 10]) -> [101: bb93, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb93: {
        switchInt((*_2)[5 of 10]) -> [110: bb94, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb94: {
        switchInt((*_2)[6 of 10]) -> [97: bb95, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb95: {
        switchInt((*_2)[7 of 10]) -> [98: bb96, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb96: {
        switchInt((*_2)[8 of 10]) -> [108: bb97, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb97: {
        switchInt((*_2)[9 of 10]) -> [101: bb112, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb98: {
        switchInt((*_2)[1 of 10]) -> [114: bb99, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb99: {
        switchInt((*_2)[2 of 10]) -> [111: bb100, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb100: {
        switchInt((*_2)[3 of 10]) -> [102: bb101, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb101: {
        switchInt((*_2)[4 of 10]) -> [95: bb102, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb102: {
        switchInt((*_2)[5 of 10]) -> [115: bb103, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb103: {
        switchInt((*_2)[6 of 10]) -> [116: bb104, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb104: {
        switchInt((*_2)[7 of 10]) -> [97: bb105, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb105: {
        switchInt((*_2)[8 of 10]) -> [114: bb106, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb106: {
        switchInt((*_2)[9 of 10]) -> [116: bb113, otherwise: bb16]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb107: {
        _15 = const __Field::__field0;   // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: __Field, val: Value(Scalar(0x00)) }
        _0 = Result::<__Field, __E>::Ok(move _15); // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb115;                   // scope 0 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb108: {
        _16 = const __Field::__field1;   // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: __Field, val: Value(Scalar(0x01)) }
        _0 = Result::<__Field, __E>::Ok(move _16); // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb115;                   // scope 0 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb109: {
        _17 = const __Field::__field2;   // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: __Field, val: Value(Scalar(0x02)) }
        _0 = Result::<__Field, __E>::Ok(move _17); // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb115;                   // scope 0 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb110: {
        _18 = const __Field::__field3;   // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: __Field, val: Value(Scalar(0x03)) }
        _0 = Result::<__Field, __E>::Ok(move _18); // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb115;                   // scope 0 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb111: {
        _19 = const __Field::__field4;   // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: __Field, val: Value(Scalar(0x04)) }
        _0 = Result::<__Field, __E>::Ok(move _19); // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb115;                   // scope 0 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb112: {
        _20 = const __Field::__field5;   // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: __Field, val: Value(Scalar(0x05)) }
        _0 = Result::<__Field, __E>::Ok(move _20); // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb115;                   // scope 0 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb113: {
        _21 = const __Field::__field6;   // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: __Field, val: Value(Scalar(0x06)) }
        _0 = Result::<__Field, __E>::Ok(move _21); // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb115;                   // scope 0 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb114: {
        _22 = const __Field::__field7;   // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: __Field, val: Value(Scalar(0x07)) }
        _0 = Result::<__Field, __E>::Ok(move _22); // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb115;                   // scope 0 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb115: {
        return;                          // scope 0 at cita-auth/src/config.rs:15:39: 15:39
    }
}

fn _IMPL_DESERIALIZE_FOR_Config::<impl at cita-auth/src/config.rs:15:28: 15:39>::deserialize::<impl at cita-auth/src/config.rs:15:28: 15:39>::deserialize(_1: __D) -> Result<__Field, <__D as _serde::Deserializer<'_>>::Error> {
    debug __deserializer => _1;          // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _0: std::result::Result<config::_IMPL_DESERIALIZE_FOR_Config::<impl config::_IMPL_DESERIALIZE_FOR_Config::_serde::Deserialize<'de> for config::Config>::deserialize::__Field, <__D as config::_IMPL_DESERIALIZE_FOR_Config::_serde::Deserializer<'_>>::Error>; // return place in scope 0 at cita-auth/src/config.rs:15:28: 15:39

    bb0: {
        _0 = <__D as _serde::Deserializer<'_>>::deserialize_identifier::<__FieldVisitor>(move _1, const __FieldVisitor) -> bb1; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: fn(__D, __FieldVisitor) -> Result<<__FieldVisitor as Visitor<'_>>::Value, <__D as _serde::Deserializer<'_>>::Error> {<__D as _serde::Deserializer<'_>>::deserialize_identifier::<__FieldVisitor>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: __FieldVisitor, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-auth/src/config.rs:15:39: 15:39
    }
}

fn _IMPL_DESERIALIZE_FOR_Config::<impl at cita-auth/src/config.rs:15:28: 15:39>::deserialize::<impl at cita-auth/src/config.rs:15:28: 15:39>::expecting(_1: &__Visitor<'_>, _2: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    debug __formatter => _2;             // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let _3: &str;                        // in scope 0 at cita-auth/src/config.rs:15:28: 15:39

    bb0: {
        _3 = const "struct Config";      // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = std::fmt::Formatter::<'_>::write_str(_2, _3) -> bb1; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut std::fmt::Formatter<'_>, &'b str) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::write_str}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-auth/src/config.rs:15:39: 15:39
    }
}

fn _IMPL_DESERIALIZE_FOR_Config::<impl at cita-auth/src/config.rs:15:28: 15:39>::deserialize::<impl at cita-auth/src/config.rs:15:28: 15:39>::visit_seq(_1: __Visitor<'_>, _2: __A) -> Result<config::Config, <__A as SeqAccess<'_>>::Error> {
    debug self => const __Visitor::<'_> {{ marker: PhantomData::<config::Config>, lifetime: PhantomData::<&()> }}; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    debug __seq => _2;                   // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _0: std::result::Result<config::Config, <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::SeqAccess<'_>>::Error>; // return place in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _3: std::result::Result<std::option::Option<usize>, <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::SeqAccess<'_>>::Error>; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _4: &mut __A;                // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _5: isize;                   // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let _6: std::option::Option<usize>;  // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let _7: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::SeqAccess<'_>>::Error; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _8: isize;                   // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let _9: usize;                       // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _10: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::SeqAccess<'_>>::Error; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _11: &dyn config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::Expected; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _12: std::result::Result<std::option::Option<u64>, <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::SeqAccess<'_>>::Error>; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _13: &mut __A;               // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _14: isize;                  // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _17: isize;                  // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _19: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::SeqAccess<'_>>::Error; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _20: &dyn config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::Expected; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _21: std::result::Result<std::option::Option<usize>, <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::SeqAccess<'_>>::Error>; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _22: &mut __A;               // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _23: isize;                  // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _26: isize;                  // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _28: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::SeqAccess<'_>>::Error; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _29: &dyn config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::Expected; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _30: std::result::Result<std::option::Option<usize>, <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::SeqAccess<'_>>::Error>; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _31: &mut __A;               // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _32: isize;                  // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _35: isize;                  // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _37: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::SeqAccess<'_>>::Error; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _38: &dyn config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::Expected; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _39: std::result::Result<std::option::Option<usize>, <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::SeqAccess<'_>>::Error>; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _40: &mut __A;               // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _41: isize;                  // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _44: isize;                  // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _46: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::SeqAccess<'_>>::Error; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _47: &dyn config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::Expected; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _48: std::result::Result<std::option::Option<bool>, <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::SeqAccess<'_>>::Error>; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _49: &mut __A;               // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _50: isize;                  // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _53: isize;                  // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _55: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::SeqAccess<'_>>::Error; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _56: &dyn config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::Expected; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _57: std::result::Result<std::option::Option<u64>, <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::SeqAccess<'_>>::Error>; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _58: &mut __A;               // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _59: isize;                  // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _62: isize;                  // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _64: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::SeqAccess<'_>>::Error; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _65: &dyn config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::Expected; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _66: std::result::Result<std::option::Option<u64>, <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::SeqAccess<'_>>::Error>; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _67: &mut __A;               // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _68: isize;                  // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _71: isize;                  // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _73: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::SeqAccess<'_>>::Error; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _74: &dyn config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::Expected; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _75: config::Config;         // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _76: &&str;                  // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    scope 1 {
        debug __field0 => _9;            // in scope 1 at cita-auth/src/config.rs:15:28: 15:39
        let _15: std::option::Option<u64>; // in scope 1 at cita-auth/src/config.rs:15:28: 15:39
        let _16: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::SeqAccess<'_>>::Error; // in scope 1 at cita-auth/src/config.rs:15:28: 15:39
        let _18: u64;                    // in scope 1 at cita-auth/src/config.rs:15:28: 15:39
        let mut _77: &&str;              // in scope 1 at cita-auth/src/config.rs:15:28: 15:39
        scope 5 {
            debug __field1 => _18;       // in scope 5 at cita-auth/src/config.rs:15:28: 15:39
            let _24: std::option::Option<usize>; // in scope 5 at cita-auth/src/config.rs:15:28: 15:39
            let _25: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::SeqAccess<'_>>::Error; // in scope 5 at cita-auth/src/config.rs:15:28: 15:39
            let _27: usize;              // in scope 5 at cita-auth/src/config.rs:15:28: 15:39
            let mut _78: &&str;          // in scope 5 at cita-auth/src/config.rs:15:28: 15:39
            scope 9 {
                debug __field2 => _27;   // in scope 9 at cita-auth/src/config.rs:15:28: 15:39
                let _33: std::option::Option<usize>; // in scope 9 at cita-auth/src/config.rs:15:28: 15:39
                let _34: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::SeqAccess<'_>>::Error; // in scope 9 at cita-auth/src/config.rs:15:28: 15:39
                let _36: usize;          // in scope 9 at cita-auth/src/config.rs:15:28: 15:39
                let mut _79: &&str;      // in scope 9 at cita-auth/src/config.rs:15:28: 15:39
                scope 13 {
                    debug __field3 => _36; // in scope 13 at cita-auth/src/config.rs:15:28: 15:39
                    let _42: std::option::Option<usize>; // in scope 13 at cita-auth/src/config.rs:15:28: 15:39
                    let _43: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::SeqAccess<'_>>::Error; // in scope 13 at cita-auth/src/config.rs:15:28: 15:39
                    let _45: usize;      // in scope 13 at cita-auth/src/config.rs:15:28: 15:39
                    let mut _80: &&str;  // in scope 13 at cita-auth/src/config.rs:15:28: 15:39
                    scope 17 {
                        debug __field4 => _45; // in scope 17 at cita-auth/src/config.rs:15:28: 15:39
                        let _51: std::option::Option<bool>; // in scope 17 at cita-auth/src/config.rs:15:28: 15:39
                        let _52: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::SeqAccess<'_>>::Error; // in scope 17 at cita-auth/src/config.rs:15:28: 15:39
                        let _54: bool;   // in scope 17 at cita-auth/src/config.rs:15:28: 15:39
                        let mut _81: &&str; // in scope 17 at cita-auth/src/config.rs:15:28: 15:39
                        scope 21 {
                            debug __field5 => _54; // in scope 21 at cita-auth/src/config.rs:15:28: 15:39
                            let _60: std::option::Option<u64>; // in scope 21 at cita-auth/src/config.rs:15:28: 15:39
                            let _61: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::SeqAccess<'_>>::Error; // in scope 21 at cita-auth/src/config.rs:15:28: 15:39
                            let _63: u64; // in scope 21 at cita-auth/src/config.rs:15:28: 15:39
                            let mut _82: &&str; // in scope 21 at cita-auth/src/config.rs:15:28: 15:39
                            scope 25 {
                                debug __field6 => _63; // in scope 25 at cita-auth/src/config.rs:15:28: 15:39
                                let _69: std::option::Option<u64>; // in scope 25 at cita-auth/src/config.rs:15:28: 15:39
                                let _70: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::SeqAccess<'_>>::Error; // in scope 25 at cita-auth/src/config.rs:15:28: 15:39
                                let _72: u64; // in scope 25 at cita-auth/src/config.rs:15:28: 15:39
                                let mut _83: &&str; // in scope 25 at cita-auth/src/config.rs:15:28: 15:39
                                scope 29 {
                                    debug __field7 => _72; // in scope 29 at cita-auth/src/config.rs:15:28: 15:39
                                }
                                scope 30 {
                                    debug __val => _69; // in scope 30 at cita-auth/src/config.rs:15:28: 15:39
                                }
                                scope 31 {
                                    debug __err => _70; // in scope 31 at cita-auth/src/config.rs:15:28: 15:39
                                }
                                scope 32 {
                                    debug __value => _72; // in scope 32 at cita-auth/src/config.rs:15:28: 15:39
                                }
                            }
                            scope 26 {
                                debug __val => _60; // in scope 26 at cita-auth/src/config.rs:15:28: 15:39
                            }
                            scope 27 {
                                debug __err => _61; // in scope 27 at cita-auth/src/config.rs:15:28: 15:39
                            }
                            scope 28 {
                                debug __value => _63; // in scope 28 at cita-auth/src/config.rs:15:28: 15:39
                            }
                        }
                        scope 22 {
                            debug __val => _51; // in scope 22 at cita-auth/src/config.rs:15:28: 15:39
                        }
                        scope 23 {
                            debug __err => _52; // in scope 23 at cita-auth/src/config.rs:15:28: 15:39
                        }
                        scope 24 {
                            debug __value => _54; // in scope 24 at cita-auth/src/config.rs:15:28: 15:39
                        }
                    }
                    scope 18 {
                        debug __val => _42; // in scope 18 at cita-auth/src/config.rs:15:28: 15:39
                    }
                    scope 19 {
                        debug __err => _43; // in scope 19 at cita-auth/src/config.rs:15:28: 15:39
                    }
                    scope 20 {
                        debug __value => _45; // in scope 20 at cita-auth/src/config.rs:15:28: 15:39
                    }
                }
                scope 14 {
                    debug __val => _33;  // in scope 14 at cita-auth/src/config.rs:15:28: 15:39
                }
                scope 15 {
                    debug __err => _34;  // in scope 15 at cita-auth/src/config.rs:15:28: 15:39
                }
                scope 16 {
                    debug __value => _36; // in scope 16 at cita-auth/src/config.rs:15:28: 15:39
                }
            }
            scope 10 {
                debug __val => _24;      // in scope 10 at cita-auth/src/config.rs:15:28: 15:39
            }
            scope 11 {
                debug __err => _25;      // in scope 11 at cita-auth/src/config.rs:15:28: 15:39
            }
            scope 12 {
                debug __value => _27;    // in scope 12 at cita-auth/src/config.rs:15:28: 15:39
            }
        }
        scope 6 {
            debug __val => _15;          // in scope 6 at cita-auth/src/config.rs:15:28: 15:39
        }
        scope 7 {
            debug __err => _16;          // in scope 7 at cita-auth/src/config.rs:15:28: 15:39
        }
        scope 8 {
            debug __value => _18;        // in scope 8 at cita-auth/src/config.rs:15:28: 15:39
        }
    }
    scope 2 {
        debug __val => _6;               // in scope 2 at cita-auth/src/config.rs:15:28: 15:39
    }
    scope 3 {
        debug __err => _7;               // in scope 3 at cita-auth/src/config.rs:15:28: 15:39
    }
    scope 4 {
        debug __value => _9;             // in scope 4 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb0: {
        _4 = &mut _2;                    // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        _3 = <__A as SeqAccess<'_>>::next_element::<usize>(_4) -> [return: bb1, unwind: bb67]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:17:5: 17:8
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'a> fn(&'a mut __A) -> Result<std::option::Option<usize>, <__A as SeqAccess<'_>>::Error> {<__A as SeqAccess<'_>>::next_element::<usize>}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = discriminant(_3);           // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _5) -> [0: bb4, 1: bb2, otherwise: bb3]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb2: {
        _7 = move ((_3 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::SeqAccess<'_>>::Error); // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        _0 = Result::<config::Config, <__A as SeqAccess<'_>>::Error>::Err(move _7); // scope 3 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb65;                    // scope 0 at no-location
    }

    bb3: {
        unreachable;                     // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb4: {
        _6 = ((_3 as Ok).0: std::option::Option<usize>); // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        _8 = discriminant(_6);           // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _8) -> [0: bb5, 1: bb7, otherwise: bb6]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb5: {
        _76 = const _;                   // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &&str, val: Unevaluated(<__Visitor<'de> as Visitor<'de>>::visit_seq, [ReErased, __A], Some(promoted[0])) }
        _11 = _76 as &dyn config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::Expected (Pointer(Unsize)); // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        _10 = <<__A as SeqAccess<'_>>::Error as _serde::de::Error>::invalid_length(const 0_usize, move _11) -> [return: bb8, unwind: bb67]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: for<'a> fn(usize, &'a (dyn _serde::de::Expected + 'a)) -> <__A as SeqAccess<'_>>::Error {<<__A as SeqAccess<'_>>::Error as _serde::de::Error>::invalid_length}, val: Value(<ZST>) }
    }

    bb6: {
        unreachable;                     // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb7: {
        _9 = ((_6 as Some).0: usize);    // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        _13 = &mut _2;                   // scope 1 at cita-auth/src/config.rs:15:28: 15:39
        _12 = <__A as SeqAccess<'_>>::next_element::<u64>(_13) -> [return: bb9, unwind: bb67]; // scope 1 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:18:5: 18:8
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'a> fn(&'a mut __A) -> Result<std::option::Option<u64>, <__A as SeqAccess<'_>>::Error> {<__A as SeqAccess<'_>>::next_element::<u64>}, val: Value(<ZST>) }
    }

    bb8: {
        _0 = Result::<config::Config, <__A as SeqAccess<'_>>::Error>::Err(move _10); // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb65;                    // scope 0 at no-location
    }

    bb9: {
        _14 = discriminant(_12);         // scope 1 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _14) -> [0: bb12, 1: bb10, otherwise: bb11]; // scope 1 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb10: {
        _16 = move ((_12 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::SeqAccess<'_>>::Error); // scope 1 at cita-auth/src/config.rs:15:28: 15:39
        _0 = Result::<config::Config, <__A as SeqAccess<'_>>::Error>::Err(move _16); // scope 7 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb65;                    // scope 1 at no-location
    }

    bb11: {
        unreachable;                     // scope 1 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb12: {
        _15 = ((_12 as Ok).0: std::option::Option<u64>); // scope 1 at cita-auth/src/config.rs:15:28: 15:39
        _17 = discriminant(_15);         // scope 1 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _17) -> [0: bb13, 1: bb15, otherwise: bb14]; // scope 1 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb13: {
        _77 = const _;                   // scope 1 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &&str, val: Unevaluated(<__Visitor<'de> as Visitor<'de>>::visit_seq, [ReErased, __A], Some(promoted[1])) }
        _20 = _77 as &dyn config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::Expected (Pointer(Unsize)); // scope 1 at cita-auth/src/config.rs:15:28: 15:39
        _19 = <<__A as SeqAccess<'_>>::Error as _serde::de::Error>::invalid_length(const 1_usize, move _20) -> [return: bb16, unwind: bb67]; // scope 1 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: for<'a> fn(usize, &'a (dyn _serde::de::Expected + 'a)) -> <__A as SeqAccess<'_>>::Error {<<__A as SeqAccess<'_>>::Error as _serde::de::Error>::invalid_length}, val: Value(<ZST>) }
    }

    bb14: {
        unreachable;                     // scope 1 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb15: {
        _18 = ((_15 as Some).0: u64);    // scope 1 at cita-auth/src/config.rs:15:28: 15:39
        _22 = &mut _2;                   // scope 5 at cita-auth/src/config.rs:15:28: 15:39
        _21 = <__A as SeqAccess<'_>>::next_element::<usize>(_22) -> [return: bb17, unwind: bb67]; // scope 5 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:19:5: 19:8
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'a> fn(&'a mut __A) -> Result<std::option::Option<usize>, <__A as SeqAccess<'_>>::Error> {<__A as SeqAccess<'_>>::next_element::<usize>}, val: Value(<ZST>) }
    }

    bb16: {
        _0 = Result::<config::Config, <__A as SeqAccess<'_>>::Error>::Err(move _19); // scope 1 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb65;                    // scope 1 at no-location
    }

    bb17: {
        _23 = discriminant(_21);         // scope 5 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _23) -> [0: bb20, 1: bb18, otherwise: bb19]; // scope 5 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb18: {
        _25 = move ((_21 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::SeqAccess<'_>>::Error); // scope 5 at cita-auth/src/config.rs:15:28: 15:39
        _0 = Result::<config::Config, <__A as SeqAccess<'_>>::Error>::Err(move _25); // scope 11 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb65;                    // scope 5 at no-location
    }

    bb19: {
        unreachable;                     // scope 5 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb20: {
        _24 = ((_21 as Ok).0: std::option::Option<usize>); // scope 5 at cita-auth/src/config.rs:15:28: 15:39
        _26 = discriminant(_24);         // scope 5 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _26) -> [0: bb21, 1: bb23, otherwise: bb22]; // scope 5 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb21: {
        _78 = const _;                   // scope 5 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &&str, val: Unevaluated(<__Visitor<'de> as Visitor<'de>>::visit_seq, [ReErased, __A], Some(promoted[2])) }
        _29 = _78 as &dyn config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::Expected (Pointer(Unsize)); // scope 5 at cita-auth/src/config.rs:15:28: 15:39
        _28 = <<__A as SeqAccess<'_>>::Error as _serde::de::Error>::invalid_length(const 2_usize, move _29) -> [return: bb24, unwind: bb67]; // scope 5 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: for<'a> fn(usize, &'a (dyn _serde::de::Expected + 'a)) -> <__A as SeqAccess<'_>>::Error {<<__A as SeqAccess<'_>>::Error as _serde::de::Error>::invalid_length}, val: Value(<ZST>) }
    }

    bb22: {
        unreachable;                     // scope 5 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb23: {
        _27 = ((_24 as Some).0: usize);  // scope 5 at cita-auth/src/config.rs:15:28: 15:39
        _31 = &mut _2;                   // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _30 = <__A as SeqAccess<'_>>::next_element::<usize>(_31) -> [return: bb25, unwind: bb67]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:20:5: 20:8
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'a> fn(&'a mut __A) -> Result<std::option::Option<usize>, <__A as SeqAccess<'_>>::Error> {<__A as SeqAccess<'_>>::next_element::<usize>}, val: Value(<ZST>) }
    }

    bb24: {
        _0 = Result::<config::Config, <__A as SeqAccess<'_>>::Error>::Err(move _28); // scope 5 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb65;                    // scope 5 at no-location
    }

    bb25: {
        _32 = discriminant(_30);         // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _32) -> [0: bb28, 1: bb26, otherwise: bb27]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb26: {
        _34 = move ((_30 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::SeqAccess<'_>>::Error); // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _0 = Result::<config::Config, <__A as SeqAccess<'_>>::Error>::Err(move _34); // scope 15 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb65;                    // scope 9 at no-location
    }

    bb27: {
        unreachable;                     // scope 9 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb28: {
        _33 = ((_30 as Ok).0: std::option::Option<usize>); // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _35 = discriminant(_33);         // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _35) -> [0: bb29, 1: bb31, otherwise: bb30]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb29: {
        _79 = const _;                   // scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &&str, val: Unevaluated(<__Visitor<'de> as Visitor<'de>>::visit_seq, [ReErased, __A], Some(promoted[3])) }
        _38 = _79 as &dyn config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::Expected (Pointer(Unsize)); // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _37 = <<__A as SeqAccess<'_>>::Error as _serde::de::Error>::invalid_length(const 3_usize, move _38) -> [return: bb32, unwind: bb67]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: for<'a> fn(usize, &'a (dyn _serde::de::Expected + 'a)) -> <__A as SeqAccess<'_>>::Error {<<__A as SeqAccess<'_>>::Error as _serde::de::Error>::invalid_length}, val: Value(<ZST>) }
    }

    bb30: {
        unreachable;                     // scope 9 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb31: {
        _36 = ((_33 as Some).0: usize);  // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _40 = &mut _2;                   // scope 13 at cita-auth/src/config.rs:15:28: 15:39
        _39 = <__A as SeqAccess<'_>>::next_element::<usize>(_40) -> [return: bb33, unwind: bb67]; // scope 13 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:21:5: 21:8
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'a> fn(&'a mut __A) -> Result<std::option::Option<usize>, <__A as SeqAccess<'_>>::Error> {<__A as SeqAccess<'_>>::next_element::<usize>}, val: Value(<ZST>) }
    }

    bb32: {
        _0 = Result::<config::Config, <__A as SeqAccess<'_>>::Error>::Err(move _37); // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb65;                    // scope 9 at no-location
    }

    bb33: {
        _41 = discriminant(_39);         // scope 13 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _41) -> [0: bb36, 1: bb34, otherwise: bb35]; // scope 13 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb34: {
        _43 = move ((_39 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::SeqAccess<'_>>::Error); // scope 13 at cita-auth/src/config.rs:15:28: 15:39
        _0 = Result::<config::Config, <__A as SeqAccess<'_>>::Error>::Err(move _43); // scope 19 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb65;                    // scope 13 at no-location
    }

    bb35: {
        unreachable;                     // scope 13 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb36: {
        _42 = ((_39 as Ok).0: std::option::Option<usize>); // scope 13 at cita-auth/src/config.rs:15:28: 15:39
        _44 = discriminant(_42);         // scope 13 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _44) -> [0: bb37, 1: bb39, otherwise: bb38]; // scope 13 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb37: {
        _80 = const _;                   // scope 13 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &&str, val: Unevaluated(<__Visitor<'de> as Visitor<'de>>::visit_seq, [ReErased, __A], Some(promoted[4])) }
        _47 = _80 as &dyn config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::Expected (Pointer(Unsize)); // scope 13 at cita-auth/src/config.rs:15:28: 15:39
        _46 = <<__A as SeqAccess<'_>>::Error as _serde::de::Error>::invalid_length(const 4_usize, move _47) -> [return: bb40, unwind: bb67]; // scope 13 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: for<'a> fn(usize, &'a (dyn _serde::de::Expected + 'a)) -> <__A as SeqAccess<'_>>::Error {<<__A as SeqAccess<'_>>::Error as _serde::de::Error>::invalid_length}, val: Value(<ZST>) }
    }

    bb38: {
        unreachable;                     // scope 13 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb39: {
        _45 = ((_42 as Some).0: usize);  // scope 13 at cita-auth/src/config.rs:15:28: 15:39
        _49 = &mut _2;                   // scope 17 at cita-auth/src/config.rs:15:28: 15:39
        _48 = <__A as SeqAccess<'_>>::next_element::<bool>(_49) -> [return: bb41, unwind: bb67]; // scope 17 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:22:5: 22:8
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: for<'a> fn(&'a mut __A) -> Result<std::option::Option<bool>, <__A as SeqAccess<'_>>::Error> {<__A as SeqAccess<'_>>::next_element::<bool>}, val: Value(<ZST>) }
    }

    bb40: {
        _0 = Result::<config::Config, <__A as SeqAccess<'_>>::Error>::Err(move _46); // scope 13 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb65;                    // scope 13 at no-location
    }

    bb41: {
        _50 = discriminant(_48);         // scope 17 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _50) -> [0: bb44, 1: bb42, otherwise: bb43]; // scope 17 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb42: {
        _52 = move ((_48 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::SeqAccess<'_>>::Error); // scope 17 at cita-auth/src/config.rs:15:28: 15:39
        _0 = Result::<config::Config, <__A as SeqAccess<'_>>::Error>::Err(move _52); // scope 23 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb65;                    // scope 17 at no-location
    }

    bb43: {
        unreachable;                     // scope 17 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb44: {
        _51 = ((_48 as Ok).0: std::option::Option<bool>); // scope 17 at cita-auth/src/config.rs:15:28: 15:39
        _53 = discriminant(_51);         // scope 17 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _53) -> [0: bb45, 1: bb47, otherwise: bb46]; // scope 17 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb45: {
        _81 = const _;                   // scope 17 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &&str, val: Unevaluated(<__Visitor<'de> as Visitor<'de>>::visit_seq, [ReErased, __A], Some(promoted[5])) }
        _56 = _81 as &dyn config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::Expected (Pointer(Unsize)); // scope 17 at cita-auth/src/config.rs:15:28: 15:39
        _55 = <<__A as SeqAccess<'_>>::Error as _serde::de::Error>::invalid_length(const 5_usize, move _56) -> [return: bb48, unwind: bb67]; // scope 17 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: for<'a> fn(usize, &'a (dyn _serde::de::Expected + 'a)) -> <__A as SeqAccess<'_>>::Error {<<__A as SeqAccess<'_>>::Error as _serde::de::Error>::invalid_length}, val: Value(<ZST>) }
    }

    bb46: {
        unreachable;                     // scope 17 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb47: {
        _54 = ((_51 as Some).0: bool);   // scope 17 at cita-auth/src/config.rs:15:28: 15:39
        _58 = &mut _2;                   // scope 21 at cita-auth/src/config.rs:15:28: 15:39
        _57 = <__A as SeqAccess<'_>>::next_element::<u64>(_58) -> [return: bb49, unwind: bb67]; // scope 21 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:23:5: 23:8
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: for<'a> fn(&'a mut __A) -> Result<std::option::Option<u64>, <__A as SeqAccess<'_>>::Error> {<__A as SeqAccess<'_>>::next_element::<u64>}, val: Value(<ZST>) }
    }

    bb48: {
        _0 = Result::<config::Config, <__A as SeqAccess<'_>>::Error>::Err(move _55); // scope 17 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb65;                    // scope 17 at no-location
    }

    bb49: {
        _59 = discriminant(_57);         // scope 21 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _59) -> [0: bb52, 1: bb50, otherwise: bb51]; // scope 21 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb50: {
        _61 = move ((_57 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::SeqAccess<'_>>::Error); // scope 21 at cita-auth/src/config.rs:15:28: 15:39
        _0 = Result::<config::Config, <__A as SeqAccess<'_>>::Error>::Err(move _61); // scope 27 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb65;                    // scope 21 at no-location
    }

    bb51: {
        unreachable;                     // scope 21 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb52: {
        _60 = ((_57 as Ok).0: std::option::Option<u64>); // scope 21 at cita-auth/src/config.rs:15:28: 15:39
        _62 = discriminant(_60);         // scope 21 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _62) -> [0: bb53, 1: bb55, otherwise: bb54]; // scope 21 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb53: {
        _82 = const _;                   // scope 21 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &&str, val: Unevaluated(<__Visitor<'de> as Visitor<'de>>::visit_seq, [ReErased, __A], Some(promoted[6])) }
        _65 = _82 as &dyn config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::Expected (Pointer(Unsize)); // scope 21 at cita-auth/src/config.rs:15:28: 15:39
        _64 = <<__A as SeqAccess<'_>>::Error as _serde::de::Error>::invalid_length(const 6_usize, move _65) -> [return: bb56, unwind: bb67]; // scope 21 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: for<'a> fn(usize, &'a (dyn _serde::de::Expected + 'a)) -> <__A as SeqAccess<'_>>::Error {<<__A as SeqAccess<'_>>::Error as _serde::de::Error>::invalid_length}, val: Value(<ZST>) }
    }

    bb54: {
        unreachable;                     // scope 21 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb55: {
        _63 = ((_60 as Some).0: u64);    // scope 21 at cita-auth/src/config.rs:15:28: 15:39
        _67 = &mut _2;                   // scope 25 at cita-auth/src/config.rs:15:28: 15:39
        _66 = <__A as SeqAccess<'_>>::next_element::<u64>(_67) -> [return: bb57, unwind: bb67]; // scope 25 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:24:5: 24:8
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: for<'a> fn(&'a mut __A) -> Result<std::option::Option<u64>, <__A as SeqAccess<'_>>::Error> {<__A as SeqAccess<'_>>::next_element::<u64>}, val: Value(<ZST>) }
    }

    bb56: {
        _0 = Result::<config::Config, <__A as SeqAccess<'_>>::Error>::Err(move _64); // scope 21 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb65;                    // scope 21 at no-location
    }

    bb57: {
        _68 = discriminant(_66);         // scope 25 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _68) -> [0: bb60, 1: bb58, otherwise: bb59]; // scope 25 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb58: {
        _70 = move ((_66 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::SeqAccess<'_>>::Error); // scope 25 at cita-auth/src/config.rs:15:28: 15:39
        _0 = Result::<config::Config, <__A as SeqAccess<'_>>::Error>::Err(move _70); // scope 31 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb65;                    // scope 25 at no-location
    }

    bb59: {
        unreachable;                     // scope 25 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb60: {
        _69 = ((_66 as Ok).0: std::option::Option<u64>); // scope 25 at cita-auth/src/config.rs:15:28: 15:39
        _71 = discriminant(_69);         // scope 25 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _71) -> [0: bb61, 1: bb63, otherwise: bb62]; // scope 25 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb61: {
        _83 = const _;                   // scope 25 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &&str, val: Unevaluated(<__Visitor<'de> as Visitor<'de>>::visit_seq, [ReErased, __A], Some(promoted[7])) }
        _74 = _83 as &dyn config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::Expected (Pointer(Unsize)); // scope 25 at cita-auth/src/config.rs:15:28: 15:39
        _73 = <<__A as SeqAccess<'_>>::Error as _serde::de::Error>::invalid_length(const 7_usize, move _74) -> [return: bb64, unwind: bb67]; // scope 25 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: for<'a> fn(usize, &'a (dyn _serde::de::Expected + 'a)) -> <__A as SeqAccess<'_>>::Error {<<__A as SeqAccess<'_>>::Error as _serde::de::Error>::invalid_length}, val: Value(<ZST>) }
    }

    bb62: {
        unreachable;                     // scope 25 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb63: {
        _72 = ((_69 as Some).0: u64);    // scope 25 at cita-auth/src/config.rs:15:28: 15:39
        _75 = config::Config { count_per_batch: _9, buffer_duration: _18, tx_verify_thread_num: _27, tx_verify_cache_size: _36, tx_pool_limit: _45, wal_enable: _54, prof_start: _63, prof_duration: _72 }; // scope 29 at cita-auth/src/config.rs:15:28: 15:39
        _0 = Result::<config::Config, <__A as SeqAccess<'_>>::Error>::Ok(move _75); // scope 29 at cita-auth/src/config.rs:15:28: 15:39
        drop(_2) -> bb66;                // scope 0 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb64: {
        _0 = Result::<config::Config, <__A as SeqAccess<'_>>::Error>::Err(move _73); // scope 25 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb65;                    // scope 25 at no-location
    }

    bb65: {
        drop(_2) -> bb66;                // scope 0 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb66: {
        return;                          // scope 0 at cita-auth/src/config.rs:15:39: 15:39
    }

    bb67 (cleanup): {
        drop(_2) -> bb68;                // scope 0 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb68 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }
}

promoted[0] in _IMPL_DESERIALIZE_FOR_Config::<impl at cita-auth/src/config.rs:15:28: 15:39>::deserialize::<impl at cita-auth/src/config.rs:15:28: 15:39>::visit_seq: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _1: &str;                    // in scope 0 at cita-auth/src/config.rs:15:28: 15:39

    bb0: {
        _1 = const "struct Config with 8 elements"; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        return;                          // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }
}

promoted[1] in _IMPL_DESERIALIZE_FOR_Config::<impl at cita-auth/src/config.rs:15:28: 15:39>::deserialize::<impl at cita-auth/src/config.rs:15:28: 15:39>::visit_seq: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _1: &str;                    // in scope 0 at cita-auth/src/config.rs:15:28: 15:39

    bb0: {
        _1 = const "struct Config with 8 elements"; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        return;                          // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }
}

promoted[2] in _IMPL_DESERIALIZE_FOR_Config::<impl at cita-auth/src/config.rs:15:28: 15:39>::deserialize::<impl at cita-auth/src/config.rs:15:28: 15:39>::visit_seq: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _1: &str;                    // in scope 0 at cita-auth/src/config.rs:15:28: 15:39

    bb0: {
        _1 = const "struct Config with 8 elements"; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        return;                          // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }
}

promoted[3] in _IMPL_DESERIALIZE_FOR_Config::<impl at cita-auth/src/config.rs:15:28: 15:39>::deserialize::<impl at cita-auth/src/config.rs:15:28: 15:39>::visit_seq: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _1: &str;                    // in scope 0 at cita-auth/src/config.rs:15:28: 15:39

    bb0: {
        _1 = const "struct Config with 8 elements"; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        return;                          // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }
}

promoted[4] in _IMPL_DESERIALIZE_FOR_Config::<impl at cita-auth/src/config.rs:15:28: 15:39>::deserialize::<impl at cita-auth/src/config.rs:15:28: 15:39>::visit_seq: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _1: &str;                    // in scope 0 at cita-auth/src/config.rs:15:28: 15:39

    bb0: {
        _1 = const "struct Config with 8 elements"; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        return;                          // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }
}

promoted[5] in _IMPL_DESERIALIZE_FOR_Config::<impl at cita-auth/src/config.rs:15:28: 15:39>::deserialize::<impl at cita-auth/src/config.rs:15:28: 15:39>::visit_seq: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _1: &str;                    // in scope 0 at cita-auth/src/config.rs:15:28: 15:39

    bb0: {
        _1 = const "struct Config with 8 elements"; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        return;                          // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }
}

promoted[6] in _IMPL_DESERIALIZE_FOR_Config::<impl at cita-auth/src/config.rs:15:28: 15:39>::deserialize::<impl at cita-auth/src/config.rs:15:28: 15:39>::visit_seq: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _1: &str;                    // in scope 0 at cita-auth/src/config.rs:15:28: 15:39

    bb0: {
        _1 = const "struct Config with 8 elements"; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        return;                          // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }
}

promoted[7] in _IMPL_DESERIALIZE_FOR_Config::<impl at cita-auth/src/config.rs:15:28: 15:39>::deserialize::<impl at cita-auth/src/config.rs:15:28: 15:39>::visit_seq: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _1: &str;                    // in scope 0 at cita-auth/src/config.rs:15:28: 15:39

    bb0: {
        _1 = const "struct Config with 8 elements"; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        return;                          // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }
}

fn _IMPL_DESERIALIZE_FOR_Config::<impl at cita-auth/src/config.rs:15:28: 15:39>::deserialize::<impl at cita-auth/src/config.rs:15:28: 15:39>::visit_map(_1: __Visitor<'_>, _2: __A) -> Result<config::Config, <__A as MapAccess<'_>>::Error> {
    debug self => const __Visitor::<'_> {{ marker: PhantomData::<config::Config>, lifetime: PhantomData::<&()> }}; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    debug __map => _2;                   // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _0: std::result::Result<config::Config, <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error>; // return place in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _3: std::option::Option<usize>; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _11: std::result::Result<std::option::Option<config::_IMPL_DESERIALIZE_FOR_Config::<impl config::_IMPL_DESERIALIZE_FOR_Config::_serde::Deserialize<'de> for config::Config>::deserialize::__Field>, <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error>; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _12: &mut __A;               // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _13: isize;                  // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _16: isize;                  // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _18: isize;                  // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _19: bool;                   // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let _20: &std::option::Option<usize>; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _21: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _22: std::option::Option<usize>; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _23: std::result::Result<usize, <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error>; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _24: &mut __A;               // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _25: isize;                  // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _28: bool;                   // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let _29: &std::option::Option<u64>;  // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _30: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _31: std::option::Option<u64>; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _32: std::result::Result<u64, <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error>; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _33: &mut __A;               // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _34: isize;                  // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _37: bool;                   // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let _38: &std::option::Option<usize>; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _39: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _40: std::option::Option<usize>; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _41: std::result::Result<usize, <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error>; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _42: &mut __A;               // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _43: isize;                  // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _46: bool;                   // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let _47: &std::option::Option<usize>; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _48: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _49: std::option::Option<usize>; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _50: std::result::Result<usize, <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error>; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _51: &mut __A;               // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _52: isize;                  // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _55: bool;                   // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let _56: &std::option::Option<usize>; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _57: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _58: std::option::Option<usize>; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _59: std::result::Result<usize, <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error>; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _60: &mut __A;               // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _61: isize;                  // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _64: bool;                   // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let _65: &std::option::Option<bool>; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _66: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _67: std::option::Option<bool>; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _68: std::result::Result<bool, <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error>; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _69: &mut __A;               // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _70: isize;                  // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _73: bool;                   // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let _74: &std::option::Option<u64>;  // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _75: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _76: std::option::Option<u64>; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _77: std::result::Result<u64, <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error>; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _78: &mut __A;               // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _79: isize;                  // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _82: bool;                   // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let _83: &std::option::Option<u64>;  // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _84: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _85: std::option::Option<u64>; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _86: std::result::Result<u64, <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error>; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _87: &mut __A;               // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _88: isize;                  // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _91: std::result::Result<config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::IgnoredAny, <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error>; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _92: &mut __A;               // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _93: isize;                  // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _96: isize;                  // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _98: std::result::Result<usize, <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error>; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _99: isize;                  // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _103: isize;                 // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _105: std::result::Result<u64, <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error>; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _106: isize;                 // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _110: isize;                 // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _112: std::result::Result<usize, <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error>; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _113: isize;                 // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _117: isize;                 // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _119: std::result::Result<usize, <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error>; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _120: isize;                 // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _124: isize;                 // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _126: std::result::Result<usize, <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error>; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _127: isize;                 // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _131: isize;                 // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _133: std::result::Result<bool, <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error>; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _134: isize;                 // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _138: isize;                 // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _140: std::result::Result<u64, <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error>; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _141: isize;                 // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _145: isize;                 // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _147: std::result::Result<u64, <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error>; // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _148: isize;                 // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _151: config::Config;        // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _152: usize;                 // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _153: u64;                   // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _154: usize;                 // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _155: usize;                 // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _156: usize;                 // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _157: bool;                  // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _158: u64;                   // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _159: u64;                   // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    scope 1 {
        debug __field0 => _3;            // in scope 1 at cita-auth/src/config.rs:15:28: 15:39
        let mut _4: std::option::Option<u64>; // in scope 1 at cita-auth/src/config.rs:15:28: 15:39
        scope 2 {
            debug __field1 => _4;        // in scope 2 at cita-auth/src/config.rs:15:28: 15:39
            let mut _5: std::option::Option<usize>; // in scope 2 at cita-auth/src/config.rs:15:28: 15:39
            scope 3 {
                debug __field2 => _5;    // in scope 3 at cita-auth/src/config.rs:15:28: 15:39
                let mut _6: std::option::Option<usize>; // in scope 3 at cita-auth/src/config.rs:15:28: 15:39
                scope 4 {
                    debug __field3 => _6; // in scope 4 at cita-auth/src/config.rs:15:28: 15:39
                    let mut _7: std::option::Option<usize>; // in scope 4 at cita-auth/src/config.rs:15:28: 15:39
                    scope 5 {
                        debug __field4 => _7; // in scope 5 at cita-auth/src/config.rs:15:28: 15:39
                        let mut _8: std::option::Option<bool>; // in scope 5 at cita-auth/src/config.rs:15:28: 15:39
                        scope 6 {
                            debug __field5 => _8; // in scope 6 at cita-auth/src/config.rs:15:28: 15:39
                            let mut _9: std::option::Option<u64>; // in scope 6 at cita-auth/src/config.rs:15:28: 15:39
                            scope 7 {
                                debug __field6 => _9; // in scope 7 at cita-auth/src/config.rs:15:28: 15:39
                                let mut _10: std::option::Option<u64>; // in scope 7 at cita-auth/src/config.rs:15:28: 15:39
                                scope 8 {
                                    debug __field7 => _10; // in scope 8 at cita-auth/src/config.rs:15:28: 15:39
                                    let _95: usize; // in scope 8 at cita-auth/src/config.rs:15:28: 15:39
                                    let _97: usize; // in scope 8 at cita-auth/src/config.rs:15:28: 15:39
                                    let _100: usize; // in scope 8 at cita-auth/src/config.rs:15:28: 15:39
                                    let _101: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error; // in scope 8 at cita-auth/src/config.rs:15:28: 15:39
                                    scope 9 {
                                        debug __key => _17; // in scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                        let _14: std::option::Option<config::_IMPL_DESERIALIZE_FOR_Config::<impl config::_IMPL_DESERIALIZE_FOR_Config::_serde::Deserialize<'de> for config::Config>::deserialize::__Field>; // in scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                        let _15: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error; // in scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                        let _17: config::_IMPL_DESERIALIZE_FOR_Config::<impl config::_IMPL_DESERIALIZE_FOR_Config::_serde::Deserialize<'de> for config::Config>::deserialize::__Field; // in scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                        let _26: usize; // in scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                        let _27: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error; // in scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                        let _35: u64; // in scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                        let _36: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error; // in scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                        let _44: usize; // in scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                        let _45: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error; // in scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                        let _53: usize; // in scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                        let _54: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error; // in scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                        let _62: usize; // in scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                        let _63: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error; // in scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                        let _71: bool; // in scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                        let _72: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error; // in scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                        let _80: u64; // in scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                        let _81: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error; // in scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                        let _89: u64; // in scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                        let _90: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error; // in scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                        let _94: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error; // in scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                        scope 10 {
                                            debug __val => _14; // in scope 10 at cita-auth/src/config.rs:15:28: 15:39
                                        }
                                        scope 11 {
                                            debug __err => _15; // in scope 11 at cita-auth/src/config.rs:15:28: 15:39
                                        }
                                        scope 12 {
                                            debug __val => _26; // in scope 12 at cita-auth/src/config.rs:15:28: 15:39
                                        }
                                        scope 13 {
                                            debug __err => _27; // in scope 13 at cita-auth/src/config.rs:15:28: 15:39
                                        }
                                        scope 14 {
                                            debug __val => _35; // in scope 14 at cita-auth/src/config.rs:15:28: 15:39
                                        }
                                        scope 15 {
                                            debug __err => _36; // in scope 15 at cita-auth/src/config.rs:15:28: 15:39
                                        }
                                        scope 16 {
                                            debug __val => _44; // in scope 16 at cita-auth/src/config.rs:15:28: 15:39
                                        }
                                        scope 17 {
                                            debug __err => _45; // in scope 17 at cita-auth/src/config.rs:15:28: 15:39
                                        }
                                        scope 18 {
                                            debug __val => _53; // in scope 18 at cita-auth/src/config.rs:15:28: 15:39
                                        }
                                        scope 19 {
                                            debug __err => _54; // in scope 19 at cita-auth/src/config.rs:15:28: 15:39
                                        }
                                        scope 20 {
                                            debug __val => _62; // in scope 20 at cita-auth/src/config.rs:15:28: 15:39
                                        }
                                        scope 21 {
                                            debug __err => _63; // in scope 21 at cita-auth/src/config.rs:15:28: 15:39
                                        }
                                        scope 22 {
                                            debug __val => _71; // in scope 22 at cita-auth/src/config.rs:15:28: 15:39
                                        }
                                        scope 23 {
                                            debug __err => _72; // in scope 23 at cita-auth/src/config.rs:15:28: 15:39
                                        }
                                        scope 24 {
                                            debug __val => _80; // in scope 24 at cita-auth/src/config.rs:15:28: 15:39
                                        }
                                        scope 25 {
                                            debug __err => _81; // in scope 25 at cita-auth/src/config.rs:15:28: 15:39
                                        }
                                        scope 26 {
                                            debug __val => _89; // in scope 26 at cita-auth/src/config.rs:15:28: 15:39
                                        }
                                        scope 27 {
                                            debug __err => _90; // in scope 27 at cita-auth/src/config.rs:15:28: 15:39
                                        }
                                        scope 28 {
                                        }
                                        scope 29 {
                                            debug __val => const IgnoredAny; // in scope 29 at cita-auth/src/config.rs:15:28: 15:39
                                        }
                                        scope 30 {
                                            debug __err => _94; // in scope 30 at cita-auth/src/config.rs:15:28: 15:39
                                        }
                                    }
                                    scope 31 {
                                        debug __field0 => _95; // in scope 31 at cita-auth/src/config.rs:15:28: 15:39
                                        let _102: u64; // in scope 31 at cita-auth/src/config.rs:15:28: 15:39
                                        let _104: u64; // in scope 31 at cita-auth/src/config.rs:15:28: 15:39
                                        let _107: u64; // in scope 31 at cita-auth/src/config.rs:15:28: 15:39
                                        let _108: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error; // in scope 31 at cita-auth/src/config.rs:15:28: 15:39
                                        scope 35 {
                                            debug __field1 => _102; // in scope 35 at cita-auth/src/config.rs:15:28: 15:39
                                            let _109: usize; // in scope 35 at cita-auth/src/config.rs:15:28: 15:39
                                            let _111: usize; // in scope 35 at cita-auth/src/config.rs:15:28: 15:39
                                            let _114: usize; // in scope 35 at cita-auth/src/config.rs:15:28: 15:39
                                            let _115: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error; // in scope 35 at cita-auth/src/config.rs:15:28: 15:39
                                            scope 39 {
                                                debug __field2 => _109; // in scope 39 at cita-auth/src/config.rs:15:28: 15:39
                                                let _116: usize; // in scope 39 at cita-auth/src/config.rs:15:28: 15:39
                                                let _118: usize; // in scope 39 at cita-auth/src/config.rs:15:28: 15:39
                                                let _121: usize; // in scope 39 at cita-auth/src/config.rs:15:28: 15:39
                                                let _122: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error; // in scope 39 at cita-auth/src/config.rs:15:28: 15:39
                                                scope 43 {
                                                    debug __field3 => _116; // in scope 43 at cita-auth/src/config.rs:15:28: 15:39
                                                    let _123: usize; // in scope 43 at cita-auth/src/config.rs:15:28: 15:39
                                                    let _125: usize; // in scope 43 at cita-auth/src/config.rs:15:28: 15:39
                                                    let _128: usize; // in scope 43 at cita-auth/src/config.rs:15:28: 15:39
                                                    let _129: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error; // in scope 43 at cita-auth/src/config.rs:15:28: 15:39
                                                    scope 47 {
                                                        debug __field4 => _123; // in scope 47 at cita-auth/src/config.rs:15:28: 15:39
                                                        let _130: bool; // in scope 47 at cita-auth/src/config.rs:15:28: 15:39
                                                        let _132: bool; // in scope 47 at cita-auth/src/config.rs:15:28: 15:39
                                                        let _135: bool; // in scope 47 at cita-auth/src/config.rs:15:28: 15:39
                                                        let _136: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error; // in scope 47 at cita-auth/src/config.rs:15:28: 15:39
                                                        scope 51 {
                                                            debug __field5 => _130; // in scope 51 at cita-auth/src/config.rs:15:28: 15:39
                                                            let _137: u64; // in scope 51 at cita-auth/src/config.rs:15:28: 15:39
                                                            let _139: u64; // in scope 51 at cita-auth/src/config.rs:15:28: 15:39
                                                            let _142: u64; // in scope 51 at cita-auth/src/config.rs:15:28: 15:39
                                                            let _143: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error; // in scope 51 at cita-auth/src/config.rs:15:28: 15:39
                                                            scope 55 {
                                                                debug __field6 => _137; // in scope 55 at cita-auth/src/config.rs:15:28: 15:39
                                                                let _144: u64; // in scope 55 at cita-auth/src/config.rs:15:28: 15:39
                                                                let _146: u64; // in scope 55 at cita-auth/src/config.rs:15:28: 15:39
                                                                let _149: u64; // in scope 55 at cita-auth/src/config.rs:15:28: 15:39
                                                                let _150: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error; // in scope 55 at cita-auth/src/config.rs:15:28: 15:39
                                                                scope 59 {
                                                                    debug __field7 => _144; // in scope 59 at cita-auth/src/config.rs:15:28: 15:39
                                                                }
                                                                scope 60 {
                                                                    debug __field7 => _146; // in scope 60 at cita-auth/src/config.rs:15:28: 15:39
                                                                }
                                                                scope 61 {
                                                                    debug __val => _149; // in scope 61 at cita-auth/src/config.rs:15:28: 15:39
                                                                }
                                                                scope 62 {
                                                                    debug __err => _150; // in scope 62 at cita-auth/src/config.rs:15:28: 15:39
                                                                }
                                                            }
                                                            scope 56 {
                                                                debug __field6 => _139; // in scope 56 at cita-auth/src/config.rs:15:28: 15:39
                                                            }
                                                            scope 57 {
                                                                debug __val => _142; // in scope 57 at cita-auth/src/config.rs:15:28: 15:39
                                                            }
                                                            scope 58 {
                                                                debug __err => _143; // in scope 58 at cita-auth/src/config.rs:15:28: 15:39
                                                            }
                                                        }
                                                        scope 52 {
                                                            debug __field5 => _132; // in scope 52 at cita-auth/src/config.rs:15:28: 15:39
                                                        }
                                                        scope 53 {
                                                            debug __val => _135; // in scope 53 at cita-auth/src/config.rs:15:28: 15:39
                                                        }
                                                        scope 54 {
                                                            debug __err => _136; // in scope 54 at cita-auth/src/config.rs:15:28: 15:39
                                                        }
                                                    }
                                                    scope 48 {
                                                        debug __field4 => _125; // in scope 48 at cita-auth/src/config.rs:15:28: 15:39
                                                    }
                                                    scope 49 {
                                                        debug __val => _128; // in scope 49 at cita-auth/src/config.rs:15:28: 15:39
                                                    }
                                                    scope 50 {
                                                        debug __err => _129; // in scope 50 at cita-auth/src/config.rs:15:28: 15:39
                                                    }
                                                }
                                                scope 44 {
                                                    debug __field3 => _118; // in scope 44 at cita-auth/src/config.rs:15:28: 15:39
                                                }
                                                scope 45 {
                                                    debug __val => _121; // in scope 45 at cita-auth/src/config.rs:15:28: 15:39
                                                }
                                                scope 46 {
                                                    debug __err => _122; // in scope 46 at cita-auth/src/config.rs:15:28: 15:39
                                                }
                                            }
                                            scope 40 {
                                                debug __field2 => _111; // in scope 40 at cita-auth/src/config.rs:15:28: 15:39
                                            }
                                            scope 41 {
                                                debug __val => _114; // in scope 41 at cita-auth/src/config.rs:15:28: 15:39
                                            }
                                            scope 42 {
                                                debug __err => _115; // in scope 42 at cita-auth/src/config.rs:15:28: 15:39
                                            }
                                        }
                                        scope 36 {
                                            debug __field1 => _104; // in scope 36 at cita-auth/src/config.rs:15:28: 15:39
                                        }
                                        scope 37 {
                                            debug __val => _107; // in scope 37 at cita-auth/src/config.rs:15:28: 15:39
                                        }
                                        scope 38 {
                                            debug __err => _108; // in scope 38 at cita-auth/src/config.rs:15:28: 15:39
                                        }
                                    }
                                    scope 32 {
                                        debug __field0 => _97; // in scope 32 at cita-auth/src/config.rs:15:28: 15:39
                                    }
                                    scope 33 {
                                        debug __val => _100; // in scope 33 at cita-auth/src/config.rs:15:28: 15:39
                                    }
                                    scope 34 {
                                        debug __err => _101; // in scope 34 at cita-auth/src/config.rs:15:28: 15:39
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _3 = std::option::Option::<usize>::None; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        _4 = std::option::Option::<u64>::None; // scope 1 at cita-auth/src/config.rs:15:28: 15:39
        _5 = std::option::Option::<usize>::None; // scope 2 at cita-auth/src/config.rs:15:28: 15:39
        _6 = std::option::Option::<usize>::None; // scope 3 at cita-auth/src/config.rs:15:28: 15:39
        _7 = std::option::Option::<usize>::None; // scope 4 at cita-auth/src/config.rs:15:28: 15:39
        _8 = std::option::Option::<bool>::None; // scope 5 at cita-auth/src/config.rs:15:28: 15:39
        _9 = std::option::Option::<u64>::None; // scope 6 at cita-auth/src/config.rs:15:28: 15:39
        _10 = std::option::Option::<u64>::None; // scope 7 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb1;                     // scope 8 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb1: {
        _12 = &mut _2;                   // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _11 = <__A as MapAccess<'_>>::next_key::<__Field>(_12) -> [return: bb2, unwind: bb150]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + user_ty: UserType(16)
                                         // + literal: Const { ty: for<'a> fn(&'a mut __A) -> Result<std::option::Option<__Field>, <__A as MapAccess<'_>>::Error> {<__A as MapAccess<'_>>::next_key::<__Field>}, val: Value(<ZST>) }
    }

    bb2: {
        _13 = discriminant(_11);         // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _13) -> [0: bb5, 1: bb3, otherwise: bb4]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb3: {
        _15 = move ((_11 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error); // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _0 = Result::<config::Config, <__A as MapAccess<'_>>::Error>::Err(move _15); // scope 11 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb148;                   // scope 9 at no-location
    }

    bb4: {
        unreachable;                     // scope 9 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb5: {
        _14 = move ((_11 as Ok).0: std::option::Option<config::_IMPL_DESERIALIZE_FOR_Config::<impl config::_IMPL_DESERIALIZE_FOR_Config::_serde::Deserialize<'de> for config::Config>::deserialize::__Field>); // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _16 = discriminant(_14);         // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _16) -> [1: bb7, otherwise: bb6]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb6: {
        _96 = discriminant(_3);          // scope 8 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _96) -> [0: bb84, 1: bb86, otherwise: bb85]; // scope 8 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb7: {
        _17 = move ((_14 as Some).0: config::_IMPL_DESERIALIZE_FOR_Config::<impl config::_IMPL_DESERIALIZE_FOR_Config::_serde::Deserialize<'de> for config::Config>::deserialize::__Field); // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _18 = discriminant(_17);         // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _18) -> [0: bb9, 1: bb18, 2: bb27, 3: bb36, 4: bb45, 5: bb54, 6: bb63, 7: bb72, otherwise: bb8]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb8: {
        _92 = &mut _2;                   // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _91 = <__A as MapAccess<'_>>::next_value::<IgnoredAny>(_92) -> [return: bb81, unwind: bb150]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + user_ty: UserType(41)
                                         // + literal: Const { ty: for<'a> fn(&'a mut __A) -> Result<IgnoredAny, <__A as MapAccess<'_>>::Error> {<__A as MapAccess<'_>>::next_value::<IgnoredAny>}, val: Value(<ZST>) }
    }

    bb9: {
        _20 = &_3;                       // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _19 = std::option::Option::<usize>::is_some(_20) -> [return: bb10, unwind: bb150]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + user_ty: UserType(17)
                                         // + literal: Const { ty: for<'a> fn(&'a std::option::Option<usize>) -> bool {std::option::Option::<usize>::is_some}, val: Value(<ZST>) }
    }

    bb10: {
        switchInt(move _19) -> [0: bb13, otherwise: bb11]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb11: {
        _21 = <<__A as MapAccess<'_>>::Error as _serde::de::Error>::duplicate_field(const "count_per_batch") -> [return: bb12, unwind: bb150]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + user_ty: UserType(18)
                                         // + literal: Const { ty: fn(&'static str) -> <__A as MapAccess<'_>>::Error {<<__A as MapAccess<'_>>::Error as _serde::de::Error>::duplicate_field}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb12: {
        _0 = Result::<config::Config, <__A as MapAccess<'_>>::Error>::Err(move _21); // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb148;                   // scope 9 at no-location
    }

    bb13: {
        _24 = &mut _2;                   // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _23 = <__A as MapAccess<'_>>::next_value::<usize>(_24) -> [return: bb14, unwind: bb150]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:17:5: 17:8
                                         // + user_ty: UserType(19)
                                         // + literal: Const { ty: for<'a> fn(&'a mut __A) -> Result<usize, <__A as MapAccess<'_>>::Error> {<__A as MapAccess<'_>>::next_value::<usize>}, val: Value(<ZST>) }
    }

    bb14: {
        _25 = discriminant(_23);         // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _25) -> [0: bb17, 1: bb15, otherwise: bb16]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb15: {
        _27 = move ((_23 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error); // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _0 = Result::<config::Config, <__A as MapAccess<'_>>::Error>::Err(move _27); // scope 13 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb148;                   // scope 9 at no-location
    }

    bb16: {
        unreachable;                     // scope 9 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb17: {
        _26 = ((_23 as Ok).0: usize);    // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _22 = std::option::Option::<usize>::Some(_26); // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _3 = move _22;                   // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb1;                     // scope 9 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb18: {
        _29 = &_4;                       // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _28 = std::option::Option::<u64>::is_some(_29) -> [return: bb19, unwind: bb150]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + user_ty: UserType(20)
                                         // + literal: Const { ty: for<'a> fn(&'a std::option::Option<u64>) -> bool {std::option::Option::<u64>::is_some}, val: Value(<ZST>) }
    }

    bb19: {
        switchInt(move _28) -> [0: bb22, otherwise: bb20]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb20: {
        _30 = <<__A as MapAccess<'_>>::Error as _serde::de::Error>::duplicate_field(const "buffer_duration") -> [return: bb21, unwind: bb150]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + user_ty: UserType(21)
                                         // + literal: Const { ty: fn(&'static str) -> <__A as MapAccess<'_>>::Error {<<__A as MapAccess<'_>>::Error as _serde::de::Error>::duplicate_field}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb21: {
        _0 = Result::<config::Config, <__A as MapAccess<'_>>::Error>::Err(move _30); // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb148;                   // scope 9 at no-location
    }

    bb22: {
        _33 = &mut _2;                   // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _32 = <__A as MapAccess<'_>>::next_value::<u64>(_33) -> [return: bb23, unwind: bb150]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:18:5: 18:8
                                         // + user_ty: UserType(22)
                                         // + literal: Const { ty: for<'a> fn(&'a mut __A) -> Result<u64, <__A as MapAccess<'_>>::Error> {<__A as MapAccess<'_>>::next_value::<u64>}, val: Value(<ZST>) }
    }

    bb23: {
        _34 = discriminant(_32);         // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _34) -> [0: bb26, 1: bb24, otherwise: bb25]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb24: {
        _36 = move ((_32 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error); // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _0 = Result::<config::Config, <__A as MapAccess<'_>>::Error>::Err(move _36); // scope 15 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb148;                   // scope 9 at no-location
    }

    bb25: {
        unreachable;                     // scope 9 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb26: {
        _35 = ((_32 as Ok).0: u64);      // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _31 = std::option::Option::<u64>::Some(_35); // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _4 = move _31;                   // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb1;                     // scope 9 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb27: {
        _38 = &_5;                       // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _37 = std::option::Option::<usize>::is_some(_38) -> [return: bb28, unwind: bb150]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + user_ty: UserType(23)
                                         // + literal: Const { ty: for<'a> fn(&'a std::option::Option<usize>) -> bool {std::option::Option::<usize>::is_some}, val: Value(<ZST>) }
    }

    bb28: {
        switchInt(move _37) -> [0: bb31, otherwise: bb29]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb29: {
        _39 = <<__A as MapAccess<'_>>::Error as _serde::de::Error>::duplicate_field(const "tx_verify_thread_num") -> [return: bb30, unwind: bb150]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + user_ty: UserType(24)
                                         // + literal: Const { ty: fn(&'static str) -> <__A as MapAccess<'_>>::Error {<<__A as MapAccess<'_>>::Error as _serde::de::Error>::duplicate_field}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb30: {
        _0 = Result::<config::Config, <__A as MapAccess<'_>>::Error>::Err(move _39); // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb148;                   // scope 9 at no-location
    }

    bb31: {
        _42 = &mut _2;                   // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _41 = <__A as MapAccess<'_>>::next_value::<usize>(_42) -> [return: bb32, unwind: bb150]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:19:5: 19:8
                                         // + user_ty: UserType(25)
                                         // + literal: Const { ty: for<'a> fn(&'a mut __A) -> Result<usize, <__A as MapAccess<'_>>::Error> {<__A as MapAccess<'_>>::next_value::<usize>}, val: Value(<ZST>) }
    }

    bb32: {
        _43 = discriminant(_41);         // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _43) -> [0: bb35, 1: bb33, otherwise: bb34]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb33: {
        _45 = move ((_41 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error); // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _0 = Result::<config::Config, <__A as MapAccess<'_>>::Error>::Err(move _45); // scope 17 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb148;                   // scope 9 at no-location
    }

    bb34: {
        unreachable;                     // scope 9 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb35: {
        _44 = ((_41 as Ok).0: usize);    // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _40 = std::option::Option::<usize>::Some(_44); // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _5 = move _40;                   // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb1;                     // scope 9 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb36: {
        _47 = &_6;                       // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _46 = std::option::Option::<usize>::is_some(_47) -> [return: bb37, unwind: bb150]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + user_ty: UserType(26)
                                         // + literal: Const { ty: for<'a> fn(&'a std::option::Option<usize>) -> bool {std::option::Option::<usize>::is_some}, val: Value(<ZST>) }
    }

    bb37: {
        switchInt(move _46) -> [0: bb40, otherwise: bb38]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb38: {
        _48 = <<__A as MapAccess<'_>>::Error as _serde::de::Error>::duplicate_field(const "tx_verify_cache_size") -> [return: bb39, unwind: bb150]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + user_ty: UserType(27)
                                         // + literal: Const { ty: fn(&'static str) -> <__A as MapAccess<'_>>::Error {<<__A as MapAccess<'_>>::Error as _serde::de::Error>::duplicate_field}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb39: {
        _0 = Result::<config::Config, <__A as MapAccess<'_>>::Error>::Err(move _48); // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb148;                   // scope 9 at no-location
    }

    bb40: {
        _51 = &mut _2;                   // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _50 = <__A as MapAccess<'_>>::next_value::<usize>(_51) -> [return: bb41, unwind: bb150]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:20:5: 20:8
                                         // + user_ty: UserType(28)
                                         // + literal: Const { ty: for<'a> fn(&'a mut __A) -> Result<usize, <__A as MapAccess<'_>>::Error> {<__A as MapAccess<'_>>::next_value::<usize>}, val: Value(<ZST>) }
    }

    bb41: {
        _52 = discriminant(_50);         // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _52) -> [0: bb44, 1: bb42, otherwise: bb43]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb42: {
        _54 = move ((_50 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error); // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _0 = Result::<config::Config, <__A as MapAccess<'_>>::Error>::Err(move _54); // scope 19 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb148;                   // scope 9 at no-location
    }

    bb43: {
        unreachable;                     // scope 9 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb44: {
        _53 = ((_50 as Ok).0: usize);    // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _49 = std::option::Option::<usize>::Some(_53); // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _6 = move _49;                   // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb1;                     // scope 9 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb45: {
        _56 = &_7;                       // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _55 = std::option::Option::<usize>::is_some(_56) -> [return: bb46, unwind: bb150]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + user_ty: UserType(29)
                                         // + literal: Const { ty: for<'a> fn(&'a std::option::Option<usize>) -> bool {std::option::Option::<usize>::is_some}, val: Value(<ZST>) }
    }

    bb46: {
        switchInt(move _55) -> [0: bb49, otherwise: bb47]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb47: {
        _57 = <<__A as MapAccess<'_>>::Error as _serde::de::Error>::duplicate_field(const "tx_pool_limit") -> [return: bb48, unwind: bb150]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + user_ty: UserType(30)
                                         // + literal: Const { ty: fn(&'static str) -> <__A as MapAccess<'_>>::Error {<<__A as MapAccess<'_>>::Error as _serde::de::Error>::duplicate_field}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb48: {
        _0 = Result::<config::Config, <__A as MapAccess<'_>>::Error>::Err(move _57); // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb148;                   // scope 9 at no-location
    }

    bb49: {
        _60 = &mut _2;                   // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _59 = <__A as MapAccess<'_>>::next_value::<usize>(_60) -> [return: bb50, unwind: bb150]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:21:5: 21:8
                                         // + user_ty: UserType(31)
                                         // + literal: Const { ty: for<'a> fn(&'a mut __A) -> Result<usize, <__A as MapAccess<'_>>::Error> {<__A as MapAccess<'_>>::next_value::<usize>}, val: Value(<ZST>) }
    }

    bb50: {
        _61 = discriminant(_59);         // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _61) -> [0: bb53, 1: bb51, otherwise: bb52]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb51: {
        _63 = move ((_59 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error); // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _0 = Result::<config::Config, <__A as MapAccess<'_>>::Error>::Err(move _63); // scope 21 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb148;                   // scope 9 at no-location
    }

    bb52: {
        unreachable;                     // scope 9 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb53: {
        _62 = ((_59 as Ok).0: usize);    // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _58 = std::option::Option::<usize>::Some(_62); // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _7 = move _58;                   // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb1;                     // scope 9 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb54: {
        _65 = &_8;                       // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _64 = std::option::Option::<bool>::is_some(_65) -> [return: bb55, unwind: bb150]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + user_ty: UserType(32)
                                         // + literal: Const { ty: for<'a> fn(&'a std::option::Option<bool>) -> bool {std::option::Option::<bool>::is_some}, val: Value(<ZST>) }
    }

    bb55: {
        switchInt(move _64) -> [0: bb58, otherwise: bb56]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb56: {
        _66 = <<__A as MapAccess<'_>>::Error as _serde::de::Error>::duplicate_field(const "wal_enable") -> [return: bb57, unwind: bb150]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + user_ty: UserType(33)
                                         // + literal: Const { ty: fn(&'static str) -> <__A as MapAccess<'_>>::Error {<<__A as MapAccess<'_>>::Error as _serde::de::Error>::duplicate_field}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb57: {
        _0 = Result::<config::Config, <__A as MapAccess<'_>>::Error>::Err(move _66); // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb148;                   // scope 9 at no-location
    }

    bb58: {
        _69 = &mut _2;                   // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _68 = <__A as MapAccess<'_>>::next_value::<bool>(_69) -> [return: bb59, unwind: bb150]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:22:5: 22:8
                                         // + user_ty: UserType(34)
                                         // + literal: Const { ty: for<'a> fn(&'a mut __A) -> Result<bool, <__A as MapAccess<'_>>::Error> {<__A as MapAccess<'_>>::next_value::<bool>}, val: Value(<ZST>) }
    }

    bb59: {
        _70 = discriminant(_68);         // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _70) -> [0: bb62, 1: bb60, otherwise: bb61]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb60: {
        _72 = move ((_68 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error); // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _0 = Result::<config::Config, <__A as MapAccess<'_>>::Error>::Err(move _72); // scope 23 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb148;                   // scope 9 at no-location
    }

    bb61: {
        unreachable;                     // scope 9 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb62: {
        _71 = ((_68 as Ok).0: bool);     // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _67 = std::option::Option::<bool>::Some(_71); // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _8 = move _67;                   // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb1;                     // scope 9 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb63: {
        _74 = &_9;                       // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _73 = std::option::Option::<u64>::is_some(_74) -> [return: bb64, unwind: bb150]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + user_ty: UserType(35)
                                         // + literal: Const { ty: for<'a> fn(&'a std::option::Option<u64>) -> bool {std::option::Option::<u64>::is_some}, val: Value(<ZST>) }
    }

    bb64: {
        switchInt(move _73) -> [0: bb67, otherwise: bb65]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb65: {
        _75 = <<__A as MapAccess<'_>>::Error as _serde::de::Error>::duplicate_field(const "prof_start") -> [return: bb66, unwind: bb150]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + user_ty: UserType(36)
                                         // + literal: Const { ty: fn(&'static str) -> <__A as MapAccess<'_>>::Error {<<__A as MapAccess<'_>>::Error as _serde::de::Error>::duplicate_field}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb66: {
        _0 = Result::<config::Config, <__A as MapAccess<'_>>::Error>::Err(move _75); // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb148;                   // scope 9 at no-location
    }

    bb67: {
        _78 = &mut _2;                   // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _77 = <__A as MapAccess<'_>>::next_value::<u64>(_78) -> [return: bb68, unwind: bb150]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:23:5: 23:8
                                         // + user_ty: UserType(37)
                                         // + literal: Const { ty: for<'a> fn(&'a mut __A) -> Result<u64, <__A as MapAccess<'_>>::Error> {<__A as MapAccess<'_>>::next_value::<u64>}, val: Value(<ZST>) }
    }

    bb68: {
        _79 = discriminant(_77);         // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _79) -> [0: bb71, 1: bb69, otherwise: bb70]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb69: {
        _81 = move ((_77 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error); // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _0 = Result::<config::Config, <__A as MapAccess<'_>>::Error>::Err(move _81); // scope 25 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb148;                   // scope 9 at no-location
    }

    bb70: {
        unreachable;                     // scope 9 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb71: {
        _80 = ((_77 as Ok).0: u64);      // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _76 = std::option::Option::<u64>::Some(_80); // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _9 = move _76;                   // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb1;                     // scope 9 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb72: {
        _83 = &_10;                      // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _82 = std::option::Option::<u64>::is_some(_83) -> [return: bb73, unwind: bb150]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + user_ty: UserType(38)
                                         // + literal: Const { ty: for<'a> fn(&'a std::option::Option<u64>) -> bool {std::option::Option::<u64>::is_some}, val: Value(<ZST>) }
    }

    bb73: {
        switchInt(move _82) -> [0: bb76, otherwise: bb74]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb74: {
        _84 = <<__A as MapAccess<'_>>::Error as _serde::de::Error>::duplicate_field(const "prof_duration") -> [return: bb75, unwind: bb150]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + user_ty: UserType(39)
                                         // + literal: Const { ty: fn(&'static str) -> <__A as MapAccess<'_>>::Error {<<__A as MapAccess<'_>>::Error as _serde::de::Error>::duplicate_field}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb75: {
        _0 = Result::<config::Config, <__A as MapAccess<'_>>::Error>::Err(move _84); // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb148;                   // scope 9 at no-location
    }

    bb76: {
        _87 = &mut _2;                   // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _86 = <__A as MapAccess<'_>>::next_value::<u64>(_87) -> [return: bb77, unwind: bb150]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:24:5: 24:8
                                         // + user_ty: UserType(40)
                                         // + literal: Const { ty: for<'a> fn(&'a mut __A) -> Result<u64, <__A as MapAccess<'_>>::Error> {<__A as MapAccess<'_>>::next_value::<u64>}, val: Value(<ZST>) }
    }

    bb77: {
        _88 = discriminant(_86);         // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _88) -> [0: bb80, 1: bb78, otherwise: bb79]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb78: {
        _90 = move ((_86 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error); // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _0 = Result::<config::Config, <__A as MapAccess<'_>>::Error>::Err(move _90); // scope 27 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb148;                   // scope 9 at no-location
    }

    bb79: {
        unreachable;                     // scope 9 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb80: {
        _89 = ((_86 as Ok).0: u64);      // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _85 = std::option::Option::<u64>::Some(_89); // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _10 = move _85;                  // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb1;                     // scope 9 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb81: {
        _93 = discriminant(_91);         // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _93) -> [0: bb1, 1: bb82, otherwise: bb83]; // scope 9 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb82: {
        _94 = move ((_91 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error); // scope 9 at cita-auth/src/config.rs:15:28: 15:39
        _0 = Result::<config::Config, <__A as MapAccess<'_>>::Error>::Err(move _94); // scope 30 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb148;                   // scope 9 at no-location
    }

    bb83: {
        unreachable;                     // scope 9 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb84: {
        _98 = _serde::private::de::missing_field::<'_, usize, <__A as MapAccess<'_>>::Error>(const "count_per_batch") -> [return: bb87, unwind: bb150]; // scope 8 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:17:5: 17:8
                                         // + literal: Const { ty: fn(&'static str) -> Result<usize, <__A as MapAccess<'_>>::Error> {_serde::private::de::missing_field::<'_, usize, <__A as MapAccess<'_>>::Error>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb85: {
        unreachable;                     // scope 8 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb86: {
        _97 = ((_3 as Some).0: usize);   // scope 8 at cita-auth/src/config.rs:15:28: 15:39
        _95 = _97;                       // scope 32 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb91;                    // scope 8 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb87: {
        _99 = discriminant(_98);         // scope 8 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _99) -> [0: bb90, 1: bb88, otherwise: bb89]; // scope 8 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb88: {
        _101 = move ((_98 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error); // scope 8 at cita-auth/src/config.rs:15:28: 15:39
        _0 = Result::<config::Config, <__A as MapAccess<'_>>::Error>::Err(move _101); // scope 34 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb148;                   // scope 8 at no-location
    }

    bb89: {
        unreachable;                     // scope 8 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb90: {
        _100 = ((_98 as Ok).0: usize);   // scope 8 at cita-auth/src/config.rs:15:28: 15:39
        _95 = _100;                      // scope 33 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb91;                    // scope 8 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb91: {
        _103 = discriminant(_4);         // scope 31 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _103) -> [0: bb92, 1: bb94, otherwise: bb93]; // scope 31 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb92: {
        _105 = _serde::private::de::missing_field::<'_, u64, <__A as MapAccess<'_>>::Error>(const "buffer_duration") -> [return: bb95, unwind: bb150]; // scope 31 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:18:5: 18:8
                                         // + literal: Const { ty: fn(&'static str) -> Result<u64, <__A as MapAccess<'_>>::Error> {_serde::private::de::missing_field::<'_, u64, <__A as MapAccess<'_>>::Error>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb93: {
        unreachable;                     // scope 31 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb94: {
        _104 = ((_4 as Some).0: u64);    // scope 31 at cita-auth/src/config.rs:15:28: 15:39
        _102 = _104;                     // scope 36 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb99;                    // scope 31 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb95: {
        _106 = discriminant(_105);       // scope 31 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _106) -> [0: bb98, 1: bb96, otherwise: bb97]; // scope 31 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb96: {
        _108 = move ((_105 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error); // scope 31 at cita-auth/src/config.rs:15:28: 15:39
        _0 = Result::<config::Config, <__A as MapAccess<'_>>::Error>::Err(move _108); // scope 38 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb148;                   // scope 31 at no-location
    }

    bb97: {
        unreachable;                     // scope 31 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb98: {
        _107 = ((_105 as Ok).0: u64);    // scope 31 at cita-auth/src/config.rs:15:28: 15:39
        _102 = _107;                     // scope 37 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb99;                    // scope 31 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb99: {
        _110 = discriminant(_5);         // scope 35 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _110) -> [0: bb100, 1: bb102, otherwise: bb101]; // scope 35 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb100: {
        _112 = _serde::private::de::missing_field::<'_, usize, <__A as MapAccess<'_>>::Error>(const "tx_verify_thread_num") -> [return: bb103, unwind: bb150]; // scope 35 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:19:5: 19:8
                                         // + literal: Const { ty: fn(&'static str) -> Result<usize, <__A as MapAccess<'_>>::Error> {_serde::private::de::missing_field::<'_, usize, <__A as MapAccess<'_>>::Error>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb101: {
        unreachable;                     // scope 35 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb102: {
        _111 = ((_5 as Some).0: usize);  // scope 35 at cita-auth/src/config.rs:15:28: 15:39
        _109 = _111;                     // scope 40 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb107;                   // scope 35 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb103: {
        _113 = discriminant(_112);       // scope 35 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _113) -> [0: bb106, 1: bb104, otherwise: bb105]; // scope 35 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb104: {
        _115 = move ((_112 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error); // scope 35 at cita-auth/src/config.rs:15:28: 15:39
        _0 = Result::<config::Config, <__A as MapAccess<'_>>::Error>::Err(move _115); // scope 42 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb148;                   // scope 35 at no-location
    }

    bb105: {
        unreachable;                     // scope 35 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb106: {
        _114 = ((_112 as Ok).0: usize);  // scope 35 at cita-auth/src/config.rs:15:28: 15:39
        _109 = _114;                     // scope 41 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb107;                   // scope 35 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb107: {
        _117 = discriminant(_6);         // scope 39 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _117) -> [0: bb108, 1: bb110, otherwise: bb109]; // scope 39 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb108: {
        _119 = _serde::private::de::missing_field::<'_, usize, <__A as MapAccess<'_>>::Error>(const "tx_verify_cache_size") -> [return: bb111, unwind: bb150]; // scope 39 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:20:5: 20:8
                                         // + literal: Const { ty: fn(&'static str) -> Result<usize, <__A as MapAccess<'_>>::Error> {_serde::private::de::missing_field::<'_, usize, <__A as MapAccess<'_>>::Error>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb109: {
        unreachable;                     // scope 39 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb110: {
        _118 = ((_6 as Some).0: usize);  // scope 39 at cita-auth/src/config.rs:15:28: 15:39
        _116 = _118;                     // scope 44 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb115;                   // scope 39 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb111: {
        _120 = discriminant(_119);       // scope 39 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _120) -> [0: bb114, 1: bb112, otherwise: bb113]; // scope 39 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb112: {
        _122 = move ((_119 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error); // scope 39 at cita-auth/src/config.rs:15:28: 15:39
        _0 = Result::<config::Config, <__A as MapAccess<'_>>::Error>::Err(move _122); // scope 46 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb148;                   // scope 39 at no-location
    }

    bb113: {
        unreachable;                     // scope 39 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb114: {
        _121 = ((_119 as Ok).0: usize);  // scope 39 at cita-auth/src/config.rs:15:28: 15:39
        _116 = _121;                     // scope 45 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb115;                   // scope 39 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb115: {
        _124 = discriminant(_7);         // scope 43 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _124) -> [0: bb116, 1: bb118, otherwise: bb117]; // scope 43 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb116: {
        _126 = _serde::private::de::missing_field::<'_, usize, <__A as MapAccess<'_>>::Error>(const "tx_pool_limit") -> [return: bb119, unwind: bb150]; // scope 43 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:21:5: 21:8
                                         // + literal: Const { ty: fn(&'static str) -> Result<usize, <__A as MapAccess<'_>>::Error> {_serde::private::de::missing_field::<'_, usize, <__A as MapAccess<'_>>::Error>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb117: {
        unreachable;                     // scope 43 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb118: {
        _125 = ((_7 as Some).0: usize);  // scope 43 at cita-auth/src/config.rs:15:28: 15:39
        _123 = _125;                     // scope 48 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb123;                   // scope 43 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb119: {
        _127 = discriminant(_126);       // scope 43 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _127) -> [0: bb122, 1: bb120, otherwise: bb121]; // scope 43 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb120: {
        _129 = move ((_126 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error); // scope 43 at cita-auth/src/config.rs:15:28: 15:39
        _0 = Result::<config::Config, <__A as MapAccess<'_>>::Error>::Err(move _129); // scope 50 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb148;                   // scope 43 at no-location
    }

    bb121: {
        unreachable;                     // scope 43 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb122: {
        _128 = ((_126 as Ok).0: usize);  // scope 43 at cita-auth/src/config.rs:15:28: 15:39
        _123 = _128;                     // scope 49 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb123;                   // scope 43 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb123: {
        _131 = discriminant(_8);         // scope 47 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _131) -> [0: bb124, 1: bb126, otherwise: bb125]; // scope 47 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb124: {
        _133 = _serde::private::de::missing_field::<'_, bool, <__A as MapAccess<'_>>::Error>(const "wal_enable") -> [return: bb127, unwind: bb150]; // scope 47 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:22:5: 22:8
                                         // + literal: Const { ty: fn(&'static str) -> Result<bool, <__A as MapAccess<'_>>::Error> {_serde::private::de::missing_field::<'_, bool, <__A as MapAccess<'_>>::Error>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb125: {
        unreachable;                     // scope 47 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb126: {
        _132 = ((_8 as Some).0: bool);   // scope 47 at cita-auth/src/config.rs:15:28: 15:39
        _130 = _132;                     // scope 52 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb131;                   // scope 47 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb127: {
        _134 = discriminant(_133);       // scope 47 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _134) -> [0: bb130, 1: bb128, otherwise: bb129]; // scope 47 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb128: {
        _136 = move ((_133 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error); // scope 47 at cita-auth/src/config.rs:15:28: 15:39
        _0 = Result::<config::Config, <__A as MapAccess<'_>>::Error>::Err(move _136); // scope 54 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb148;                   // scope 47 at no-location
    }

    bb129: {
        unreachable;                     // scope 47 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb130: {
        _135 = ((_133 as Ok).0: bool);   // scope 47 at cita-auth/src/config.rs:15:28: 15:39
        _130 = _135;                     // scope 53 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb131;                   // scope 47 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb131: {
        _138 = discriminant(_9);         // scope 51 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _138) -> [0: bb132, 1: bb134, otherwise: bb133]; // scope 51 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb132: {
        _140 = _serde::private::de::missing_field::<'_, u64, <__A as MapAccess<'_>>::Error>(const "prof_start") -> [return: bb135, unwind: bb150]; // scope 51 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:23:5: 23:8
                                         // + literal: Const { ty: fn(&'static str) -> Result<u64, <__A as MapAccess<'_>>::Error> {_serde::private::de::missing_field::<'_, u64, <__A as MapAccess<'_>>::Error>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb133: {
        unreachable;                     // scope 51 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb134: {
        _139 = ((_9 as Some).0: u64);    // scope 51 at cita-auth/src/config.rs:15:28: 15:39
        _137 = _139;                     // scope 56 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb139;                   // scope 51 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb135: {
        _141 = discriminant(_140);       // scope 51 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _141) -> [0: bb138, 1: bb136, otherwise: bb137]; // scope 51 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb136: {
        _143 = move ((_140 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error); // scope 51 at cita-auth/src/config.rs:15:28: 15:39
        _0 = Result::<config::Config, <__A as MapAccess<'_>>::Error>::Err(move _143); // scope 58 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb148;                   // scope 51 at no-location
    }

    bb137: {
        unreachable;                     // scope 51 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb138: {
        _142 = ((_140 as Ok).0: u64);    // scope 51 at cita-auth/src/config.rs:15:28: 15:39
        _137 = _142;                     // scope 57 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb139;                   // scope 51 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb139: {
        _145 = discriminant(_10);        // scope 55 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _145) -> [0: bb140, 1: bb142, otherwise: bb141]; // scope 55 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb140: {
        _147 = _serde::private::de::missing_field::<'_, u64, <__A as MapAccess<'_>>::Error>(const "prof_duration") -> [return: bb143, unwind: bb150]; // scope 55 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:24:5: 24:8
                                         // + literal: Const { ty: fn(&'static str) -> Result<u64, <__A as MapAccess<'_>>::Error> {_serde::private::de::missing_field::<'_, u64, <__A as MapAccess<'_>>::Error>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb141: {
        unreachable;                     // scope 55 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb142: {
        _146 = ((_10 as Some).0: u64);   // scope 55 at cita-auth/src/config.rs:15:28: 15:39
        _144 = _146;                     // scope 60 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb147;                   // scope 55 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb143: {
        _148 = discriminant(_147);       // scope 55 at cita-auth/src/config.rs:15:28: 15:39
        switchInt(move _148) -> [0: bb146, 1: bb144, otherwise: bb145]; // scope 55 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb144: {
        _150 = move ((_147 as Err).0: <__A as config::_IMPL_DESERIALIZE_FOR_Config::_serde::de::MapAccess<'_>>::Error); // scope 55 at cita-auth/src/config.rs:15:28: 15:39
        _0 = Result::<config::Config, <__A as MapAccess<'_>>::Error>::Err(move _150); // scope 62 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb148;                   // scope 55 at no-location
    }

    bb145: {
        unreachable;                     // scope 55 at cita-auth/src/config.rs:15:28: 15:39
    }

    bb146: {
        _149 = ((_147 as Ok).0: u64);    // scope 55 at cita-auth/src/config.rs:15:28: 15:39
        _144 = _149;                     // scope 61 at cita-auth/src/config.rs:15:28: 15:39
        goto -> bb147;                   // scope 55 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb147: {
        _152 = _95;                      // scope 59 at cita-auth/src/config.rs:15:28: 15:39
        _153 = _102;                     // scope 59 at cita-auth/src/config.rs:15:28: 15:39
        _154 = _109;                     // scope 59 at cita-auth/src/config.rs:15:28: 15:39
        _155 = _116;                     // scope 59 at cita-auth/src/config.rs:15:28: 15:39
        _156 = _123;                     // scope 59 at cita-auth/src/config.rs:15:28: 15:39
        _157 = _130;                     // scope 59 at cita-auth/src/config.rs:15:28: 15:39
        _158 = _137;                     // scope 59 at cita-auth/src/config.rs:15:28: 15:39
        _159 = _144;                     // scope 59 at cita-auth/src/config.rs:15:28: 15:39
        _151 = config::Config { count_per_batch: move _152, buffer_duration: move _153, tx_verify_thread_num: move _154, tx_verify_cache_size: move _155, tx_pool_limit: move _156, wal_enable: move _157, prof_start: move _158, prof_duration: move _159 }; // scope 59 at cita-auth/src/config.rs:15:28: 15:39
        _0 = Result::<config::Config, <__A as MapAccess<'_>>::Error>::Ok(move _151); // scope 59 at cita-auth/src/config.rs:15:28: 15:39
        drop(_2) -> bb149;               // scope 0 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb148: {
        drop(_2) -> bb149;               // scope 0 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb149: {
        return;                          // scope 0 at cita-auth/src/config.rs:15:39: 15:39
    }

    bb150 (cleanup): {
        drop(_2) -> bb151;               // scope 0 at cita-auth/src/config.rs:15:38: 15:39
    }

    bb151 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }
}

const FIELDS: &[&str] = {
    let mut _0: &[&str];                 // return place in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _1: &[&str; 8];              // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let _2: &[&str; 8];                  // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let _3: [&str; 8];                   // in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _4: &[&str; 8];              // in scope 0 at cita-auth/src/config.rs:15:28: 15:39

    bb0: {
        StorageLive(_1);                 // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        StorageLive(_2);                 // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        _4 = const _;                    // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &[&str; 8], val: Unevaluated(FIELDS, [], Some(promoted[0])) }
        _2 = &(*_4);                     // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        _1 = &(*_2);                     // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        _0 = move _1 as &[&str] (Pointer(Unsize)); // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        StorageDead(_2);                 // scope 0 at cita-auth/src/config.rs:15:38: 15:39
        StorageDead(_1);                 // scope 0 at cita-auth/src/config.rs:15:38: 15:39
        return;                          // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }
}

promoted[0] in FIELDS: &[&str; 8] = {
    let mut _0: &[&str; 8];              // return place in scope 0 at cita-auth/src/config.rs:15:28: 15:39
    let mut _1: [&str; 8];               // in scope 0 at cita-auth/src/config.rs:15:28: 15:39

    bb0: {
        _1 = [const "count_per_batch", const "buffer_duration", const "tx_verify_thread_num", const "tx_verify_cache_size", const "tx_pool_limit", const "wal_enable", const "prof_start", const "prof_duration"]; // scope 0 at cita-auth/src/config.rs:15:28: 15:39
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-auth/src/config.rs:15:28: 15:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/config.rs:15:28: 15:39
        return;                          // scope 0 at cita-auth/src/config.rs:15:28: 15:39
    }
}

fn config::<impl at cita-auth/src/config.rs:27:1: 27:12>::new(_1: &str) -> config::Config {
    debug path => _1;                    // in scope 0 at cita-auth/src/config.rs:28:16: 28:20
    let mut _0: config::Config;          // return place in scope 0 at cita-auth/src/config.rs:28:31: 28:35
    let mut _2: std::string::String;     // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:52:13: 52:23
    let _3: usize;                       // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:53:9: 55:83
    let mut _4: std::result::Result<usize, std::io::Error>; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:53:9: 54:61
    let mut _5: std::result::Result<std::fs::File, std::io::Error>; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:53:9: 53:26
    let mut _6: [closure@/home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:23: 54:30]; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:23: 54:60
    let mut _7: &mut std::string::String; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:23: 54:60
    let mut _8: std::result::Result<config::Config, toml::de::Error>; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:56:9: 56:51
    let mut _9: &str;                    // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:56:43: 56:50
    let _10: &str;                       // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:56:43: 56:50
    let _11: &std::string::String;       // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:56:43: 56:50
    scope 1 {
        debug buffer => _2;              // in scope 1 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:52:13: 52:23
    }

    bb0: {
        _2 = std::string::String::new() -> bb1; // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:52:26: 52:39
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:52:26: 52:37
                                         // + literal: Const { ty: fn() -> std::string::String {std::string::String::new}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = std::fs::File::open::<&str>(_1) -> [return: bb2, unwind: bb9]; // scope 1 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:53:9: 53:26
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:53:9: 53:19
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&str) -> Result<std::fs::File, std::io::Error> {std::fs::File::open::<&str>}, val: Value(<ZST>) }
    }

    bb2: {
        _7 = &mut _2;                    // scope 1 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:23: 54:60
        _6 = [closure@/home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:23: 54:30] { buffer: move _7 }; // scope 1 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:23: 54:60
                                         // closure
                                         // + def_id: DefId(0:443 ~ cita_auth[81d6]::config::{impl#0}::new::{closure#0})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn((std::fs::File,)) -> std::result::Result<usize, std::io::Error>,
                                         //     (&mut std::string::String,),
                                         // ]
        _4 = Result::<std::fs::File, std::io::Error>::and_then::<usize, [closure@/home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:23: 54:30]>(move _5, move _6) -> [return: bb3, unwind: bb9]; // scope 1 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:53:9: 54:61
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:14: 54:22
                                         // + literal: Const { ty: fn(Result<std::fs::File, std::io::Error>, [closure@/home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:23: 54:30]) -> Result<usize, std::io::Error> {Result::<std::fs::File, std::io::Error>::and_then::<usize, [closure@/home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:23: 54:30]>}, val: Value(<ZST>) }
    }

    bb3: {
        _3 = Result::<usize, std::io::Error>::unwrap_or_else::<[closure@/home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:29: 55:34]>(move _4, const ZeroSized: [closure@/home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:29: 55:34]) -> [return: bb4, unwind: bb9]; // scope 1 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:53:9: 55:83
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:14: 55:28
                                         // + literal: Const { ty: fn(Result<usize, std::io::Error>, [closure@/home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:29: 55:34]) -> usize {Result::<usize, std::io::Error>::unwrap_or_else::<[closure@/home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:29: 55:34]>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: [closure@/home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:29: 55:34], val: Value(<ZST>) }
    }

    bb4: {
        _11 = &_2;                       // scope 1 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:56:43: 56:50
        _10 = <std::string::String as Deref>::deref(_11) -> [return: bb5, unwind: bb9]; // scope 1 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:56:43: 56:50
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:56:43: 56:50
                                         // + literal: Const { ty: for<'a> fn(&'a std::string::String) -> &'a <std::string::String as Deref>::Target {<std::string::String as Deref>::deref}, val: Value(<ZST>) }
    }

    bb5: {
        _9 = _10;                        // scope 1 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:56:43: 56:50
        _8 = parse_config_from_buffer::<'_, config::Config>(move _9) -> [return: bb6, unwind: bb9]; // scope 1 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:56:9: 56:51
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:56:9: 56:42
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&str) -> Result<config::Config, toml::de::Error> {parse_config_from_buffer::<'_, config::Config>}, val: Value(<ZST>) }
    }

    bb6: {
        _0 = Result::<config::Config, toml::de::Error>::unwrap_or_else::<[closure@/home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:29: 57:34]>(move _8, const ZeroSized: [closure@/home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:29: 57:34]) -> [return: bb7, unwind: bb9]; // scope 1 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:56:9: 57:83
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:14: 57:28
                                         // + literal: Const { ty: fn(Result<config::Config, toml::de::Error>, [closure@/home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:29: 57:34]) -> config::Config {Result::<config::Config, toml::de::Error>::unwrap_or_else::<[closure@/home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:29: 57:34]>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: [closure@/home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:29: 57:34], val: Value(<ZST>) }
    }

    bb7: {
        drop(_2) -> bb8;                 // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:58:5: 58:6
    }

    bb8: {
        return;                          // scope 0 at cita-auth/src/config.rs:30:6: 30:6
    }

    bb9 (cleanup): {
        drop(_2) -> bb10;                // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:58:5: 58:6
    }

    bb10 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/config.rs:28:5: 30:6
    }
}

fn config::<impl at cita-auth/src/config.rs:27:1: 27:12>::new::{closure#0}(_1: [closure@/home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:23: 54:30], _2: std::fs::File) -> Result<usize, std::io::Error> {
    debug f => _2;                       // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:24: 54:29
    debug buffer => (*(_1.0: &mut std::string::String)); // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:52:17: 52:23
    let mut _0: std::result::Result<usize, std::io::Error>; // return place in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:31: 54:31
    let mut _3: &mut std::fs::File;      // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:31: 54:60
    let mut _4: &mut std::string::String; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:23: 54:60

    bb0: {
        _3 = &mut _2;                    // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:31: 54:60
        _4 = deref_copy (_1.0: &mut std::string::String); // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:48: 54:59
        _0 = <std::fs::File as std::io::Read>::read_to_string(move _3, _4) -> [return: bb1, unwind: bb3]; // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:31: 54:60
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:33: 54:47
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut std::fs::File, &'b mut std::string::String) -> Result<usize, std::io::Error> {<std::fs::File as std::io::Read>::read_to_string}, val: Value(<ZST>) }
    }

    bb1: {
        drop(_2) -> bb2;                 // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:59: 54:60
    }

    bb2: {
        return;                          // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:60: 54:60
    }

    bb3 (cleanup): {
        drop(_2) -> bb4;                 // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:59: 54:60
    }

    bb4 (cleanup): {
        resume;                          // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:54:23: 54:60
    }
}

fn config::<impl at cita-auth/src/config.rs:27:1: 27:12>::new::{closure#1}(_1: [closure@/home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:29: 55:34], _2: std::io::Error) -> usize {
    debug err => _2;                     // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:30: 55:33
    let mut _0: usize;                   // return place in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:35: 55:35
    let mut _3: !;                       // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:9: 29:74
    let mut _4: std::fmt::Arguments<'_>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:31: 29:73
    let mut _5: &[&str];                 // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:42: 55:76
    let mut _6: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:31: 29:73
    let _7: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:31: 29:73
    let _8: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:31: 29:73
    let mut _9: core::fmt::ArgumentV1<'_>; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:78: 55:81
    let _10: &std::io::Error;            // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:78: 55:81
    let mut _11: &[&str; 2];             // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:42: 55:76

    bb0: {
        _11 = const _;                   // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:42: 55:76
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:42: 55:76
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(config::Config::new::{closure#1}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[0])) }
        _5 = _11 as &[&str] (Pointer(Unsize)); // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:42: 55:76
        _10 = &_2;                       // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:78: 55:81
        _9 = core::fmt::ArgumentV1::<'_>::new_display::<std::io::Error>(_10) -> [return: bb1, unwind: bb3]; // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:78: 55:81
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:78: 55:81
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b std::io::Error) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<std::io::Error>}, val: Value(<ZST>) }
    }

    bb1: {
        _8 = [move _9];                  // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:31: 29:73
        _7 = &_8;                        // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:31: 29:73
        _6 = _7 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:31: 29:73
        _4 = Arguments::<'_>::new_v1(move _5, move _6) -> [return: bb2, unwind: bb3]; // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:31: 29:73
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:31: 29:73
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _3 = panic_fmt(move _4) -> bb3;  // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:9: 29:74
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:9: 29:30
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> ! {panic_fmt}, val: Value(<ZST>) }
    }

    bb3 (cleanup): {
        drop(_2) -> bb4;                 // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:30:5: 30:6
    }

    bb4 (cleanup): {
        resume;                          // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:29: 55:82
    }
}

promoted[0] in config::<impl at cita-auth/src/config.rs:27:1: 27:12>::new::{closure#1}: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:42: 55:76
    let mut _1: [&str; 2];               // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:42: 55:76

    bb0: {
        _1 = [const "Error while loading config: [", const "]"]; // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:42: 55:76
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:42: 55:76
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:42: 55:76
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:42: 55:76
        return;                          // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:55:42: 55:76
    }
}

fn config::<impl at cita-auth/src/config.rs:27:1: 27:12>::new::{closure#2}(_1: [closure@/home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:29: 57:34], _2: toml::de::Error) -> config::Config {
    debug err => _2;                     // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:30: 57:33
    let mut _0: config::Config;          // return place in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:35: 57:35
    let mut _3: !;                       // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:9: 29:74
    let mut _4: std::fmt::Arguments<'_>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:31: 29:73
    let mut _5: &[&str];                 // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:42: 57:76
    let mut _6: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:31: 29:73
    let _7: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:31: 29:73
    let _8: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:31: 29:73
    let mut _9: core::fmt::ArgumentV1<'_>; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:78: 57:81
    let _10: &toml::de::Error;           // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:78: 57:81
    let mut _11: &[&str; 2];             // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:42: 57:76

    bb0: {
        _11 = const _;                   // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:42: 57:76
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:42: 57:76
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(config::Config::new::{closure#2}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[0])) }
        _5 = _11 as &[&str] (Pointer(Unsize)); // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:42: 57:76
        _10 = &_2;                       // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:78: 57:81
        _9 = core::fmt::ArgumentV1::<'_>::new_display::<toml::de::Error>(_10) -> [return: bb1, unwind: bb3]; // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:78: 57:81
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:78: 57:81
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b toml::de::Error) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<toml::de::Error>}, val: Value(<ZST>) }
    }

    bb1: {
        _8 = [move _9];                  // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:31: 29:73
        _7 = &_8;                        // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:31: 29:73
        _6 = _7 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:31: 29:73
        _4 = Arguments::<'_>::new_v1(move _5, move _6) -> [return: bb2, unwind: bb3]; // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:31: 29:73
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:31: 29:73
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _3 = panic_fmt(move _4) -> bb3;  // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:9: 29:74
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:29:9: 29:30
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> ! {panic_fmt}, val: Value(<ZST>) }
    }

    bb3 (cleanup): {
        drop(_2) -> bb4;                 // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/std/src/panic.rs:30:5: 30:6
    }

    bb4 (cleanup): {
        resume;                          // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:29: 57:82
    }
}

promoted[0] in config::<impl at cita-auth/src/config.rs:27:1: 27:12>::new::{closure#2}: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:42: 57:76
    let mut _1: [&str; 2];               // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:42: 57:76

    bb0: {
        _1 = [const "Error while parsing config: [", const "]"]; // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:42: 57:76
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:42: 57:76
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:42: 57:76
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:42: 57:76
        return;                          // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:57:42: 57:76
    }
}

fn dispatcher::<impl at cita-auth/src/dispatcher.rs:36:1: 36:16>::new(_1: bool) -> Dispatcher {
    debug wal_enable => _1;              // in scope 0 at cita-auth/src/dispatcher.rs:37:16: 37:26
    let mut _0: dispatcher::Dispatcher;  // return place in scope 0 at cita-auth/src/dispatcher.rs:38:13: 38:25
    let mut _2: std::cell::RefCell<tx_pool::Pool>; // in scope 0 at cita-auth/src/dispatcher.rs:39:23: 39:58
    let mut _3: tx_pool::Pool;           // in scope 0 at cita-auth/src/dispatcher.rs:39:36: 39:57
    let mut _4: txwal::TxWal;            // in scope 0 at cita-auth/src/dispatcher.rs:40:18: 40:38
    let _5: &str;                        // in scope 0 at cita-auth/src/dispatcher.rs:40:29: 40:37
    let mut _7: &mut dispatcher::Dispatcher; // in scope 0 at cita-auth/src/dispatcher.rs:46:23: 46:50
    let mut _9: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _10: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _11: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _12: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _13: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _14: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _15: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _16: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _17: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _18: &[&str];                // in scope 0 at cita-auth/src/dispatcher.rs:47:19: 47:58
    let mut _19: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _20: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _21: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _22: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/dispatcher.rs:47:60: 47:63
    let _23: &usize;                     // in scope 0 at cita-auth/src/dispatcher.rs:47:60: 47:63
    let _24: ();                         // in scope 0 at cita-auth/src/dispatcher.rs:52:13: 52:46
    let mut _25: &mut txwal::TxWal;      // in scope 0 at cita-auth/src/dispatcher.rs:52:13: 52:46
    let _26: &str;                       // in scope 0 at cita-auth/src/dispatcher.rs:52:37: 52:45
    scope 1 {
        debug dispatch => _0;            // in scope 1 at cita-auth/src/dispatcher.rs:38:13: 38:25
        let _6: usize;                   // in scope 1 at cita-auth/src/dispatcher.rs:46:17: 46:20
        scope 2 {
            debug num => _6;             // in scope 2 at cita-auth/src/dispatcher.rs:46:17: 46:20
            let _8: log::Level;          // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            scope 3 {
                debug lvl => _8;         // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _27: &(&str, &str, &str, u32); // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _28: &[&str; 2]; // in scope 3 at cita-auth/src/dispatcher.rs:47:19: 47:58
                let mut _29: &log::LevelFilter; // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
        }
    }

    bb0: {
        _3 = Pool::new(const 0_usize) -> bb1; // scope 0 at cita-auth/src/dispatcher.rs:39:36: 39:57
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:39:36: 39:54
                                         // + literal: Const { ty: fn(usize) -> Pool {Pool::new}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = RefCell::<Pool>::new(move _3) -> bb2; // scope 0 at cita-auth/src/dispatcher.rs:39:23: 39:58
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:39:23: 39:35
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(Pool) -> RefCell<Pool> {RefCell::<Pool>::new}, val: Value(<ZST>) }
    }

    bb2: {
        _5 = const "/txwal";             // scope 0 at cita-auth/src/dispatcher.rs:40:29: 40:37
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:40:29: 40:37
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = TxWal::new(_5) -> [return: bb3, unwind: bb18]; // scope 0 at cita-auth/src/dispatcher.rs:40:18: 40:38
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:40:18: 40:28
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> TxWal {TxWal::new}, val: Value(<ZST>) }
    }

    bb3: {
        _0 = Dispatcher { txs_pool: move _2, wal: move _4, wal_enable: _1 }; // scope 0 at cita-auth/src/dispatcher.rs:38:28: 42:10
        switchInt(_1) -> [0: bb15, otherwise: bb4]; // scope 1 at cita-auth/src/dispatcher.rs:45:12: 45:22
    }

    bb4: {
        _7 = &mut _0;                    // scope 1 at cita-auth/src/dispatcher.rs:46:23: 46:50
        _6 = Dispatcher::read_tx_from_wal(move _7) -> [return: bb5, unwind: bb17]; // scope 1 at cita-auth/src/dispatcher.rs:46:23: 46:50
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:46:32: 46:48
                                         // + literal: Const { ty: for<'a> fn(&'a mut Dispatcher) -> usize {Dispatcher::read_tx_from_wal}, val: Value(<ZST>) }
    }

    bb5: {
        _8 = log::Level::Info;           // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _11 = &_8;                       // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _29 = const _;                   // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Dispatcher::new, [], Some(promoted[2])) }
        _10 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _11, _29) -> [return: bb9, unwind: bb17]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb6: {
        _9 = const false;                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb8;                     // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        _13 = &_8;                       // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _15 = log::max_level() -> [return: bb10, unwind: bb17]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb8: {
        switchInt(move _9) -> [0: bb16, otherwise: bb12]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb9: {
        switchInt(move _10) -> [0: bb6, otherwise: bb7]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb10: {
        _14 = &_15;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _12 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _13, move _14) -> [return: bb11, unwind: bb17]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb11: {
        _9 = move _12;                   // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb8;                     // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb12: {
        _28 = const _;                   // scope 3 at cita-auth/src/dispatcher.rs:47:19: 47:58
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:47:19: 47:58
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(Dispatcher::new, [], Some(promoted[1])) }
        _18 = _28 as &[&str] (Pointer(Unsize)); // scope 3 at cita-auth/src/dispatcher.rs:47:19: 47:58
        _23 = &_6;                       // scope 3 at cita-auth/src/dispatcher.rs:47:60: 47:63
        _22 = core::fmt::ArgumentV1::<'_>::new_display::<usize>(_23) -> [return: bb13, unwind: bb17]; // scope 3 at cita-auth/src/dispatcher.rs:47:60: 47:63
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:47:60: 47:63
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b usize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<usize>}, val: Value(<ZST>) }
    }

    bb13: {
        _21 = [move _22];                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _20 = &_21;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _19 = _20 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _17 = Arguments::<'_>::new_v1(move _18, move _19) -> [return: bb14, unwind: bb17]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb14: {
        _27 = const _;                   // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Dispatcher::new, [], Some(promoted[0])) }
        _16 = log::__private_api_log(move _17, _8, _27) -> [return: bb20, unwind: bb17]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb15: {
        _25 = &mut (_0.1: txwal::TxWal); // scope 1 at cita-auth/src/dispatcher.rs:52:13: 52:46
        _26 = const "/txwal";            // scope 1 at cita-auth/src/dispatcher.rs:52:37: 52:45
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:52:37: 52:45
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _24 = TxWal::regenerate(move _25, _26) -> [return: bb21, unwind: bb17]; // scope 1 at cita-auth/src/dispatcher.rs:52:13: 52:46
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:52:26: 52:36
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut TxWal, &'b str) {TxWal::regenerate}, val: Value(<ZST>) }
    }

    bb16: {
        return;                          // scope 0 at cita-auth/src/dispatcher.rs:55:6: 55:6
    }

    bb17 (cleanup): {
        drop(_0) -> bb19;                // scope 0 at cita-auth/src/dispatcher.rs:55:5: 55:6
    }

    bb18 (cleanup): {
        drop(_2) -> bb19;                // scope 0 at cita-auth/src/dispatcher.rs:42:9: 42:10
    }

    bb19 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/dispatcher.rs:37:5: 55:6
    }

    bb20: {
        goto -> bb16;                    // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb21: {
        goto -> bb16;                    // scope 1 at cita-auth/src/dispatcher.rs:52:13: 52:46
    }
}

promoted[0] in dispatcher::<impl at cita-auth/src/dispatcher.rs:36:1: 36:16>::new: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/dispatcher.rs:47:13: 47:64
    let mut _7: &str;                    // in scope 0 at cita-auth/src/dispatcher.rs:47:13: 47:64

    bb0: {
        _3 = const "cita_auth::dispatcher"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::dispatcher"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/dispatcher.rs"; // scope 0 at cita-auth/src/dispatcher.rs:47:13: 47:64
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:47:13: 47:64
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/dispatcher.rs:47:13: 47:64
        _1 = (move _2, move _4, move _6, const 47_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in dispatcher::<impl at cita-auth/src/dispatcher.rs:36:1: 36:16>::new: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-auth/src/dispatcher.rs:47:19: 47:58
    let mut _1: [&str; 2];               // in scope 0 at cita-auth/src/dispatcher.rs:47:19: 47:58

    bb0: {
        _1 = [const "recovery [", const "] transactions into pool."]; // scope 0 at cita-auth/src/dispatcher.rs:47:19: 47:58
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:47:19: 47:58
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:47:19: 47:58
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/dispatcher.rs:47:19: 47:58
        return;                          // scope 0 at cita-auth/src/dispatcher.rs:47:19: 47:58
    }
}

promoted[2] in dispatcher::<impl at cita-auth/src/dispatcher.rs:36:1: 36:16>::new: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn dispatcher::<impl at cita-auth/src/dispatcher.rs:36:1: 36:16>::clear_txs_pool(_1: &mut Dispatcher, _2: usize) -> () {
    debug self => _1;                    // in scope 0 at cita-auth/src/dispatcher.rs:58:27: 58:36
    debug package_limit => _2;           // in scope 0 at cita-auth/src/dispatcher.rs:58:38: 58:51
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/dispatcher.rs:58:60: 58:60
    let mut _3: std::cell::RefCell<tx_pool::Pool>; // in scope 0 at cita-auth/src/dispatcher.rs:59:25: 59:72
    let mut _4: tx_pool::Pool;           // in scope 0 at cita-auth/src/dispatcher.rs:59:38: 59:71
    let _5: ();                          // in scope 0 at cita-auth/src/dispatcher.rs:60:9: 60:38
    let mut _6: &mut txwal::TxWal;       // in scope 0 at cita-auth/src/dispatcher.rs:60:9: 60:38
    let _7: &str;                        // in scope 0 at cita-auth/src/dispatcher.rs:60:29: 60:37

    bb0: {
        _4 = Pool::new(_2) -> bb1;       // scope 0 at cita-auth/src/dispatcher.rs:59:38: 59:71
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:59:38: 59:56
                                         // + literal: Const { ty: fn(usize) -> Pool {Pool::new}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = RefCell::<Pool>::new(move _4) -> bb2; // scope 0 at cita-auth/src/dispatcher.rs:59:25: 59:72
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:59:25: 59:37
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(Pool) -> RefCell<Pool> {RefCell::<Pool>::new}, val: Value(<ZST>) }
    }

    bb2: {
        drop(((*_1).0: std::cell::RefCell<tx_pool::Pool>)) -> [return: bb3, unwind: bb4]; // scope 0 at cita-auth/src/dispatcher.rs:59:9: 59:22
    }

    bb3: {
        ((*_1).0: std::cell::RefCell<tx_pool::Pool>) = move _3; // scope 0 at cita-auth/src/dispatcher.rs:59:9: 59:22
        _6 = &mut ((*_1).1: txwal::TxWal); // scope 0 at cita-auth/src/dispatcher.rs:60:9: 60:38
        _7 = const "/txwal";             // scope 0 at cita-auth/src/dispatcher.rs:60:29: 60:37
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:60:29: 60:37
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _5 = TxWal::regenerate(move _6, _7) -> bb5; // scope 0 at cita-auth/src/dispatcher.rs:60:9: 60:38
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:60:18: 60:28
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut TxWal, &'b str) {TxWal::regenerate}, val: Value(<ZST>) }
    }

    bb4 (cleanup): {
        ((*_1).0: std::cell::RefCell<tx_pool::Pool>) = move _3; // scope 0 at cita-auth/src/dispatcher.rs:59:9: 59:22
        resume;                          // scope 0 at cita-auth/src/dispatcher.rs:58:5: 61:6
    }

    bb5: {
        return;                          // scope 0 at cita-auth/src/dispatcher.rs:61:6: 61:6
    }
}

fn dispatcher::<impl at cita-auth/src/dispatcher.rs:36:1: 36:16>::tx_pool_len(_1: &Dispatcher) -> usize {
    debug self => _1;                    // in scope 0 at cita-auth/src/dispatcher.rs:63:24: 63:29
    let mut _0: usize;                   // return place in scope 0 at cita-auth/src/dispatcher.rs:63:34: 63:39
    let mut _2: &tx_pool::Pool;          // in scope 0 at cita-auth/src/dispatcher.rs:64:9: 64:37
    let _3: &tx_pool::Pool;              // in scope 0 at cita-auth/src/dispatcher.rs:64:9: 64:37
    let mut _4: &std::cell::Ref<'_, tx_pool::Pool>; // in scope 0 at cita-auth/src/dispatcher.rs:64:9: 64:37
    let _5: std::cell::Ref<'_, tx_pool::Pool>; // in scope 0 at cita-auth/src/dispatcher.rs:64:9: 64:31
    let mut _6: &std::cell::RefCell<tx_pool::Pool>; // in scope 0 at cita-auth/src/dispatcher.rs:64:9: 64:31

    bb0: {
        _6 = &((*_1).0: std::cell::RefCell<tx_pool::Pool>); // scope 0 at cita-auth/src/dispatcher.rs:64:9: 64:31
        _5 = RefCell::<Pool>::borrow(move _6) -> bb1; // scope 0 at cita-auth/src/dispatcher.rs:64:9: 64:31
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:64:23: 64:29
                                         // + literal: Const { ty: for<'a> fn(&'a RefCell<Pool>) -> Ref<'a, Pool> {RefCell::<Pool>::borrow}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = &_5;                        // scope 0 at cita-auth/src/dispatcher.rs:64:9: 64:37
        _3 = <Ref<'_, Pool> as Deref>::deref(move _4) -> [return: bb2, unwind: bb5]; // scope 0 at cita-auth/src/dispatcher.rs:64:9: 64:37
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:64:9: 64:37
                                         // + literal: Const { ty: for<'a> fn(&'a Ref<'_, Pool>) -> &'a <Ref<'_, Pool> as Deref>::Target {<Ref<'_, Pool> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb2: {
        _2 = _3;                         // scope 0 at cita-auth/src/dispatcher.rs:64:9: 64:37
        _0 = Pool::len(move _2) -> [return: bb3, unwind: bb5]; // scope 0 at cita-auth/src/dispatcher.rs:64:9: 64:37
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:64:32: 64:35
                                         // + literal: Const { ty: for<'a> fn(&'a Pool) -> usize {Pool::len}, val: Value(<ZST>) }
    }

    bb3: {
        drop(_5) -> bb4;                 // scope 0 at cita-auth/src/dispatcher.rs:65:5: 65:6
    }

    bb4: {
        return;                          // scope 0 at cita-auth/src/dispatcher.rs:65:6: 65:6
    }

    bb5 (cleanup): {
        drop(_5) -> bb6;                 // scope 0 at cita-auth/src/dispatcher.rs:65:5: 65:6
    }

    bb6 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/dispatcher.rs:63:5: 65:6
    }
}

fn dispatcher::<impl at cita-auth/src/dispatcher.rs:36:1: 36:16>::proposal_tx_list(_1: &mut Dispatcher, _2: usize, _3: &pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, _4: &SysConfigInfo) -> () {
    debug self => _1;                    // in scope 0 at cita-auth/src/dispatcher.rs:70:9: 70:18
    debug height => _2;                  // in scope 0 at cita-auth/src/dispatcher.rs:71:9: 71:15
    debug mq_pub => _3;                  // in scope 0 at cita-auth/src/dispatcher.rs:72:9: 72:15
    debug config_info => _4;             // in scope 0 at cita-auth/src/dispatcher.rs:73:9: 73:20
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/dispatcher.rs:74:7: 74:7
    let mut _5: libproto::BlockTxs;      // in scope 0 at cita-auth/src/dispatcher.rs:75:13: 75:26
    let mut _8: &dispatcher::Dispatcher; // in scope 0 at cita-auth/src/dispatcher.rs:78:23: 85:10
    let mut _9: u64;                     // in scope 0 at cita-auth/src/dispatcher.rs:79:13: 79:26
    let mut _10: u64;                    // in scope 0 at cita-auth/src/dispatcher.rs:80:13: 80:42
    let mut _11: libproto::AccountGasLimit; // in scope 0 at cita-auth/src/dispatcher.rs:81:13: 81:52
    let mut _12: &libproto::AccountGasLimit; // in scope 0 at cita-auth/src/dispatcher.rs:81:13: 81:52
    let mut _13: bool;                   // in scope 0 at cita-auth/src/dispatcher.rs:82:13: 82:36
    let _14: &std::option::Option<cita_types::H160>; // in scope 0 at cita-auth/src/dispatcher.rs:83:13: 83:39
    let mut _15: u32;                    // in scope 0 at cita-auth/src/dispatcher.rs:84:13: 84:41
    let mut _16: std::option::Option<u32>; // in scope 0 at cita-auth/src/dispatcher.rs:84:13: 84:32
    let mut _18: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _19: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _20: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _21: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _22: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _23: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _24: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _25: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _26: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _27: &[&str];                // in scope 0 at cita-auth/src/dispatcher.rs:87:13: 87:64
    let mut _28: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _29: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _30: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _31: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/dispatcher.rs:88:13: 88:19
    let _32: &usize;                     // in scope 0 at cita-auth/src/dispatcher.rs:88:13: 88:19
    let mut _33: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/dispatcher.rs:89:13: 89:26
    let _34: &usize;                     // in scope 0 at cita-auth/src/dispatcher.rs:89:13: 89:26
    let _35: usize;                      // in scope 0 at cita-auth/src/dispatcher.rs:89:13: 89:26
    let mut _36: &std::vec::Vec<libproto::SignedTransaction>; // in scope 0 at cita-auth/src/dispatcher.rs:89:13: 89:26
    let mut _37: bool;                   // in scope 0 at cita-auth/src/dispatcher.rs:92:12: 92:31
    let mut _38: bool;                   // in scope 0 at cita-auth/src/dispatcher.rs:92:13: 92:31
    let mut _39: &std::vec::Vec<libproto::SignedTransaction>; // in scope 0 at cita-auth/src/dispatcher.rs:92:13: 92:31
    let _40: ();                         // in scope 0 at cita-auth/src/dispatcher.rs:93:13: 93:50
    let mut _41: &mut libproto::BlockBody; // in scope 0 at cita-auth/src/dispatcher.rs:93:13: 93:50
    let mut _42: protobuf::repeated::RepeatedField<libproto::SignedTransaction>; // in scope 0 at cita-auth/src/dispatcher.rs:93:35: 93:49
    let mut _43: std::vec::Vec<libproto::SignedTransaction>; // in scope 0 at cita-auth/src/dispatcher.rs:93:35: 93:42
    let _44: ();                         // in scope 0 at cita-auth/src/dispatcher.rs:95:9: 95:44
    let mut _45: &mut libproto::BlockTxs; // in scope 0 at cita-auth/src/dispatcher.rs:95:9: 95:44
    let mut _46: u64;                    // in scope 0 at cita-auth/src/dispatcher.rs:95:30: 95:43
    let _47: ();                         // in scope 0 at cita-auth/src/dispatcher.rs:96:9: 96:33
    let mut _48: &mut libproto::BlockTxs; // in scope 0 at cita-auth/src/dispatcher.rs:96:9: 96:33
    let mut _49: libproto::BlockBody;    // in scope 0 at cita-auth/src/dispatcher.rs:96:28: 96:32
    let mut _51: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _52: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _53: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _54: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _55: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _56: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _57: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _58: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _59: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _60: &[&str];                // in scope 0 at cita-auth/src/dispatcher.rs:97:16: 97:41
    let mut _61: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _62: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _63: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _64: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/dispatcher.rs:97:43: 97:49
    let _65: &usize;                     // in scope 0 at cita-auth/src/dispatcher.rs:97:43: 97:49
    let mut _67: libproto::BlockTxs;     // in scope 0 at cita-auth/src/dispatcher.rs:98:28: 98:37
    let _68: ();                         // in scope 0 at cita-auth/src/dispatcher.rs:99:9: 104:22
    let mut _69: std::result::Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>>; // in scope 0 at cita-auth/src/dispatcher.rs:99:9: 103:15
    let mut _70: (std::string::String, std::vec::Vec<u8>); // in scope 0 at cita-auth/src/dispatcher.rs:100:19: 103:14
    let mut _71: std::string::String;    // in scope 0 at cita-auth/src/dispatcher.rs:101:17: 101:54
    let mut _72: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _73: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _74: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _75: std::vec::Vec<u8>;      // in scope 0 at cita-auth/src/dispatcher.rs:102:17: 102:40
    let mut _76: std::result::Result<std::vec::Vec<u8>, libproto::TryIntoConvertError>; // in scope 0 at cita-auth/src/dispatcher.rs:102:17: 102:31
    let mut _77: libproto::Message;      // in scope 0 at cita-auth/src/dispatcher.rs:102:17: 102:20
    let mut _84: bool;                   // in scope 0 at cita-auth/src/dispatcher.rs:105:5: 105:6
    let mut _85: bool;                   // in scope 0 at cita-auth/src/dispatcher.rs:105:5: 105:6
    let mut _86: bool;                   // in scope 0 at cita-auth/src/dispatcher.rs:85:9: 85:10
    let mut _87: bool;                   // in scope 0 at cita-auth/src/dispatcher.rs:105:5: 105:6
    let mut _88: bool;                   // in scope 0 at cita-auth/src/dispatcher.rs:105:5: 105:6
    scope 1 {
        debug block_txs => _5;           // in scope 1 at cita-auth/src/dispatcher.rs:75:13: 75:26
        let mut _6: libproto::BlockBody; // in scope 1 at cita-auth/src/dispatcher.rs:76:13: 76:21
        scope 2 {
            debug body => _6;            // in scope 2 at cita-auth/src/dispatcher.rs:76:13: 76:21
            let _7: std::vec::Vec<libproto::SignedTransaction>; // in scope 2 at cita-auth/src/dispatcher.rs:78:13: 78:20
            scope 3 {
                debug out_txs => _7;     // in scope 3 at cita-auth/src/dispatcher.rs:78:13: 78:20
                let _17: log::Level;     // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let _50: log::Level;     // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let _66: libproto::Message; // in scope 3 at cita-auth/src/dispatcher.rs:98:13: 98:16
                scope 4 {
                    debug lvl => _17;    // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                    let mut _81: &(&str, &str, &str, u32); // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                    let mut _82: &[&str; 3]; // in scope 4 at cita-auth/src/dispatcher.rs:87:13: 87:64
                    let mut _83: &log::LevelFilter; // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                }
                scope 5 {
                    debug lvl => _50;    // in scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                    let mut _78: &(&str, &str, &str, u32); // in scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                    let mut _79: &[&str; 1]; // in scope 5 at cita-auth/src/dispatcher.rs:97:16: 97:41
                    let mut _80: &log::LevelFilter; // in scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                }
                scope 6 {
                    debug msg => _66;    // in scope 6 at cita-auth/src/dispatcher.rs:98:13: 98:16
                }
            }
        }
    }

    bb0: {
        _88 = const false;               // scope 0 at cita-auth/src/dispatcher.rs:75:13: 75:26
        _84 = const false;               // scope 0 at cita-auth/src/dispatcher.rs:75:13: 75:26
        _86 = const false;               // scope 0 at cita-auth/src/dispatcher.rs:75:13: 75:26
        _87 = const false;               // scope 0 at cita-auth/src/dispatcher.rs:75:13: 75:26
        _85 = const false;               // scope 0 at cita-auth/src/dispatcher.rs:75:13: 75:26
        _88 = const true;                // scope 0 at cita-auth/src/dispatcher.rs:75:29: 75:44
        _5 = libproto::BlockTxs::new() -> bb1; // scope 0 at cita-auth/src/dispatcher.rs:75:29: 75:44
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:75:29: 75:42
                                         // + literal: Const { ty: fn() -> libproto::BlockTxs {libproto::BlockTxs::new}, val: Value(<ZST>) }
    }

    bb1: {
        _6 = libproto::BlockBody::new() -> [return: bb2, unwind: bb53]; // scope 1 at cita-auth/src/dispatcher.rs:76:24: 76:40
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:76:24: 76:38
                                         // + literal: Const { ty: fn() -> libproto::BlockBody {libproto::BlockBody::new}, val: Value(<ZST>) }
    }

    bb2: {
        _87 = const true;                // scope 2 at cita-auth/src/dispatcher.rs:78:13: 78:20
        _8 = &(*_1);                     // scope 2 at cita-auth/src/dispatcher.rs:78:23: 85:10
        _9 = _2 as u64 (IntToInt);       // scope 2 at cita-auth/src/dispatcher.rs:79:13: 79:26
        _10 = ((*_4).0: u64);            // scope 2 at cita-auth/src/dispatcher.rs:80:13: 80:42
        _12 = &((*_4).1: libproto::AccountGasLimit); // scope 2 at cita-auth/src/dispatcher.rs:81:13: 81:52
        _11 = <AccountGasLimit as Clone>::clone(move _12) -> [return: bb3, unwind: bb51]; // scope 2 at cita-auth/src/dispatcher.rs:81:13: 81:52
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:81:45: 81:50
                                         // + literal: Const { ty: for<'a> fn(&'a AccountGasLimit) -> AccountGasLimit {<AccountGasLimit as Clone>::clone}, val: Value(<ZST>) }
    }

    bb3: {
        _86 = const true;                // scope 2 at cita-auth/src/dispatcher.rs:81:51: 81:52
        _13 = ((*_4).2: bool);           // scope 2 at cita-auth/src/dispatcher.rs:82:13: 82:36
        _14 = &((*_4).3: std::option::Option<cita_types::H160>); // scope 2 at cita-auth/src/dispatcher.rs:83:13: 83:39
        _16 = ((*_4).4: std::option::Option<u32>); // scope 2 at cita-auth/src/dispatcher.rs:84:13: 84:32
        _15 = std::option::Option::<u32>::unwrap(move _16) -> [return: bb4, unwind: bb49]; // scope 2 at cita-auth/src/dispatcher.rs:84:13: 84:41
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:84:33: 84:39
                                         // + literal: Const { ty: fn(std::option::Option<u32>) -> u32 {std::option::Option::<u32>::unwrap}, val: Value(<ZST>) }
    }

    bb4: {
        _86 = const false;               // scope 2 at cita-auth/src/dispatcher.rs:78:23: 85:10
        _7 = Dispatcher::take_txs_from_pool(move _8, move _9, move _10, move _11, move _13, _14, move _15) -> [return: bb5, unwind: bb49]; // scope 2 at cita-auth/src/dispatcher.rs:78:23: 85:10
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:78:28: 78:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Dispatcher, u64, u64, AccountGasLimit, bool, &'b std::option::Option<H160>, u32) -> Vec<SignedTransaction> {Dispatcher::take_txs_from_pool}, val: Value(<ZST>) }
    }

    bb5: {
        _84 = const true;                // scope 2 at cita-auth/src/dispatcher.rs:85:9: 85:10
        _86 = const false;               // scope 2 at cita-auth/src/dispatcher.rs:85:9: 85:10
        _17 = log::Level::Info;          // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _20 = &_17;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _83 = const _;                   // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Dispatcher::proposal_tx_list, [], Some(promoted[5])) }
        _19 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _20, _83) -> [return: bb9, unwind: bb47]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb6: {
        _18 = const false;               // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb8;                     // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        _22 = &_17;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _24 = log::max_level() -> [return: bb10, unwind: bb47]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb8: {
        switchInt(move _18) -> [0: bb17, otherwise: bb12]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb9: {
        switchInt(move _19) -> [0: bb6, otherwise: bb7]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb10: {
        _23 = &_24;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _21 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _22, move _23) -> [return: bb11, unwind: bb47]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb11: {
        _18 = move _21;                  // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb8;                     // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb12: {
        _82 = const _;                   // scope 4 at cita-auth/src/dispatcher.rs:87:13: 87:64
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:87:13: 87:64
                                         // + literal: Const { ty: &[&str; 3], val: Unevaluated(Dispatcher::proposal_tx_list, [], Some(promoted[4])) }
        _27 = _82 as &[&str] (Pointer(Unsize)); // scope 4 at cita-auth/src/dispatcher.rs:87:13: 87:64
        _32 = &_2;                       // scope 4 at cita-auth/src/dispatcher.rs:88:13: 88:19
        _31 = core::fmt::ArgumentV1::<'_>::new_display::<usize>(_32) -> [return: bb13, unwind: bb47]; // scope 4 at cita-auth/src/dispatcher.rs:88:13: 88:19
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:88:13: 88:19
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b usize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<usize>}, val: Value(<ZST>) }
    }

    bb13: {
        _36 = &_7;                       // scope 4 at cita-auth/src/dispatcher.rs:89:13: 89:26
        _35 = Vec::<SignedTransaction>::len(move _36) -> [return: bb14, unwind: bb47]; // scope 4 at cita-auth/src/dispatcher.rs:89:13: 89:26
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:89:21: 89:24
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<SignedTransaction>) -> usize {Vec::<SignedTransaction>::len}, val: Value(<ZST>) }
    }

    bb14: {
        _34 = &_35;                      // scope 4 at cita-auth/src/dispatcher.rs:89:13: 89:26
        _33 = core::fmt::ArgumentV1::<'_>::new_debug::<usize>(_34) -> [return: bb15, unwind: bb47]; // scope 4 at cita-auth/src/dispatcher.rs:89:13: 89:26
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:89:13: 89:26
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b usize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<usize>}, val: Value(<ZST>) }
    }

    bb15: {
        _30 = [move _31, move _33];      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _29 = &_30;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _28 = _29 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _26 = Arguments::<'_>::new_v1(move _27, move _28) -> [return: bb16, unwind: bb47]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb16: {
        _81 = const _;                   // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Dispatcher::proposal_tx_list, [], Some(promoted[3])) }
        _25 = log::__private_api_log(move _26, _17, _81) -> [return: bb54, unwind: bb47]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb17: {
        _39 = &_7;                       // scope 3 at cita-auth/src/dispatcher.rs:92:13: 92:31
        _38 = Vec::<SignedTransaction>::is_empty(move _39) -> [return: bb18, unwind: bb47]; // scope 3 at cita-auth/src/dispatcher.rs:92:13: 92:31
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:92:21: 92:29
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<SignedTransaction>) -> bool {Vec::<SignedTransaction>::is_empty}, val: Value(<ZST>) }
    }

    bb18: {
        _37 = Not(move _38);             // scope 3 at cita-auth/src/dispatcher.rs:92:12: 92:31
        switchInt(move _37) -> [0: bb21, otherwise: bb19]; // scope 3 at cita-auth/src/dispatcher.rs:92:12: 92:31
    }

    bb19: {
        _41 = &mut _6;                   // scope 3 at cita-auth/src/dispatcher.rs:93:13: 93:50
        _84 = const false;               // scope 3 at cita-auth/src/dispatcher.rs:93:35: 93:42
        _43 = move _7;                   // scope 3 at cita-auth/src/dispatcher.rs:93:35: 93:42
        _42 = <Vec<SignedTransaction> as Into<protobuf::repeated::RepeatedField<SignedTransaction>>>::into(move _43) -> [return: bb20, unwind: bb47]; // scope 3 at cita-auth/src/dispatcher.rs:93:35: 93:49
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:93:43: 93:47
                                         // + literal: Const { ty: fn(Vec<SignedTransaction>) -> protobuf::repeated::RepeatedField<SignedTransaction> {<Vec<SignedTransaction> as Into<protobuf::repeated::RepeatedField<SignedTransaction>>>::into}, val: Value(<ZST>) }
    }

    bb20: {
        _40 = libproto::BlockBody::set_transactions(move _41, move _42) -> [return: bb55, unwind: bb47]; // scope 3 at cita-auth/src/dispatcher.rs:93:13: 93:50
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:93:18: 93:34
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::BlockBody, protobuf::repeated::RepeatedField<SignedTransaction>) {libproto::BlockBody::set_transactions}, val: Value(<ZST>) }
    }

    bb21: {
        _45 = &mut _5;                   // scope 3 at cita-auth/src/dispatcher.rs:95:9: 95:44
        _46 = _2 as u64 (IntToInt);      // scope 3 at cita-auth/src/dispatcher.rs:95:30: 95:43
        _44 = libproto::BlockTxs::set_height(move _45, move _46) -> [return: bb22, unwind: bb47]; // scope 3 at cita-auth/src/dispatcher.rs:95:9: 95:44
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:95:19: 95:29
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::BlockTxs, u64) {libproto::BlockTxs::set_height}, val: Value(<ZST>) }
    }

    bb22: {
        _48 = &mut _5;                   // scope 3 at cita-auth/src/dispatcher.rs:96:9: 96:33
        _87 = const false;               // scope 3 at cita-auth/src/dispatcher.rs:96:28: 96:32
        _49 = move _6;                   // scope 3 at cita-auth/src/dispatcher.rs:96:28: 96:32
        _47 = libproto::BlockTxs::set_body(move _48, move _49) -> [return: bb23, unwind: bb47]; // scope 3 at cita-auth/src/dispatcher.rs:96:9: 96:33
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:96:19: 96:27
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::BlockTxs, libproto::BlockBody) {libproto::BlockTxs::set_body}, val: Value(<ZST>) }
    }

    bb23: {
        _50 = log::Level::Trace;         // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _53 = &_50;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _80 = const _;                   // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Dispatcher::proposal_tx_list, [], Some(promoted[2])) }
        _52 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _53, _80) -> [return: bb27, unwind: bb47]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb24: {
        _51 = const false;               // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb26;                    // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb25: {
        _55 = &_50;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _57 = log::max_level() -> [return: bb28, unwind: bb47]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb26: {
        switchInt(move _51) -> [0: bb33, otherwise: bb30]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb27: {
        switchInt(move _52) -> [0: bb24, otherwise: bb25]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb28: {
        _56 = &_57;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _54 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _55, move _56) -> [return: bb29, unwind: bb47]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb29: {
        _51 = move _54;                  // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb26;                    // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb30: {
        _79 = const _;                   // scope 5 at cita-auth/src/dispatcher.rs:97:16: 97:41
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:97:16: 97:41
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(Dispatcher::proposal_tx_list, [], Some(promoted[1])) }
        _60 = _79 as &[&str] (Pointer(Unsize)); // scope 5 at cita-auth/src/dispatcher.rs:97:16: 97:41
        _65 = &_2;                       // scope 5 at cita-auth/src/dispatcher.rs:97:43: 97:49
        _64 = core::fmt::ArgumentV1::<'_>::new_display::<usize>(_65) -> [return: bb31, unwind: bb47]; // scope 5 at cita-auth/src/dispatcher.rs:97:43: 97:49
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:97:43: 97:49
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'b> fn(&'b usize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<usize>}, val: Value(<ZST>) }
    }

    bb31: {
        _63 = [move _64];                // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _62 = &_63;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _61 = _62 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _59 = Arguments::<'_>::new_v1(move _60, move _61) -> [return: bb32, unwind: bb47]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb32: {
        _78 = const _;                   // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Dispatcher::proposal_tx_list, [], Some(promoted[0])) }
        _58 = log::__private_api_log(move _59, _50, _78) -> [return: bb56, unwind: bb47]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb33: {
        _88 = const false;               // scope 3 at cita-auth/src/dispatcher.rs:98:28: 98:37
        _67 = move _5;                   // scope 3 at cita-auth/src/dispatcher.rs:98:28: 98:37
        _66 = <libproto::BlockTxs as Into<libproto::Message>>::into(move _67) -> [return: bb34, unwind: bb47]; // scope 3 at cita-auth/src/dispatcher.rs:98:28: 98:44
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:98:38: 98:42
                                         // + literal: Const { ty: fn(libproto::BlockTxs) -> libproto::Message {<libproto::BlockTxs as Into<libproto::Message>>::into}, val: Value(<ZST>) }
    }

    bb34: {
        _85 = const true;                // scope 3 at cita-auth/src/dispatcher.rs:98:43: 98:44
        _73 = const Auth;                // scope 6 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x04)) }
        _74 = const libproto::router::MsgType::BlockTxs; // scope 6 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x0b)) }
        _72 = RoutingKey(move _73, move _74); // scope 6 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _71 = <RoutingKey as Into<std::string::String>>::into(move _72) -> [return: bb35, unwind: bb45]; // scope 6 at cita-auth/src/dispatcher.rs:101:17: 101:54
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:101:48: 101:52
                                         // + literal: Const { ty: fn(RoutingKey) -> std::string::String {<RoutingKey as Into<std::string::String>>::into}, val: Value(<ZST>) }
    }

    bb35: {
        _85 = const false;               // scope 6 at cita-auth/src/dispatcher.rs:102:17: 102:20
        _77 = move _66;                  // scope 6 at cita-auth/src/dispatcher.rs:102:17: 102:20
        _76 = <libproto::Message as libproto::TryInto<Vec<u8>>>::try_into(move _77) -> [return: bb36, unwind: bb41]; // scope 6 at cita-auth/src/dispatcher.rs:102:17: 102:31
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:102:21: 102:29
                                         // + literal: Const { ty: fn(libproto::Message) -> Result<Vec<u8>, <libproto::Message as libproto::TryInto<Vec<u8>>>::Error> {<libproto::Message as libproto::TryInto<Vec<u8>>>::try_into}, val: Value(<ZST>) }
    }

    bb36: {
        _75 = Result::<Vec<u8>, TryIntoConvertError>::unwrap(move _76) -> [return: bb37, unwind: bb41]; // scope 6 at cita-auth/src/dispatcher.rs:102:17: 102:40
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:102:32: 102:38
                                         // + literal: Const { ty: fn(Result<Vec<u8>, TryIntoConvertError>) -> Vec<u8> {Result::<Vec<u8>, TryIntoConvertError>::unwrap}, val: Value(<ZST>) }
    }

    bb37: {
        _70 = (move _71, move _75);      // scope 6 at cita-auth/src/dispatcher.rs:100:19: 103:14
        _69 = pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send(_3, move _70) -> [return: bb38, unwind: bb45]; // scope 6 at cita-auth/src/dispatcher.rs:99:9: 103:15
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:100:14: 100:18
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, (std::string::String, Vec<u8>)) -> Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>> {pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send}, val: Value(<ZST>) }
    }

    bb38: {
        _68 = Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap(move _69) -> [return: bb39, unwind: bb45]; // scope 6 at cita-auth/src/dispatcher.rs:99:9: 104:22
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:104:14: 104:20
                                         // + literal: Const { ty: fn(Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>) {Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap}, val: Value(<ZST>) }
    }

    bb39: {
        _85 = const false;               // scope 3 at cita-auth/src/dispatcher.rs:105:5: 105:6
        switchInt(_84) -> [0: bb40, otherwise: bb43]; // scope 2 at cita-auth/src/dispatcher.rs:105:5: 105:6
    }

    bb40: {
        _84 = const false;               // scope 2 at cita-auth/src/dispatcher.rs:105:5: 105:6
        _87 = const false;               // scope 1 at cita-auth/src/dispatcher.rs:105:5: 105:6
        _88 = const false;               // scope 0 at cita-auth/src/dispatcher.rs:105:5: 105:6
        return;                          // scope 0 at cita-auth/src/dispatcher.rs:105:6: 105:6
    }

    bb41 (cleanup): {
        drop(_71) -> bb45;               // scope 6 at cita-auth/src/dispatcher.rs:103:13: 103:14
    }

    bb42 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/dispatcher.rs:69:5: 105:6
    }

    bb43: {
        drop(_7) -> [return: bb40, unwind: bb51]; // scope 2 at cita-auth/src/dispatcher.rs:105:5: 105:6
    }

    bb44 (cleanup): {
        drop(_66) -> bb47;               // scope 3 at cita-auth/src/dispatcher.rs:105:5: 105:6
    }

    bb45 (cleanup): {
        switchInt(_85) -> [0: bb47, otherwise: bb44]; // scope 3 at cita-auth/src/dispatcher.rs:105:5: 105:6
    }

    bb46 (cleanup): {
        drop(_7) -> bb51;                // scope 2 at cita-auth/src/dispatcher.rs:105:5: 105:6
    }

    bb47 (cleanup): {
        switchInt(_84) -> [0: bb51, otherwise: bb46]; // scope 2 at cita-auth/src/dispatcher.rs:105:5: 105:6
    }

    bb48 (cleanup): {
        drop(_11) -> bb51;               // scope 2 at cita-auth/src/dispatcher.rs:85:9: 85:10
    }

    bb49 (cleanup): {
        switchInt(_86) -> [0: bb51, otherwise: bb48]; // scope 2 at cita-auth/src/dispatcher.rs:85:9: 85:10
    }

    bb50 (cleanup): {
        drop(_6) -> bb53;                // scope 1 at cita-auth/src/dispatcher.rs:105:5: 105:6
    }

    bb51 (cleanup): {
        switchInt(_87) -> [0: bb53, otherwise: bb50]; // scope 1 at cita-auth/src/dispatcher.rs:105:5: 105:6
    }

    bb52 (cleanup): {
        drop(_5) -> bb42;                // scope 0 at cita-auth/src/dispatcher.rs:105:5: 105:6
    }

    bb53 (cleanup): {
        switchInt(_88) -> [0: bb42, otherwise: bb52]; // scope 0 at cita-auth/src/dispatcher.rs:105:5: 105:6
    }

    bb54: {
        goto -> bb17;                    // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb55: {
        goto -> bb21;                    // scope 3 at cita-auth/src/dispatcher.rs:93:13: 93:50
    }

    bb56: {
        goto -> bb33;                    // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in dispatcher::<impl at cita-auth/src/dispatcher.rs:36:1: 36:16>::proposal_tx_list: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/dispatcher.rs:97:9: 97:50
    let mut _7: &str;                    // in scope 0 at cita-auth/src/dispatcher.rs:97:9: 97:50

    bb0: {
        _3 = const "cita_auth::dispatcher"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::dispatcher"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/dispatcher.rs"; // scope 0 at cita-auth/src/dispatcher.rs:97:9: 97:50
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:97:9: 97:50
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/dispatcher.rs:97:9: 97:50
        _1 = (move _2, move _4, move _6, const 97_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in dispatcher::<impl at cita-auth/src/dispatcher.rs:36:1: 36:16>::proposal_tx_list: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/dispatcher.rs:97:16: 97:41
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/dispatcher.rs:97:16: 97:41

    bb0: {
        _1 = [const "deal_txs send height "]; // scope 0 at cita-auth/src/dispatcher.rs:97:16: 97:41
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:97:16: 97:41
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/dispatcher.rs:97:16: 97:41
        return;                          // scope 0 at cita-auth/src/dispatcher.rs:97:16: 97:41
    }
}

promoted[2] in dispatcher::<impl at cita-auth/src/dispatcher.rs:36:1: 36:16>::proposal_tx_list: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[3] in dispatcher::<impl at cita-auth/src/dispatcher.rs:36:1: 36:16>::proposal_tx_list: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/dispatcher.rs:86:9: 90:10
    let mut _7: &str;                    // in scope 0 at cita-auth/src/dispatcher.rs:86:9: 90:10

    bb0: {
        _3 = const "cita_auth::dispatcher"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::dispatcher"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/dispatcher.rs"; // scope 0 at cita-auth/src/dispatcher.rs:86:9: 90:10
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:86:9: 90:10
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/dispatcher.rs:86:9: 90:10
        _1 = (move _2, move _4, move _6, const 86_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[4] in dispatcher::<impl at cita-auth/src/dispatcher.rs:36:1: 36:16>::proposal_tx_list: &[&str; 3] = {
    let mut _0: &[&str; 3];              // return place in scope 0 at cita-auth/src/dispatcher.rs:87:13: 87:64
    let mut _1: [&str; 3];               // in scope 0 at cita-auth/src/dispatcher.rs:87:13: 87:64

    bb0: {
        _1 = [const "public block txs height ", const " with ", const " transactions"]; // scope 0 at cita-auth/src/dispatcher.rs:87:13: 87:64
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:87:13: 87:64
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:87:13: 87:64
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:87:13: 87:64
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/dispatcher.rs:87:13: 87:64
        return;                          // scope 0 at cita-auth/src/dispatcher.rs:87:13: 87:64
    }
}

promoted[5] in dispatcher::<impl at cita-auth/src/dispatcher.rs:36:1: 36:16>::proposal_tx_list: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn dispatcher::<impl at cita-auth/src/dispatcher.rs:36:1: 36:16>::proposal_empty(_1: &mut Dispatcher, _2: usize, _3: &pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>) -> () {
    debug self => _1;                    // in scope 0 at cita-auth/src/dispatcher.rs:107:27: 107:36
    debug height => _2;                  // in scope 0 at cita-auth/src/dispatcher.rs:107:38: 107:44
    debug mq_pub => _3;                  // in scope 0 at cita-auth/src/dispatcher.rs:107:53: 107:59
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/dispatcher.rs:107:89: 107:89
    let mut _4: libproto::BlockTxs;      // in scope 0 at cita-auth/src/dispatcher.rs:108:13: 108:26
    let _6: ();                          // in scope 0 at cita-auth/src/dispatcher.rs:110:9: 110:44
    let mut _7: &mut libproto::BlockTxs; // in scope 0 at cita-auth/src/dispatcher.rs:110:9: 110:44
    let mut _8: u64;                     // in scope 0 at cita-auth/src/dispatcher.rs:110:30: 110:43
    let _9: ();                          // in scope 0 at cita-auth/src/dispatcher.rs:111:9: 111:33
    let mut _10: &mut libproto::BlockTxs; // in scope 0 at cita-auth/src/dispatcher.rs:111:9: 111:33
    let mut _11: libproto::BlockBody;    // in scope 0 at cita-auth/src/dispatcher.rs:111:28: 111:32
    let mut _13: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _14: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _15: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _16: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _17: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _18: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _19: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _20: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _21: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _22: &[&str];                // in scope 0 at cita-auth/src/dispatcher.rs:112:16: 112:48
    let mut _23: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _24: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _25: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _26: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/dispatcher.rs:112:50: 112:56
    let _27: &usize;                     // in scope 0 at cita-auth/src/dispatcher.rs:112:50: 112:56
    let mut _29: libproto::BlockTxs;     // in scope 0 at cita-auth/src/dispatcher.rs:113:28: 113:37
    let _30: ();                         // in scope 0 at cita-auth/src/dispatcher.rs:114:9: 119:22
    let mut _31: std::result::Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>>; // in scope 0 at cita-auth/src/dispatcher.rs:114:9: 118:15
    let mut _32: (std::string::String, std::vec::Vec<u8>); // in scope 0 at cita-auth/src/dispatcher.rs:115:19: 118:14
    let mut _33: std::string::String;    // in scope 0 at cita-auth/src/dispatcher.rs:116:17: 116:54
    let mut _34: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _35: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _36: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _37: std::vec::Vec<u8>;      // in scope 0 at cita-auth/src/dispatcher.rs:117:17: 117:40
    let mut _38: std::result::Result<std::vec::Vec<u8>, libproto::TryIntoConvertError>; // in scope 0 at cita-auth/src/dispatcher.rs:117:17: 117:31
    let mut _39: libproto::Message;      // in scope 0 at cita-auth/src/dispatcher.rs:117:17: 117:20
    let mut _43: bool;                   // in scope 0 at cita-auth/src/dispatcher.rs:120:5: 120:6
    let mut _44: bool;                   // in scope 0 at cita-auth/src/dispatcher.rs:120:5: 120:6
    let mut _45: bool;                   // in scope 0 at cita-auth/src/dispatcher.rs:120:5: 120:6
    scope 1 {
        debug block_txs => _4;           // in scope 1 at cita-auth/src/dispatcher.rs:108:13: 108:26
        let _5: libproto::BlockBody;     // in scope 1 at cita-auth/src/dispatcher.rs:109:13: 109:17
        scope 2 {
            debug body => _5;            // in scope 2 at cita-auth/src/dispatcher.rs:109:13: 109:17
            let _12: log::Level;         // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let _28: libproto::Message;  // in scope 2 at cita-auth/src/dispatcher.rs:113:13: 113:16
            scope 3 {
                debug lvl => _12;        // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _40: &(&str, &str, &str, u32); // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _41: &[&str; 1]; // in scope 3 at cita-auth/src/dispatcher.rs:112:16: 112:48
                let mut _42: &log::LevelFilter; // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
            scope 4 {
                debug msg => _28;        // in scope 4 at cita-auth/src/dispatcher.rs:113:13: 113:16
            }
        }
    }

    bb0: {
        _45 = const false;               // scope 0 at cita-auth/src/dispatcher.rs:108:13: 108:26
        _44 = const false;               // scope 0 at cita-auth/src/dispatcher.rs:108:13: 108:26
        _43 = const false;               // scope 0 at cita-auth/src/dispatcher.rs:108:13: 108:26
        _45 = const true;                // scope 0 at cita-auth/src/dispatcher.rs:108:29: 108:44
        _4 = libproto::BlockTxs::new() -> bb1; // scope 0 at cita-auth/src/dispatcher.rs:108:29: 108:44
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:108:29: 108:42
                                         // + literal: Const { ty: fn() -> libproto::BlockTxs {libproto::BlockTxs::new}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = libproto::BlockBody::new() -> [return: bb2, unwind: bb28]; // scope 1 at cita-auth/src/dispatcher.rs:109:20: 109:36
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:109:20: 109:34
                                         // + literal: Const { ty: fn() -> libproto::BlockBody {libproto::BlockBody::new}, val: Value(<ZST>) }
    }

    bb2: {
        _44 = const true;                // scope 2 at cita-auth/src/dispatcher.rs:110:9: 110:44
        _7 = &mut _4;                    // scope 2 at cita-auth/src/dispatcher.rs:110:9: 110:44
        _8 = _2 as u64 (IntToInt);       // scope 2 at cita-auth/src/dispatcher.rs:110:30: 110:43
        _6 = libproto::BlockTxs::set_height(move _7, move _8) -> [return: bb3, unwind: bb26]; // scope 2 at cita-auth/src/dispatcher.rs:110:9: 110:44
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:110:19: 110:29
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::BlockTxs, u64) {libproto::BlockTxs::set_height}, val: Value(<ZST>) }
    }

    bb3: {
        _10 = &mut _4;                   // scope 2 at cita-auth/src/dispatcher.rs:111:9: 111:33
        _44 = const false;               // scope 2 at cita-auth/src/dispatcher.rs:111:28: 111:32
        _11 = move _5;                   // scope 2 at cita-auth/src/dispatcher.rs:111:28: 111:32
        _9 = libproto::BlockTxs::set_body(move _10, move _11) -> [return: bb4, unwind: bb26]; // scope 2 at cita-auth/src/dispatcher.rs:111:9: 111:33
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:111:19: 111:27
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::BlockTxs, libproto::BlockBody) {libproto::BlockTxs::set_body}, val: Value(<ZST>) }
    }

    bb4: {
        _12 = log::Level::Trace;         // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _15 = &_12;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _42 = const _;                   // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Dispatcher::proposal_empty, [], Some(promoted[2])) }
        _14 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _15, _42) -> [return: bb8, unwind: bb26]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb5: {
        _13 = const false;               // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb7;                     // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb6: {
        _17 = &_12;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _19 = log::max_level() -> [return: bb9, unwind: bb26]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb7: {
        switchInt(move _13) -> [0: bb14, otherwise: bb11]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb8: {
        switchInt(move _14) -> [0: bb5, otherwise: bb6]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb9: {
        _18 = &_19;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _16 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _17, move _18) -> [return: bb10, unwind: bb26]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb10: {
        _13 = move _16;                  // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb7;                     // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb11: {
        _41 = const _;                   // scope 3 at cita-auth/src/dispatcher.rs:112:16: 112:48
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:112:16: 112:48
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(Dispatcher::proposal_empty, [], Some(promoted[1])) }
        _22 = _41 as &[&str] (Pointer(Unsize)); // scope 3 at cita-auth/src/dispatcher.rs:112:16: 112:48
        _27 = &_2;                       // scope 3 at cita-auth/src/dispatcher.rs:112:50: 112:56
        _26 = core::fmt::ArgumentV1::<'_>::new_display::<usize>(_27) -> [return: bb12, unwind: bb26]; // scope 3 at cita-auth/src/dispatcher.rs:112:50: 112:56
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:112:50: 112:56
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b usize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<usize>}, val: Value(<ZST>) }
    }

    bb12: {
        _25 = [move _26];                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _24 = &_25;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _23 = _24 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _21 = Arguments::<'_>::new_v1(move _22, move _23) -> [return: bb13, unwind: bb26]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb13: {
        _40 = const _;                   // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Dispatcher::proposal_empty, [], Some(promoted[0])) }
        _20 = log::__private_api_log(move _21, _12, _40) -> [return: bb29, unwind: bb26]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb14: {
        _45 = const false;               // scope 2 at cita-auth/src/dispatcher.rs:113:28: 113:37
        _29 = move _4;                   // scope 2 at cita-auth/src/dispatcher.rs:113:28: 113:37
        _28 = <libproto::BlockTxs as Into<libproto::Message>>::into(move _29) -> [return: bb15, unwind: bb26]; // scope 2 at cita-auth/src/dispatcher.rs:113:28: 113:44
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:113:38: 113:42
                                         // + literal: Const { ty: fn(libproto::BlockTxs) -> libproto::Message {<libproto::BlockTxs as Into<libproto::Message>>::into}, val: Value(<ZST>) }
    }

    bb15: {
        _43 = const true;                // scope 2 at cita-auth/src/dispatcher.rs:113:43: 113:44
        _35 = const Auth;                // scope 4 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x04)) }
        _36 = const libproto::router::MsgType::BlockTxs; // scope 4 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x0b)) }
        _34 = RoutingKey(move _35, move _36); // scope 4 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _33 = <RoutingKey as Into<std::string::String>>::into(move _34) -> [return: bb16, unwind: bb24]; // scope 4 at cita-auth/src/dispatcher.rs:116:17: 116:54
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:116:48: 116:52
                                         // + literal: Const { ty: fn(RoutingKey) -> std::string::String {<RoutingKey as Into<std::string::String>>::into}, val: Value(<ZST>) }
    }

    bb16: {
        _43 = const false;               // scope 4 at cita-auth/src/dispatcher.rs:117:17: 117:20
        _39 = move _28;                  // scope 4 at cita-auth/src/dispatcher.rs:117:17: 117:20
        _38 = <libproto::Message as libproto::TryInto<Vec<u8>>>::try_into(move _39) -> [return: bb17, unwind: bb21]; // scope 4 at cita-auth/src/dispatcher.rs:117:17: 117:31
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:117:21: 117:29
                                         // + literal: Const { ty: fn(libproto::Message) -> Result<Vec<u8>, <libproto::Message as libproto::TryInto<Vec<u8>>>::Error> {<libproto::Message as libproto::TryInto<Vec<u8>>>::try_into}, val: Value(<ZST>) }
    }

    bb17: {
        _37 = Result::<Vec<u8>, TryIntoConvertError>::unwrap(move _38) -> [return: bb18, unwind: bb21]; // scope 4 at cita-auth/src/dispatcher.rs:117:17: 117:40
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:117:32: 117:38
                                         // + literal: Const { ty: fn(Result<Vec<u8>, TryIntoConvertError>) -> Vec<u8> {Result::<Vec<u8>, TryIntoConvertError>::unwrap}, val: Value(<ZST>) }
    }

    bb18: {
        _32 = (move _33, move _37);      // scope 4 at cita-auth/src/dispatcher.rs:115:19: 118:14
        _31 = pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send(_3, move _32) -> [return: bb19, unwind: bb24]; // scope 4 at cita-auth/src/dispatcher.rs:114:9: 118:15
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:115:14: 115:18
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, (std::string::String, Vec<u8>)) -> Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>> {pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send}, val: Value(<ZST>) }
    }

    bb19: {
        _30 = Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap(move _31) -> [return: bb20, unwind: bb24]; // scope 4 at cita-auth/src/dispatcher.rs:114:9: 119:22
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:119:14: 119:20
                                         // + literal: Const { ty: fn(Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>) {Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap}, val: Value(<ZST>) }
    }

    bb20: {
        _43 = const false;               // scope 2 at cita-auth/src/dispatcher.rs:120:5: 120:6
        _44 = const false;               // scope 1 at cita-auth/src/dispatcher.rs:120:5: 120:6
        _45 = const false;               // scope 0 at cita-auth/src/dispatcher.rs:120:5: 120:6
        return;                          // scope 0 at cita-auth/src/dispatcher.rs:120:6: 120:6
    }

    bb21 (cleanup): {
        drop(_33) -> bb24;               // scope 4 at cita-auth/src/dispatcher.rs:118:13: 118:14
    }

    bb22 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/dispatcher.rs:107:5: 120:6
    }

    bb23 (cleanup): {
        drop(_28) -> bb26;               // scope 2 at cita-auth/src/dispatcher.rs:120:5: 120:6
    }

    bb24 (cleanup): {
        switchInt(_43) -> [0: bb26, otherwise: bb23]; // scope 2 at cita-auth/src/dispatcher.rs:120:5: 120:6
    }

    bb25 (cleanup): {
        drop(_5) -> bb28;                // scope 1 at cita-auth/src/dispatcher.rs:120:5: 120:6
    }

    bb26 (cleanup): {
        switchInt(_44) -> [0: bb28, otherwise: bb25]; // scope 1 at cita-auth/src/dispatcher.rs:120:5: 120:6
    }

    bb27 (cleanup): {
        drop(_4) -> bb22;                // scope 0 at cita-auth/src/dispatcher.rs:120:5: 120:6
    }

    bb28 (cleanup): {
        switchInt(_45) -> [0: bb22, otherwise: bb27]; // scope 0 at cita-auth/src/dispatcher.rs:120:5: 120:6
    }

    bb29: {
        goto -> bb14;                    // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in dispatcher::<impl at cita-auth/src/dispatcher.rs:36:1: 36:16>::proposal_empty: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/dispatcher.rs:112:9: 112:57
    let mut _7: &str;                    // in scope 0 at cita-auth/src/dispatcher.rs:112:9: 112:57

    bb0: {
        _3 = const "cita_auth::dispatcher"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::dispatcher"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/dispatcher.rs"; // scope 0 at cita-auth/src/dispatcher.rs:112:9: 112:57
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:112:9: 112:57
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/dispatcher.rs:112:9: 112:57
        _1 = (move _2, move _4, move _6, const 112_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in dispatcher::<impl at cita-auth/src/dispatcher.rs:36:1: 36:16>::proposal_empty: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/dispatcher.rs:112:16: 112:48
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/dispatcher.rs:112:16: 112:48

    bb0: {
        _1 = [const "proposal empty block height "]; // scope 0 at cita-auth/src/dispatcher.rs:112:16: 112:48
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:112:16: 112:48
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/dispatcher.rs:112:16: 112:48
        return;                          // scope 0 at cita-auth/src/dispatcher.rs:112:16: 112:48
    }
}

promoted[2] in dispatcher::<impl at cita-auth/src/dispatcher.rs:36:1: 36:16>::proposal_empty: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn dispatcher::<impl at cita-auth/src/dispatcher.rs:36:1: 36:16>::add_tx_to_pool(_1: &Dispatcher, _2: &SignedTransaction) -> bool {
    debug self => _1;                    // in scope 0 at cita-auth/src/dispatcher.rs:122:27: 122:32
    debug tx => _2;                      // in scope 0 at cita-auth/src/dispatcher.rs:122:34: 122:36
    let _3: log::Level;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
    let mut _4: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _5: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _6: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _7: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _8: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _9: &log::LevelFilter;       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _10: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _11: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _12: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _13: &[&str];                // in scope 0 at cita-auth/src/dispatcher.rs:123:16: 123:35
    let mut _14: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _15: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _16: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _17: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/dispatcher.rs:123:37: 123:65
    let _18: &std::string::String;       // in scope 0 at cita-auth/src/dispatcher.rs:123:37: 123:65
    let _19: std::string::String;        // in scope 0 at cita-auth/src/dispatcher.rs:123:37: 123:65
    let mut _20: &&[u8];                 // in scope 0 at cita-auth/src/dispatcher.rs:123:37: 123:65
    let _21: &[u8];                      // in scope 0 at cita-auth/src/dispatcher.rs:123:37: 123:53
    let _22: &mut std::cell::RefMut<'_, tx_pool::Pool>; // in scope 0 at cita-auth/src/dispatcher.rs:124:13: 124:21
    let mut _23: std::cell::RefMut<'_, tx_pool::Pool>; // in scope 0 at cita-auth/src/dispatcher.rs:124:29: 124:55
    let mut _24: &std::cell::RefCell<tx_pool::Pool>; // in scope 0 at cita-auth/src/dispatcher.rs:124:29: 124:55
    let mut _25: &mut tx_pool::Pool;     // in scope 0 at cita-auth/src/dispatcher.rs:125:23: 125:51
    let mut _26: &mut tx_pool::Pool;     // in scope 0 at cita-auth/src/dispatcher.rs:125:23: 125:51
    let mut _27: libproto::SignedTransaction; // in scope 0 at cita-auth/src/dispatcher.rs:125:40: 125:50
    let mut _28: bool;                   // in scope 0 at cita-auth/src/dispatcher.rs:126:12: 126:27
    let mut _29: bool;                   // in scope 0 at cita-auth/src/dispatcher.rs:127:16: 127:23
    let _30: ();                         // in scope 0 at cita-auth/src/dispatcher.rs:128:17: 128:35
    let mut _31: &txwal::TxWal;          // in scope 0 at cita-auth/src/dispatcher.rs:128:17: 128:35
    let mut _33: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _34: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _35: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _36: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _37: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _38: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _39: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _40: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _41: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _42: &[&str];                // in scope 0 at cita-auth/src/dispatcher.rs:131:21: 131:58
    let mut _43: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _44: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _45: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _46: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/dispatcher.rs:132:21: 132:49
    let _47: &std::string::String;       // in scope 0 at cita-auth/src/dispatcher.rs:132:21: 132:49
    let _48: std::string::String;        // in scope 0 at cita-auth/src/dispatcher.rs:132:21: 132:49
    let mut _49: &&[u8];                 // in scope 0 at cita-auth/src/dispatcher.rs:132:21: 132:49
    let _50: &[u8];                      // in scope 0 at cita-auth/src/dispatcher.rs:132:21: 132:37
    scope 1 {
        debug lvl => _3;                 // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _54: &(&str, &str, &str, u32); // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        let mut _55: &[&str; 2];         // in scope 1 at cita-auth/src/dispatcher.rs:123:16: 123:35
        let mut _56: &log::LevelFilter;  // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
    scope 2 {
        debug txs_pool => _22;           // in scope 2 at cita-auth/src/dispatcher.rs:124:13: 124:21
        let mut _0: bool;                // return place in scope 2 at cita-auth/src/dispatcher.rs:125:13: 125:20
        scope 3 {
            debug success => _0;         // in scope 3 at cita-auth/src/dispatcher.rs:125:13: 125:20
            let _32: log::Level;         // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            scope 4 {
                debug lvl => _32;        // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _51: &(&str, &str, &str, u32); // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _52: &[&str; 2]; // in scope 4 at cita-auth/src/dispatcher.rs:131:21: 131:58
                let mut _53: &log::LevelFilter; // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
        }
    }

    bb0: {
        _3 = log::Level::Trace;          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _6 = &_3;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _56 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Dispatcher::add_tx_to_pool, [], Some(promoted[5])) }
        _5 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _6, _56) -> bb4; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = const false;                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb3;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb2: {
        _8 = &_3;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _10 = log::max_level() -> bb5;   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb3: {
        switchInt(move _4) -> [0: bb13, otherwise: bb7]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb4: {
        switchInt(move _5) -> [0: bb1, otherwise: bb2]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb5: {
        _9 = &_10;                       // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _7 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _8, move _9) -> bb6; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb6: {
        _4 = move _7;                    // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb3;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        _55 = const _;                   // scope 1 at cita-auth/src/dispatcher.rs:123:16: 123:35
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:123:16: 123:35
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(Dispatcher::add_tx_to_pool, [], Some(promoted[4])) }
        _13 = _55 as &[&str] (Pointer(Unsize)); // scope 1 at cita-auth/src/dispatcher.rs:123:16: 123:35
        _21 = SignedTransaction::get_tx_hash(_2) -> bb8; // scope 1 at cita-auth/src/dispatcher.rs:123:37: 123:53
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:123:40: 123:51
                                         // + literal: Const { ty: for<'a> fn(&'a SignedTransaction) -> &'a [u8] {SignedTransaction::get_tx_hash}, val: Value(<ZST>) }
    }

    bb8: {
        _20 = &_21;                      // scope 1 at cita-auth/src/dispatcher.rs:123:37: 123:65
        _19 = <&[u8] as cita_types::traits::LowerHex>::lower_hex(move _20) -> bb9; // scope 1 at cita-auth/src/dispatcher.rs:123:37: 123:65
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:123:54: 123:63
                                         // + literal: Const { ty: for<'a> fn(&'a &[u8]) -> std::string::String {<&[u8] as cita_types::traits::LowerHex>::lower_hex}, val: Value(<ZST>) }
    }

    bb9: {
        _18 = &_19;                      // scope 1 at cita-auth/src/dispatcher.rs:123:37: 123:65
        _17 = core::fmt::ArgumentV1::<'_>::new_display::<std::string::String>(_18) -> [return: bb10, unwind: bb37]; // scope 1 at cita-auth/src/dispatcher.rs:123:37: 123:65
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:123:37: 123:65
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b std::string::String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<std::string::String>}, val: Value(<ZST>) }
    }

    bb10: {
        _16 = [move _17];                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _15 = &_16;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _14 = _15 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _12 = Arguments::<'_>::new_v1(move _13, move _14) -> [return: bb11, unwind: bb37]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb11: {
        _54 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Dispatcher::add_tx_to_pool, [], Some(promoted[3])) }
        _11 = log::__private_api_log(move _12, _3, _54) -> [return: bb12, unwind: bb37]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb12: {
        drop(_19) -> bb13;               // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:41:14: 41:15
    }

    bb13: {
        _24 = &((*_1).0: std::cell::RefCell<tx_pool::Pool>); // scope 0 at cita-auth/src/dispatcher.rs:124:29: 124:55
        _23 = RefCell::<Pool>::borrow_mut(move _24) -> bb14; // scope 0 at cita-auth/src/dispatcher.rs:124:29: 124:55
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:124:43: 124:53
                                         // + literal: Const { ty: for<'a> fn(&'a RefCell<Pool>) -> RefMut<'a, Pool> {RefCell::<Pool>::borrow_mut}, val: Value(<ZST>) }
    }

    bb14: {
        _22 = &mut _23;                  // scope 0 at cita-auth/src/dispatcher.rs:124:24: 124:55
        _26 = <RefMut<'_, Pool> as DerefMut>::deref_mut(_22) -> [return: bb15, unwind: bb36]; // scope 2 at cita-auth/src/dispatcher.rs:125:23: 125:51
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:125:23: 125:51
                                         // + literal: Const { ty: for<'a> fn(&'a mut RefMut<'_, Pool>) -> &'a mut <RefMut<'_, Pool> as Deref>::Target {<RefMut<'_, Pool> as DerefMut>::deref_mut}, val: Value(<ZST>) }
    }

    bb15: {
        _25 = _26;                       // scope 2 at cita-auth/src/dispatcher.rs:125:23: 125:51
        _27 = <SignedTransaction as Clone>::clone(_2) -> [return: bb16, unwind: bb36]; // scope 2 at cita-auth/src/dispatcher.rs:125:40: 125:50
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:125:43: 125:48
                                         // + literal: Const { ty: for<'a> fn(&'a SignedTransaction) -> SignedTransaction {<SignedTransaction as Clone>::clone}, val: Value(<ZST>) }
    }

    bb16: {
        _0 = Pool::enqueue(move _25, move _27) -> [return: bb17, unwind: bb36]; // scope 2 at cita-auth/src/dispatcher.rs:125:23: 125:51
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:125:32: 125:39
                                         // + literal: Const { ty: for<'a> fn(&'a mut Pool, SignedTransaction) -> bool {Pool::enqueue}, val: Value(<ZST>) }
    }

    bb17: {
        _28 = ((*_1).2: bool);           // scope 3 at cita-auth/src/dispatcher.rs:126:12: 126:27
        switchInt(move _28) -> [0: bb33, otherwise: bb18]; // scope 3 at cita-auth/src/dispatcher.rs:126:12: 126:27
    }

    bb18: {
        _29 = _0;                        // scope 3 at cita-auth/src/dispatcher.rs:127:16: 127:23
        switchInt(move _29) -> [0: bb20, otherwise: bb19]; // scope 3 at cita-auth/src/dispatcher.rs:127:16: 127:23
    }

    bb19: {
        _31 = &((*_1).1: txwal::TxWal);  // scope 3 at cita-auth/src/dispatcher.rs:128:17: 128:35
        _30 = TxWal::write(move _31, _2) -> [return: bb39, unwind: bb36]; // scope 3 at cita-auth/src/dispatcher.rs:128:17: 128:35
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:128:26: 128:31
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a TxWal, &'b SignedTransaction) {TxWal::write}, val: Value(<ZST>) }
    }

    bb20: {
        _32 = log::Level::Warn;          // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:91:14: 91:33
        _35 = &_32;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _53 = const _;                   // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Dispatcher::add_tx_to_pool, [], Some(promoted[2])) }
        _34 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _35, _53) -> [return: bb24, unwind: bb36]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb21: {
        _33 = const false;               // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb23;                    // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb22: {
        _37 = &_32;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _39 = log::max_level() -> [return: bb25, unwind: bb36]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb23: {
        switchInt(move _33) -> [0: bb33, otherwise: bb27]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb24: {
        switchInt(move _34) -> [0: bb21, otherwise: bb22]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb25: {
        _38 = &_39;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _36 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _37, move _38) -> [return: bb26, unwind: bb36]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb26: {
        _33 = move _36;                  // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb23;                    // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb27: {
        _52 = const _;                   // scope 4 at cita-auth/src/dispatcher.rs:131:21: 131:58
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:131:21: 131:58
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(Dispatcher::add_tx_to_pool, [], Some(promoted[1])) }
        _42 = _52 as &[&str] (Pointer(Unsize)); // scope 4 at cita-auth/src/dispatcher.rs:131:21: 131:58
        _50 = SignedTransaction::get_tx_hash(_2) -> [return: bb28, unwind: bb36]; // scope 4 at cita-auth/src/dispatcher.rs:132:21: 132:37
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:132:24: 132:35
                                         // + literal: Const { ty: for<'a> fn(&'a SignedTransaction) -> &'a [u8] {SignedTransaction::get_tx_hash}, val: Value(<ZST>) }
    }

    bb28: {
        _49 = &_50;                      // scope 4 at cita-auth/src/dispatcher.rs:132:21: 132:49
        _48 = <&[u8] as cita_types::traits::LowerHex>::lower_hex(move _49) -> [return: bb29, unwind: bb36]; // scope 4 at cita-auth/src/dispatcher.rs:132:21: 132:49
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:132:38: 132:47
                                         // + literal: Const { ty: for<'a> fn(&'a &[u8]) -> std::string::String {<&[u8] as cita_types::traits::LowerHex>::lower_hex}, val: Value(<ZST>) }
    }

    bb29: {
        _47 = &_48;                      // scope 4 at cita-auth/src/dispatcher.rs:132:21: 132:49
        _46 = core::fmt::ArgumentV1::<'_>::new_display::<std::string::String>(_47) -> [return: bb30, unwind: bb35]; // scope 4 at cita-auth/src/dispatcher.rs:132:21: 132:49
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:132:21: 132:49
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b std::string::String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<std::string::String>}, val: Value(<ZST>) }
    }

    bb30: {
        _45 = [move _46];                // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _44 = &_45;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _43 = _44 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _41 = Arguments::<'_>::new_v1(move _42, move _43) -> [return: bb31, unwind: bb35]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb31: {
        _51 = const _;                   // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Dispatcher::add_tx_to_pool, [], Some(promoted[0])) }
        _40 = log::__private_api_log(move _41, _32, _51) -> [return: bb32, unwind: bb35]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb32: {
        drop(_48) -> [return: bb33, unwind: bb36]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:41:14: 41:15
    }

    bb33: {
        drop(_23) -> bb34;               // scope 0 at cita-auth/src/dispatcher.rs:137:5: 137:6
    }

    bb34: {
        return;                          // scope 0 at cita-auth/src/dispatcher.rs:137:6: 137:6
    }

    bb35 (cleanup): {
        drop(_48) -> bb36;               // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:41:14: 41:15
    }

    bb36 (cleanup): {
        drop(_23) -> bb38;               // scope 0 at cita-auth/src/dispatcher.rs:137:5: 137:6
    }

    bb37 (cleanup): {
        drop(_19) -> bb38;               // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:41:14: 41:15
    }

    bb38 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/dispatcher.rs:122:5: 137:6
    }

    bb39: {
        goto -> bb33;                    // scope 3 at cita-auth/src/dispatcher.rs:128:17: 128:35
    }
}

promoted[0] in dispatcher::<impl at cita-auth/src/dispatcher.rs:36:1: 36:16>::add_tx_to_pool: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/dispatcher.rs:130:17: 133:18
    let mut _7: &str;                    // in scope 0 at cita-auth/src/dispatcher.rs:130:17: 133:18

    bb0: {
        _3 = const "cita_auth::dispatcher"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::dispatcher"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/dispatcher.rs"; // scope 0 at cita-auth/src/dispatcher.rs:130:17: 133:18
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:130:17: 133:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/dispatcher.rs:130:17: 133:18
        _1 = (move _2, move _4, move _6, const 130_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in dispatcher::<impl at cita-auth/src/dispatcher.rs:36:1: 36:16>::add_tx_to_pool: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-auth/src/dispatcher.rs:131:21: 131:58
    let mut _1: [&str; 2];               // in scope 0 at cita-auth/src/dispatcher.rs:131:21: 131:58

    bb0: {
        _1 = [const "the transaction ", const " is already exist"]; // scope 0 at cita-auth/src/dispatcher.rs:131:21: 131:58
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:131:21: 131:58
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:131:21: 131:58
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/dispatcher.rs:131:21: 131:58
        return;                          // scope 0 at cita-auth/src/dispatcher.rs:131:21: 131:58
    }
}

promoted[2] in dispatcher::<impl at cita-auth/src/dispatcher.rs:36:1: 36:16>::add_tx_to_pool: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[3] in dispatcher::<impl at cita-auth/src/dispatcher.rs:36:1: 36:16>::add_tx_to_pool: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/dispatcher.rs:123:9: 123:66
    let mut _7: &str;                    // in scope 0 at cita-auth/src/dispatcher.rs:123:9: 123:66

    bb0: {
        _3 = const "cita_auth::dispatcher"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::dispatcher"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/dispatcher.rs"; // scope 0 at cita-auth/src/dispatcher.rs:123:9: 123:66
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:123:9: 123:66
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/dispatcher.rs:123:9: 123:66
        _1 = (move _2, move _4, move _6, const 123_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[4] in dispatcher::<impl at cita-auth/src/dispatcher.rs:36:1: 36:16>::add_tx_to_pool: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-auth/src/dispatcher.rs:123:16: 123:35
    let mut _1: [&str; 2];               // in scope 0 at cita-auth/src/dispatcher.rs:123:16: 123:35

    bb0: {
        _1 = [const "add tx ", const " to pool"]; // scope 0 at cita-auth/src/dispatcher.rs:123:16: 123:35
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:123:16: 123:35
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:123:16: 123:35
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/dispatcher.rs:123:16: 123:35
        return;                          // scope 0 at cita-auth/src/dispatcher.rs:123:16: 123:35
    }
}

promoted[5] in dispatcher::<impl at cita-auth/src/dispatcher.rs:36:1: 36:16>::add_tx_to_pool: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn dispatcher::<impl at cita-auth/src/dispatcher.rs:36:1: 36:16>::add_txs_to_pool(_1: &Dispatcher, _2: Vec<SignedTransaction>) -> () {
    debug self => _1;                    // in scope 0 at cita-auth/src/dispatcher.rs:140:28: 140:33
    debug txs => _2;                     // in scope 0 at cita-auth/src/dispatcher.rs:140:35: 140:38
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/dispatcher.rs:140:64: 140:64
    let _3: &mut std::cell::RefMut<'_, tx_pool::Pool>; // in scope 0 at cita-auth/src/dispatcher.rs:141:13: 141:21
    let mut _4: std::cell::RefMut<'_, tx_pool::Pool>; // in scope 0 at cita-auth/src/dispatcher.rs:141:29: 141:55
    let mut _5: &std::cell::RefCell<tx_pool::Pool>; // in scope 0 at cita-auth/src/dispatcher.rs:141:29: 141:55
    let mut _7: std::iter::Filter<std::vec::IntoIter<libproto::SignedTransaction>, [closure@cita-auth/src/dispatcher.rs:144:21: 144:25]>; // in scope 0 at cita-auth/src/dispatcher.rs:142:45: 147:15
    let mut _8: std::vec::IntoIter<libproto::SignedTransaction>; // in scope 0 at cita-auth/src/dispatcher.rs:142:45: 143:25
    let mut _9: std::vec::Vec<libproto::SignedTransaction>; // in scope 0 at cita-auth/src/dispatcher.rs:142:45: 142:48
    let mut _10: [closure@cita-auth/src/dispatcher.rs:144:21: 144:25]; // in scope 0 at cita-auth/src/dispatcher.rs:144:21: 147:14
    let mut _11: &mut &mut std::cell::RefMut<'_, tx_pool::Pool>; // in scope 0 at cita-auth/src/dispatcher.rs:144:21: 147:14
    let mut _12: bool;                   // in scope 0 at cita-auth/src/dispatcher.rs:149:12: 149:27
    let _13: ();                         // in scope 0 at cita-auth/src/dispatcher.rs:150:13: 150:41
    let mut _14: &txwal::TxWal;          // in scope 0 at cita-auth/src/dispatcher.rs:150:13: 150:41
    let mut _15: &[libproto::SignedTransaction]; // in scope 0 at cita-auth/src/dispatcher.rs:150:34: 150:40
    let _16: &[libproto::SignedTransaction]; // in scope 0 at cita-auth/src/dispatcher.rs:150:34: 150:40
    let _17: &std::vec::Vec<libproto::SignedTransaction>; // in scope 0 at cita-auth/src/dispatcher.rs:150:34: 150:40
    let mut _18: bool;                   // in scope 0 at cita-auth/src/dispatcher.rs:152:5: 152:6
    scope 1 {
        debug txs_pool => _3;            // in scope 1 at cita-auth/src/dispatcher.rs:141:13: 141:21
        let _6: std::vec::Vec<libproto::SignedTransaction>; // in scope 1 at cita-auth/src/dispatcher.rs:142:13: 142:18
        scope 2 {
            debug added => _6;           // in scope 2 at cita-auth/src/dispatcher.rs:142:13: 142:18
        }
    }

    bb0: {
        _18 = const false;               // scope 0 at cita-auth/src/dispatcher.rs:141:13: 141:21
        _18 = const true;                // scope 0 at cita-auth/src/dispatcher.rs:141:13: 141:21
        _5 = &((*_1).0: std::cell::RefCell<tx_pool::Pool>); // scope 0 at cita-auth/src/dispatcher.rs:141:29: 141:55
        _4 = RefCell::<Pool>::borrow_mut(move _5) -> [return: bb1, unwind: bb14]; // scope 0 at cita-auth/src/dispatcher.rs:141:29: 141:55
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:141:43: 141:53
                                         // + literal: Const { ty: for<'a> fn(&'a RefCell<Pool>) -> RefMut<'a, Pool> {RefCell::<Pool>::borrow_mut}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = &mut _4;                    // scope 0 at cita-auth/src/dispatcher.rs:141:24: 141:55
        _18 = const false;               // scope 1 at cita-auth/src/dispatcher.rs:142:45: 142:48
        _9 = move _2;                    // scope 1 at cita-auth/src/dispatcher.rs:142:45: 142:48
        _8 = <Vec<SignedTransaction> as IntoIterator>::into_iter(move _9) -> [return: bb2, unwind: bb11]; // scope 1 at cita-auth/src/dispatcher.rs:142:45: 143:25
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:143:14: 143:23
                                         // + literal: Const { ty: fn(Vec<SignedTransaction>) -> <Vec<SignedTransaction> as IntoIterator>::IntoIter {<Vec<SignedTransaction> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb2: {
        _11 = &mut _3;                   // scope 1 at cita-auth/src/dispatcher.rs:144:21: 147:14
        _10 = [closure@cita-auth/src/dispatcher.rs:144:21: 144:25] { txs_pool: move _11 }; // scope 1 at cita-auth/src/dispatcher.rs:144:21: 147:14
                                         // closure
                                         // + def_id: DefId(0:151 ~ cita_auth[81d6]::dispatcher::{impl#0}::add_txs_to_pool::{closure#0})
                                         // + substs: [
                                         //     i16,
                                         //     for<'a> extern "rust-call" fn((&'a libproto::SignedTransaction,)) -> bool,
                                         //     (&mut &mut std::cell::RefMut<'_, tx_pool::Pool>,),
                                         // ]
        _7 = <std::vec::IntoIter<SignedTransaction> as Iterator>::filter::<[closure@cita-auth/src/dispatcher.rs:144:21: 144:25]>(move _8, move _10) -> [return: bb3, unwind: bb11]; // scope 1 at cita-auth/src/dispatcher.rs:142:45: 147:15
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:144:14: 144:20
                                         // + literal: Const { ty: fn(std::vec::IntoIter<SignedTransaction>, [closure@cita-auth/src/dispatcher.rs:144:21: 144:25]) -> std::iter::Filter<std::vec::IntoIter<SignedTransaction>, [closure@cita-auth/src/dispatcher.rs:144:21: 144:25]> {<std::vec::IntoIter<SignedTransaction> as Iterator>::filter::<[closure@cita-auth/src/dispatcher.rs:144:21: 144:25]>}, val: Value(<ZST>) }
    }

    bb3: {
        _6 = <std::iter::Filter<std::vec::IntoIter<SignedTransaction>, [closure@cita-auth/src/dispatcher.rs:144:21: 144:25]> as Iterator>::collect::<Vec<SignedTransaction>>(move _7) -> [return: bb4, unwind: bb11]; // scope 1 at cita-auth/src/dispatcher.rs:142:45: 148:23
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:148:14: 148:21
                                         // + literal: Const { ty: fn(std::iter::Filter<std::vec::IntoIter<SignedTransaction>, [closure@cita-auth/src/dispatcher.rs:144:21: 144:25]>) -> Vec<SignedTransaction> {<std::iter::Filter<std::vec::IntoIter<SignedTransaction>, [closure@cita-auth/src/dispatcher.rs:144:21: 144:25]> as Iterator>::collect::<Vec<SignedTransaction>>}, val: Value(<ZST>) }
    }

    bb4: {
        _12 = ((*_1).2: bool);           // scope 2 at cita-auth/src/dispatcher.rs:149:12: 149:27
        switchInt(move _12) -> [0: bb7, otherwise: bb5]; // scope 2 at cita-auth/src/dispatcher.rs:149:12: 149:27
    }

    bb5: {
        _14 = &((*_1).1: txwal::TxWal);  // scope 2 at cita-auth/src/dispatcher.rs:150:13: 150:41
        _17 = &_6;                       // scope 2 at cita-auth/src/dispatcher.rs:150:34: 150:40
        _16 = <Vec<SignedTransaction> as Deref>::deref(_17) -> [return: bb6, unwind: bb10]; // scope 2 at cita-auth/src/dispatcher.rs:150:34: 150:40
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:150:34: 150:40
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<SignedTransaction>) -> &'a <Vec<SignedTransaction> as Deref>::Target {<Vec<SignedTransaction> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb6: {
        _15 = _16;                       // scope 2 at cita-auth/src/dispatcher.rs:150:34: 150:40
        _13 = TxWal::write_batch(move _14, move _15) -> [return: bb15, unwind: bb10]; // scope 2 at cita-auth/src/dispatcher.rs:150:13: 150:41
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:150:22: 150:33
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a TxWal, &'b [SignedTransaction]) {TxWal::write_batch}, val: Value(<ZST>) }
    }

    bb7: {
        drop(_6) -> [return: bb8, unwind: bb11]; // scope 1 at cita-auth/src/dispatcher.rs:152:5: 152:6
    }

    bb8: {
        drop(_4) -> [return: bb9, unwind: bb14]; // scope 0 at cita-auth/src/dispatcher.rs:152:5: 152:6
    }

    bb9: {
        return;                          // scope 0 at cita-auth/src/dispatcher.rs:152:6: 152:6
    }

    bb10 (cleanup): {
        drop(_6) -> bb11;                // scope 1 at cita-auth/src/dispatcher.rs:152:5: 152:6
    }

    bb11 (cleanup): {
        drop(_4) -> bb14;                // scope 0 at cita-auth/src/dispatcher.rs:152:5: 152:6
    }

    bb12 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/dispatcher.rs:140:5: 152:6
    }

    bb13 (cleanup): {
        drop(_2) -> bb12;                // scope 0 at cita-auth/src/dispatcher.rs:152:5: 152:6
    }

    bb14 (cleanup): {
        switchInt(_18) -> [0: bb12, otherwise: bb13]; // scope 0 at cita-auth/src/dispatcher.rs:152:5: 152:6
    }

    bb15: {
        goto -> bb7;                     // scope 2 at cita-auth/src/dispatcher.rs:150:13: 150:41
    }
}

fn dispatcher::<impl at cita-auth/src/dispatcher.rs:36:1: 36:16>::add_txs_to_pool::{closure#0}(_1: &mut [closure@cita-auth/src/dispatcher.rs:144:21: 144:25], _2: &SignedTransaction) -> bool {
    debug tx => _2;                      // in scope 0 at cita-auth/src/dispatcher.rs:144:22: 144:24
    debug txs_pool => (*((*_1).0: &mut &mut std::cell::RefMut<'_, tx_pool::Pool>)); // in scope 0 at cita-auth/src/dispatcher.rs:141:13: 141:21
    let mut _0: bool;                    // return place in scope 0 at cita-auth/src/dispatcher.rs:144:26: 144:26
    let _3: log::Level;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
    let mut _4: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _5: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _6: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _7: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _8: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _9: &log::LevelFilter;       // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _10: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _11: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _12: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _13: &[&str];                // in scope 0 at cita-auth/src/dispatcher.rs:145:24: 145:44
    let mut _14: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _15: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _16: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _17: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/dispatcher.rs:145:46: 145:74
    let _18: &std::string::String;       // in scope 0 at cita-auth/src/dispatcher.rs:145:46: 145:74
    let _19: std::string::String;        // in scope 0 at cita-auth/src/dispatcher.rs:145:46: 145:74
    let mut _20: &&[u8];                 // in scope 0 at cita-auth/src/dispatcher.rs:145:46: 145:74
    let _21: &[u8];                      // in scope 0 at cita-auth/src/dispatcher.rs:145:46: 145:62
    let mut _22: &mut tx_pool::Pool;     // in scope 0 at cita-auth/src/dispatcher.rs:146:17: 146:45
    let mut _23: &mut tx_pool::Pool;     // in scope 0 at cita-auth/src/dispatcher.rs:146:17: 146:45
    let mut _24: libproto::SignedTransaction; // in scope 0 at cita-auth/src/dispatcher.rs:146:34: 146:44
    let mut _28: &mut &mut std::cell::RefMut<'_, tx_pool::Pool>; // in scope 0 at cita-auth/src/dispatcher.rs:144:21: 147:14
    let mut _29: &mut std::cell::RefMut<'_, tx_pool::Pool>; // in scope 0 at cita-auth/src/dispatcher.rs:144:21: 147:14
    scope 1 {
        debug lvl => _3;                 // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _25: &(&str, &str, &str, u32); // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        let mut _26: &[&str; 2];         // in scope 1 at cita-auth/src/dispatcher.rs:145:24: 145:44
        let mut _27: &log::LevelFilter;  // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }

    bb0: {
        _3 = log::Level::Trace;          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _6 = &_3;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _27 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(Dispatcher::add_txs_to_pool::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[2])) }
        _5 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _6, _27) -> bb4; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = const false;                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb3;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb2: {
        _8 = &_3;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _10 = log::max_level() -> bb5;   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb3: {
        switchInt(move _4) -> [0: bb13, otherwise: bb7]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb4: {
        switchInt(move _5) -> [0: bb1, otherwise: bb2]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb5: {
        _9 = &_10;                       // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _7 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _8, move _9) -> bb6; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb6: {
        _4 = move _7;                    // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb3;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        _26 = const _;                   // scope 1 at cita-auth/src/dispatcher.rs:145:24: 145:44
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:145:24: 145:44
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(Dispatcher::add_txs_to_pool::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[1])) }
        _13 = _26 as &[&str] (Pointer(Unsize)); // scope 1 at cita-auth/src/dispatcher.rs:145:24: 145:44
        _21 = SignedTransaction::get_tx_hash(_2) -> bb8; // scope 1 at cita-auth/src/dispatcher.rs:145:46: 145:62
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:145:49: 145:60
                                         // + literal: Const { ty: for<'a> fn(&'a SignedTransaction) -> &'a [u8] {SignedTransaction::get_tx_hash}, val: Value(<ZST>) }
    }

    bb8: {
        _20 = &_21;                      // scope 1 at cita-auth/src/dispatcher.rs:145:46: 145:74
        _19 = <&[u8] as cita_types::traits::LowerHex>::lower_hex(move _20) -> bb9; // scope 1 at cita-auth/src/dispatcher.rs:145:46: 145:74
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:145:63: 145:72
                                         // + literal: Const { ty: for<'a> fn(&'a &[u8]) -> std::string::String {<&[u8] as cita_types::traits::LowerHex>::lower_hex}, val: Value(<ZST>) }
    }

    bb9: {
        _18 = &_19;                      // scope 1 at cita-auth/src/dispatcher.rs:145:46: 145:74
        _17 = core::fmt::ArgumentV1::<'_>::new_display::<std::string::String>(_18) -> [return: bb10, unwind: bb17]; // scope 1 at cita-auth/src/dispatcher.rs:145:46: 145:74
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:145:46: 145:74
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b std::string::String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<std::string::String>}, val: Value(<ZST>) }
    }

    bb10: {
        _16 = [move _17];                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _15 = &_16;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _14 = _15 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _12 = Arguments::<'_>::new_v1(move _13, move _14) -> [return: bb11, unwind: bb17]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb11: {
        _25 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(Dispatcher::add_txs_to_pool::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[0])) }
        _11 = log::__private_api_log(move _12, _3, _25) -> [return: bb12, unwind: bb17]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb12: {
        drop(_19) -> bb13;               // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:41:14: 41:15
    }

    bb13: {
        _28 = deref_copy ((*_1).0: &mut &mut std::cell::RefMut<'_, tx_pool::Pool>); // scope 0 at cita-auth/src/dispatcher.rs:146:17: 146:45
        _29 = deref_copy (*_28);         // scope 0 at cita-auth/src/dispatcher.rs:146:17: 146:45
        _23 = <RefMut<'_, Pool> as DerefMut>::deref_mut(_29) -> bb14; // scope 0 at cita-auth/src/dispatcher.rs:146:17: 146:45
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:146:17: 146:45
                                         // + literal: Const { ty: for<'a> fn(&'a mut RefMut<'_, Pool>) -> &'a mut <RefMut<'_, Pool> as Deref>::Target {<RefMut<'_, Pool> as DerefMut>::deref_mut}, val: Value(<ZST>) }
    }

    bb14: {
        _22 = _23;                       // scope 0 at cita-auth/src/dispatcher.rs:146:17: 146:45
        _24 = <SignedTransaction as Clone>::clone(_2) -> bb15; // scope 0 at cita-auth/src/dispatcher.rs:146:34: 146:44
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:146:37: 146:42
                                         // + literal: Const { ty: for<'a> fn(&'a SignedTransaction) -> SignedTransaction {<SignedTransaction as Clone>::clone}, val: Value(<ZST>) }
    }

    bb15: {
        _0 = Pool::enqueue(move _22, move _24) -> bb16; // scope 0 at cita-auth/src/dispatcher.rs:146:17: 146:45
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:146:26: 146:33
                                         // + literal: Const { ty: for<'a> fn(&'a mut Pool, SignedTransaction) -> bool {Pool::enqueue}, val: Value(<ZST>) }
    }

    bb16: {
        return;                          // scope 0 at cita-auth/src/dispatcher.rs:147:14: 147:14
    }

    bb17 (cleanup): {
        drop(_19) -> bb18;               // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:41:14: 41:15
    }

    bb18 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/dispatcher.rs:144:21: 147:14
    }
}

promoted[0] in dispatcher::<impl at cita-auth/src/dispatcher.rs:36:1: 36:16>::add_txs_to_pool::{closure#0}: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/dispatcher.rs:145:17: 145:75
    let mut _7: &str;                    // in scope 0 at cita-auth/src/dispatcher.rs:145:17: 145:75

    bb0: {
        _3 = const "cita_auth::dispatcher"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::dispatcher"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/dispatcher.rs"; // scope 0 at cita-auth/src/dispatcher.rs:145:17: 145:75
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:145:17: 145:75
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/dispatcher.rs:145:17: 145:75
        _1 = (move _2, move _4, move _6, const 145_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in dispatcher::<impl at cita-auth/src/dispatcher.rs:36:1: 36:16>::add_txs_to_pool::{closure#0}: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-auth/src/dispatcher.rs:145:24: 145:44
    let mut _1: [&str; 2];               // in scope 0 at cita-auth/src/dispatcher.rs:145:24: 145:44

    bb0: {
        _1 = [const "add txs ", const " to pool"]; // scope 0 at cita-auth/src/dispatcher.rs:145:24: 145:44
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:145:24: 145:44
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:145:24: 145:44
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/dispatcher.rs:145:24: 145:44
        return;                          // scope 0 at cita-auth/src/dispatcher.rs:145:24: 145:44
    }
}

promoted[2] in dispatcher::<impl at cita-auth/src/dispatcher.rs:36:1: 36:16>::add_txs_to_pool::{closure#0}: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn dispatcher::<impl at cita-auth/src/dispatcher.rs:36:1: 36:16>::get_txs(_1: &Dispatcher, _2: &[H256]) -> Vec<SignedTransaction> {
    debug self => _1;                    // in scope 0 at cita-auth/src/dispatcher.rs:154:20: 154:25
    debug ids => _2;                     // in scope 0 at cita-auth/src/dispatcher.rs:154:27: 154:30
    let mut _0: std::vec::Vec<libproto::SignedTransaction>; // return place in scope 0 at cita-auth/src/dispatcher.rs:154:44: 154:66
    let _3: std::cell::Ref<'_, tx_pool::Pool>; // in scope 0 at cita-auth/src/dispatcher.rs:155:13: 155:17
    let mut _4: &std::cell::RefCell<tx_pool::Pool>; // in scope 0 at cita-auth/src/dispatcher.rs:155:20: 155:42
    let mut _5: std::iter::FilterMap<std::slice::Iter<'_, cita_types::H256>, [closure@cita-auth/src/dispatcher.rs:156:31: 156:35]>; // in scope 0 at cita-auth/src/dispatcher.rs:156:9: 156:58
    let mut _6: std::slice::Iter<'_, cita_types::H256>; // in scope 0 at cita-auth/src/dispatcher.rs:156:9: 156:19
    let mut _7: [closure@cita-auth/src/dispatcher.rs:156:31: 156:35]; // in scope 0 at cita-auth/src/dispatcher.rs:156:31: 156:57
    let mut _8: &std::cell::Ref<'_, tx_pool::Pool>; // in scope 0 at cita-auth/src/dispatcher.rs:156:31: 156:57
    scope 1 {
        debug pool => _3;                // in scope 1 at cita-auth/src/dispatcher.rs:155:13: 155:17
    }

    bb0: {
        _4 = &((*_1).0: std::cell::RefCell<tx_pool::Pool>); // scope 0 at cita-auth/src/dispatcher.rs:155:20: 155:42
        _3 = RefCell::<Pool>::borrow(move _4) -> bb1; // scope 0 at cita-auth/src/dispatcher.rs:155:20: 155:42
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:155:34: 155:40
                                         // + literal: Const { ty: for<'a> fn(&'a RefCell<Pool>) -> Ref<'a, Pool> {RefCell::<Pool>::borrow}, val: Value(<ZST>) }
    }

    bb1: {
        _6 = core::slice::<impl [H256]>::iter(_2) -> [return: bb2, unwind: bb6]; // scope 1 at cita-auth/src/dispatcher.rs:156:9: 156:19
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:156:13: 156:17
                                         // + literal: Const { ty: for<'a> fn(&'a [H256]) -> std::slice::Iter<'a, H256> {core::slice::<impl [H256]>::iter}, val: Value(<ZST>) }
    }

    bb2: {
        _8 = &_3;                        // scope 1 at cita-auth/src/dispatcher.rs:156:31: 156:57
        _7 = [closure@cita-auth/src/dispatcher.rs:156:31: 156:35] { pool: move _8 }; // scope 1 at cita-auth/src/dispatcher.rs:156:31: 156:57
                                         // closure
                                         // + def_id: DefId(0:153 ~ cita_auth[81d6]::dispatcher::{impl#0}::get_txs::{closure#0})
                                         // + substs: [
                                         //     i16,
                                         //     extern "rust-call" fn((&cita_types::H256,)) -> std::option::Option<libproto::SignedTransaction>,
                                         //     (&std::cell::Ref<'_, tx_pool::Pool>,),
                                         // ]
        _5 = <std::slice::Iter<'_, H256> as Iterator>::filter_map::<SignedTransaction, [closure@cita-auth/src/dispatcher.rs:156:31: 156:35]>(move _6, move _7) -> [return: bb3, unwind: bb6]; // scope 1 at cita-auth/src/dispatcher.rs:156:9: 156:58
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:156:20: 156:30
                                         // + literal: Const { ty: fn(std::slice::Iter<'_, H256>, [closure@cita-auth/src/dispatcher.rs:156:31: 156:35]) -> std::iter::FilterMap<std::slice::Iter<'_, H256>, [closure@cita-auth/src/dispatcher.rs:156:31: 156:35]> {<std::slice::Iter<'_, H256> as Iterator>::filter_map::<SignedTransaction, [closure@cita-auth/src/dispatcher.rs:156:31: 156:35]>}, val: Value(<ZST>) }
    }

    bb3: {
        _0 = <std::iter::FilterMap<std::slice::Iter<'_, H256>, [closure@cita-auth/src/dispatcher.rs:156:31: 156:35]> as Iterator>::collect::<Vec<SignedTransaction>>(move _5) -> [return: bb4, unwind: bb6]; // scope 1 at cita-auth/src/dispatcher.rs:156:9: 156:68
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:156:59: 156:66
                                         // + literal: Const { ty: fn(std::iter::FilterMap<std::slice::Iter<'_, H256>, [closure@cita-auth/src/dispatcher.rs:156:31: 156:35]>) -> Vec<SignedTransaction> {<std::iter::FilterMap<std::slice::Iter<'_, H256>, [closure@cita-auth/src/dispatcher.rs:156:31: 156:35]> as Iterator>::collect::<Vec<SignedTransaction>>}, val: Value(<ZST>) }
    }

    bb4: {
        drop(_3) -> bb5;                 // scope 0 at cita-auth/src/dispatcher.rs:157:5: 157:6
    }

    bb5: {
        return;                          // scope 0 at cita-auth/src/dispatcher.rs:157:6: 157:6
    }

    bb6 (cleanup): {
        drop(_3) -> bb7;                 // scope 0 at cita-auth/src/dispatcher.rs:157:5: 157:6
    }

    bb7 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/dispatcher.rs:154:5: 157:6
    }
}

fn dispatcher::<impl at cita-auth/src/dispatcher.rs:36:1: 36:16>::get_txs::{closure#0}(_1: &mut [closure@cita-auth/src/dispatcher.rs:156:31: 156:35], _2: &H256) -> std::option::Option<SignedTransaction> {
    debug id => _2;                      // in scope 0 at cita-auth/src/dispatcher.rs:156:32: 156:34
    debug pool => (*((*_1).0: &std::cell::Ref<'_, tx_pool::Pool>)); // in scope 0 at cita-auth/src/dispatcher.rs:155:13: 155:17
    let mut _0: std::option::Option<libproto::SignedTransaction>; // return place in scope 0 at cita-auth/src/dispatcher.rs:156:36: 156:36
    let mut _3: std::option::Option<&libproto::SignedTransaction>; // in scope 0 at cita-auth/src/dispatcher.rs:156:36: 156:48
    let mut _4: &tx_pool::Pool;          // in scope 0 at cita-auth/src/dispatcher.rs:156:36: 156:48
    let _5: &tx_pool::Pool;              // in scope 0 at cita-auth/src/dispatcher.rs:156:36: 156:48
    let mut _6: &std::cell::Ref<'_, tx_pool::Pool>; // in scope 0 at cita-auth/src/dispatcher.rs:156:31: 156:57

    bb0: {
        _6 = deref_copy ((*_1).0: &std::cell::Ref<'_, tx_pool::Pool>); // scope 0 at cita-auth/src/dispatcher.rs:156:36: 156:48
        _5 = <Ref<'_, Pool> as Deref>::deref(_6) -> bb1; // scope 0 at cita-auth/src/dispatcher.rs:156:36: 156:48
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:156:36: 156:48
                                         // + literal: Const { ty: for<'a> fn(&'a Ref<'_, Pool>) -> &'a <Ref<'_, Pool> as Deref>::Target {<Ref<'_, Pool> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = _5;                         // scope 0 at cita-auth/src/dispatcher.rs:156:36: 156:48
        _3 = Pool::get(move _4, _2) -> bb2; // scope 0 at cita-auth/src/dispatcher.rs:156:36: 156:48
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:156:41: 156:44
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Pool, &'b H256) -> std::option::Option<&'a SignedTransaction> {Pool::get}, val: Value(<ZST>) }
    }

    bb2: {
        _0 = std::option::Option::<&SignedTransaction>::cloned(move _3) -> bb3; // scope 0 at cita-auth/src/dispatcher.rs:156:36: 156:57
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:156:49: 156:55
                                         // + literal: Const { ty: fn(std::option::Option<&SignedTransaction>) -> std::option::Option<SignedTransaction> {std::option::Option::<&SignedTransaction>::cloned}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at cita-auth/src/dispatcher.rs:156:57: 156:57
    }
}

fn dispatcher::<impl at cita-auth/src/dispatcher.rs:36:1: 36:16>::check_missing(_1: &Dispatcher, _2: Vec<H256>) -> Vec<H256> {
    debug self => _1;                    // in scope 0 at cita-auth/src/dispatcher.rs:159:26: 159:31
    debug ids => _2;                     // in scope 0 at cita-auth/src/dispatcher.rs:159:33: 159:36
    let mut _0: std::vec::Vec<cita_types::H256>; // return place in scope 0 at cita-auth/src/dispatcher.rs:159:52: 159:61
    let _3: std::cell::Ref<'_, tx_pool::Pool>; // in scope 0 at cita-auth/src/dispatcher.rs:160:13: 160:17
    let mut _4: &std::cell::RefCell<tx_pool::Pool>; // in scope 0 at cita-auth/src/dispatcher.rs:160:20: 160:42
    let mut _5: std::iter::Filter<std::vec::IntoIter<cita_types::H256>, [closure@cita-auth/src/dispatcher.rs:162:21: 162:25]>; // in scope 0 at cita-auth/src/dispatcher.rs:161:9: 162:49
    let mut _6: std::vec::IntoIter<cita_types::H256>; // in scope 0 at cita-auth/src/dispatcher.rs:161:9: 161:24
    let mut _7: std::vec::Vec<cita_types::H256>; // in scope 0 at cita-auth/src/dispatcher.rs:161:9: 161:12
    let mut _8: [closure@cita-auth/src/dispatcher.rs:162:21: 162:25]; // in scope 0 at cita-auth/src/dispatcher.rs:162:21: 162:48
    let mut _9: &std::cell::Ref<'_, tx_pool::Pool>; // in scope 0 at cita-auth/src/dispatcher.rs:162:21: 162:48
    let mut _10: bool;                   // in scope 0 at cita-auth/src/dispatcher.rs:164:5: 164:6
    scope 1 {
        debug pool => _3;                // in scope 1 at cita-auth/src/dispatcher.rs:160:13: 160:17
    }

    bb0: {
        _10 = const false;               // scope 0 at cita-auth/src/dispatcher.rs:160:13: 160:17
        _10 = const true;                // scope 0 at cita-auth/src/dispatcher.rs:160:13: 160:17
        _4 = &((*_1).0: std::cell::RefCell<tx_pool::Pool>); // scope 0 at cita-auth/src/dispatcher.rs:160:20: 160:42
        _3 = RefCell::<Pool>::borrow(move _4) -> [return: bb1, unwind: bb9]; // scope 0 at cita-auth/src/dispatcher.rs:160:20: 160:42
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:160:34: 160:40
                                         // + literal: Const { ty: for<'a> fn(&'a RefCell<Pool>) -> Ref<'a, Pool> {RefCell::<Pool>::borrow}, val: Value(<ZST>) }
    }

    bb1: {
        _10 = const false;               // scope 1 at cita-auth/src/dispatcher.rs:161:9: 161:12
        _7 = move _2;                    // scope 1 at cita-auth/src/dispatcher.rs:161:9: 161:12
        _6 = <Vec<H256> as IntoIterator>::into_iter(move _7) -> [return: bb2, unwind: bb6]; // scope 1 at cita-auth/src/dispatcher.rs:161:9: 161:24
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:161:13: 161:22
                                         // + literal: Const { ty: fn(Vec<H256>) -> <Vec<H256> as IntoIterator>::IntoIter {<Vec<H256> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb2: {
        _9 = &_3;                        // scope 1 at cita-auth/src/dispatcher.rs:162:21: 162:48
        _8 = [closure@cita-auth/src/dispatcher.rs:162:21: 162:25] { pool: move _9 }; // scope 1 at cita-auth/src/dispatcher.rs:162:21: 162:48
                                         // closure
                                         // + def_id: DefId(0:155 ~ cita_auth[81d6]::dispatcher::{impl#0}::check_missing::{closure#0})
                                         // + substs: [
                                         //     i16,
                                         //     for<'a> extern "rust-call" fn((&'a cita_types::H256,)) -> bool,
                                         //     (&std::cell::Ref<'_, tx_pool::Pool>,),
                                         // ]
        _5 = <std::vec::IntoIter<H256> as Iterator>::filter::<[closure@cita-auth/src/dispatcher.rs:162:21: 162:25]>(move _6, move _8) -> [return: bb3, unwind: bb6]; // scope 1 at cita-auth/src/dispatcher.rs:161:9: 162:49
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:162:14: 162:20
                                         // + literal: Const { ty: fn(std::vec::IntoIter<H256>, [closure@cita-auth/src/dispatcher.rs:162:21: 162:25]) -> std::iter::Filter<std::vec::IntoIter<H256>, [closure@cita-auth/src/dispatcher.rs:162:21: 162:25]> {<std::vec::IntoIter<H256> as Iterator>::filter::<[closure@cita-auth/src/dispatcher.rs:162:21: 162:25]>}, val: Value(<ZST>) }
    }

    bb3: {
        _0 = <std::iter::Filter<std::vec::IntoIter<H256>, [closure@cita-auth/src/dispatcher.rs:162:21: 162:25]> as Iterator>::collect::<Vec<H256>>(move _5) -> [return: bb4, unwind: bb6]; // scope 1 at cita-auth/src/dispatcher.rs:161:9: 163:23
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:163:14: 163:21
                                         // + literal: Const { ty: fn(std::iter::Filter<std::vec::IntoIter<H256>, [closure@cita-auth/src/dispatcher.rs:162:21: 162:25]>) -> Vec<H256> {<std::iter::Filter<std::vec::IntoIter<H256>, [closure@cita-auth/src/dispatcher.rs:162:21: 162:25]> as Iterator>::collect::<Vec<H256>>}, val: Value(<ZST>) }
    }

    bb4: {
        drop(_3) -> [return: bb5, unwind: bb9]; // scope 0 at cita-auth/src/dispatcher.rs:164:5: 164:6
    }

    bb5: {
        return;                          // scope 0 at cita-auth/src/dispatcher.rs:164:6: 164:6
    }

    bb6 (cleanup): {
        drop(_3) -> bb9;                 // scope 0 at cita-auth/src/dispatcher.rs:164:5: 164:6
    }

    bb7 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/dispatcher.rs:159:5: 164:6
    }

    bb8 (cleanup): {
        drop(_2) -> bb7;                 // scope 0 at cita-auth/src/dispatcher.rs:164:5: 164:6
    }

    bb9 (cleanup): {
        switchInt(_10) -> [0: bb7, otherwise: bb8]; // scope 0 at cita-auth/src/dispatcher.rs:164:5: 164:6
    }
}

fn dispatcher::<impl at cita-auth/src/dispatcher.rs:36:1: 36:16>::check_missing::{closure#0}(_1: &mut [closure@cita-auth/src/dispatcher.rs:162:21: 162:25], _2: &H256) -> bool {
    debug id => _2;                      // in scope 0 at cita-auth/src/dispatcher.rs:162:22: 162:24
    debug pool => (*((*_1).0: &std::cell::Ref<'_, tx_pool::Pool>)); // in scope 0 at cita-auth/src/dispatcher.rs:160:13: 160:17
    let mut _0: bool;                    // return place in scope 0 at cita-auth/src/dispatcher.rs:162:26: 162:26
    let mut _3: &std::option::Option<&libproto::SignedTransaction>; // in scope 0 at cita-auth/src/dispatcher.rs:162:26: 162:48
    let _4: std::option::Option<&libproto::SignedTransaction>; // in scope 0 at cita-auth/src/dispatcher.rs:162:26: 162:38
    let mut _5: &tx_pool::Pool;          // in scope 0 at cita-auth/src/dispatcher.rs:162:26: 162:38
    let _6: &tx_pool::Pool;              // in scope 0 at cita-auth/src/dispatcher.rs:162:26: 162:38
    let mut _7: &std::cell::Ref<'_, tx_pool::Pool>; // in scope 0 at cita-auth/src/dispatcher.rs:162:21: 162:48

    bb0: {
        _7 = deref_copy ((*_1).0: &std::cell::Ref<'_, tx_pool::Pool>); // scope 0 at cita-auth/src/dispatcher.rs:162:26: 162:38
        _6 = <Ref<'_, Pool> as Deref>::deref(_7) -> bb1; // scope 0 at cita-auth/src/dispatcher.rs:162:26: 162:38
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:162:26: 162:38
                                         // + literal: Const { ty: for<'a> fn(&'a Ref<'_, Pool>) -> &'a <Ref<'_, Pool> as Deref>::Target {<Ref<'_, Pool> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = _6;                         // scope 0 at cita-auth/src/dispatcher.rs:162:26: 162:38
        _4 = Pool::get(move _5, _2) -> bb2; // scope 0 at cita-auth/src/dispatcher.rs:162:26: 162:38
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:162:31: 162:34
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Pool, &'b H256) -> std::option::Option<&'a SignedTransaction> {Pool::get}, val: Value(<ZST>) }
    }

    bb2: {
        _3 = &_4;                        // scope 0 at cita-auth/src/dispatcher.rs:162:26: 162:48
        _0 = std::option::Option::<&SignedTransaction>::is_none(move _3) -> bb3; // scope 0 at cita-auth/src/dispatcher.rs:162:26: 162:48
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:162:39: 162:46
                                         // + literal: Const { ty: for<'a> fn(&'a std::option::Option<&SignedTransaction>) -> bool {std::option::Option::<&SignedTransaction>::is_none}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at cita-auth/src/dispatcher.rs:162:48: 162:48
    }
}

fn dispatcher::<impl at cita-auth/src/dispatcher.rs:36:1: 36:16>::take_txs_from_pool(_1: &Dispatcher, _2: u64, _3: u64, _4: AccountGasLimit, _5: bool, _6: &std::option::Option<H160>, _7: u32) -> Vec<SignedTransaction> {
    debug self => _1;                    // in scope 0 at cita-auth/src/dispatcher.rs:167:9: 167:14
    debug height => _2;                  // in scope 0 at cita-auth/src/dispatcher.rs:168:9: 168:15
    debug block_quota_limit => _3;       // in scope 0 at cita-auth/src/dispatcher.rs:169:9: 169:26
    debug account_quota_limit => _4;     // in scope 0 at cita-auth/src/dispatcher.rs:170:9: 170:28
    debug check_quota => _5;             // in scope 0 at cita-auth/src/dispatcher.rs:171:9: 171:20
    debug admin_address => _6;           // in scope 0 at cita-auth/src/dispatcher.rs:172:9: 172:22
    debug version => _7;                 // in scope 0 at cita-auth/src/dispatcher.rs:173:9: 173:16
    let mut _0: std::vec::Vec<libproto::SignedTransaction>; // return place in scope 0 at cita-auth/src/dispatcher.rs:174:10: 174:32
    let _8: &mut std::cell::RefMut<'_, tx_pool::Pool>; // in scope 0 at cita-auth/src/dispatcher.rs:175:13: 175:21
    let mut _9: std::cell::RefMut<'_, tx_pool::Pool>; // in scope 0 at cita-auth/src/dispatcher.rs:175:29: 175:55
    let mut _10: &std::cell::RefCell<tx_pool::Pool>; // in scope 0 at cita-auth/src/dispatcher.rs:175:29: 175:55
    let mut _11: &mut tx_pool::Pool;     // in scope 0 at cita-auth/src/dispatcher.rs:176:9: 183:10
    let mut _12: &mut tx_pool::Pool;     // in scope 0 at cita-auth/src/dispatcher.rs:176:9: 183:10
    let mut _13: libproto::AccountGasLimit; // in scope 0 at cita-auth/src/dispatcher.rs:179:13: 179:32
    let mut _14: std::option::Option<cita_types::H160>; // in scope 0 at cita-auth/src/dispatcher.rs:181:13: 181:27
    let mut _15: bool;                   // in scope 0 at cita-auth/src/dispatcher.rs:184:5: 184:6
    scope 1 {
        debug txs_pool => _8;            // in scope 1 at cita-auth/src/dispatcher.rs:175:13: 175:21
    }

    bb0: {
        _15 = const false;               // scope 0 at cita-auth/src/dispatcher.rs:175:13: 175:21
        _15 = const true;                // scope 0 at cita-auth/src/dispatcher.rs:175:13: 175:21
        _10 = &((*_1).0: std::cell::RefCell<tx_pool::Pool>); // scope 0 at cita-auth/src/dispatcher.rs:175:29: 175:55
        _9 = RefCell::<Pool>::borrow_mut(move _10) -> [return: bb1, unwind: bb8]; // scope 0 at cita-auth/src/dispatcher.rs:175:29: 175:55
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:175:43: 175:53
                                         // + literal: Const { ty: for<'a> fn(&'a RefCell<Pool>) -> RefMut<'a, Pool> {RefCell::<Pool>::borrow_mut}, val: Value(<ZST>) }
    }

    bb1: {
        _8 = &mut _9;                    // scope 0 at cita-auth/src/dispatcher.rs:175:24: 175:55
        _12 = <RefMut<'_, Pool> as DerefMut>::deref_mut(_8) -> [return: bb2, unwind: bb5]; // scope 1 at cita-auth/src/dispatcher.rs:176:9: 183:10
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:176:9: 183:10
                                         // + literal: Const { ty: for<'a> fn(&'a mut RefMut<'_, Pool>) -> &'a mut <RefMut<'_, Pool> as Deref>::Target {<RefMut<'_, Pool> as DerefMut>::deref_mut}, val: Value(<ZST>) }
    }

    bb2: {
        _11 = _12;                       // scope 1 at cita-auth/src/dispatcher.rs:176:9: 183:10
        _15 = const false;               // scope 1 at cita-auth/src/dispatcher.rs:179:13: 179:32
        _13 = move _4;                   // scope 1 at cita-auth/src/dispatcher.rs:179:13: 179:32
        _14 = (*_6);                     // scope 1 at cita-auth/src/dispatcher.rs:181:13: 181:27
        _0 = Pool::package(move _11, _2, _3, move _13, _5, move _14, _7) -> [return: bb3, unwind: bb5]; // scope 1 at cita-auth/src/dispatcher.rs:176:9: 183:10
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:176:18: 176:25
                                         // + literal: Const { ty: for<'a> fn(&'a mut Pool, u64, u64, AccountGasLimit, bool, std::option::Option<H160>, u32) -> Vec<SignedTransaction> {Pool::package}, val: Value(<ZST>) }
    }

    bb3: {
        drop(_9) -> [return: bb4, unwind: bb8]; // scope 0 at cita-auth/src/dispatcher.rs:184:5: 184:6
    }

    bb4: {
        return;                          // scope 0 at cita-auth/src/dispatcher.rs:184:6: 184:6
    }

    bb5 (cleanup): {
        drop(_9) -> bb8;                 // scope 0 at cita-auth/src/dispatcher.rs:184:5: 184:6
    }

    bb6 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/dispatcher.rs:166:5: 184:6
    }

    bb7 (cleanup): {
        drop(_4) -> bb6;                 // scope 0 at cita-auth/src/dispatcher.rs:184:5: 184:6
    }

    bb8 (cleanup): {
        switchInt(_15) -> [0: bb6, otherwise: bb7]; // scope 0 at cita-auth/src/dispatcher.rs:184:5: 184:6
    }
}

fn dispatcher::<impl at cita-auth/src/dispatcher.rs:36:1: 36:16>::del_txs_from_pool_with_hash(_1: &Dispatcher, _2: &HashSet<H256>) -> () {
    debug self => _1;                    // in scope 0 at cita-auth/src/dispatcher.rs:186:40: 186:45
    debug txs => _2;                     // in scope 0 at cita-auth/src/dispatcher.rs:186:47: 186:50
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/dispatcher.rs:186:68: 186:68
    let _3: ();                          // in scope 0 at cita-auth/src/dispatcher.rs:188:13: 188:61
    let mut _4: &mut tx_pool::Pool;      // in scope 0 at cita-auth/src/dispatcher.rs:188:13: 188:61
    let mut _5: &mut tx_pool::Pool;      // in scope 0 at cita-auth/src/dispatcher.rs:188:13: 188:61
    let mut _6: &mut std::cell::RefMut<'_, tx_pool::Pool>; // in scope 0 at cita-auth/src/dispatcher.rs:188:13: 188:61
    let mut _7: std::cell::RefMut<'_, tx_pool::Pool>; // in scope 0 at cita-auth/src/dispatcher.rs:188:13: 188:39
    let mut _8: &std::cell::RefCell<tx_pool::Pool>; // in scope 0 at cita-auth/src/dispatcher.rs:188:13: 188:39
    let mut _9: bool;                    // in scope 0 at cita-auth/src/dispatcher.rs:190:12: 190:27
    let mut _10: txwal::TxWal;           // in scope 0 at cita-auth/src/dispatcher.rs:191:17: 191:24
    let mut _11: &txwal::TxWal;          // in scope 0 at cita-auth/src/dispatcher.rs:191:27: 191:43
    let _13: std::thread::JoinHandle<()>; // in scope 0 at cita-auth/src/dispatcher.rs:193:13: 195:15
    let mut _14: [closure@cita-auth/src/dispatcher.rs:193:27: 193:34]; // in scope 0 at cita-auth/src/dispatcher.rs:193:27: 195:14
    let mut _15: bool;                   // in scope 0 at cita-auth/src/dispatcher.rs:196:9: 196:10
    scope 1 {
        debug wal => _10;                // in scope 1 at cita-auth/src/dispatcher.rs:191:17: 191:24
        let _12: std::collections::HashSet<cita_types::H256>; // in scope 1 at cita-auth/src/dispatcher.rs:192:17: 192:20
        scope 2 {
            debug txs => _12;            // in scope 2 at cita-auth/src/dispatcher.rs:192:17: 192:20
        }
    }

    bb0: {
        _15 = const false;               // scope 0 at cita-auth/src/dispatcher.rs:187:9: 189:10
        _8 = &((*_1).0: std::cell::RefCell<tx_pool::Pool>); // scope 0 at cita-auth/src/dispatcher.rs:188:13: 188:39
        _7 = RefCell::<Pool>::borrow_mut(move _8) -> bb1; // scope 0 at cita-auth/src/dispatcher.rs:188:13: 188:39
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:188:27: 188:37
                                         // + literal: Const { ty: for<'a> fn(&'a RefCell<Pool>) -> RefMut<'a, Pool> {RefCell::<Pool>::borrow_mut}, val: Value(<ZST>) }
    }

    bb1: {
        _6 = &mut _7;                    // scope 0 at cita-auth/src/dispatcher.rs:188:13: 188:61
        _5 = <RefMut<'_, Pool> as DerefMut>::deref_mut(move _6) -> [return: bb2, unwind: bb11]; // scope 0 at cita-auth/src/dispatcher.rs:188:13: 188:61
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:188:13: 188:61
                                         // + literal: Const { ty: for<'a> fn(&'a mut RefMut<'_, Pool>) -> &'a mut <RefMut<'_, Pool> as Deref>::Target {<RefMut<'_, Pool> as DerefMut>::deref_mut}, val: Value(<ZST>) }
    }

    bb2: {
        _4 = _5;                         // scope 0 at cita-auth/src/dispatcher.rs:188:13: 188:61
        _3 = Pool::update_with_hash(move _4, _2) -> [return: bb3, unwind: bb11]; // scope 0 at cita-auth/src/dispatcher.rs:188:13: 188:61
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:188:40: 188:56
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut Pool, &'b HashSet<H256>) {Pool::update_with_hash}, val: Value(<ZST>) }
    }

    bb3: {
        drop(_7) -> bb4;                 // scope 0 at cita-auth/src/dispatcher.rs:188:61: 188:62
    }

    bb4: {
        _9 = ((*_1).2: bool);            // scope 0 at cita-auth/src/dispatcher.rs:190:12: 190:27
        switchInt(move _9) -> [0: bb10, otherwise: bb5]; // scope 0 at cita-auth/src/dispatcher.rs:190:12: 190:27
    }

    bb5: {
        _11 = &((*_1).1: txwal::TxWal);  // scope 0 at cita-auth/src/dispatcher.rs:191:27: 191:43
        _15 = const true;                // scope 0 at cita-auth/src/dispatcher.rs:191:27: 191:43
        _10 = <TxWal as Clone>::clone(move _11) -> bb6; // scope 0 at cita-auth/src/dispatcher.rs:191:27: 191:43
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:191:36: 191:41
                                         // + literal: Const { ty: for<'a> fn(&'a TxWal) -> TxWal {<TxWal as Clone>::clone}, val: Value(<ZST>) }
    }

    bb6: {
        _12 = <HashSet<H256> as Clone>::clone(_2) -> [return: bb7, unwind: bb14]; // scope 1 at cita-auth/src/dispatcher.rs:192:23: 192:34
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:192:27: 192:32
                                         // + literal: Const { ty: for<'a> fn(&'a HashSet<H256>) -> HashSet<H256> {<HashSet<H256> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb7: {
        _15 = const false;               // scope 2 at cita-auth/src/dispatcher.rs:193:27: 195:14
        _14 = [closure@cita-auth/src/dispatcher.rs:193:27: 193:34] { wal: move _10, txs: move _12 }; // scope 2 at cita-auth/src/dispatcher.rs:193:27: 195:14
                                         // closure
                                         // + def_id: DefId(0:158 ~ cita_auth[81d6]::dispatcher::{impl#0}::del_txs_from_pool_with_hash::{closure#0})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn(()),
                                         //     (txwal::TxWal, std::collections::HashSet<cita_types::H256>),
                                         // ]
        _13 = std::thread::spawn::<[closure@cita-auth/src/dispatcher.rs:193:27: 193:34], ()>(move _14) -> [return: bb8, unwind: bb14]; // scope 2 at cita-auth/src/dispatcher.rs:193:13: 195:15
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:193:13: 193:26
                                         // + literal: Const { ty: fn([closure@cita-auth/src/dispatcher.rs:193:27: 193:34]) -> JoinHandle<()> {std::thread::spawn::<[closure@cita-auth/src/dispatcher.rs:193:27: 193:34], ()>}, val: Value(<ZST>) }
    }

    bb8: {
        drop(_13) -> [return: bb9, unwind: bb14]; // scope 2 at cita-auth/src/dispatcher.rs:195:15: 195:16
    }

    bb9: {
        _15 = const false;               // scope 0 at cita-auth/src/dispatcher.rs:196:9: 196:10
        goto -> bb10;                    // scope 0 at cita-auth/src/dispatcher.rs:190:9: 196:10
    }

    bb10: {
        return;                          // scope 0 at cita-auth/src/dispatcher.rs:197:6: 197:6
    }

    bb11 (cleanup): {
        drop(_7) -> bb12;                // scope 0 at cita-auth/src/dispatcher.rs:188:61: 188:62
    }

    bb12 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/dispatcher.rs:186:5: 197:6
    }

    bb13 (cleanup): {
        drop(_10) -> bb12;               // scope 0 at cita-auth/src/dispatcher.rs:196:9: 196:10
    }

    bb14 (cleanup): {
        switchInt(_15) -> [0: bb12, otherwise: bb13]; // scope 0 at cita-auth/src/dispatcher.rs:196:9: 196:10
    }
}

fn dispatcher::<impl at cita-auth/src/dispatcher.rs:36:1: 36:16>::del_txs_from_pool_with_hash::{closure#0}(_1: [closure@cita-auth/src/dispatcher.rs:193:27: 193:34]) -> () {
    debug wal => (_1.0: txwal::TxWal);   // in scope 0 at cita-auth/src/dispatcher.rs:191:21: 191:24
    debug txs => (_1.1: std::collections::HashSet<cita_types::H256>); // in scope 0 at cita-auth/src/dispatcher.rs:192:17: 192:20
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/dispatcher.rs:193:35: 193:35
    let _2: ();                          // in scope 0 at cita-auth/src/dispatcher.rs:194:17: 194:80
    let mut _3: &mut txwal::TxWal;       // in scope 0 at cita-auth/src/dispatcher.rs:194:17: 194:80
    let mut _4: &[cita_types::H256];     // in scope 0 at cita-auth/src/dispatcher.rs:194:40: 194:79
    let _5: &[cita_types::H256];         // in scope 0 at cita-auth/src/dispatcher.rs:194:40: 194:79
    let _6: &std::vec::Vec<cita_types::H256>; // in scope 0 at cita-auth/src/dispatcher.rs:194:40: 194:79
    let _7: std::vec::Vec<cita_types::H256>; // in scope 0 at cita-auth/src/dispatcher.rs:194:41: 194:79
    let mut _8: std::collections::hash_set::IntoIter<cita_types::H256>; // in scope 0 at cita-auth/src/dispatcher.rs:194:41: 194:56
    let mut _9: std::collections::HashSet<cita_types::H256>; // in scope 0 at cita-auth/src/dispatcher.rs:194:41: 194:44

    bb0: {
        _3 = &mut (_1.0: txwal::TxWal);  // scope 0 at cita-auth/src/dispatcher.rs:194:17: 194:80
        _9 = move (_1.1: std::collections::HashSet<cita_types::H256>); // scope 0 at cita-auth/src/dispatcher.rs:194:41: 194:44
        _8 = <HashSet<H256> as IntoIterator>::into_iter(move _9) -> [return: bb1, unwind: bb9]; // scope 0 at cita-auth/src/dispatcher.rs:194:41: 194:56
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:194:45: 194:54
                                         // + literal: Const { ty: fn(HashSet<H256>) -> <HashSet<H256> as IntoIterator>::IntoIter {<HashSet<H256> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb1: {
        _7 = <std::collections::hash_set::IntoIter<H256> as Iterator>::collect::<Vec<H256>>(move _8) -> [return: bb2, unwind: bb9]; // scope 0 at cita-auth/src/dispatcher.rs:194:41: 194:79
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:194:57: 194:64
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(std::collections::hash_set::IntoIter<H256>) -> Vec<H256> {<std::collections::hash_set::IntoIter<H256> as Iterator>::collect::<Vec<H256>>}, val: Value(<ZST>) }
    }

    bb2: {
        _6 = &_7;                        // scope 0 at cita-auth/src/dispatcher.rs:194:40: 194:79
        _5 = <Vec<H256> as Deref>::deref(_6) -> [return: bb3, unwind: bb6]; // scope 0 at cita-auth/src/dispatcher.rs:194:40: 194:79
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:194:40: 194:79
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<H256>) -> &'a <Vec<H256> as Deref>::Target {<Vec<H256> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb3: {
        _4 = _5;                         // scope 0 at cita-auth/src/dispatcher.rs:194:40: 194:79
        _2 = TxWal::delete_with_hashes(move _3, move _4) -> [return: bb4, unwind: bb6]; // scope 0 at cita-auth/src/dispatcher.rs:194:17: 194:80
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:194:21: 194:39
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut TxWal, &'b [H256]) {TxWal::delete_with_hashes}, val: Value(<ZST>) }
    }

    bb4: {
        drop(_7) -> [return: bb5, unwind: bb9]; // scope 0 at cita-auth/src/dispatcher.rs:194:80: 194:81
    }

    bb5: {
        drop((_1.0: txwal::TxWal)) -> bb8; // scope 0 at cita-auth/src/dispatcher.rs:195:13: 195:14
    }

    bb6 (cleanup): {
        drop(_7) -> bb9;                 // scope 0 at cita-auth/src/dispatcher.rs:194:80: 194:81
    }

    bb7 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/dispatcher.rs:193:27: 195:14
    }

    bb8: {
        return;                          // scope 0 at cita-auth/src/dispatcher.rs:195:14: 195:14
    }

    bb9 (cleanup): {
        drop((_1.0: txwal::TxWal)) -> bb7; // scope 0 at cita-auth/src/dispatcher.rs:195:13: 195:14
    }
}

fn dispatcher::<impl at cita-auth/src/dispatcher.rs:36:1: 36:16>::read_tx_from_wal(_1: &mut Dispatcher) -> usize {
    debug self => _1;                    // in scope 0 at cita-auth/src/dispatcher.rs:201:29: 201:38
    let _2: std::vec::Vec<libproto::SignedTransaction>; // in scope 0 at cita-auth/src/dispatcher.rs:202:13: 202:16
    let mut _3: &txwal::TxWal;           // in scope 0 at cita-auth/src/dispatcher.rs:202:19: 202:38
    let mut _4: &std::vec::Vec<libproto::SignedTransaction>; // in scope 0 at cita-auth/src/dispatcher.rs:203:19: 203:28
    let mut _6: &std::cell::RefCell<tx_pool::Pool>; // in scope 0 at cita-auth/src/dispatcher.rs:204:24: 204:50
    let mut _7: std::vec::IntoIter<libproto::SignedTransaction>; // in scope 0 at cita-auth/src/dispatcher.rs:205:19: 205:22
    let mut _8: std::vec::Vec<libproto::SignedTransaction>; // in scope 0 at cita-auth/src/dispatcher.rs:205:19: 205:22
    let mut _10: std::option::Option<libproto::SignedTransaction>; // in scope 0 at cita-auth/src/dispatcher.rs:205:19: 205:22
    let mut _11: &mut std::vec::IntoIter<libproto::SignedTransaction>; // in scope 0 at cita-auth/src/dispatcher.rs:205:19: 205:22
    let mut _12: isize;                  // in scope 0 at cita-auth/src/dispatcher.rs:205:9: 207:10
    let _14: bool;                       // in scope 0 at cita-auth/src/dispatcher.rs:206:13: 206:29
    let mut _15: &mut tx_pool::Pool;     // in scope 0 at cita-auth/src/dispatcher.rs:206:13: 206:29
    let mut _16: &mut tx_pool::Pool;     // in scope 0 at cita-auth/src/dispatcher.rs:206:13: 206:29
    let mut _17: &mut std::cell::RefMut<'_, tx_pool::Pool>; // in scope 0 at cita-auth/src/dispatcher.rs:206:13: 206:29
    let mut _18: libproto::SignedTransaction; // in scope 0 at cita-auth/src/dispatcher.rs:206:26: 206:28
    let mut _19: bool;                   // in scope 0 at cita-auth/src/dispatcher.rs:207:9: 207:10
    let mut _20: bool;                   // in scope 0 at cita-auth/src/dispatcher.rs:209:5: 209:6
    scope 1 {
        debug txs => _2;                 // in scope 1 at cita-auth/src/dispatcher.rs:202:13: 202:16
        let mut _0: usize;               // return place in scope 1 at cita-auth/src/dispatcher.rs:203:13: 203:16
        scope 2 {
            debug len => _0;             // in scope 2 at cita-auth/src/dispatcher.rs:203:13: 203:16
            let mut _5: std::cell::RefMut<'_, tx_pool::Pool>; // in scope 2 at cita-auth/src/dispatcher.rs:204:13: 204:21
            scope 3 {
                debug pool => _5;        // in scope 3 at cita-auth/src/dispatcher.rs:204:13: 204:21
                let mut _9: std::vec::IntoIter<libproto::SignedTransaction>; // in scope 3 at cita-auth/src/dispatcher.rs:205:19: 205:22
                scope 4 {
                    debug iter => _9;    // in scope 4 at cita-auth/src/dispatcher.rs:205:19: 205:22
                    let _13: libproto::SignedTransaction; // in scope 4 at cita-auth/src/dispatcher.rs:205:13: 205:15
                    scope 5 {
                        debug tx => _13; // in scope 5 at cita-auth/src/dispatcher.rs:205:13: 205:15
                    }
                }
            }
        }
    }

    bb0: {
        _20 = const false;               // scope 0 at cita-auth/src/dispatcher.rs:202:13: 202:16
        _19 = const false;               // scope 0 at cita-auth/src/dispatcher.rs:202:13: 202:16
        _3 = &((*_1).1: txwal::TxWal);   // scope 0 at cita-auth/src/dispatcher.rs:202:19: 202:38
        _20 = const true;                // scope 0 at cita-auth/src/dispatcher.rs:202:19: 202:38
        _2 = TxWal::read_all(move _3) -> bb1; // scope 0 at cita-auth/src/dispatcher.rs:202:19: 202:38
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:202:28: 202:36
                                         // + literal: Const { ty: for<'a> fn(&'a TxWal) -> Vec<SignedTransaction> {TxWal::read_all}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = &_2;                        // scope 1 at cita-auth/src/dispatcher.rs:203:19: 203:28
        _0 = Vec::<SignedTransaction>::len(move _4) -> [return: bb2, unwind: bb20]; // scope 1 at cita-auth/src/dispatcher.rs:203:19: 203:28
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:203:23: 203:26
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<SignedTransaction>) -> usize {Vec::<SignedTransaction>::len}, val: Value(<ZST>) }
    }

    bb2: {
        _6 = &((*_1).0: std::cell::RefCell<tx_pool::Pool>); // scope 2 at cita-auth/src/dispatcher.rs:204:24: 204:50
        _5 = RefCell::<Pool>::borrow_mut(move _6) -> [return: bb3, unwind: bb20]; // scope 2 at cita-auth/src/dispatcher.rs:204:24: 204:50
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:204:38: 204:48
                                         // + literal: Const { ty: for<'a> fn(&'a RefCell<Pool>) -> RefMut<'a, Pool> {RefCell::<Pool>::borrow_mut}, val: Value(<ZST>) }
    }

    bb3: {
        _20 = const false;               // scope 3 at cita-auth/src/dispatcher.rs:205:19: 205:22
        _8 = move _2;                    // scope 3 at cita-auth/src/dispatcher.rs:205:19: 205:22
        _7 = <Vec<SignedTransaction> as IntoIterator>::into_iter(move _8) -> [return: bb4, unwind: bb15]; // scope 3 at cita-auth/src/dispatcher.rs:205:19: 205:22
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:205:19: 205:22
                                         // + literal: Const { ty: fn(Vec<SignedTransaction>) -> <Vec<SignedTransaction> as IntoIterator>::IntoIter {<Vec<SignedTransaction> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb4: {
        _9 = move _7;                    // scope 3 at cita-auth/src/dispatcher.rs:205:19: 205:22
        goto -> bb5;                     // scope 4 at cita-auth/src/dispatcher.rs:205:9: 207:10
    }

    bb5: {
        _11 = &mut _9;                   // scope 4 at cita-auth/src/dispatcher.rs:205:19: 205:22
        _10 = <std::vec::IntoIter<SignedTransaction> as Iterator>::next(_11) -> [return: bb6, unwind: bb14]; // scope 4 at cita-auth/src/dispatcher.rs:205:19: 205:22
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:205:19: 205:22
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::vec::IntoIter<SignedTransaction>) -> std::option::Option<<std::vec::IntoIter<SignedTransaction> as Iterator>::Item> {<std::vec::IntoIter<SignedTransaction> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb6: {
        _12 = discriminant(_10);         // scope 4 at cita-auth/src/dispatcher.rs:205:19: 205:22
        switchInt(move _12) -> [0: bb9, 1: bb7, otherwise: bb8]; // scope 4 at cita-auth/src/dispatcher.rs:205:19: 205:22
    }

    bb7: {
        _19 = const true;                // scope 4 at cita-auth/src/dispatcher.rs:205:13: 205:15
        _13 = move ((_10 as Some).0: libproto::SignedTransaction); // scope 4 at cita-auth/src/dispatcher.rs:205:13: 205:15
        _17 = &mut _5;                   // scope 5 at cita-auth/src/dispatcher.rs:206:13: 206:29
        _16 = <RefMut<'_, Pool> as DerefMut>::deref_mut(move _17) -> [return: bb10, unwind: bb18]; // scope 5 at cita-auth/src/dispatcher.rs:206:13: 206:29
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:206:13: 206:29
                                         // + literal: Const { ty: for<'a> fn(&'a mut RefMut<'_, Pool>) -> &'a mut <RefMut<'_, Pool> as Deref>::Target {<RefMut<'_, Pool> as DerefMut>::deref_mut}, val: Value(<ZST>) }
    }

    bb8: {
        unreachable;                     // scope 4 at cita-auth/src/dispatcher.rs:205:19: 205:22
    }

    bb9: {
        drop(_9) -> [return: bb12, unwind: bb15]; // scope 3 at cita-auth/src/dispatcher.rs:207:9: 207:10
    }

    bb10: {
        _15 = _16;                       // scope 5 at cita-auth/src/dispatcher.rs:206:13: 206:29
        _19 = const false;               // scope 5 at cita-auth/src/dispatcher.rs:206:26: 206:28
        _18 = move _13;                  // scope 5 at cita-auth/src/dispatcher.rs:206:26: 206:28
        _14 = Pool::enqueue(move _15, move _18) -> [return: bb11, unwind: bb18]; // scope 5 at cita-auth/src/dispatcher.rs:206:13: 206:29
                                         // mir::Constant
                                         // + span: cita-auth/src/dispatcher.rs:206:18: 206:25
                                         // + literal: Const { ty: for<'a> fn(&'a mut Pool, SignedTransaction) -> bool {Pool::enqueue}, val: Value(<ZST>) }
    }

    bb11: {
        _19 = const false;               // scope 4 at cita-auth/src/dispatcher.rs:207:9: 207:10
        goto -> bb5;                     // scope 4 at cita-auth/src/dispatcher.rs:205:9: 207:10
    }

    bb12: {
        drop(_5) -> [return: bb13, unwind: bb20]; // scope 2 at cita-auth/src/dispatcher.rs:209:5: 209:6
    }

    bb13: {
        _20 = const false;               // scope 0 at cita-auth/src/dispatcher.rs:209:5: 209:6
        return;                          // scope 0 at cita-auth/src/dispatcher.rs:209:6: 209:6
    }

    bb14 (cleanup): {
        drop(_9) -> bb15;                // scope 3 at cita-auth/src/dispatcher.rs:207:9: 207:10
    }

    bb15 (cleanup): {
        drop(_5) -> bb20;                // scope 2 at cita-auth/src/dispatcher.rs:209:5: 209:6
    }

    bb16 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/dispatcher.rs:201:5: 209:6
    }

    bb17 (cleanup): {
        drop(_13) -> bb14;               // scope 4 at cita-auth/src/dispatcher.rs:207:9: 207:10
    }

    bb18 (cleanup): {
        switchInt(_19) -> [0: bb14, otherwise: bb17]; // scope 4 at cita-auth/src/dispatcher.rs:207:9: 207:10
    }

    bb19 (cleanup): {
        drop(_2) -> bb16;                // scope 0 at cita-auth/src/dispatcher.rs:209:5: 209:6
    }

    bb20 (cleanup): {
        switchInt(_20) -> [0: bb16, otherwise: bb19]; // scope 0 at cita-auth/src/dispatcher.rs:209:5: 209:6
    }
}

const TX_OK: &str = {
    let mut _0: &str;                    // return place in scope 0 at cita-auth/src/handler.rs:45:14: 45:18

    bb0: {
        _0 = const "OK";                 // scope 0 at cita-auth/src/handler.rs:45:21: 45:25
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:45:21: 45:25
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        return;                          // scope 0 at cita-auth/src/handler.rs:45:1: 45:26
    }
}

const G_TX_DATA_NON_ZERO: usize = {
    let mut _0: usize;                   // return place in scope 0 at cita-auth/src/handler.rs:47:27: 47:32

    bb0: {
        _0 = const 68_usize;             // scope 0 at cita-auth/src/handler.rs:47:35: 47:37
        return;                          // scope 0 at cita-auth/src/handler.rs:47:1: 47:38
    }
}

const G_TRANSACTION: usize = {
    let mut _0: usize;                   // return place in scope 0 at cita-auth/src/handler.rs:49:22: 49:27

    bb0: {
        _0 = const 21000_usize;          // scope 0 at cita-auth/src/handler.rs:49:30: 49:35
        return;                          // scope 0 at cita-auth/src/handler.rs:49:1: 49:36
    }
}

const G_CREATE: usize = {
    let mut _0: usize;                   // return place in scope 0 at cita-auth/src/handler.rs:51:17: 51:22

    bb0: {
        _0 = const 32000_usize;          // scope 0 at cita-auth/src/handler.rs:51:25: 51:30
        return;                          // scope 0 at cita-auth/src/handler.rs:51:1: 51:31
    }
}

fn verify_tx_sig(_1: Crypto, _2: &H256, _3: &[u8]) -> Result<Vec<u8>, ()> {
    debug crypto => _1;                  // in scope 0 at cita-auth/src/handler.rs:54:22: 54:28
    debug hash => _2;                    // in scope 0 at cita-auth/src/handler.rs:54:38: 54:42
    debug sig_bytes => _3;               // in scope 0 at cita-auth/src/handler.rs:54:51: 54:60
    let mut _0: std::result::Result<std::vec::Vec<u8>, ()>; // return place in scope 0 at cita-auth/src/handler.rs:54:72: 54:91
    let mut _4: bool;                    // in scope 0 at cita-auth/src/handler.rs:55:8: 55:46
    let mut _5: usize;                   // in scope 0 at cita-auth/src/handler.rs:55:8: 55:23
    let _6: crypto::Signature;           // in scope 0 at cita-auth/src/handler.rs:59:9: 59:12
    let mut _7: isize;                   // in scope 0 at cita-auth/src/handler.rs:61:9: 61:24
    let mut _8: std::result::Result<std::vec::Vec<u8>, crypto::Error>; // in scope 0 at cita-auth/src/handler.rs:61:28: 63:43
    let mut _9: std::result::Result<cita_types::H512, crypto::Error>; // in scope 0 at cita-auth/src/handler.rs:61:28: 62:28
    let mut _10: &crypto::Signature;     // in scope 0 at cita-auth/src/handler.rs:61:28: 62:28
    let _11: &&cita_types::H256;         // in scope 0 at cita-auth/src/handler.rs:62:22: 62:27
    let mut _13: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _14: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _15: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _16: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _17: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _18: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _19: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _20: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _21: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _22: &[&str];                // in scope 0 at cita-auth/src/handler.rs:66:19: 66:38
    let mut _26: &cita_types::H256;      // in scope 0 at cita-auth/src/handler.rs:62:22: 62:27
    scope 1 {
        debug sig => _6;                 // in scope 1 at cita-auth/src/handler.rs:59:9: 59:12
        let _12: log::Level;             // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        scope 2 {
            debug lvl => _12;            // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _23: &(&str, &str, &str, u32); // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _24: &[&str; 1];     // in scope 2 at cita-auth/src/handler.rs:66:19: 66:38
            let mut _25: &log::LevelFilter; // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
    }

    bb0: {
        _5 = Len((*_3));                 // scope 0 at cita-auth/src/handler.rs:55:8: 55:23
        _4 = Ne(move _5, const _);       // scope 0 at cita-auth/src/handler.rs:55:8: 55:46
        switchInt(move _4) -> [0: bb2, otherwise: bb1]; // scope 0 at cita-auth/src/handler.rs:55:8: 55:46
    }

    bb1: {
        _0 = Result::<Vec<u8>, ()>::Err(const ()); // scope 0 at cita-auth/src/handler.rs:56:16: 56:23
        goto -> bb17;                    // scope 0 at cita-auth/src/handler.rs:70:2: 70:2
    }

    bb2: {
        _6 = <Signature as From<&[u8]>>::from(_3) -> bb3; // scope 0 at cita-auth/src/handler.rs:59:15: 59:41
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:59:15: 59:30
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[u8]) -> Signature {<Signature as From<&[u8]>>::from}, val: Value(<ZST>) }
    }

    bb3: {
        _7 = discriminant(_1);           // scope 1 at cita-auth/src/handler.rs:60:11: 60:17
        switchInt(move _7) -> [0: bb5, otherwise: bb4]; // scope 1 at cita-auth/src/handler.rs:60:5: 60:17
    }

    bb4: {
        _12 = log::Level::Warn;          // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:91:14: 91:33
        _15 = &_12;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _25 = const _;                   // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(verify_tx_sig, [], Some(promoted[2])) }
        _14 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _15, _25) -> bb11; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb5: {
        _10 = &_6;                       // scope 1 at cita-auth/src/handler.rs:61:28: 62:28
        _11 = &_2;                       // scope 1 at cita-auth/src/handler.rs:62:22: 62:27
        _26 = deref_copy (*_11);         // scope 1 at cita-auth/src/handler.rs:62:22: 62:27
        _9 = <Signature as Sign>::recover(move _10, _26) -> bb6; // scope 1 at cita-auth/src/handler.rs:61:28: 62:28
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:62:14: 62:21
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Signature, &'b <Signature as Sign>::Message) -> Result<<Signature as Sign>::PubKey, <Signature as Sign>::Error> {<Signature as Sign>::recover}, val: Value(<ZST>) }
    }

    bb6: {
        _8 = Result::<H512, crypto::Error>::map::<Vec<u8>, [closure@cita-auth/src/handler.rs:63:18: 63:26]>(move _9, const ZeroSized: [closure@cita-auth/src/handler.rs:63:18: 63:26]) -> bb7; // scope 1 at cita-auth/src/handler.rs:61:28: 63:43
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:63:14: 63:17
                                         // + literal: Const { ty: fn(Result<H512, crypto::Error>, [closure@cita-auth/src/handler.rs:63:18: 63:26]) -> Result<Vec<u8>, crypto::Error> {Result::<H512, crypto::Error>::map::<Vec<u8>, [closure@cita-auth/src/handler.rs:63:18: 63:26]>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: [closure@cita-auth/src/handler.rs:63:18: 63:26], val: Value(<ZST>) }
    }

    bb7: {
        _0 = Result::<Vec<u8>, crypto::Error>::map_err::<(), [closure@cita-auth/src/handler.rs:64:22: 64:25]>(move _8, const ZeroSized: [closure@cita-auth/src/handler.rs:64:22: 64:25]) -> bb17; // scope 1 at cita-auth/src/handler.rs:61:28: 64:29
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:64:14: 64:21
                                         // + literal: Const { ty: fn(Result<Vec<u8>, crypto::Error>, [closure@cita-auth/src/handler.rs:64:22: 64:25]) -> Result<Vec<u8>, ()> {Result::<Vec<u8>, crypto::Error>::map_err::<(), [closure@cita-auth/src/handler.rs:64:22: 64:25]>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: [closure@cita-auth/src/handler.rs:64:22: 64:25], val: Value(<ZST>) }
    }

    bb8: {
        _13 = const false;               // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb10;                    // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb9: {
        _17 = &_12;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _19 = log::max_level() -> bb12;  // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb10: {
        switchInt(move _13) -> [0: bb16, otherwise: bb14]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb11: {
        switchInt(move _14) -> [0: bb8, otherwise: bb9]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb12: {
        _18 = &_19;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _16 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _17, move _18) -> bb13; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb13: {
        _13 = move _16;                  // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb10;                    // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb14: {
        _24 = const _;                   // scope 2 at cita-auth/src/handler.rs:66:19: 66:38
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:66:19: 66:38
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(verify_tx_sig, [], Some(promoted[1])) }
        _22 = _24 as &[&str] (Pointer(Unsize)); // scope 2 at cita-auth/src/handler.rs:66:19: 66:38
        _21 = Arguments::<'_>::new_const(move _22) -> bb15; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb15: {
        _23 = const _;                   // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(verify_tx_sig, [], Some(promoted[0])) }
        _20 = log::__private_api_log(move _21, _12, _23) -> bb16; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb16: {
        _0 = Result::<Vec<u8>, ()>::Err(const ()); // scope 1 at cita-auth/src/handler.rs:67:13: 67:20
        goto -> bb17;                    // scope 1 at cita-auth/src/handler.rs:67:19: 67:20
    }

    bb17: {
        return;                          // scope 0 at cita-auth/src/handler.rs:70:2: 70:2
    }
}

promoted[0] in verify_tx_sig: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:66:13: 66:39
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:66:13: 66:39

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:66:13: 66:39
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:66:13: 66:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:66:13: 66:39
        _1 = (move _2, move _4, move _6, const 66_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in verify_tx_sig: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/handler.rs:66:19: 66:38
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/handler.rs:66:19: 66:38

    bb0: {
        _1 = [const "Unexpected crypto"]; // scope 0 at cita-auth/src/handler.rs:66:19: 66:38
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:66:19: 66:38
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:66:19: 66:38
        return;                          // scope 0 at cita-auth/src/handler.rs:66:19: 66:38
    }
}

promoted[2] in verify_tx_sig: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn verify_tx_sig::{closure#0}(_1: [closure@cita-auth/src/handler.rs:63:18: 63:26], _2: H512) -> Vec<u8> {
    debug pubkey => _2;                  // in scope 0 at cita-auth/src/handler.rs:63:19: 63:25
    let mut _0: std::vec::Vec<u8>;       // return place in scope 0 at cita-auth/src/handler.rs:63:27: 63:27
    let mut _3: &[u8];                   // in scope 0 at cita-auth/src/handler.rs:63:27: 63:42
    let _4: &[u8];                       // in scope 0 at cita-auth/src/handler.rs:63:27: 63:42
    let mut _5: &cita_types::H512;       // in scope 0 at cita-auth/src/handler.rs:63:27: 63:42

    bb0: {
        _5 = &_2;                        // scope 0 at cita-auth/src/handler.rs:63:27: 63:42
        _4 = <H512 as Deref>::deref(move _5) -> bb1; // scope 0 at cita-auth/src/handler.rs:63:27: 63:42
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:63:27: 63:42
                                         // + literal: Const { ty: for<'a> fn(&'a H512) -> &'a <H512 as Deref>::Target {<H512 as Deref>::deref}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = _4;                         // scope 0 at cita-auth/src/handler.rs:63:27: 63:42
        _0 = std::slice::<impl [u8]>::to_vec(move _3) -> bb2; // scope 0 at cita-auth/src/handler.rs:63:27: 63:42
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:63:34: 63:40
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> Vec<u8> {std::slice::<impl [u8]>::to_vec}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at cita-auth/src/handler.rs:63:42: 63:42
    }
}

fn verify_tx_sig::{closure#1}(_1: [closure@cita-auth/src/handler.rs:64:22: 64:25], _2: crypto::Error) -> () {
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/handler.rs:64:26: 64:26

    bb0: {
        drop(_2) -> bb1;                 // scope 0 at cita-auth/src/handler.rs:64:27: 64:28
    }

    bb1: {
        return;                          // scope 0 at cita-auth/src/handler.rs:64:28: 64:28
    }
}

fn handler::<impl at cita-auth/src/handler.rs:80:10: 80:15>::fmt(_1: &ChainId, _2: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at cita-auth/src/handler.rs:80:10: 80:15
    debug f => _2;                       // in scope 0 at cita-auth/src/handler.rs:80:10: 80:15
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at cita-auth/src/handler.rs:80:10: 80:15
    let mut _3: isize;                   // in scope 0 at cita-auth/src/handler.rs:80:10: 80:15
    let _4: &u32;                        // in scope 0 at cita-auth/src/handler.rs:82:8: 82:11
    let _5: &str;                        // in scope 0 at cita-auth/src/handler.rs:80:10: 80:15
    let mut _6: &dyn std::fmt::Debug;    // in scope 0 at cita-auth/src/handler.rs:82:8: 82:11
    let _7: &&u32;                       // in scope 0 at cita-auth/src/handler.rs:82:8: 82:11
    let _8: &cita_types::U256;           // in scope 0 at cita-auth/src/handler.rs:83:8: 83:12
    let _9: &str;                        // in scope 0 at cita-auth/src/handler.rs:80:10: 80:15
    let mut _10: &dyn std::fmt::Debug;   // in scope 0 at cita-auth/src/handler.rs:83:8: 83:12
    let _11: &&cita_types::U256;         // in scope 0 at cita-auth/src/handler.rs:83:8: 83:12
    scope 1 {
        debug __self_0 => _4;            // in scope 1 at cita-auth/src/handler.rs:82:8: 82:11
    }
    scope 2 {
        debug __self_0 => _8;            // in scope 2 at cita-auth/src/handler.rs:83:8: 83:12
    }

    bb0: {
        _3 = discriminant((*_1));        // scope 0 at cita-auth/src/handler.rs:80:10: 80:15
        switchInt(move _3) -> [0: bb3, 1: bb1, otherwise: bb2]; // scope 0 at cita-auth/src/handler.rs:80:10: 80:15
    }

    bb1: {
        _8 = &(((*_1) as V1).0: cita_types::U256); // scope 0 at cita-auth/src/handler.rs:83:8: 83:12
        _9 = const "V1";                 // scope 2 at cita-auth/src/handler.rs:80:10: 80:15
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:80:10: 80:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _11 = &_8;                       // scope 2 at cita-auth/src/handler.rs:83:8: 83:12
        _10 = _11 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 2 at cita-auth/src/handler.rs:83:8: 83:12
        _0 = std::fmt::Formatter::<'_>::debug_tuple_field1_finish(_2, _9, move _10) -> bb4; // scope 2 at cita-auth/src/handler.rs:80:10: 80:15
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:80:10: 80:15
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b, 'a, 'c> fn(&'b mut std::fmt::Formatter<'_>, &'a str, &'c (dyn Debug + 'c)) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::debug_tuple_field1_finish}, val: Value(<ZST>) }
    }

    bb2: {
        unreachable;                     // scope 0 at cita-auth/src/handler.rs:80:10: 80:15
    }

    bb3: {
        _4 = &(((*_1) as V0).0: u32);    // scope 0 at cita-auth/src/handler.rs:82:8: 82:11
        _5 = const "V0";                 // scope 1 at cita-auth/src/handler.rs:80:10: 80:15
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:80:10: 80:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _7 = &_4;                        // scope 1 at cita-auth/src/handler.rs:82:8: 82:11
        _6 = _7 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 1 at cita-auth/src/handler.rs:82:8: 82:11
        _0 = std::fmt::Formatter::<'_>::debug_tuple_field1_finish(_2, _5, move _6) -> bb4; // scope 1 at cita-auth/src/handler.rs:80:10: 80:15
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:80:10: 80:15
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b, 'a, 'c> fn(&'b mut std::fmt::Formatter<'_>, &'a str, &'c (dyn Debug + 'c)) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::debug_tuple_field1_finish}, val: Value(<ZST>) }
    }

    bb4: {
        return;                          // scope 0 at cita-auth/src/handler.rs:80:15: 80:15
    }
}

fn handler::<impl at cita-auth/src/handler.rs:80:17: 80:26>::eq(_1: &ChainId, _2: &ChainId) -> bool {
    debug self => _1;                    // in scope 0 at cita-auth/src/handler.rs:80:17: 80:26
    debug other => _2;                   // in scope 0 at cita-auth/src/handler.rs:80:17: 80:26
    let mut _0: bool;                    // return place in scope 0 at cita-auth/src/handler.rs:80:17: 80:26
    let _3: isize;                       // in scope 0 at cita-auth/src/handler.rs:80:17: 80:26
    let mut _5: bool;                    // in scope 0 at cita-auth/src/handler.rs:80:17: 80:26
    let mut _6: bool;                    // in scope 0 at cita-auth/src/handler.rs:80:17: 80:26
    let mut _7: (&handler::ChainId, &handler::ChainId); // in scope 0 at cita-auth/src/handler.rs:80:17: 80:26
    let mut _8: isize;                   // in scope 0 at cita-auth/src/handler.rs:80:17: 80:26
    let mut _9: isize;                   // in scope 0 at cita-auth/src/handler.rs:80:17: 80:26
    let mut _10: isize;                  // in scope 0 at cita-auth/src/handler.rs:80:17: 80:26
    let mut _13: u32;                    // in scope 0 at cita-auth/src/handler.rs:82:8: 82:11
    let mut _14: u32;                    // in scope 0 at cita-auth/src/handler.rs:82:8: 82:11
    let mut _17: &handler::ChainId;      // in scope 0 at cita-auth/src/handler.rs:80:17: 80:26
    let mut _18: &handler::ChainId;      // in scope 0 at cita-auth/src/handler.rs:80:17: 80:26
    let mut _19: &handler::ChainId;      // in scope 0 at cita-auth/src/handler.rs:80:17: 80:26
    let mut _20: &handler::ChainId;      // in scope 0 at cita-auth/src/handler.rs:80:17: 80:26
    let mut _21: &handler::ChainId;      // in scope 0 at cita-auth/src/handler.rs:80:17: 80:26
    let mut _22: &handler::ChainId;      // in scope 0 at cita-auth/src/handler.rs:80:17: 80:26
    let mut _23: &handler::ChainId;      // in scope 0 at cita-auth/src/handler.rs:80:17: 80:26
    scope 1 {
        debug __self_tag => _3;          // in scope 1 at cita-auth/src/handler.rs:80:17: 80:26
        let _4: isize;                   // in scope 1 at cita-auth/src/handler.rs:80:17: 80:26
        scope 2 {
            debug __arg1_tag => _4;      // in scope 2 at cita-auth/src/handler.rs:80:17: 80:26
            let _11: &u32;               // in scope 2 at cita-auth/src/handler.rs:82:8: 82:11
            let _12: &u32;               // in scope 2 at cita-auth/src/handler.rs:82:8: 82:11
            let _15: &cita_types::U256;  // in scope 2 at cita-auth/src/handler.rs:83:8: 83:12
            let _16: &cita_types::U256;  // in scope 2 at cita-auth/src/handler.rs:83:8: 83:12
            scope 3 {
                debug __self_0 => _11;   // in scope 3 at cita-auth/src/handler.rs:82:8: 82:11
                debug __arg1_0 => _12;   // in scope 3 at cita-auth/src/handler.rs:82:8: 82:11
            }
            scope 4 {
                debug __self_0 => _15;   // in scope 4 at cita-auth/src/handler.rs:83:8: 83:12
                debug __arg1_0 => _16;   // in scope 4 at cita-auth/src/handler.rs:83:8: 83:12
            }
            scope 5 {
            }
        }
    }

    bb0: {
        _3 = discriminant((*_1));        // scope 0 at cita-auth/src/handler.rs:80:17: 80:26
        _4 = discriminant((*_2));        // scope 1 at cita-auth/src/handler.rs:80:17: 80:26
        _5 = Eq(_3, _4);                 // scope 2 at cita-auth/src/handler.rs:80:17: 80:26
        switchInt(move _5) -> [0: bb1, otherwise: bb2]; // scope 2 at cita-auth/src/handler.rs:80:17: 80:26
    }

    bb1: {
        _0 = const false;                // scope 2 at cita-auth/src/handler.rs:80:17: 80:26
        goto -> bb3;                     // scope 2 at cita-auth/src/handler.rs:80:17: 80:26
    }

    bb2: {
        _7 = (_1, _2);                   // scope 2 at cita-auth/src/handler.rs:80:17: 80:26
        _17 = deref_copy (_7.0: &handler::ChainId); // scope 2 at cita-auth/src/handler.rs:80:17: 80:26
        _10 = discriminant((*_17));      // scope 2 at cita-auth/src/handler.rs:80:17: 80:26
        switchInt(move _10) -> [0: bb4, 1: bb6, otherwise: bb10]; // scope 2 at cita-auth/src/handler.rs:80:17: 80:26
    }

    bb3: {
        return;                          // scope 0 at cita-auth/src/handler.rs:80:26: 80:26
    }

    bb4: {
        _18 = deref_copy (_7.1: &handler::ChainId); // scope 2 at cita-auth/src/handler.rs:80:17: 80:26
        _8 = discriminant((*_18));       // scope 2 at cita-auth/src/handler.rs:80:17: 80:26
        switchInt(move _8) -> [0: bb7, otherwise: bb5]; // scope 2 at cita-auth/src/handler.rs:80:17: 80:26
    }

    bb5: {
        unreachable;                     // scope 5 at cita-auth/src/handler.rs:80:17: 80:26
    }

    bb6: {
        _19 = deref_copy (_7.1: &handler::ChainId); // scope 2 at cita-auth/src/handler.rs:80:17: 80:26
        _9 = discriminant((*_19));       // scope 2 at cita-auth/src/handler.rs:80:17: 80:26
        switchInt(move _9) -> [1: bb8, otherwise: bb5]; // scope 2 at cita-auth/src/handler.rs:80:17: 80:26
    }

    bb7: {
        _20 = deref_copy (_7.0: &handler::ChainId); // scope 2 at cita-auth/src/handler.rs:82:8: 82:11
        _11 = &(((*_20) as V0).0: u32);  // scope 2 at cita-auth/src/handler.rs:82:8: 82:11
        _21 = deref_copy (_7.1: &handler::ChainId); // scope 2 at cita-auth/src/handler.rs:82:8: 82:11
        _12 = &(((*_21) as V0).0: u32);  // scope 2 at cita-auth/src/handler.rs:82:8: 82:11
        _13 = (*_11);                    // scope 3 at cita-auth/src/handler.rs:82:8: 82:11
        _14 = (*_12);                    // scope 3 at cita-auth/src/handler.rs:82:8: 82:11
        _6 = Eq(move _13, move _14);     // scope 3 at cita-auth/src/handler.rs:82:8: 82:11
        goto -> bb9;                     // scope 2 at cita-auth/src/handler.rs:80:25: 80:26
    }

    bb8: {
        _22 = deref_copy (_7.0: &handler::ChainId); // scope 2 at cita-auth/src/handler.rs:83:8: 83:12
        _15 = &(((*_22) as V1).0: cita_types::U256); // scope 2 at cita-auth/src/handler.rs:83:8: 83:12
        _23 = deref_copy (_7.1: &handler::ChainId); // scope 2 at cita-auth/src/handler.rs:83:8: 83:12
        _16 = &(((*_23) as V1).0: cita_types::U256); // scope 2 at cita-auth/src/handler.rs:83:8: 83:12
        _6 = <U256 as PartialEq>::eq(_15, _16) -> bb9; // scope 4 at cita-auth/src/handler.rs:83:8: 83:12
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:83:8: 83:12
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a U256, &'b U256) -> bool {<U256 as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb9: {
        _0 = move _6;                    // scope 2 at cita-auth/src/handler.rs:80:17: 80:26
        goto -> bb3;                     // scope 2 at cita-auth/src/handler.rs:80:17: 80:26
    }

    bb10: {
        unreachable;                     // scope 5 at cita-auth/src/handler.rs:80:17: 80:26
    }
}

fn handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::new(_1: pubsub::crossbeam_channel::Receiver<(std::string::String, Vec<u8>)>, _2: pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, _3: Dispatcher, _4: pubsub::crossbeam_channel::Sender<libproto::Request>, _5: usize, _6: usize, _7: usize) -> MsgHandler {
    debug rx_sub => _1;                  // in scope 0 at cita-auth/src/handler.rs:107:9: 107:15
    debug tx_pub => _2;                  // in scope 0 at cita-auth/src/handler.rs:108:9: 108:15
    debug dispatcher => _3;              // in scope 0 at cita-auth/src/handler.rs:109:9: 109:19
    debug tx_request => _4;              // in scope 0 at cita-auth/src/handler.rs:110:9: 110:19
    debug tx_pool_limit => _5;           // in scope 0 at cita-auth/src/handler.rs:111:9: 111:22
    debug tx_verify_thread_num => _6;    // in scope 0 at cita-auth/src/handler.rs:112:9: 112:29
    debug tx_verify_cache_size => _7;    // in scope 0 at cita-auth/src/handler.rs:113:9: 113:29
    let mut _0: handler::MsgHandler;     // return place in scope 0 at cita-auth/src/handler.rs:114:10: 114:14
    let _8: ();                          // in scope 0 at cita-auth/src/handler.rs:115:9: 118:22
    let mut _9: std::result::Result<(), rayon::ThreadPoolBuildError>; // in scope 0 at cita-auth/src/handler.rs:115:9: 117:28
    let mut _10: rayon::ThreadPoolBuilder; // in scope 0 at cita-auth/src/handler.rs:115:9: 116:47
    let mut _11: rayon::ThreadPoolBuilder; // in scope 0 at cita-auth/src/handler.rs:115:9: 115:33
    let mut _12: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-auth/src/handler.rs:120:13: 120:19
    let mut _13: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-auth/src/handler.rs:121:13: 121:19
    let mut _14: lru::LruCache<cita_types::H256, std::option::Option<std::vec::Vec<u8>>>; // in scope 0 at cita-auth/src/handler.rs:122:20: 122:55
    let mut _15: std::option::Option<handler::ChainId>; // in scope 0 at cita-auth/src/handler.rs:123:23: 123:27
    let mut _16: history::HistoryHeights; // in scope 0 at cita-auth/src/handler.rs:124:30: 124:51
    let mut _17: std::collections::HashMap<u64, std::collections::HashSet<cita_types::H256>>; // in scope 0 at cita-auth/src/handler.rs:125:29: 125:72
    let mut _18: usize;                  // in scope 0 at cita-auth/src/handler.rs:125:52: 125:71
    let mut _19: dispatcher::Dispatcher; // in scope 0 at cita-auth/src/handler.rs:126:13: 126:23
    let mut _20: pubsub::crossbeam_channel::Sender<libproto::Request>; // in scope 0 at cita-auth/src/handler.rs:127:13: 127:23
    let mut _21: std::collections::HashMap<cita_types::H160, i8>; // in scope 0 at cita-auth/src/handler.rs:130:31: 130:45
    let mut _22: handler::SysConfigInfo; // in scope 0 at cita-auth/src/handler.rs:132:26: 138:14
    let mut _23: libproto::AccountGasLimit; // in scope 0 at cita-auth/src/handler.rs:134:38: 134:60
    let mut _24: std::option::Option<cita_types::H160>; // in scope 0 at cita-auth/src/handler.rs:136:32: 136:36
    let mut _25: std::option::Option<u32>; // in scope 0 at cita-auth/src/handler.rs:137:26: 137:30
    let mut _26: std::option::Option<(u32, libproto::GetBlockTxn)>; // in scope 0 at cita-auth/src/handler.rs:139:28: 139:32
    let mut _27: std::option::Option<libproto::VerifyBlockReq>; // in scope 0 at cita-auth/src/handler.rs:140:31: 140:35
    let mut _28: bool;                   // in scope 0 at cita-auth/src/handler.rs:142:5: 142:6
    let mut _29: bool;                   // in scope 0 at cita-auth/src/handler.rs:142:5: 142:6
    let mut _30: bool;                   // in scope 0 at cita-auth/src/handler.rs:142:5: 142:6
    let mut _31: bool;                   // in scope 0 at cita-auth/src/handler.rs:142:5: 142:6

    bb0: {
        _30 = const false;               // scope 0 at cita-auth/src/handler.rs:115:9: 118:22
        _28 = const false;               // scope 0 at cita-auth/src/handler.rs:115:9: 118:22
        _31 = const false;               // scope 0 at cita-auth/src/handler.rs:115:9: 118:22
        _29 = const false;               // scope 0 at cita-auth/src/handler.rs:115:9: 118:22
        _31 = const true;                // scope 0 at cita-auth/src/handler.rs:115:9: 118:22
        _30 = const true;                // scope 0 at cita-auth/src/handler.rs:115:9: 118:22
        _29 = const true;                // scope 0 at cita-auth/src/handler.rs:115:9: 118:22
        _28 = const true;                // scope 0 at cita-auth/src/handler.rs:115:9: 118:22
        _11 = ThreadPoolBuilder::new() -> [return: bb1, unwind: bb23]; // scope 0 at cita-auth/src/handler.rs:115:9: 115:33
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:115:9: 115:31
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn() -> ThreadPoolBuilder {ThreadPoolBuilder::new}, val: Value(<ZST>) }
    }

    bb1: {
        _10 = ThreadPoolBuilder::num_threads(move _11, _6) -> [return: bb2, unwind: bb23]; // scope 0 at cita-auth/src/handler.rs:115:9: 116:47
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:116:14: 116:25
                                         // + literal: Const { ty: fn(ThreadPoolBuilder, usize) -> ThreadPoolBuilder {ThreadPoolBuilder::num_threads}, val: Value(<ZST>) }
    }

    bb2: {
        _9 = ThreadPoolBuilder::build_global(move _10) -> [return: bb3, unwind: bb23]; // scope 0 at cita-auth/src/handler.rs:115:9: 117:28
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:117:14: 117:26
                                         // + literal: Const { ty: fn(ThreadPoolBuilder) -> Result<(), ThreadPoolBuildError> {ThreadPoolBuilder::build_global}, val: Value(<ZST>) }
    }

    bb3: {
        _8 = Result::<(), ThreadPoolBuildError>::unwrap(move _9) -> [return: bb4, unwind: bb23]; // scope 0 at cita-auth/src/handler.rs:115:9: 118:22
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:118:14: 118:20
                                         // + literal: Const { ty: fn(Result<(), ThreadPoolBuildError>) {Result::<(), ThreadPoolBuildError>::unwrap}, val: Value(<ZST>) }
    }

    bb4: {
        _31 = const false;               // scope 0 at cita-auth/src/handler.rs:120:13: 120:19
        _12 = move _1;                   // scope 0 at cita-auth/src/handler.rs:120:13: 120:19
        _30 = const false;               // scope 0 at cita-auth/src/handler.rs:121:13: 121:19
        _13 = move _2;                   // scope 0 at cita-auth/src/handler.rs:121:13: 121:19
        _14 = LruCache::<H256, std::option::Option<Vec<u8>>>::new(_7) -> [return: bb5, unwind: bb16]; // scope 0 at cita-auth/src/handler.rs:122:20: 122:55
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:122:20: 122:33
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(usize) -> LruCache<H256, std::option::Option<Vec<u8>>> {LruCache::<H256, std::option::Option<Vec<u8>>>::new}, val: Value(<ZST>) }
    }

    bb5: {
        _15 = std::option::Option::<ChainId>::None; // scope 0 at cita-auth/src/handler.rs:123:23: 123:27
        _16 = HistoryHeights::new() -> [return: bb6, unwind: bb15]; // scope 0 at cita-auth/src/handler.rs:124:30: 124:51
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:124:30: 124:49
                                         // + literal: Const { ty: fn() -> HistoryHeights {HistoryHeights::new}, val: Value(<ZST>) }
    }

    bb6: {
        _18 = const 100_usize;           // scope 0 at cita-auth/src/handler.rs:125:52: 125:71
        _17 = HashMap::<u64, HashSet<H256>>::with_capacity(move _18) -> [return: bb7, unwind: bb14]; // scope 0 at cita-auth/src/handler.rs:125:29: 125:72
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:125:29: 125:51
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(usize) -> HashMap<u64, HashSet<H256>> {HashMap::<u64, HashSet<H256>>::with_capacity}, val: Value(<ZST>) }
    }

    bb7: {
        _29 = const false;               // scope 0 at cita-auth/src/handler.rs:126:13: 126:23
        _19 = move _3;                   // scope 0 at cita-auth/src/handler.rs:126:13: 126:23
        _28 = const false;               // scope 0 at cita-auth/src/handler.rs:127:13: 127:23
        _20 = move _4;                   // scope 0 at cita-auth/src/handler.rs:127:13: 127:23
        _21 = HashMap::<H160, i8>::new() -> [return: bb8, unwind: bb11]; // scope 0 at cita-auth/src/handler.rs:130:31: 130:45
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:130:31: 130:43
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn() -> HashMap<H160, i8> {HashMap::<H160, i8>::new}, val: Value(<ZST>) }
    }

    bb8: {
        _23 = AccountGasLimit::new() -> [return: bb9, unwind: bb10]; // scope 0 at cita-auth/src/handler.rs:134:38: 134:60
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:134:38: 134:58
                                         // + literal: Const { ty: fn() -> AccountGasLimit {AccountGasLimit::new}, val: Value(<ZST>) }
    }

    bb9: {
        _24 = std::option::Option::<H160>::None; // scope 0 at cita-auth/src/handler.rs:136:32: 136:36
        _25 = std::option::Option::<u32>::None; // scope 0 at cita-auth/src/handler.rs:137:26: 137:30
        _22 = SysConfigInfo { block_quota_limit: const 0_u64, account_quota_limit: move _23, check_quota: const false, admin_address: move _24, version: move _25 }; // scope 0 at cita-auth/src/handler.rs:132:26: 138:14
        _26 = std::option::Option::<(u32, libproto::GetBlockTxn)>::None; // scope 0 at cita-auth/src/handler.rs:139:28: 139:32
        _27 = std::option::Option::<libproto::VerifyBlockReq>::None; // scope 0 at cita-auth/src/handler.rs:140:31: 140:35
        _0 = MsgHandler { rx_sub: move _12, tx_pub: move _13, cache: move _14, chain_id: move _15, history_heights: move _16, history_hashes: move _17, dispatcher: move _19, tx_request: move _20, tx_pool_limit: _5, is_snapshot: const false, black_list_cache: move _21, is_need_proposal_new_block: const false, config_info: move _22, block_txn_req: move _26, verify_block_req: move _27 }; // scope 0 at cita-auth/src/handler.rs:119:9: 141:10
        return;                          // scope 0 at cita-auth/src/handler.rs:142:6: 142:6
    }

    bb10 (cleanup): {
        drop(_21) -> bb11;               // scope 0 at cita-auth/src/handler.rs:141:9: 141:10
    }

    bb11 (cleanup): {
        drop(_20) -> bb12;               // scope 0 at cita-auth/src/handler.rs:141:9: 141:10
    }

    bb12 (cleanup): {
        drop(_19) -> bb13;               // scope 0 at cita-auth/src/handler.rs:141:9: 141:10
    }

    bb13 (cleanup): {
        drop(_17) -> bb14;               // scope 0 at cita-auth/src/handler.rs:141:9: 141:10
    }

    bb14 (cleanup): {
        drop(_16) -> bb15;               // scope 0 at cita-auth/src/handler.rs:141:9: 141:10
    }

    bb15 (cleanup): {
        drop(_14) -> bb16;               // scope 0 at cita-auth/src/handler.rs:141:9: 141:10
    }

    bb16 (cleanup): {
        drop(_13) -> bb17;               // scope 0 at cita-auth/src/handler.rs:141:9: 141:10
    }

    bb17 (cleanup): {
        drop(_12) -> bb23;               // scope 0 at cita-auth/src/handler.rs:141:9: 141:10
    }

    bb18 (cleanup): {
        switchInt(_29) -> [0: bb19, otherwise: bb24]; // scope 0 at cita-auth/src/handler.rs:142:5: 142:6
    }

    bb19 (cleanup): {
        switchInt(_30) -> [0: bb20, otherwise: bb25]; // scope 0 at cita-auth/src/handler.rs:142:5: 142:6
    }

    bb20 (cleanup): {
        switchInt(_31) -> [0: bb21, otherwise: bb26]; // scope 0 at cita-auth/src/handler.rs:142:5: 142:6
    }

    bb21 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/handler.rs:106:5: 142:6
    }

    bb22 (cleanup): {
        drop(_4) -> bb18;                // scope 0 at cita-auth/src/handler.rs:142:5: 142:6
    }

    bb23 (cleanup): {
        switchInt(_28) -> [0: bb18, otherwise: bb22]; // scope 0 at cita-auth/src/handler.rs:142:5: 142:6
    }

    bb24 (cleanup): {
        drop(_3) -> bb19;                // scope 0 at cita-auth/src/handler.rs:142:5: 142:6
    }

    bb25 (cleanup): {
        drop(_2) -> bb20;                // scope 0 at cita-auth/src/handler.rs:142:5: 142:6
    }

    bb26 (cleanup): {
        drop(_1) -> bb21;                // scope 0 at cita-auth/src/handler.rs:142:5: 142:6
    }
}

fn handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::is_ready(_1: &MsgHandler) -> bool {
    debug self => _1;                    // in scope 0 at cita-auth/src/handler.rs:144:17: 144:22
    let mut _0: bool;                    // return place in scope 0 at cita-auth/src/handler.rs:144:27: 144:31
    let mut _2: bool;                    // in scope 0 at cita-auth/src/handler.rs:145:9: 147:33
    let mut _3: bool;                    // in scope 0 at cita-auth/src/handler.rs:145:9: 146:39
    let mut _4: bool;                    // in scope 0 at cita-auth/src/handler.rs:145:9: 145:39
    let mut _5: &history::HistoryHeights; // in scope 0 at cita-auth/src/handler.rs:145:9: 145:39
    let mut _6: bool;                    // in scope 0 at cita-auth/src/handler.rs:146:16: 146:39
    let mut _7: &std::option::Option<handler::ChainId>; // in scope 0 at cita-auth/src/handler.rs:146:16: 146:39
    let mut _8: bool;                    // in scope 0 at cita-auth/src/handler.rs:147:16: 147:33
    let mut _9: bool;                    // in scope 0 at cita-auth/src/handler.rs:147:17: 147:33
    let mut _10: bool;                   // in scope 0 at cita-auth/src/handler.rs:148:16: 148:50
    let mut _11: &std::option::Option<u32>; // in scope 0 at cita-auth/src/handler.rs:148:16: 148:50

    bb0: {
        _5 = &((*_1).4: history::HistoryHeights); // scope 0 at cita-auth/src/handler.rs:145:9: 145:39
        _4 = HistoryHeights::is_init(move _5) -> bb10; // scope 0 at cita-auth/src/handler.rs:145:9: 145:39
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:145:30: 145:37
                                         // + literal: Const { ty: for<'a> fn(&'a HistoryHeights) -> bool {HistoryHeights::is_init}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = const false;                // scope 0 at cita-auth/src/handler.rs:145:9: 148:50
        goto -> bb3;                     // scope 0 at cita-auth/src/handler.rs:145:9: 148:50
    }

    bb2: {
        _11 = &(((*_1).12: handler::SysConfigInfo).4: std::option::Option<u32>); // scope 0 at cita-auth/src/handler.rs:148:16: 148:50
        _10 = std::option::Option::<u32>::is_some(move _11) -> bb12; // scope 0 at cita-auth/src/handler.rs:148:16: 148:50
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:148:41: 148:48
                                         // + literal: Const { ty: for<'a> fn(&'a std::option::Option<u32>) -> bool {std::option::Option::<u32>::is_some}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at cita-auth/src/handler.rs:149:6: 149:6
    }

    bb4: {
        _2 = const false;                // scope 0 at cita-auth/src/handler.rs:145:9: 147:33
        goto -> bb6;                     // scope 0 at cita-auth/src/handler.rs:145:9: 147:33
    }

    bb5: {
        _9 = ((*_1).9: bool);            // scope 0 at cita-auth/src/handler.rs:147:17: 147:33
        _8 = Not(move _9);               // scope 0 at cita-auth/src/handler.rs:147:16: 147:33
        _2 = move _8;                    // scope 0 at cita-auth/src/handler.rs:145:9: 147:33
        goto -> bb6;                     // scope 0 at cita-auth/src/handler.rs:145:9: 147:33
    }

    bb6: {
        switchInt(move _2) -> [0: bb1, otherwise: bb2]; // scope 0 at cita-auth/src/handler.rs:145:9: 148:50
    }

    bb7: {
        _3 = const false;                // scope 0 at cita-auth/src/handler.rs:145:9: 146:39
        goto -> bb9;                     // scope 0 at cita-auth/src/handler.rs:145:9: 146:39
    }

    bb8: {
        _7 = &((*_1).3: std::option::Option<handler::ChainId>); // scope 0 at cita-auth/src/handler.rs:146:16: 146:39
        _6 = std::option::Option::<ChainId>::is_some(move _7) -> bb11; // scope 0 at cita-auth/src/handler.rs:146:16: 146:39
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:146:30: 146:37
                                         // + literal: Const { ty: for<'a> fn(&'a std::option::Option<ChainId>) -> bool {std::option::Option::<ChainId>::is_some}, val: Value(<ZST>) }
    }

    bb9: {
        switchInt(move _3) -> [0: bb4, otherwise: bb5]; // scope 0 at cita-auth/src/handler.rs:145:9: 147:33
    }

    bb10: {
        switchInt(move _4) -> [0: bb7, otherwise: bb8]; // scope 0 at cita-auth/src/handler.rs:145:9: 146:39
    }

    bb11: {
        _3 = move _6;                    // scope 0 at cita-auth/src/handler.rs:145:9: 146:39
        goto -> bb9;                     // scope 0 at cita-auth/src/handler.rs:145:9: 146:39
    }

    bb12: {
        _0 = move _10;                   // scope 0 at cita-auth/src/handler.rs:145:9: 148:50
        goto -> bb3;                     // scope 0 at cita-auth/src/handler.rs:145:9: 148:50
    }
}

fn handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::is_flow_control(_1: &MsgHandler, _2: usize) -> bool {
    debug self => _1;                    // in scope 0 at cita-auth/src/handler.rs:151:24: 151:29
    debug tx_count => _2;                // in scope 0 at cita-auth/src/handler.rs:151:31: 151:39
    let mut _0: bool;                    // return place in scope 0 at cita-auth/src/handler.rs:151:51: 151:55
    let mut _3: usize;                   // in scope 0 at cita-auth/src/handler.rs:152:9: 152:27
    let mut _4: bool;                    // in scope 0 at cita-auth/src/handler.rs:152:36: 152:97
    let mut _5: usize;                   // in scope 0 at cita-auth/src/handler.rs:152:36: 152:76
    let mut _6: usize;                   // in scope 0 at cita-auth/src/handler.rs:152:47: 152:76
    let mut _7: &dispatcher::Dispatcher; // in scope 0 at cita-auth/src/handler.rs:152:47: 152:76
    let mut _8: (usize, bool);           // in scope 0 at cita-auth/src/handler.rs:152:36: 152:76
    let mut _9: usize;                   // in scope 0 at cita-auth/src/handler.rs:152:79: 152:97

    bb0: {
        _3 = ((*_1).8: usize);           // scope 0 at cita-auth/src/handler.rs:152:9: 152:27
        switchInt(move _3) -> [0: bb1, otherwise: bb2]; // scope 0 at cita-auth/src/handler.rs:152:9: 152:97
    }

    bb1: {
        _0 = const false;                // scope 0 at cita-auth/src/handler.rs:152:9: 152:97
        goto -> bb3;                     // scope 0 at cita-auth/src/handler.rs:152:9: 152:97
    }

    bb2: {
        _7 = &((*_1).6: dispatcher::Dispatcher); // scope 0 at cita-auth/src/handler.rs:152:47: 152:76
        _6 = Dispatcher::tx_pool_len(move _7) -> bb4; // scope 0 at cita-auth/src/handler.rs:152:47: 152:76
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:152:63: 152:74
                                         // + literal: Const { ty: for<'a> fn(&'a Dispatcher) -> usize {Dispatcher::tx_pool_len}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at cita-auth/src/handler.rs:153:6: 153:6
    }

    bb4: {
        _8 = CheckedAdd(_2, _6);         // scope 0 at cita-auth/src/handler.rs:152:36: 152:76
        assert(!move (_8.1: bool), "attempt to compute `{} + {}`, which would overflow", _2, move _6) -> bb5; // scope 0 at cita-auth/src/handler.rs:152:36: 152:76
    }

    bb5: {
        _5 = move (_8.0: usize);         // scope 0 at cita-auth/src/handler.rs:152:36: 152:76
        _9 = ((*_1).8: usize);           // scope 0 at cita-auth/src/handler.rs:152:79: 152:97
        _4 = Gt(move _5, move _9);       // scope 0 at cita-auth/src/handler.rs:152:36: 152:97
        _0 = move _4;                    // scope 0 at cita-auth/src/handler.rs:152:9: 152:97
        goto -> bb3;                     // scope 0 at cita-auth/src/handler.rs:152:9: 152:97
    }
}

fn handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::get_ret_from_cache(_1: &MsgHandler, _2: &H256) -> std::option::Option<std::option::Option<Vec<u8>>> {
    debug self => _1;                    // in scope 0 at cita-auth/src/handler.rs:156:27: 156:32
    debug tx_hash => _2;                 // in scope 0 at cita-auth/src/handler.rs:156:34: 156:41
    let mut _0: std::option::Option<std::option::Option<std::vec::Vec<u8>>>; // return place in scope 0 at cita-auth/src/handler.rs:156:53: 156:76
    let mut _3: std::option::Option<&std::option::Option<std::vec::Vec<u8>>>; // in scope 0 at cita-auth/src/handler.rs:157:9: 157:33
    let mut _4: &lru::LruCache<cita_types::H256, std::option::Option<std::vec::Vec<u8>>>; // in scope 0 at cita-auth/src/handler.rs:157:9: 157:33

    bb0: {
        _4 = &((*_1).2: lru::LruCache<cita_types::H256, std::option::Option<std::vec::Vec<u8>>>); // scope 0 at cita-auth/src/handler.rs:157:9: 157:33
        _3 = LruCache::<H256, std::option::Option<Vec<u8>>>::peek(move _4, _2) -> bb1; // scope 0 at cita-auth/src/handler.rs:157:9: 157:33
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:157:20: 157:24
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a LruCache<H256, std::option::Option<Vec<u8>>>, &'b H256) -> std::option::Option<&'a std::option::Option<Vec<u8>>> {LruCache::<H256, std::option::Option<Vec<u8>>>::peek}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = std::option::Option::<&std::option::Option<Vec<u8>>>::cloned(move _3) -> bb2; // scope 0 at cita-auth/src/handler.rs:157:9: 157:42
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:157:34: 157:40
                                         // + literal: Const { ty: fn(std::option::Option<&std::option::Option<Vec<u8>>>) -> std::option::Option<std::option::Option<Vec<u8>>> {std::option::Option::<&std::option::Option<Vec<u8>>>::cloned}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at cita-auth/src/handler.rs:158:6: 158:6
    }
}

fn handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::save_ret_to_cache(_1: &mut MsgHandler, _2: H256, _3: std::option::Option<Vec<u8>>) -> () {
    debug self => _1;                    // in scope 0 at cita-auth/src/handler.rs:160:26: 160:35
    debug tx_hash => _2;                 // in scope 0 at cita-auth/src/handler.rs:160:37: 160:44
    debug option_pubkey => _3;           // in scope 0 at cita-auth/src/handler.rs:160:52: 160:65
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/handler.rs:160:84: 160:84
    let _4: ();                          // in scope 0 at cita-auth/src/handler.rs:161:9: 161:47
    let mut _5: &mut lru::LruCache<cita_types::H256, std::option::Option<std::vec::Vec<u8>>>; // in scope 0 at cita-auth/src/handler.rs:161:9: 161:47

    bb0: {
        _5 = &mut ((*_1).2: lru::LruCache<cita_types::H256, std::option::Option<std::vec::Vec<u8>>>); // scope 0 at cita-auth/src/handler.rs:161:9: 161:47
        _4 = LruCache::<H256, std::option::Option<Vec<u8>>>::put(move _5, _2, move _3) -> bb1; // scope 0 at cita-auth/src/handler.rs:161:9: 161:47
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:161:20: 161:23
                                         // + literal: Const { ty: for<'a> fn(&'a mut LruCache<H256, std::option::Option<Vec<u8>>>, H256, std::option::Option<Vec<u8>>) {LruCache::<H256, std::option::Option<Vec<u8>>>::put}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-auth/src/handler.rs:162:6: 162:6
    }
}

fn handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::verify_tx_quota(_1: &MsgHandler, _2: u64, _3: &[u8]) -> bool {
    debug self => _1;                    // in scope 0 at cita-auth/src/handler.rs:164:28: 164:33
    debug quota => _2;                   // in scope 0 at cita-auth/src/handler.rs:164:35: 164:40
    debug signer => _3;                  // in scope 0 at cita-auth/src/handler.rs:164:47: 164:53
    let mut _0: bool;                    // return place in scope 0 at cita-auth/src/handler.rs:164:65: 164:69
    let mut _4: bool;                    // in scope 0 at cita-auth/src/handler.rs:165:12: 165:54
    let mut _5: u64;                     // in scope 0 at cita-auth/src/handler.rs:165:20: 165:54
    let mut _6: bool;                    // in scope 0 at cita-auth/src/handler.rs:168:12: 168:40
    let _7: cita_types::H160;            // in scope 0 at cita-auth/src/handler.rs:169:17: 169:21
    let _8: &cita_types::H512;           // in scope 0 at cita-auth/src/handler.rs:169:42: 169:63
    let _9: cita_types::H512;            // in scope 0 at cita-auth/src/handler.rs:169:43: 169:63
    let mut _11: &libproto::AccountGasLimit; // in scope 0 at cita-auth/src/handler.rs:170:35: 173:42
    let mut _12: std::option::Option<&u64>; // in scope 0 at cita-auth/src/handler.rs:174:34: 178:40
    let mut _13: &std::collections::HashMap<std::string::String, u64>; // in scope 0 at cita-auth/src/handler.rs:174:34: 178:40
    let _14: &std::collections::HashMap<std::string::String, u64>; // in scope 0 at cita-auth/src/handler.rs:174:34: 177:44
    let mut _15: &libproto::AccountGasLimit; // in scope 0 at cita-auth/src/handler.rs:174:34: 177:44
    let _16: &std::string::String;       // in scope 0 at cita-auth/src/handler.rs:178:22: 178:39
    let _17: std::string::String;        // in scope 0 at cita-auth/src/handler.rs:178:23: 178:39
    let mut _18: &cita_types::H160;      // in scope 0 at cita-auth/src/handler.rs:178:23: 178:39
    let mut _19: isize;                  // in scope 0 at cita-auth/src/handler.rs:174:20: 174:31
    let mut _21: u64;                    // in scope 0 at cita-auth/src/handler.rs:180:31: 180:37
    let mut _22: bool;                   // in scope 0 at cita-auth/src/handler.rs:182:16: 182:35
    let mut _23: u64;                    // in scope 0 at cita-auth/src/handler.rs:182:24: 182:35
    scope 1 {
        debug addr => _7;                // in scope 1 at cita-auth/src/handler.rs:169:17: 169:21
        let mut _10: u64;                // in scope 1 at cita-auth/src/handler.rs:170:17: 170:32
        scope 2 {
            debug quota_limit => _10;    // in scope 2 at cita-auth/src/handler.rs:170:17: 170:32
            scope 3 {
                debug value => _20;      // in scope 3 at cita-auth/src/handler.rs:174:25: 174:30
                let _20: &u64;           // in scope 3 at cita-auth/src/handler.rs:174:25: 174:30
            }
        }
    }

    bb0: {
        _5 = (((*_1).12: handler::SysConfigInfo).0: u64); // scope 0 at cita-auth/src/handler.rs:165:20: 165:54
        _4 = Gt(_2, move _5);            // scope 0 at cita-auth/src/handler.rs:165:12: 165:54
        switchInt(move _4) -> [0: bb2, otherwise: bb1]; // scope 0 at cita-auth/src/handler.rs:165:12: 165:54
    }

    bb1: {
        _0 = const false;                // scope 0 at cita-auth/src/handler.rs:166:20: 166:25
        goto -> bb15;                    // scope 0 at no-location
    }

    bb2: {
        _6 = (((*_1).12: handler::SysConfigInfo).2: bool); // scope 0 at cita-auth/src/handler.rs:168:12: 168:40
        switchInt(move _6) -> [0: bb14, otherwise: bb3]; // scope 0 at cita-auth/src/handler.rs:168:12: 168:40
    }

    bb3: {
        _9 = <H512 as From<&[u8]>>::from(_3) -> bb4; // scope 0 at cita-auth/src/handler.rs:169:43: 169:63
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:169:43: 169:55
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[u8]) -> H512 {<H512 as From<&[u8]>>::from}, val: Value(<ZST>) }
    }

    bb4: {
        _8 = &_9;                        // scope 0 at cita-auth/src/handler.rs:169:42: 169:63
        _7 = pubkey_to_address(_8) -> bb5; // scope 0 at cita-auth/src/handler.rs:169:24: 169:64
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:169:24: 169:41
                                         // + literal: Const { ty: for<'a> fn(&'a H512) -> H160 {pubkey_to_address}, val: Value(<ZST>) }
    }

    bb5: {
        _11 = &(((*_1).12: handler::SysConfigInfo).1: libproto::AccountGasLimit); // scope 1 at cita-auth/src/handler.rs:170:35: 173:42
        _10 = AccountGasLimit::get_common_quota_limit(move _11) -> bb6; // scope 1 at cita-auth/src/handler.rs:170:35: 173:42
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:173:18: 173:40
                                         // + literal: Const { ty: for<'a> fn(&'a AccountGasLimit) -> u64 {AccountGasLimit::get_common_quota_limit}, val: Value(<ZST>) }
    }

    bb6: {
        _15 = &(((*_1).12: handler::SysConfigInfo).1: libproto::AccountGasLimit); // scope 3 at cita-auth/src/handler.rs:174:34: 177:44
        _14 = AccountGasLimit::get_specific_quota_limit(move _15) -> bb7; // scope 3 at cita-auth/src/handler.rs:174:34: 177:44
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:177:18: 177:42
                                         // + literal: Const { ty: for<'a> fn(&'a AccountGasLimit) -> &'a HashMap<std::string::String, u64> {AccountGasLimit::get_specific_quota_limit}, val: Value(<ZST>) }
    }

    bb7: {
        _13 = _14;                       // scope 3 at cita-auth/src/handler.rs:174:34: 178:40
        _18 = &_7;                       // scope 3 at cita-auth/src/handler.rs:178:23: 178:39
        _17 = <H160 as cita_types::traits::LowerHex>::lower_hex(move _18) -> bb8; // scope 3 at cita-auth/src/handler.rs:178:23: 178:39
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:178:28: 178:37
                                         // + literal: Const { ty: for<'a> fn(&'a H160) -> std::string::String {<H160 as cita_types::traits::LowerHex>::lower_hex}, val: Value(<ZST>) }
    }

    bb8: {
        _16 = &_17;                      // scope 3 at cita-auth/src/handler.rs:178:22: 178:39
        _12 = HashMap::<std::string::String, u64>::get::<std::string::String>(move _13, _16) -> [return: bb9, unwind: bb16]; // scope 3 at cita-auth/src/handler.rs:174:34: 178:40
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:178:18: 178:21
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a HashMap<std::string::String, u64>, &'b std::string::String) -> std::option::Option<&'a u64> {HashMap::<std::string::String, u64>::get::<std::string::String>}, val: Value(<ZST>) }
    }

    bb9: {
        _19 = discriminant(_12);         // scope 3 at cita-auth/src/handler.rs:174:20: 174:31
        switchInt(move _19) -> [1: bb10, otherwise: bb11]; // scope 3 at cita-auth/src/handler.rs:174:20: 174:31
    }

    bb10: {
        _20 = ((_12 as Some).0: &u64);   // scope 3 at cita-auth/src/handler.rs:174:25: 174:30
        _21 = (*_20);                    // scope 3 at cita-auth/src/handler.rs:180:31: 180:37
        _10 = move _21;                  // scope 3 at cita-auth/src/handler.rs:180:17: 180:37
        goto -> bb11;                    // scope 2 at cita-auth/src/handler.rs:174:13: 181:14
    }

    bb11: {
        drop(_17) -> bb12;               // scope 2 at cita-auth/src/handler.rs:181:13: 181:14
    }

    bb12: {
        _23 = _10;                       // scope 2 at cita-auth/src/handler.rs:182:24: 182:35
        _22 = Gt(_2, move _23);          // scope 2 at cita-auth/src/handler.rs:182:16: 182:35
        switchInt(move _22) -> [0: bb14, otherwise: bb13]; // scope 2 at cita-auth/src/handler.rs:182:16: 182:35
    }

    bb13: {
        _0 = const false;                // scope 2 at cita-auth/src/handler.rs:183:24: 183:29
        goto -> bb15;                    // scope 0 at no-location
    }

    bb14: {
        _0 = const true;                 // scope 0 at cita-auth/src/handler.rs:186:9: 186:13
        goto -> bb15;                    // scope 0 at cita-auth/src/handler.rs:187:6: 187:6
    }

    bb15: {
        return;                          // scope 0 at cita-auth/src/handler.rs:187:6: 187:6
    }

    bb16 (cleanup): {
        drop(_17) -> bb17;               // scope 2 at cita-auth/src/handler.rs:181:13: 181:14
    }

    bb17 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/handler.rs:164:5: 187:6
    }
}

fn handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::verify_request(_1: &MsgHandler, _2: &libproto::Request) -> Result<(), transaction_verify::Error> {
    debug self => _1;                    // in scope 0 at cita-auth/src/handler.rs:190:23: 190:28
    debug req => _2;                     // in scope 0 at cita-auth/src/handler.rs:190:30: 190:33
    let mut _0: std::result::Result<(), transaction_verify::Error>; // return place in scope 0 at cita-auth/src/handler.rs:190:48: 190:65
    let _3: &libproto::UnverifiedTransaction; // in scope 0 at cita-auth/src/handler.rs:191:13: 191:18
    let mut _5: &libproto::UnverifiedTransaction; // in scope 0 at cita-auth/src/handler.rs:192:18: 192:41
    let mut _7: &libproto::Transaction;  // in scope 0 at cita-auth/src/handler.rs:193:26: 193:42
    let mut _8: bool;                    // in scope 0 at cita-auth/src/handler.rs:194:12: 194:59
    let mut _9: u32;                     // in scope 0 at cita-auth/src/handler.rs:194:12: 194:22
    let mut _10: u32;                    // in scope 0 at cita-auth/src/handler.rs:194:26: 194:59
    let mut _11: std::option::Option<u32>; // in scope 0 at cita-auth/src/handler.rs:194:26: 194:50
    let mut _13: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _14: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _15: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _16: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _17: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _18: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _19: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _20: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _21: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _22: &[&str];                // in scope 0 at cita-auth/src/handler.rs:196:17: 196:70
    let mut _23: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _24: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _25: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _26: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:197:17: 197:27
    let _27: &u32;                       // in scope 0 at cita-auth/src/handler.rs:197:17: 197:27
    let mut _28: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:198:17: 198:50
    let _29: &u32;                       // in scope 0 at cita-auth/src/handler.rs:198:17: 198:50
    let _30: u32;                        // in scope 0 at cita-auth/src/handler.rs:198:17: 198:50
    let mut _31: std::option::Option<u32>; // in scope 0 at cita-auth/src/handler.rs:198:17: 198:41
    let mut _32: u32;                    // in scope 0 at cita-auth/src/handler.rs:202:12: 202:22
    let mut _33: bool;                   // in scope 0 at cita-auth/src/handler.rs:204:16: 204:42
    let mut _34: bool;                   // in scope 0 at cita-auth/src/handler.rs:204:17: 204:42
    let mut _35: &[u8];                  // in scope 0 at cita-auth/src/handler.rs:204:17: 204:42
    let _36: &[u8];                      // in scope 0 at cita-auth/src/handler.rs:204:17: 204:31
    let mut _37: &libproto::Transaction; // in scope 0 at cita-auth/src/handler.rs:204:17: 204:31
    let mut _39: &str;                   // in scope 0 at cita-auth/src/handler.rs:207:31: 207:42
    let _40: &str;                       // in scope 0 at cita-auth/src/handler.rs:207:31: 207:42
    let mut _41: &libproto::Transaction; // in scope 0 at cita-auth/src/handler.rs:207:31: 207:42
    let mut _42: bool;                   // in scope 0 at cita-auth/src/handler.rs:208:16: 208:64
    let mut _43: bool;                   // in scope 0 at cita-auth/src/handler.rs:208:16: 208:30
    let mut _44: bool;                   // in scope 0 at cita-auth/src/handler.rs:208:17: 208:30
    let mut _45: &str;                   // in scope 0 at cita-auth/src/handler.rs:208:17: 208:30
    let mut _46: bool;                   // in scope 0 at cita-auth/src/handler.rs:208:34: 208:64
    let mut _47: &std::result::Result<cita_types::H160, rustc_hex::FromHexError>; // in scope 0 at cita-auth/src/handler.rs:208:34: 208:64
    let _48: std::result::Result<cita_types::H160, rustc_hex::FromHexError>; // in scope 0 at cita-auth/src/handler.rs:208:34: 208:55
    let mut _49: &str;                   // in scope 0 at cita-auth/src/handler.rs:208:52: 208:54
    let mut _50: bool;                   // in scope 0 at cita-auth/src/handler.rs:211:19: 211:33
    let mut _51: u32;                    // in scope 0 at cita-auth/src/handler.rs:211:19: 211:29
    let mut _52: bool;                   // in scope 0 at cita-auth/src/handler.rs:213:16: 213:39
    let mut _53: bool;                   // in scope 0 at cita-auth/src/handler.rs:213:17: 213:39
    let mut _54: &str;                   // in scope 0 at cita-auth/src/handler.rs:213:17: 213:39
    let _55: &str;                       // in scope 0 at cita-auth/src/handler.rs:213:17: 213:28
    let mut _56: &libproto::Transaction; // in scope 0 at cita-auth/src/handler.rs:213:17: 213:28
    let mut _58: &libproto::Transaction; // in scope 0 at cita-auth/src/handler.rs:217:22: 217:36
    let mut _59: bool;                   // in scope 0 at cita-auth/src/handler.rs:218:16: 218:48
    let mut _60: bool;                   // in scope 0 at cita-auth/src/handler.rs:218:16: 218:30
    let mut _61: bool;                   // in scope 0 at cita-auth/src/handler.rs:218:17: 218:30
    let mut _62: &[u8];                  // in scope 0 at cita-auth/src/handler.rs:218:17: 218:30
    let mut _63: bool;                   // in scope 0 at cita-auth/src/handler.rs:218:34: 218:48
    let mut _64: usize;                  // in scope 0 at cita-auth/src/handler.rs:218:34: 218:42
    let mut _65: &[u8];                  // in scope 0 at cita-auth/src/handler.rs:218:34: 218:42
    let mut _67: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _68: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _69: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _70: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _71: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _72: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _73: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _74: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _75: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _76: &[&str];                // in scope 0 at cita-auth/src/handler.rs:222:20: 222:44
    let mut _77: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _78: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _79: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _80: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:222:46: 222:56
    let _81: &u32;                       // in scope 0 at cita-auth/src/handler.rs:222:46: 222:56
    let mut _82: bool;                   // in scope 0 at cita-auth/src/handler.rs:226:12: 226:43
    let mut _83: bool;                   // in scope 0 at cita-auth/src/handler.rs:226:13: 226:43
    let mut _84: &libproto::Transaction; // in scope 0 at cita-auth/src/handler.rs:226:40: 226:42
    scope 1 {
        debug un_tx => _3;               // in scope 1 at cita-auth/src/handler.rs:191:13: 191:18
        let _4: &libproto::Transaction;  // in scope 1 at cita-auth/src/handler.rs:192:13: 192:15
        scope 2 {
            debug tx => _4;              // in scope 2 at cita-auth/src/handler.rs:192:13: 192:15
            let _6: u32;                 // in scope 2 at cita-auth/src/handler.rs:193:13: 193:23
            scope 3 {
                debug tx_version => _6;  // in scope 3 at cita-auth/src/handler.rs:193:13: 193:23
                let _12: log::Level;     // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let _38: &str;           // in scope 3 at cita-auth/src/handler.rs:207:17: 207:19
                let _57: &[u8];          // in scope 3 at cita-auth/src/handler.rs:217:17: 217:19
                let _66: log::Level;     // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                scope 4 {
                    debug lvl => _12;    // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                    let mut _88: &(&str, &str, &str, u32); // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                    let mut _89: &[&str; 2]; // in scope 4 at cita-auth/src/handler.rs:196:17: 196:70
                    let mut _90: &log::LevelFilter; // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                }
                scope 5 {
                    debug to => _38;     // in scope 5 at cita-auth/src/handler.rs:207:17: 207:19
                }
                scope 6 {
                    debug to => _57;     // in scope 6 at cita-auth/src/handler.rs:217:17: 217:19
                }
                scope 7 {
                    debug lvl => _66;    // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                    let mut _85: &(&str, &str, &str, u32); // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                    let mut _86: &[&str; 2]; // in scope 7 at cita-auth/src/handler.rs:222:20: 222:44
                    let mut _87: &log::LevelFilter; // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                }
            }
        }
    }

    bb0: {
        _3 = libproto::Request::get_un_tx(_2) -> bb1; // scope 0 at cita-auth/src/handler.rs:191:21: 191:36
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:191:25: 191:34
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Request) -> &'a UnverifiedTransaction {libproto::Request::get_un_tx}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = _3;                         // scope 1 at cita-auth/src/handler.rs:192:18: 192:41
        _4 = UnverifiedTransaction::get_transaction(move _5) -> bb2; // scope 1 at cita-auth/src/handler.rs:192:18: 192:41
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:192:24: 192:39
                                         // + literal: Const { ty: for<'a> fn(&'a UnverifiedTransaction) -> &'a Transaction {UnverifiedTransaction::get_transaction}, val: Value(<ZST>) }
    }

    bb2: {
        _7 = _4;                         // scope 2 at cita-auth/src/handler.rs:193:26: 193:42
        _6 = Transaction::get_version(move _7) -> bb3; // scope 2 at cita-auth/src/handler.rs:193:26: 193:42
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:193:29: 193:40
                                         // + literal: Const { ty: for<'a> fn(&'a Transaction) -> u32 {Transaction::get_version}, val: Value(<ZST>) }
    }

    bb3: {
        _9 = _6;                         // scope 3 at cita-auth/src/handler.rs:194:12: 194:22
        _11 = (((*_1).12: handler::SysConfigInfo).4: std::option::Option<u32>); // scope 3 at cita-auth/src/handler.rs:194:26: 194:50
        _10 = std::option::Option::<u32>::unwrap(move _11) -> bb4; // scope 3 at cita-auth/src/handler.rs:194:26: 194:59
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:194:51: 194:57
                                         // + literal: Const { ty: fn(std::option::Option<u32>) -> u32 {std::option::Option::<u32>::unwrap}, val: Value(<ZST>) }
    }

    bb4: {
        _8 = Ne(move _9, move _10);      // scope 3 at cita-auth/src/handler.rs:194:12: 194:59
        switchInt(move _8) -> [0: bb18, otherwise: bb5]; // scope 3 at cita-auth/src/handler.rs:194:12: 194:59
    }

    bb5: {
        _12 = log::Level::Info;          // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _15 = &_12;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _90 = const _;                   // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::verify_request, [], Some(promoted[5])) }
        _14 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _15, _90) -> bb9; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb6: {
        _13 = const false;               // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb8;                     // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        _17 = &_12;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _19 = log::max_level() -> bb10;  // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb8: {
        switchInt(move _13) -> [0: bb17, otherwise: bb12]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb9: {
        switchInt(move _14) -> [0: bb6, otherwise: bb7]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb10: {
        _18 = &_19;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _16 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _17, move _18) -> bb11; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb11: {
        _13 = move _16;                  // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb8;                     // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb12: {
        _89 = const _;                   // scope 4 at cita-auth/src/handler.rs:196:17: 196:70
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:196:17: 196:70
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(MsgHandler::verify_request, [], Some(promoted[4])) }
        _22 = _89 as &[&str] (Pointer(Unsize)); // scope 4 at cita-auth/src/handler.rs:196:17: 196:70
        _27 = &_6;                       // scope 4 at cita-auth/src/handler.rs:197:17: 197:27
        _26 = core::fmt::ArgumentV1::<'_>::new_debug::<u32>(_27) -> bb13; // scope 4 at cita-auth/src/handler.rs:197:17: 197:27
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:197:17: 197:27
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b u32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<u32>}, val: Value(<ZST>) }
    }

    bb13: {
        _31 = (((*_1).12: handler::SysConfigInfo).4: std::option::Option<u32>); // scope 4 at cita-auth/src/handler.rs:198:17: 198:41
        _30 = std::option::Option::<u32>::unwrap(move _31) -> bb14; // scope 4 at cita-auth/src/handler.rs:198:17: 198:50
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:198:42: 198:48
                                         // + literal: Const { ty: fn(std::option::Option<u32>) -> u32 {std::option::Option::<u32>::unwrap}, val: Value(<ZST>) }
    }

    bb14: {
        _29 = &_30;                      // scope 4 at cita-auth/src/handler.rs:198:17: 198:50
        _28 = core::fmt::ArgumentV1::<'_>::new_debug::<u32>(_29) -> bb15; // scope 4 at cita-auth/src/handler.rs:198:17: 198:50
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:198:17: 198:50
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b u32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<u32>}, val: Value(<ZST>) }
    }

    bb15: {
        _25 = [move _26, move _28];      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _24 = &_25;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _23 = _24 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _21 = Arguments::<'_>::new_v1(move _22, move _23) -> bb16; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb16: {
        _88 = const _;                   // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::verify_request, [], Some(promoted[3])) }
        _20 = log::__private_api_log(move _21, _12, _88) -> bb17; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb17: {
        _0 = const Result::<(), transaction_verify::Error>::Err(transaction_verify::Error::InvalidVersion); // scope 3 at cita-auth/src/handler.rs:200:20: 200:46
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: Result<(), transaction_verify::Error>, val: Value(Scalar(0x0a)) }
        goto -> bb60;                    // scope 3 at no-location
    }

    bb18: {
        _32 = _6;                        // scope 3 at cita-auth/src/handler.rs:202:12: 202:22
        switchInt(move _32) -> [0: bb19, otherwise: bb20]; // scope 3 at cita-auth/src/handler.rs:202:12: 202:27
    }

    bb19: {
        _37 = _4;                        // scope 3 at cita-auth/src/handler.rs:204:17: 204:31
        _36 = Transaction::get_to_v1(move _37) -> bb21; // scope 3 at cita-auth/src/handler.rs:204:17: 204:31
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:204:20: 204:29
                                         // + literal: Const { ty: for<'a> fn(&'a Transaction) -> &'a [u8] {Transaction::get_to_v1}, val: Value(<ZST>) }
    }

    bb20: {
        _51 = _6;                        // scope 3 at cita-auth/src/handler.rs:211:19: 211:29
        _50 = Lt(move _51, const 3_u32); // scope 3 at cita-auth/src/handler.rs:211:19: 211:33
        switchInt(move _50) -> [0: bb35, otherwise: bb34]; // scope 3 at cita-auth/src/handler.rs:211:19: 211:33
    }

    bb21: {
        _35 = _36;                       // scope 3 at cita-auth/src/handler.rs:204:17: 204:42
        _34 = core::slice::<impl [u8]>::is_empty(move _35) -> bb22; // scope 3 at cita-auth/src/handler.rs:204:17: 204:42
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:204:32: 204:40
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> bool {core::slice::<impl [u8]>::is_empty}, val: Value(<ZST>) }
    }

    bb22: {
        _33 = Not(move _34);             // scope 3 at cita-auth/src/handler.rs:204:16: 204:42
        switchInt(move _33) -> [0: bb24, otherwise: bb23]; // scope 3 at cita-auth/src/handler.rs:204:16: 204:42
    }

    bb23: {
        _0 = const Result::<(), transaction_verify::Error>::Err(transaction_verify::Error::InvalidValue); // scope 3 at cita-auth/src/handler.rs:205:24: 205:48
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: Result<(), transaction_verify::Error>, val: Value(Scalar(0x09)) }
        goto -> bb60;                    // scope 3 at no-location
    }

    bb24: {
        _41 = _4;                        // scope 3 at cita-auth/src/handler.rs:207:31: 207:42
        _40 = Transaction::get_to(move _41) -> bb25; // scope 3 at cita-auth/src/handler.rs:207:31: 207:42
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:207:34: 207:40
                                         // + literal: Const { ty: for<'a> fn(&'a Transaction) -> &'a str {Transaction::get_to}, val: Value(<ZST>) }
    }

    bb25: {
        _39 = _40;                       // scope 3 at cita-auth/src/handler.rs:207:31: 207:42
        _38 = clean_0x(move _39) -> bb26; // scope 3 at cita-auth/src/handler.rs:207:22: 207:43
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:207:22: 207:30
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> &'a str {clean_0x}, val: Value(<ZST>) }
    }

    bb26: {
        _45 = _38;                       // scope 5 at cita-auth/src/handler.rs:208:17: 208:30
        _44 = core::str::<impl str>::is_empty(move _45) -> bb30; // scope 5 at cita-auth/src/handler.rs:208:17: 208:30
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:208:20: 208:28
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> bool {core::str::<impl str>::is_empty}, val: Value(<ZST>) }
    }

    bb27: {
        _42 = const false;               // scope 5 at cita-auth/src/handler.rs:208:16: 208:64
        goto -> bb29;                    // scope 5 at cita-auth/src/handler.rs:208:16: 208:64
    }

    bb28: {
        _49 = _38;                       // scope 5 at cita-auth/src/handler.rs:208:52: 208:54
        _48 = <H160 as FromStr>::from_str(move _49) -> bb31; // scope 5 at cita-auth/src/handler.rs:208:34: 208:55
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:208:34: 208:51
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> Result<H160, <H160 as FromStr>::Err> {<H160 as FromStr>::from_str}, val: Value(<ZST>) }
    }

    bb29: {
        switchInt(move _42) -> [0: bb56, otherwise: bb33]; // scope 5 at cita-auth/src/handler.rs:208:16: 208:64
    }

    bb30: {
        _43 = Not(move _44);             // scope 5 at cita-auth/src/handler.rs:208:16: 208:30
        switchInt(move _43) -> [0: bb27, otherwise: bb28]; // scope 5 at cita-auth/src/handler.rs:208:16: 208:64
    }

    bb31: {
        _47 = &_48;                      // scope 5 at cita-auth/src/handler.rs:208:34: 208:64
        _46 = Result::<H160, rustc_hex::FromHexError>::is_err(move _47) -> bb32; // scope 5 at cita-auth/src/handler.rs:208:34: 208:64
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:208:56: 208:62
                                         // + literal: Const { ty: for<'a> fn(&'a Result<H160, rustc_hex::FromHexError>) -> bool {Result::<H160, rustc_hex::FromHexError>::is_err}, val: Value(<ZST>) }
    }

    bb32: {
        _42 = move _46;                  // scope 5 at cita-auth/src/handler.rs:208:16: 208:64
        goto -> bb29;                    // scope 5 at cita-auth/src/handler.rs:208:16: 208:64
    }

    bb33: {
        _0 = const Result::<(), transaction_verify::Error>::Err(transaction_verify::Error::InvalidValue); // scope 5 at cita-auth/src/handler.rs:209:24: 209:48
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: Result<(), transaction_verify::Error>, val: Value(Scalar(0x09)) }
        goto -> bb60;                    // scope 3 at no-location
    }

    bb34: {
        _56 = _4;                        // scope 3 at cita-auth/src/handler.rs:213:17: 213:28
        _55 = Transaction::get_to(move _56) -> bb36; // scope 3 at cita-auth/src/handler.rs:213:17: 213:28
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:213:20: 213:26
                                         // + literal: Const { ty: for<'a> fn(&'a Transaction) -> &'a str {Transaction::get_to}, val: Value(<ZST>) }
    }

    bb35: {
        _66 = log::Level::Error;         // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:67:14: 67:34
        _69 = &_66;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _87 = const _;                   // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::verify_request, [], Some(promoted[2])) }
        _68 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _69, _87) -> bb49; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb36: {
        _54 = _55;                       // scope 3 at cita-auth/src/handler.rs:213:17: 213:39
        _53 = core::str::<impl str>::is_empty(move _54) -> bb37; // scope 3 at cita-auth/src/handler.rs:213:17: 213:39
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:213:29: 213:37
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> bool {core::str::<impl str>::is_empty}, val: Value(<ZST>) }
    }

    bb37: {
        _52 = Not(move _53);             // scope 3 at cita-auth/src/handler.rs:213:16: 213:39
        switchInt(move _52) -> [0: bb39, otherwise: bb38]; // scope 3 at cita-auth/src/handler.rs:213:16: 213:39
    }

    bb38: {
        _0 = const Result::<(), transaction_verify::Error>::Err(transaction_verify::Error::InvalidValue); // scope 3 at cita-auth/src/handler.rs:214:24: 214:48
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: Result<(), transaction_verify::Error>, val: Value(Scalar(0x09)) }
        goto -> bb60;                    // scope 3 at no-location
    }

    bb39: {
        _58 = _4;                        // scope 3 at cita-auth/src/handler.rs:217:22: 217:36
        _57 = Transaction::get_to_v1(move _58) -> bb40; // scope 3 at cita-auth/src/handler.rs:217:22: 217:36
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:217:25: 217:34
                                         // + literal: Const { ty: for<'a> fn(&'a Transaction) -> &'a [u8] {Transaction::get_to_v1}, val: Value(<ZST>) }
    }

    bb40: {
        _62 = _57;                       // scope 6 at cita-auth/src/handler.rs:218:17: 218:30
        _61 = core::slice::<impl [u8]>::is_empty(move _62) -> bb44; // scope 6 at cita-auth/src/handler.rs:218:17: 218:30
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:218:20: 218:28
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> bool {core::slice::<impl [u8]>::is_empty}, val: Value(<ZST>) }
    }

    bb41: {
        _59 = const false;               // scope 6 at cita-auth/src/handler.rs:218:16: 218:48
        goto -> bb43;                    // scope 6 at cita-auth/src/handler.rs:218:16: 218:48
    }

    bb42: {
        _65 = _57;                       // scope 6 at cita-auth/src/handler.rs:218:34: 218:42
        _64 = Len((*_65));               // scope 6 at cita-auth/src/handler.rs:218:34: 218:42
        _63 = Ne(move _64, const 20_usize); // scope 6 at cita-auth/src/handler.rs:218:34: 218:48
        _59 = move _63;                  // scope 6 at cita-auth/src/handler.rs:218:16: 218:48
        goto -> bb43;                    // scope 6 at cita-auth/src/handler.rs:218:16: 218:48
    }

    bb43: {
        switchInt(move _59) -> [0: bb56, otherwise: bb45]; // scope 6 at cita-auth/src/handler.rs:218:16: 218:48
    }

    bb44: {
        _60 = Not(move _61);             // scope 6 at cita-auth/src/handler.rs:218:16: 218:30
        switchInt(move _60) -> [0: bb41, otherwise: bb42]; // scope 6 at cita-auth/src/handler.rs:218:16: 218:48
    }

    bb45: {
        _0 = const Result::<(), transaction_verify::Error>::Err(transaction_verify::Error::InvalidValue); // scope 6 at cita-auth/src/handler.rs:219:24: 219:48
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: Result<(), transaction_verify::Error>, val: Value(Scalar(0x09)) }
        goto -> bb60;                    // scope 3 at no-location
    }

    bb46: {
        _67 = const false;               // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb48;                    // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb47: {
        _71 = &_66;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _73 = log::max_level() -> bb50;  // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb48: {
        switchInt(move _67) -> [0: bb55, otherwise: bb52]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb49: {
        switchInt(move _68) -> [0: bb46, otherwise: bb47]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb50: {
        _72 = &_73;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _70 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _71, move _72) -> bb51; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb51: {
        _67 = move _70;                  // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb48;                    // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb52: {
        _86 = const _;                   // scope 7 at cita-auth/src/handler.rs:222:20: 222:44
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:222:20: 222:44
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(MsgHandler::verify_request, [], Some(promoted[1])) }
        _76 = _86 as &[&str] (Pointer(Unsize)); // scope 7 at cita-auth/src/handler.rs:222:20: 222:44
        _81 = &_6;                       // scope 7 at cita-auth/src/handler.rs:222:46: 222:56
        _80 = core::fmt::ArgumentV1::<'_>::new_display::<u32>(_81) -> bb53; // scope 7 at cita-auth/src/handler.rs:222:46: 222:56
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:222:46: 222:56
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'b> fn(&'b u32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u32>}, val: Value(<ZST>) }
    }

    bb53: {
        _79 = [move _80];                // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _78 = &_79;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _77 = _78 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _75 = Arguments::<'_>::new_v1(move _76, move _77) -> bb54; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb54: {
        _85 = const _;                   // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::verify_request, [], Some(promoted[0])) }
        _74 = log::__private_api_log(move _75, _66, _85) -> bb55; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb55: {
        _0 = const Result::<(), transaction_verify::Error>::Err(transaction_verify::Error::InvalidValue); // scope 3 at cita-auth/src/handler.rs:223:20: 223:44
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: Result<(), transaction_verify::Error>, val: Value(Scalar(0x09)) }
        goto -> bb60;                    // scope 3 at cita-auth/src/handler.rs:223:13: 223:44
    }

    bb56: {
        _84 = _4;                        // scope 3 at cita-auth/src/handler.rs:226:40: 226:42
        _83 = verify_base_quota_required(move _84) -> bb57; // scope 3 at cita-auth/src/handler.rs:226:13: 226:43
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:226:13: 226:39
                                         // + literal: Const { ty: for<'a> fn(&'a Transaction) -> bool {verify_base_quota_required}, val: Value(<ZST>) }
    }

    bb57: {
        _82 = Not(move _83);             // scope 3 at cita-auth/src/handler.rs:226:12: 226:43
        switchInt(move _82) -> [0: bb59, otherwise: bb58]; // scope 3 at cita-auth/src/handler.rs:226:12: 226:43
    }

    bb58: {
        _0 = const Result::<(), transaction_verify::Error>::Err(transaction_verify::Error::QuotaNotEnough); // scope 3 at cita-auth/src/handler.rs:227:20: 227:46
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: Result<(), transaction_verify::Error>, val: Value(Scalar(0x07)) }
        goto -> bb60;                    // scope 3 at no-location
    }

    bb59: {
        _0 = const Result::<(), transaction_verify::Error>::Ok(()); // scope 3 at cita-auth/src/handler.rs:230:9: 230:15
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: Result<(), transaction_verify::Error>, val: Value(Scalar(0x0b)) }
        goto -> bb60;                    // scope 0 at cita-auth/src/handler.rs:231:6: 231:6
    }

    bb60: {
        return;                          // scope 0 at cita-auth/src/handler.rs:231:6: 231:6
    }
}

promoted[0] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::verify_request: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:222:13: 222:57
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:222:13: 222:57

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:222:13: 222:57
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:222:13: 222:57
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:222:13: 222:57
        _1 = (move _2, move _4, move _6, const 222_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::verify_request: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-auth/src/handler.rs:222:20: 222:44
    let mut _1: [&str; 2];               // in scope 0 at cita-auth/src/handler.rs:222:20: 222:44

    bb0: {
        _1 = [const "unexpected version ", const "!"]; // scope 0 at cita-auth/src/handler.rs:222:20: 222:44
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:222:20: 222:44
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:222:20: 222:44
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:222:20: 222:44
        return;                          // scope 0 at cita-auth/src/handler.rs:222:20: 222:44
    }
}

promoted[2] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::verify_request: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[3] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::verify_request: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:195:13: 199:14
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:195:13: 199:14

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:195:13: 199:14
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:195:13: 199:14
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:195:13: 199:14
        _1 = (move _2, move _4, move _6, const 195_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[4] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::verify_request: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-auth/src/handler.rs:196:17: 196:70
    let mut _1: [&str; 2];               // in scope 0 at cita-auth/src/handler.rs:196:17: 196:70

    bb0: {
        _1 = [const "invalid version: tx_verion-", const ", chain_version-"]; // scope 0 at cita-auth/src/handler.rs:196:17: 196:70
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:196:17: 196:70
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:196:17: 196:70
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:196:17: 196:70
        return;                          // scope 0 at cita-auth/src/handler.rs:196:17: 196:70
    }
}

promoted[5] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::verify_request: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::verify_black_list(_1: &MsgHandler, _2: &VerifyTxReq) -> Result<(), transaction_verify::Error> {
    debug self => _1;                    // in scope 0 at cita-auth/src/handler.rs:234:26: 234:31
    debug req => _2;                     // in scope 0 at cita-auth/src/handler.rs:234:33: 234:36
    let mut _0: std::result::Result<(), transaction_verify::Error>; // return place in scope 0 at cita-auth/src/handler.rs:234:55: 234:72
    let mut _3: std::option::Option<&i8>; // in scope 0 at cita-auth/src/handler.rs:235:31: 237:76
    let mut _4: &std::collections::HashMap<cita_types::H160, i8>; // in scope 0 at cita-auth/src/handler.rs:235:31: 237:76
    let _5: &cita_types::H160;           // in scope 0 at cita-auth/src/handler.rs:237:18: 237:75
    let _6: cita_types::H160;            // in scope 0 at cita-auth/src/handler.rs:237:19: 237:75
    let _7: &cita_types::H512;           // in scope 0 at cita-auth/src/handler.rs:237:37: 237:74
    let _8: cita_types::H512;            // in scope 0 at cita-auth/src/handler.rs:237:38: 237:74
    let mut _9: &[u8];                   // in scope 0 at cita-auth/src/handler.rs:237:57: 237:73
    let _10: &[u8];                      // in scope 0 at cita-auth/src/handler.rs:237:57: 237:73
    let mut _11: isize;                  // in scope 0 at cita-auth/src/handler.rs:235:16: 235:28
    let mut _13: bool;                   // in scope 0 at cita-auth/src/handler.rs:239:16: 239:27
    let mut _14: i8;                     // in scope 0 at cita-auth/src/handler.rs:239:16: 239:23
    scope 1 {
        debug credit => _12;             // in scope 1 at cita-auth/src/handler.rs:235:21: 235:27
        let _12: &i8;                    // in scope 1 at cita-auth/src/handler.rs:235:21: 235:27
    }

    bb0: {
        _4 = &((*_1).10: std::collections::HashMap<cita_types::H160, i8>); // scope 1 at cita-auth/src/handler.rs:235:31: 237:76
        _10 = VerifyTxReq::get_signer(_2) -> bb1; // scope 1 at cita-auth/src/handler.rs:237:57: 237:73
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:237:61: 237:71
                                         // + literal: Const { ty: for<'a> fn(&'a VerifyTxReq) -> &'a [u8] {VerifyTxReq::get_signer}, val: Value(<ZST>) }
    }

    bb1: {
        _9 = _10;                        // scope 1 at cita-auth/src/handler.rs:237:57: 237:73
        _8 = H512::from_slice(move _9) -> bb2; // scope 1 at cita-auth/src/handler.rs:237:38: 237:74
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:237:38: 237:56
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> H512 {H512::from_slice}, val: Value(<ZST>) }
    }

    bb2: {
        _7 = &_8;                        // scope 1 at cita-auth/src/handler.rs:237:37: 237:74
        _6 = pubkey_to_address(_7) -> bb3; // scope 1 at cita-auth/src/handler.rs:237:19: 237:75
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:237:19: 237:36
                                         // + literal: Const { ty: for<'a> fn(&'a H512) -> H160 {pubkey_to_address}, val: Value(<ZST>) }
    }

    bb3: {
        _5 = &_6;                        // scope 1 at cita-auth/src/handler.rs:237:18: 237:75
        _3 = HashMap::<H160, i8>::get::<H160>(move _4, _5) -> bb4; // scope 1 at cita-auth/src/handler.rs:235:31: 237:76
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:237:14: 237:17
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a HashMap<H160, i8>, &'b H160) -> std::option::Option<&'a i8> {HashMap::<H160, i8>::get::<H160>}, val: Value(<ZST>) }
    }

    bb4: {
        _11 = discriminant(_3);          // scope 1 at cita-auth/src/handler.rs:235:16: 235:28
        switchInt(move _11) -> [1: bb5, otherwise: bb8]; // scope 1 at cita-auth/src/handler.rs:235:16: 235:28
    }

    bb5: {
        _12 = ((_3 as Some).0: &i8);     // scope 1 at cita-auth/src/handler.rs:235:21: 235:27
        _14 = (*_12);                    // scope 1 at cita-auth/src/handler.rs:239:16: 239:23
        _13 = Lt(move _14, const 0_i8);  // scope 1 at cita-auth/src/handler.rs:239:16: 239:27
        switchInt(move _13) -> [0: bb7, otherwise: bb6]; // scope 1 at cita-auth/src/handler.rs:239:16: 239:27
    }

    bb6: {
        _0 = const Result::<(), transaction_verify::Error>::Err(transaction_verify::Error::Forbidden); // scope 1 at cita-auth/src/handler.rs:240:17: 240:38
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: Result<(), transaction_verify::Error>, val: Value(Scalar(0x08)) }
        goto -> bb9;                     // scope 1 at cita-auth/src/handler.rs:239:13: 243:14
    }

    bb7: {
        _0 = const Result::<(), transaction_verify::Error>::Ok(()); // scope 1 at cita-auth/src/handler.rs:242:17: 242:23
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: Result<(), transaction_verify::Error>, val: Value(Scalar(0x0b)) }
        goto -> bb9;                     // scope 1 at cita-auth/src/handler.rs:239:13: 243:14
    }

    bb8: {
        _0 = const Result::<(), transaction_verify::Error>::Ok(()); // scope 0 at cita-auth/src/handler.rs:245:13: 245:19
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: Result<(), transaction_verify::Error>, val: Value(Scalar(0x0b)) }
        goto -> bb9;                     // scope 0 at cita-auth/src/handler.rs:235:9: 246:10
    }

    bb9: {
        return;                          // scope 0 at cita-auth/src/handler.rs:247:6: 247:6
    }
}

fn handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::verify_tx_req_chain_id(_1: &MsgHandler, _2: &VerifyTxReq) -> Result<(), transaction_verify::Error> {
    debug self => _1;                    // in scope 0 at cita-auth/src/handler.rs:249:31: 249:36
    debug req => _2;                     // in scope 0 at cita-auth/src/handler.rs:249:38: 249:41
    let mut _0: std::result::Result<(), transaction_verify::Error>; // return place in scope 0 at cita-auth/src/handler.rs:249:60: 249:77
    let _3: u32;                         // in scope 0 at cita-auth/src/handler.rs:250:13: 250:20
    let mut _4: std::option::Option<u32>; // in scope 0 at cita-auth/src/handler.rs:250:23: 250:47
    let mut _6: bool;                    // in scope 0 at cita-auth/src/handler.rs:255:20: 255:53
    let mut _7: bool;                    // in scope 0 at cita-auth/src/handler.rs:255:21: 255:53
    let mut _8: &[u8];                   // in scope 0 at cita-auth/src/handler.rs:255:21: 255:53
    let _9: &[u8];                       // in scope 0 at cita-auth/src/handler.rs:255:21: 255:42
    let mut _11: handler::ChainId;       // in scope 0 at cita-auth/src/handler.rs:259:26: 259:47
    let mut _12: u32;                    // in scope 0 at cita-auth/src/handler.rs:259:38: 259:46
    let mut _15: bool;                   // in scope 0 at cita-auth/src/handler.rs:262:24: 262:35
    let mut _16: u32;                    // in scope 0 at cita-auth/src/handler.rs:262:24: 262:31
    let mut _17: bool;                   // in scope 0 at cita-auth/src/handler.rs:264:20: 264:80
    let mut _18: u32;                    // in scope 0 at cita-auth/src/handler.rs:264:20: 264:38
    let mut _19: bool;                   // in scope 0 at cita-auth/src/handler.rs:264:47: 264:80
    let mut _20: usize;                  // in scope 0 at cita-auth/src/handler.rs:264:47: 264:74
    let mut _21: &[u8];                  // in scope 0 at cita-auth/src/handler.rs:264:47: 264:74
    let _22: &[u8];                      // in scope 0 at cita-auth/src/handler.rs:264:47: 264:68
    let mut _24: &[u8];                  // in scope 0 at cita-auth/src/handler.rs:267:47: 267:68
    let mut _25: handler::ChainId;       // in scope 0 at cita-auth/src/handler.rs:268:26: 268:47
    let mut _26: cita_types::U256;       // in scope 0 at cita-auth/src/handler.rs:268:38: 268:46
    let mut _28: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _29: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _30: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _31: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _32: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _33: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _34: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _35: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _36: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _37: &[&str];                // in scope 0 at cita-auth/src/handler.rs:272:24: 272:48
    let mut _38: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _39: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _40: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _41: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:272:50: 272:57
    let _42: &u32;                       // in scope 0 at cita-auth/src/handler.rs:272:50: 272:57
    let mut _43: bool;                   // in scope 0 at cita-auth/src/handler.rs:277:12: 277:37
    let mut _44: &std::option::Option<handler::ChainId>; // in scope 0 at cita-auth/src/handler.rs:277:12: 277:20
    let mut _45: &std::option::Option<handler::ChainId>; // in scope 0 at cita-auth/src/handler.rs:277:24: 277:37
    let mut _47: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _48: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _49: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _50: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _51: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _52: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _53: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _54: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _55: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _56: &[&str];                // in scope 0 at cita-auth/src/handler.rs:279:17: 279:55
    let mut _57: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _58: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _59: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _60: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:280:17: 280:34
    let _61: &handler::ChainId;          // in scope 0 at cita-auth/src/handler.rs:280:17: 280:34
    let _62: handler::ChainId;           // in scope 0 at cita-auth/src/handler.rs:280:17: 280:34
    let mut _63: std::option::Option<handler::ChainId>; // in scope 0 at cita-auth/src/handler.rs:280:17: 280:25
    let mut _64: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:281:17: 281:30
    let _65: &std::option::Option<handler::ChainId>; // in scope 0 at cita-auth/src/handler.rs:281:17: 281:30
    scope 1 {
        debug version => _3;             // in scope 1 at cita-auth/src/handler.rs:250:13: 250:20
        let _5: std::option::Option<handler::ChainId>; // in scope 1 at cita-auth/src/handler.rs:252:13: 252:21
        let _10: u32;                    // in scope 1 at cita-auth/src/handler.rs:258:25: 258:33
        let _13: u32;                    // in scope 1 at cita-auth/src/handler.rs:262:13: 262:20
        let _14: &u32;                   // in scope 1 at cita-auth/src/handler.rs:262:13: 262:20
        let _27: log::Level;             // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        scope 2 {
            debug chain_id => _5;        // in scope 2 at cita-auth/src/handler.rs:252:13: 252:21
            let _46: log::Level;         // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            scope 7 {
                debug lvl => _46;        // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _66: &(&str, &str, &str, u32); // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _67: &[&str; 2]; // in scope 7 at cita-auth/src/handler.rs:279:17: 279:55
                let mut _68: &log::LevelFilter; // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
        }
        scope 3 {
            debug chain_id => _10;       // in scope 3 at cita-auth/src/handler.rs:258:25: 258:33
        }
        scope 4 {
            debug version => _13;        // in scope 4 at cita-auth/src/handler.rs:262:13: 262:20
            debug version => _14;        // in scope 4 at cita-auth/src/handler.rs:262:13: 262:20
            let _23: cita_types::U256;   // in scope 4 at cita-auth/src/handler.rs:267:25: 267:33
            scope 5 {
                debug chain_id => _23;   // in scope 5 at cita-auth/src/handler.rs:267:25: 267:33
            }
        }
        scope 6 {
            debug lvl => _27;            // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _69: &(&str, &str, &str, u32); // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _70: &[&str; 2];     // in scope 6 at cita-auth/src/handler.rs:272:24: 272:48
            let mut _71: &log::LevelFilter; // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
    }

    bb0: {
        _4 = (((*_1).12: handler::SysConfigInfo).4: std::option::Option<u32>); // scope 0 at cita-auth/src/handler.rs:250:23: 250:47
        _3 = std::option::Option::<u32>::unwrap(move _4) -> bb1; // scope 0 at cita-auth/src/handler.rs:250:23: 250:56
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:250:48: 250:54
                                         // + literal: Const { ty: fn(std::option::Option<u32>) -> u32 {std::option::Option::<u32>::unwrap}, val: Value(<ZST>) }
    }

    bb1: {
        switchInt(_3) -> [0: bb2, otherwise: bb8]; // scope 1 at cita-auth/src/handler.rs:252:24: 252:37
    }

    bb2: {
        _9 = VerifyTxReq::get_chain_id_v1(_2) -> bb3; // scope 1 at cita-auth/src/handler.rs:255:21: 255:42
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:255:25: 255:40
                                         // + literal: Const { ty: for<'a> fn(&'a VerifyTxReq) -> &'a [u8] {VerifyTxReq::get_chain_id_v1}, val: Value(<ZST>) }
    }

    bb3: {
        _8 = _9;                         // scope 1 at cita-auth/src/handler.rs:255:21: 255:53
        _7 = core::slice::<impl [u8]>::is_empty(move _8) -> bb4; // scope 1 at cita-auth/src/handler.rs:255:21: 255:53
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:255:43: 255:51
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> bool {core::slice::<impl [u8]>::is_empty}, val: Value(<ZST>) }
    }

    bb4: {
        _6 = Not(move _7);               // scope 1 at cita-auth/src/handler.rs:255:20: 255:53
        switchInt(move _6) -> [0: bb6, otherwise: bb5]; // scope 1 at cita-auth/src/handler.rs:255:20: 255:53
    }

    bb5: {
        _5 = std::option::Option::<ChainId>::None; // scope 1 at cita-auth/src/handler.rs:256:21: 256:25
        goto -> bb30;                    // scope 1 at cita-auth/src/handler.rs:255:17: 260:18
    }

    bb6: {
        _10 = VerifyTxReq::get_chain_id(_2) -> bb7; // scope 1 at cita-auth/src/handler.rs:258:36: 258:54
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:258:40: 258:52
                                         // + literal: Const { ty: for<'a> fn(&'a VerifyTxReq) -> u32 {VerifyTxReq::get_chain_id}, val: Value(<ZST>) }
    }

    bb7: {
        _12 = _10;                       // scope 3 at cita-auth/src/handler.rs:259:38: 259:46
        _11 = ChainId::V0(move _12);     // scope 3 at cita-auth/src/handler.rs:259:26: 259:47
        _5 = std::option::Option::<ChainId>::Some(move _11); // scope 3 at cita-auth/src/handler.rs:259:21: 259:48
        goto -> bb30;                    // scope 1 at cita-auth/src/handler.rs:255:17: 260:18
    }

    bb8: {
        _14 = &_3;                       // scope 1 at cita-auth/src/handler.rs:262:13: 262:20
        _16 = (*_14);                    // scope 1 at cita-auth/src/handler.rs:262:24: 262:31
        _15 = Lt(move _16, const 3_u32); // scope 1 at cita-auth/src/handler.rs:262:24: 262:35
        switchInt(move _15) -> [0: bb10, otherwise: bb9]; // scope 1 at cita-auth/src/handler.rs:262:24: 262:35
    }

    bb9: {
        _13 = _3;                        // scope 1 at cita-auth/src/handler.rs:262:13: 262:20
        _18 = VerifyTxReq::get_chain_id(_2) -> bb14; // scope 4 at cita-auth/src/handler.rs:264:20: 264:38
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:264:24: 264:36
                                         // + literal: Const { ty: for<'a> fn(&'a VerifyTxReq) -> u32 {VerifyTxReq::get_chain_id}, val: Value(<ZST>) }
    }

    bb10: {
        _27 = log::Level::Error;         // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:67:14: 67:34
        _30 = &_27;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _71 = const _;                   // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::verify_tx_req_chain_id, [], Some(promoted[5])) }
        _29 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _30, _71) -> bb23; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb11: {
        _17 = const true;                // scope 4 at cita-auth/src/handler.rs:264:20: 264:80
        goto -> bb13;                    // scope 4 at cita-auth/src/handler.rs:264:20: 264:80
    }

    bb12: {
        _22 = VerifyTxReq::get_chain_id_v1(_2) -> bb15; // scope 4 at cita-auth/src/handler.rs:264:47: 264:68
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:264:51: 264:66
                                         // + literal: Const { ty: for<'a> fn(&'a VerifyTxReq) -> &'a [u8] {VerifyTxReq::get_chain_id_v1}, val: Value(<ZST>) }
    }

    bb13: {
        switchInt(move _17) -> [0: bb17, otherwise: bb16]; // scope 4 at cita-auth/src/handler.rs:264:20: 264:80
    }

    bb14: {
        switchInt(move _18) -> [0: bb12, otherwise: bb11]; // scope 4 at cita-auth/src/handler.rs:264:20: 264:80
    }

    bb15: {
        _21 = _22;                       // scope 4 at cita-auth/src/handler.rs:264:47: 264:74
        _20 = Len((*_21));               // scope 4 at cita-auth/src/handler.rs:264:47: 264:74
        _19 = Ne(move _20, const 32_usize); // scope 4 at cita-auth/src/handler.rs:264:47: 264:80
        _17 = move _19;                  // scope 4 at cita-auth/src/handler.rs:264:20: 264:80
        goto -> bb13;                    // scope 4 at cita-auth/src/handler.rs:264:20: 264:80
    }

    bb16: {
        _5 = std::option::Option::<ChainId>::None; // scope 4 at cita-auth/src/handler.rs:265:21: 265:25
        goto -> bb30;                    // scope 4 at cita-auth/src/handler.rs:264:17: 269:18
    }

    bb17: {
        _24 = VerifyTxReq::get_chain_id_v1(_2) -> bb18; // scope 4 at cita-auth/src/handler.rs:267:47: 267:68
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:267:51: 267:66
                                         // + literal: Const { ty: for<'a> fn(&'a VerifyTxReq) -> &'a [u8] {VerifyTxReq::get_chain_id_v1}, val: Value(<ZST>) }
    }

    bb18: {
        _23 = <U256 as From<&[u8]>>::from(move _24) -> bb19; // scope 4 at cita-auth/src/handler.rs:267:36: 267:69
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:267:36: 267:46
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[u8]) -> U256 {<U256 as From<&[u8]>>::from}, val: Value(<ZST>) }
    }

    bb19: {
        _26 = _23;                       // scope 5 at cita-auth/src/handler.rs:268:38: 268:46
        _25 = ChainId::V1(move _26);     // scope 5 at cita-auth/src/handler.rs:268:26: 268:47
        _5 = std::option::Option::<ChainId>::Some(move _25); // scope 5 at cita-auth/src/handler.rs:268:21: 268:48
        goto -> bb30;                    // scope 4 at cita-auth/src/handler.rs:264:17: 269:18
    }

    bb20: {
        _28 = const false;               // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb22;                    // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb21: {
        _32 = &_27;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _34 = log::max_level() -> bb24;  // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb22: {
        switchInt(move _28) -> [0: bb29, otherwise: bb26]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb23: {
        switchInt(move _29) -> [0: bb20, otherwise: bb21]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb24: {
        _33 = &_34;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _31 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _32, move _33) -> bb25; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb25: {
        _28 = move _31;                  // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb22;                    // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb26: {
        _70 = const _;                   // scope 6 at cita-auth/src/handler.rs:272:24: 272:48
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:272:24: 272:48
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(MsgHandler::verify_tx_req_chain_id, [], Some(promoted[4])) }
        _37 = _70 as &[&str] (Pointer(Unsize)); // scope 6 at cita-auth/src/handler.rs:272:24: 272:48
        _42 = &_3;                       // scope 6 at cita-auth/src/handler.rs:272:50: 272:57
        _41 = core::fmt::ArgumentV1::<'_>::new_display::<u32>(_42) -> bb27; // scope 6 at cita-auth/src/handler.rs:272:50: 272:57
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:272:50: 272:57
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b u32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u32>}, val: Value(<ZST>) }
    }

    bb27: {
        _40 = [move _41];                // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _39 = &_40;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _38 = _39 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _36 = Arguments::<'_>::new_v1(move _37, move _38) -> bb28; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb28: {
        _69 = const _;                   // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::verify_tx_req_chain_id, [], Some(promoted[3])) }
        _35 = log::__private_api_log(move _36, _27, _69) -> bb29; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb29: {
        _5 = std::option::Option::<ChainId>::None; // scope 1 at cita-auth/src/handler.rs:273:17: 273:21
        goto -> bb30;                    // scope 1 at cita-auth/src/handler.rs:273:17: 273:21
    }

    bb30: {
        _44 = &_5;                       // scope 2 at cita-auth/src/handler.rs:277:12: 277:20
        _45 = &((*_1).3: std::option::Option<handler::ChainId>); // scope 2 at cita-auth/src/handler.rs:277:24: 277:37
        _43 = <std::option::Option<ChainId> as PartialEq>::ne(move _44, move _45) -> bb31; // scope 2 at cita-auth/src/handler.rs:277:12: 277:37
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:277:12: 277:37
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a std::option::Option<ChainId>, &'b std::option::Option<ChainId>) -> bool {<std::option::Option<ChainId> as PartialEq>::ne}, val: Value(<ZST>) }
    }

    bb31: {
        switchInt(move _43) -> [0: bb45, otherwise: bb32]; // scope 2 at cita-auth/src/handler.rs:277:12: 277:37
    }

    bb32: {
        _46 = log::Level::Trace;         // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _49 = &_46;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _68 = const _;                   // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::verify_tx_req_chain_id, [], Some(promoted[2])) }
        _48 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _49, _68) -> bb36; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb33: {
        _47 = const false;               // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb35;                    // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb34: {
        _51 = &_46;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _53 = log::max_level() -> bb37;  // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb35: {
        switchInt(move _47) -> [0: bb44, otherwise: bb39]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb36: {
        switchInt(move _48) -> [0: bb33, otherwise: bb34]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb37: {
        _52 = &_53;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _50 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _51, move _52) -> bb38; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb38: {
        _47 = move _50;                  // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb35;                    // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb39: {
        _67 = const _;                   // scope 7 at cita-auth/src/handler.rs:279:17: 279:55
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:279:17: 279:55
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(MsgHandler::verify_tx_req_chain_id, [], Some(promoted[1])) }
        _56 = _67 as &[&str] (Pointer(Unsize)); // scope 7 at cita-auth/src/handler.rs:279:17: 279:55
        _63 = move _5;                   // scope 7 at cita-auth/src/handler.rs:280:17: 280:25
        _62 = std::option::Option::<ChainId>::unwrap(move _63) -> bb40; // scope 7 at cita-auth/src/handler.rs:280:17: 280:34
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:280:26: 280:32
                                         // + literal: Const { ty: fn(std::option::Option<ChainId>) -> ChainId {std::option::Option::<ChainId>::unwrap}, val: Value(<ZST>) }
    }

    bb40: {
        _61 = &_62;                      // scope 7 at cita-auth/src/handler.rs:280:17: 280:34
        _60 = core::fmt::ArgumentV1::<'_>::new_debug::<ChainId>(_61) -> bb41; // scope 7 at cita-auth/src/handler.rs:280:17: 280:34
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:280:17: 280:34
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'b> fn(&'b ChainId) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<ChainId>}, val: Value(<ZST>) }
    }

    bb41: {
        _65 = &((*_1).3: std::option::Option<handler::ChainId>); // scope 7 at cita-auth/src/handler.rs:281:17: 281:30
        _64 = core::fmt::ArgumentV1::<'_>::new_debug::<std::option::Option<ChainId>>(_65) -> bb42; // scope 7 at cita-auth/src/handler.rs:281:17: 281:30
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:281:17: 281:30
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: for<'b> fn(&'b std::option::Option<ChainId>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<std::option::Option<ChainId>>}, val: Value(<ZST>) }
    }

    bb42: {
        _59 = [move _60, move _64];      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _58 = &_59;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _57 = _58 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _55 = Arguments::<'_>::new_v1(move _56, move _57) -> bb43; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb43: {
        _66 = const _;                   // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::verify_tx_req_chain_id, [], Some(promoted[0])) }
        _54 = log::__private_api_log(move _55, _46, _66) -> bb44; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb44: {
        _0 = const Result::<(), transaction_verify::Error>::Err(transaction_verify::Error::BadChainId); // scope 2 at cita-auth/src/handler.rs:283:20: 283:42
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: Result<(), transaction_verify::Error>, val: Value(Scalar(0x06)) }
        goto -> bb46;                    // scope 0 at cita-auth/src/handler.rs:287:6: 287:6
    }

    bb45: {
        _0 = const Result::<(), transaction_verify::Error>::Ok(()); // scope 2 at cita-auth/src/handler.rs:286:9: 286:15
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: Result<(), transaction_verify::Error>, val: Value(Scalar(0x0b)) }
        goto -> bb46;                    // scope 0 at cita-auth/src/handler.rs:287:6: 287:6
    }

    bb46: {
        return;                          // scope 0 at cita-auth/src/handler.rs:287:6: 287:6
    }
}

promoted[0] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::verify_tx_req_chain_id: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:278:13: 282:14
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:278:13: 282:14

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:278:13: 282:14
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:278:13: 282:14
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:278:13: 282:14
        _1 = (move _2, move _4, move _6, const 278_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::verify_tx_req_chain_id: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-auth/src/handler.rs:279:17: 279:55
    let mut _1: [&str; 2];               // in scope 0 at cita-auth/src/handler.rs:279:17: 279:55

    bb0: {
        _1 = [const "tx chain_id ", const ", self.chain_id "]; // scope 0 at cita-auth/src/handler.rs:279:17: 279:55
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:279:17: 279:55
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:279:17: 279:55
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:279:17: 279:55
        return;                          // scope 0 at cita-auth/src/handler.rs:279:17: 279:55
    }
}

promoted[2] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::verify_tx_req_chain_id: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[3] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::verify_tx_req_chain_id: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:272:17: 272:58
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:272:17: 272:58

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:272:17: 272:58
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:272:17: 272:58
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:272:17: 272:58
        _1 = (move _2, move _4, move _6, const 272_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[4] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::verify_tx_req_chain_id: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-auth/src/handler.rs:272:24: 272:48
    let mut _1: [&str; 2];               // in scope 0 at cita-auth/src/handler.rs:272:24: 272:48

    bb0: {
        _1 = [const "unexpected version ", const "!"]; // scope 0 at cita-auth/src/handler.rs:272:24: 272:48
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:272:24: 272:48
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:272:24: 272:48
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:272:24: 272:48
        return;                          // scope 0 at cita-auth/src/handler.rs:272:24: 272:48
    }
}

promoted[5] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::verify_tx_req_chain_id: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::verify_tx_req(_1: &MsgHandler, _2: &VerifyTxReq) -> Result<(), transaction_verify::Error> {
    debug self => _1;                    // in scope 0 at cita-auth/src/handler.rs:290:22: 290:27
    debug req => _2;                     // in scope 0 at cita-auth/src/handler.rs:290:29: 290:32
    let mut _0: std::result::Result<(), transaction_verify::Error>; // return place in scope 0 at cita-auth/src/handler.rs:290:51: 290:68
    let _3: std::result::Result<(), transaction_verify::Error>; // in scope 0 at cita-auth/src/handler.rs:291:13: 291:16
    let mut _4: bool;                    // in scope 0 at cita-auth/src/handler.rs:292:12: 292:24
    let mut _5: &std::result::Result<(), transaction_verify::Error>; // in scope 0 at cita-auth/src/handler.rs:292:12: 292:24
    let mut _6: bool;                    // in scope 0 at cita-auth/src/handler.rs:296:12: 296:39
    let mut _7: usize;                   // in scope 0 at cita-auth/src/handler.rs:296:12: 296:33
    let mut _8: &str;                    // in scope 0 at cita-auth/src/handler.rs:296:12: 296:33
    let _9: &str;                        // in scope 0 at cita-auth/src/handler.rs:296:12: 296:27
    let mut _10: usize;                  // in scope 0 at cita-auth/src/handler.rs:300:12: 300:33
    let mut _11: &[u8];                  // in scope 0 at cita-auth/src/handler.rs:300:12: 300:33
    let _12: &[u8];                      // in scope 0 at cita-auth/src/handler.rs:300:12: 300:27
    let mut _13: bool;                   // in scope 0 at cita-auth/src/handler.rs:304:12: 308:38
    let mut _14: std::option::Option<bool>; // in scope 0 at cita-auth/src/handler.rs:304:12: 307:92
    let mut _15: std::option::Option<cita_types::H160>; // in scope 0 at cita-auth/src/handler.rs:304:12: 306:27
    let mut _16: [closure@cita-auth/src/handler.rs:307:18: 307:25]; // in scope 0 at cita-auth/src/handler.rs:307:18: 307:91
    let mut _17: &&libproto::VerifyTxReq; // in scope 0 at cita-auth/src/handler.rs:307:18: 307:91
    let mut _20: &history::HistoryHeights; // in scope 0 at cita-auth/src/handler.rs:314:27: 314:61
    let mut _21: bool;                   // in scope 0 at cita-auth/src/handler.rs:315:12: 315:94
    let mut _22: bool;                   // in scope 0 at cita-auth/src/handler.rs:315:12: 315:43
    let mut _23: u64;                    // in scope 0 at cita-auth/src/handler.rs:315:12: 315:29
    let mut _24: u64;                    // in scope 0 at cita-auth/src/handler.rs:315:32: 315:43
    let mut _25: bool;                   // in scope 0 at cita-auth/src/handler.rs:315:47: 315:94
    let mut _26: u64;                    // in scope 0 at cita-auth/src/handler.rs:315:47: 315:64
    let mut _27: u64;                    // in scope 0 at cita-auth/src/handler.rs:315:68: 315:94
    let mut _28: u64;                    // in scope 0 at cita-auth/src/handler.rs:315:69: 315:80
    let mut _29: (u64, bool);            // in scope 0 at cita-auth/src/handler.rs:315:68: 315:94
    let mut _31: &[u8];                  // in scope 0 at cita-auth/src/handler.rs:319:40: 319:57
    let _32: &[u8];                      // in scope 0 at cita-auth/src/handler.rs:319:40: 319:57
    let mut _33: std::collections::hash_map::Iter<'_, u64, std::collections::HashSet<cita_types::H256>>; // in scope 0 at cita-auth/src/handler.rs:320:33: 320:53
    let mut _34: &std::collections::HashMap<u64, std::collections::HashSet<cita_types::H256>>; // in scope 0 at cita-auth/src/handler.rs:320:33: 320:53
    let mut _36: std::option::Option<(&u64, &std::collections::HashSet<cita_types::H256>)>; // in scope 0 at cita-auth/src/handler.rs:320:33: 320:53
    let mut _37: &mut std::collections::hash_map::Iter<'_, u64, std::collections::HashSet<cita_types::H256>>; // in scope 0 at cita-auth/src/handler.rs:320:33: 320:53
    let mut _38: isize;                  // in scope 0 at cita-auth/src/handler.rs:320:9: 329:10
    let mut _41: bool;                   // in scope 0 at cita-auth/src/handler.rs:321:16: 321:41
    let _42: &cita_types::H256;          // in scope 0 at cita-auth/src/handler.rs:321:32: 321:40
    let mut _44: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _45: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _46: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _47: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _48: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _49: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _50: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _51: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _52: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _53: &[&str];                // in scope 0 at cita-auth/src/handler.rs:323:21: 323:73
    let mut _54: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _55: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _56: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _57: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:324:21: 324:28
    let _58: &cita_types::H256;          // in scope 0 at cita-auth/src/handler.rs:324:21: 324:28
    let mut _59: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:325:21: 325:27
    let _60: &&u64;                      // in scope 0 at cita-auth/src/handler.rs:325:21: 325:27
    let mut _61: bool;                   // in scope 0 at cita-auth/src/handler.rs:331:12: 331:68
    let mut _62: bool;                   // in scope 0 at cita-auth/src/handler.rs:331:13: 331:68
    let mut _63: u64;                    // in scope 0 at cita-auth/src/handler.rs:331:34: 331:49
    let mut _64: &[u8];                  // in scope 0 at cita-auth/src/handler.rs:331:51: 331:67
    let _65: &[u8];                      // in scope 0 at cita-auth/src/handler.rs:331:51: 331:67
    scope 1 {
        debug ret => _3;                 // in scope 1 at cita-auth/src/handler.rs:291:13: 291:16
        let _18: u64;                    // in scope 1 at cita-auth/src/handler.rs:313:13: 313:30
        scope 2 {
            debug valid_until_block => _18; // in scope 2 at cita-auth/src/handler.rs:313:13: 313:30
            let _19: u64;                // in scope 2 at cita-auth/src/handler.rs:314:13: 314:24
            scope 3 {
                debug next_height => _19; // in scope 3 at cita-auth/src/handler.rs:314:13: 314:24
                let _30: cita_types::H256; // in scope 3 at cita-auth/src/handler.rs:319:13: 319:20
                scope 4 {
                    debug tx_hash => _30; // in scope 4 at cita-auth/src/handler.rs:319:13: 319:20
                    let mut _35: std::collections::hash_map::Iter<'_, u64, std::collections::HashSet<cita_types::H256>>; // in scope 4 at cita-auth/src/handler.rs:320:33: 320:53
                    scope 5 {
                        debug iter => _35; // in scope 5 at cita-auth/src/handler.rs:320:33: 320:53
                        let _39: &u64;   // in scope 5 at cita-auth/src/handler.rs:320:14: 320:20
                        let _40: &std::collections::HashSet<cita_types::H256>; // in scope 5 at cita-auth/src/handler.rs:320:22: 320:28
                        scope 6 {
                            debug height => _39; // in scope 6 at cita-auth/src/handler.rs:320:14: 320:20
                            debug hashes => _40; // in scope 6 at cita-auth/src/handler.rs:320:22: 320:28
                            let _43: log::Level; // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                            scope 7 {
                                debug lvl => _43; // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                                let mut _66: &(&str, &str, &str, u32); // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                let mut _67: &[&str; 2]; // in scope 7 at cita-auth/src/handler.rs:323:21: 323:73
                                let mut _68: &log::LevelFilter; // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _3 = MsgHandler::verify_tx_req_chain_id(_1, _2) -> bb1; // scope 0 at cita-auth/src/handler.rs:291:19: 291:51
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:291:24: 291:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a MsgHandler, &'b VerifyTxReq) -> Result<(), transaction_verify::Error> {MsgHandler::verify_tx_req_chain_id}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = &_3;                        // scope 1 at cita-auth/src/handler.rs:292:12: 292:24
        _4 = Result::<(), transaction_verify::Error>::is_err(move _5) -> bb2; // scope 1 at cita-auth/src/handler.rs:292:12: 292:24
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:292:16: 292:22
                                         // + literal: Const { ty: for<'a> fn(&'a Result<(), transaction_verify::Error>) -> bool {Result::<(), transaction_verify::Error>::is_err}, val: Value(<ZST>) }
    }

    bb2: {
        switchInt(move _4) -> [0: bb4, otherwise: bb3]; // scope 1 at cita-auth/src/handler.rs:292:12: 292:24
    }

    bb3: {
        _0 = move _3;                    // scope 1 at cita-auth/src/handler.rs:293:20: 293:23
        goto -> bb50;                    // scope 1 at no-location
    }

    bb4: {
        _9 = VerifyTxReq::get_nonce(_2) -> bb5; // scope 1 at cita-auth/src/handler.rs:296:12: 296:27
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:296:16: 296:25
                                         // + literal: Const { ty: for<'a> fn(&'a VerifyTxReq) -> &'a str {VerifyTxReq::get_nonce}, val: Value(<ZST>) }
    }

    bb5: {
        _8 = _9;                         // scope 1 at cita-auth/src/handler.rs:296:12: 296:33
        _7 = core::str::<impl str>::len(move _8) -> bb6; // scope 1 at cita-auth/src/handler.rs:296:12: 296:33
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:296:28: 296:31
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> usize {core::str::<impl str>::len}, val: Value(<ZST>) }
    }

    bb6: {
        _6 = Gt(move _7, const 128_usize); // scope 1 at cita-auth/src/handler.rs:296:12: 296:39
        switchInt(move _6) -> [0: bb8, otherwise: bb7]; // scope 1 at cita-auth/src/handler.rs:296:12: 296:39
    }

    bb7: {
        _0 = const Result::<(), transaction_verify::Error>::Err(transaction_verify::Error::InvalidNonce); // scope 1 at cita-auth/src/handler.rs:297:20: 297:44
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: Result<(), transaction_verify::Error>, val: Value(Scalar(0x00)) }
        goto -> bb50;                    // scope 1 at no-location
    }

    bb8: {
        _12 = VerifyTxReq::get_value(_2) -> bb9; // scope 1 at cita-auth/src/handler.rs:300:12: 300:27
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:300:16: 300:25
                                         // + literal: Const { ty: for<'a> fn(&'a VerifyTxReq) -> &'a [u8] {VerifyTxReq::get_value}, val: Value(<ZST>) }
    }

    bb9: {
        _11 = _12;                       // scope 1 at cita-auth/src/handler.rs:300:12: 300:33
        _10 = Len((*_11));               // scope 1 at cita-auth/src/handler.rs:300:12: 300:33
        switchInt(move _10) -> [32: bb11, otherwise: bb10]; // scope 1 at cita-auth/src/handler.rs:300:12: 300:39
    }

    bb10: {
        _0 = const Result::<(), transaction_verify::Error>::Err(transaction_verify::Error::InvalidValue); // scope 1 at cita-auth/src/handler.rs:301:20: 301:44
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: Result<(), transaction_verify::Error>, val: Value(Scalar(0x09)) }
        goto -> bb50;                    // scope 1 at no-location
    }

    bb11: {
        _15 = (((*_1).12: handler::SysConfigInfo).3: std::option::Option<cita_types::H160>); // scope 1 at cita-auth/src/handler.rs:304:12: 306:27
        _17 = &_2;                       // scope 1 at cita-auth/src/handler.rs:307:18: 307:91
        _16 = [closure@cita-auth/src/handler.rs:307:18: 307:25] { req: move _17 }; // scope 1 at cita-auth/src/handler.rs:307:18: 307:91
                                         // closure
                                         // + def_id: DefId(0:272 ~ cita_auth[81d6]::handler::{impl#0}::verify_tx_req::{closure#0})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn((cita_types::H160,)) -> bool,
                                         //     (&&libproto::VerifyTxReq,),
                                         // ]
        _14 = std::option::Option::<H160>::map::<bool, [closure@cita-auth/src/handler.rs:307:18: 307:25]>(move _15, move _16) -> bb12; // scope 1 at cita-auth/src/handler.rs:304:12: 307:92
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:307:14: 307:17
                                         // + literal: Const { ty: fn(std::option::Option<H160>, [closure@cita-auth/src/handler.rs:307:18: 307:25]) -> std::option::Option<bool> {std::option::Option::<H160>::map::<bool, [closure@cita-auth/src/handler.rs:307:18: 307:25]>}, val: Value(<ZST>) }
    }

    bb12: {
        _13 = std::option::Option::<bool>::unwrap_or_else::<[closure@cita-auth/src/handler.rs:308:29: 308:31]>(move _14, const ZeroSized: [closure@cita-auth/src/handler.rs:308:29: 308:31]) -> bb13; // scope 1 at cita-auth/src/handler.rs:304:12: 308:38
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:308:14: 308:28
                                         // + literal: Const { ty: fn(std::option::Option<bool>, [closure@cita-auth/src/handler.rs:308:29: 308:31]) -> bool {std::option::Option::<bool>::unwrap_or_else::<[closure@cita-auth/src/handler.rs:308:29: 308:31]>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: [closure@cita-auth/src/handler.rs:308:29: 308:31], val: Value(<ZST>) }
    }

    bb13: {
        switchInt(move _13) -> [0: bb15, otherwise: bb14]; // scope 1 at cita-auth/src/handler.rs:304:12: 308:38
    }

    bb14: {
        _0 = const Result::<(), transaction_verify::Error>::Err(transaction_verify::Error::Forbidden); // scope 1 at cita-auth/src/handler.rs:310:20: 310:41
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: Result<(), transaction_verify::Error>, val: Value(Scalar(0x08)) }
        goto -> bb50;                    // scope 1 at no-location
    }

    bb15: {
        _18 = VerifyTxReq::get_valid_until_block(_2) -> bb16; // scope 1 at cita-auth/src/handler.rs:313:33: 313:60
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:313:37: 313:58
                                         // + literal: Const { ty: for<'a> fn(&'a VerifyTxReq) -> u64 {VerifyTxReq::get_valid_until_block}, val: Value(<ZST>) }
    }

    bb16: {
        _20 = &((*_1).4: history::HistoryHeights); // scope 2 at cita-auth/src/handler.rs:314:27: 314:61
        _19 = HistoryHeights::next_height(move _20) -> bb17; // scope 2 at cita-auth/src/handler.rs:314:27: 314:61
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:314:48: 314:59
                                         // + literal: Const { ty: for<'a> fn(&'a HistoryHeights) -> u64 {HistoryHeights::next_height}, val: Value(<ZST>) }
    }

    bb17: {
        _23 = _18;                       // scope 3 at cita-auth/src/handler.rs:315:12: 315:29
        _24 = _19;                       // scope 3 at cita-auth/src/handler.rs:315:32: 315:43
        _22 = Lt(move _23, move _24);    // scope 3 at cita-auth/src/handler.rs:315:12: 315:43
        switchInt(move _22) -> [0: bb19, otherwise: bb18]; // scope 3 at cita-auth/src/handler.rs:315:12: 315:94
    }

    bb18: {
        _21 = const true;                // scope 3 at cita-auth/src/handler.rs:315:12: 315:94
        goto -> bb20;                    // scope 3 at cita-auth/src/handler.rs:315:12: 315:94
    }

    bb19: {
        _26 = _18;                       // scope 3 at cita-auth/src/handler.rs:315:47: 315:64
        _28 = _19;                       // scope 3 at cita-auth/src/handler.rs:315:69: 315:80
        _29 = CheckedAdd(_28, const _);  // scope 3 at cita-auth/src/handler.rs:315:68: 315:94
        assert(!move (_29.1: bool), "attempt to compute `{} + {}`, which would overflow", move _28, const _) -> bb21; // scope 3 at cita-auth/src/handler.rs:315:68: 315:94
    }

    bb20: {
        switchInt(move _21) -> [0: bb23, otherwise: bb22]; // scope 3 at cita-auth/src/handler.rs:315:12: 315:94
    }

    bb21: {
        _27 = move (_29.0: u64);         // scope 3 at cita-auth/src/handler.rs:315:68: 315:94
        _25 = Ge(move _26, move _27);    // scope 3 at cita-auth/src/handler.rs:315:47: 315:94
        _21 = move _25;                  // scope 3 at cita-auth/src/handler.rs:315:12: 315:94
        goto -> bb20;                    // scope 3 at cita-auth/src/handler.rs:315:12: 315:94
    }

    bb22: {
        _0 = const Result::<(), transaction_verify::Error>::Err(transaction_verify::Error::InvalidUntilBlock); // scope 3 at cita-auth/src/handler.rs:316:20: 316:49
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: Result<(), transaction_verify::Error>, val: Value(Scalar(0x02)) }
        goto -> bb50;                    // scope 3 at no-location
    }

    bb23: {
        _32 = VerifyTxReq::get_tx_hash(_2) -> bb24; // scope 3 at cita-auth/src/handler.rs:319:40: 319:57
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:319:44: 319:55
                                         // + literal: Const { ty: for<'a> fn(&'a VerifyTxReq) -> &'a [u8] {VerifyTxReq::get_tx_hash}, val: Value(<ZST>) }
    }

    bb24: {
        _31 = _32;                       // scope 3 at cita-auth/src/handler.rs:319:40: 319:57
        _30 = H256::from_slice(move _31) -> bb25; // scope 3 at cita-auth/src/handler.rs:319:23: 319:58
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:319:23: 319:39
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> H256 {H256::from_slice}, val: Value(<ZST>) }
    }

    bb25: {
        _34 = &((*_1).5: std::collections::HashMap<u64, std::collections::HashSet<cita_types::H256>>); // scope 4 at cita-auth/src/handler.rs:320:33: 320:53
        _33 = <&HashMap<u64, HashSet<H256>> as IntoIterator>::into_iter(move _34) -> bb26; // scope 4 at cita-auth/src/handler.rs:320:33: 320:53
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:320:33: 320:53
                                         // + literal: Const { ty: fn(&HashMap<u64, HashSet<H256>>) -> <&HashMap<u64, HashSet<H256>> as IntoIterator>::IntoIter {<&HashMap<u64, HashSet<H256>> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb26: {
        _35 = move _33;                  // scope 4 at cita-auth/src/handler.rs:320:33: 320:53
        goto -> bb27;                    // scope 5 at cita-auth/src/handler.rs:320:9: 329:10
    }

    bb27: {
        _37 = &mut _35;                  // scope 5 at cita-auth/src/handler.rs:320:33: 320:53
        _36 = <std::collections::hash_map::Iter<'_, u64, HashSet<H256>> as Iterator>::next(_37) -> bb28; // scope 5 at cita-auth/src/handler.rs:320:33: 320:53
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:320:33: 320:53
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::collections::hash_map::Iter<'_, u64, HashSet<H256>>) -> std::option::Option<<std::collections::hash_map::Iter<'_, u64, HashSet<H256>> as Iterator>::Item> {<std::collections::hash_map::Iter<'_, u64, HashSet<H256>> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb28: {
        _38 = discriminant(_36);         // scope 5 at cita-auth/src/handler.rs:320:33: 320:53
        switchInt(move _38) -> [0: bb31, 1: bb29, otherwise: bb30]; // scope 5 at cita-auth/src/handler.rs:320:33: 320:53
    }

    bb29: {
        _39 = (((_36 as Some).0: (&u64, &std::collections::HashSet<cita_types::H256>)).0: &u64); // scope 5 at cita-auth/src/handler.rs:320:14: 320:20
        _40 = (((_36 as Some).0: (&u64, &std::collections::HashSet<cita_types::H256>)).1: &std::collections::HashSet<cita_types::H256>); // scope 5 at cita-auth/src/handler.rs:320:22: 320:28
        _42 = &_30;                      // scope 6 at cita-auth/src/handler.rs:321:32: 321:40
        _41 = HashSet::<H256>::contains::<H256>(_40, _42) -> bb32; // scope 6 at cita-auth/src/handler.rs:321:16: 321:41
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:321:23: 321:31
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a HashSet<H256>, &'b H256) -> bool {HashSet::<H256>::contains::<H256>}, val: Value(<ZST>) }
    }

    bb30: {
        unreachable;                     // scope 5 at cita-auth/src/handler.rs:320:33: 320:53
    }

    bb31: {
        _63 = VerifyTxReq::get_quota(_2) -> bb45; // scope 4 at cita-auth/src/handler.rs:331:34: 331:49
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:331:38: 331:47
                                         // + literal: Const { ty: for<'a> fn(&'a VerifyTxReq) -> u64 {VerifyTxReq::get_quota}, val: Value(<ZST>) }
    }

    bb32: {
        switchInt(move _41) -> [0: bb27, otherwise: bb33]; // scope 6 at cita-auth/src/handler.rs:321:16: 321:41
    }

    bb33: {
        _43 = log::Level::Trace;         // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _46 = &_43;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _68 = const _;                   // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::verify_tx_req, [], Some(promoted[2])) }
        _45 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _46, _68) -> bb37; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb34: {
        _44 = const false;               // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb36;                    // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb35: {
        _48 = &_43;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _50 = log::max_level() -> bb38;  // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb36: {
        switchInt(move _44) -> [0: bb44, otherwise: bb40]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb37: {
        switchInt(move _45) -> [0: bb34, otherwise: bb35]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb38: {
        _49 = &_50;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _47 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _48, move _49) -> bb39; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb39: {
        _44 = move _47;                  // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb36;                    // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb40: {
        _67 = const _;                   // scope 7 at cita-auth/src/handler.rs:323:21: 323:73
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:323:21: 323:73
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(MsgHandler::verify_tx_req, [], Some(promoted[1])) }
        _53 = _67 as &[&str] (Pointer(Unsize)); // scope 7 at cita-auth/src/handler.rs:323:21: 323:73
        _58 = &_30;                      // scope 7 at cita-auth/src/handler.rs:324:21: 324:28
        _57 = core::fmt::ArgumentV1::<'_>::new_debug::<H256>(_58) -> bb41; // scope 7 at cita-auth/src/handler.rs:324:21: 324:28
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:324:21: 324:28
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b H256) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<H256>}, val: Value(<ZST>) }
    }

    bb41: {
        _60 = &_39;                      // scope 7 at cita-auth/src/handler.rs:325:21: 325:27
        _59 = core::fmt::ArgumentV1::<'_>::new_display::<&u64>(_60) -> bb42; // scope 7 at cita-auth/src/handler.rs:325:21: 325:27
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:325:21: 325:27
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b &u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<&u64>}, val: Value(<ZST>) }
    }

    bb42: {
        _56 = [move _57, move _59];      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _55 = &_56;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _54 = _55 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _52 = Arguments::<'_>::new_v1(move _53, move _54) -> bb43; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb43: {
        _66 = const _;                   // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::verify_tx_req, [], Some(promoted[0])) }
        _51 = log::__private_api_log(move _52, _43, _66) -> bb44; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb44: {
        _0 = const Result::<(), transaction_verify::Error>::Err(transaction_verify::Error::Dup); // scope 6 at cita-auth/src/handler.rs:327:24: 327:39
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: Result<(), transaction_verify::Error>, val: Value(Scalar(0x01)) }
        goto -> bb50;                    // scope 4 at no-location
    }

    bb45: {
        _65 = VerifyTxReq::get_signer(_2) -> bb46; // scope 4 at cita-auth/src/handler.rs:331:51: 331:67
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:331:55: 331:65
                                         // + literal: Const { ty: for<'a> fn(&'a VerifyTxReq) -> &'a [u8] {VerifyTxReq::get_signer}, val: Value(<ZST>) }
    }

    bb46: {
        _64 = _65;                       // scope 4 at cita-auth/src/handler.rs:331:51: 331:67
        _62 = MsgHandler::verify_tx_quota(_1, move _63, move _64) -> bb47; // scope 4 at cita-auth/src/handler.rs:331:13: 331:68
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:331:18: 331:33
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a MsgHandler, u64, &'b [u8]) -> bool {MsgHandler::verify_tx_quota}, val: Value(<ZST>) }
    }

    bb47: {
        _61 = Not(move _62);             // scope 4 at cita-auth/src/handler.rs:331:12: 331:68
        switchInt(move _61) -> [0: bb49, otherwise: bb48]; // scope 4 at cita-auth/src/handler.rs:331:12: 331:68
    }

    bb48: {
        _0 = const Result::<(), transaction_verify::Error>::Err(transaction_verify::Error::QuotaNotEnough); // scope 4 at cita-auth/src/handler.rs:332:20: 332:46
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: Result<(), transaction_verify::Error>, val: Value(Scalar(0x07)) }
        goto -> bb50;                    // scope 4 at no-location
    }

    bb49: {
        _0 = const Result::<(), transaction_verify::Error>::Ok(()); // scope 4 at cita-auth/src/handler.rs:335:9: 335:15
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: Result<(), transaction_verify::Error>, val: Value(Scalar(0x0b)) }
        goto -> bb50;                    // scope 0 at cita-auth/src/handler.rs:336:6: 336:6
    }

    bb50: {
        return;                          // scope 0 at cita-auth/src/handler.rs:336:6: 336:6
    }
}

promoted[0] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::verify_tx_req: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:322:17: 326:18
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:322:17: 326:18

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:322:17: 326:18
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:322:17: 326:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:322:17: 326:18
        _1 = (move _2, move _4, move _6, const 322_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::verify_tx_req: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-auth/src/handler.rs:323:21: 323:73
    let mut _1: [&str; 2];               // in scope 0 at cita-auth/src/handler.rs:323:21: 323:73

    bb0: {
        _1 = [const "Tx with hash ", const " has already existed in height:"]; // scope 0 at cita-auth/src/handler.rs:323:21: 323:73
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:323:21: 323:73
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:323:21: 323:73
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:323:21: 323:73
        return;                          // scope 0 at cita-auth/src/handler.rs:323:21: 323:73
    }
}

promoted[2] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::verify_tx_req: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::verify_tx_req::{closure#0}(_1: [closure@cita-auth/src/handler.rs:307:18: 307:25], _2: H160) -> bool {
    debug admin => _2;                   // in scope 0 at cita-auth/src/handler.rs:307:19: 307:24
    debug req => (*(_1.0: &&libproto::VerifyTxReq)); // in scope 0 at cita-auth/src/handler.rs:290:29: 290:32
    let mut _0: bool;                    // return place in scope 0 at cita-auth/src/handler.rs:307:26: 307:26
    let mut _3: &cita_types::H160;       // in scope 0 at cita-auth/src/handler.rs:307:26: 307:82
    let _4: cita_types::H160;            // in scope 0 at cita-auth/src/handler.rs:307:26: 307:82
    let _5: &cita_types::H512;           // in scope 0 at cita-auth/src/handler.rs:307:44: 307:81
    let _6: cita_types::H512;            // in scope 0 at cita-auth/src/handler.rs:307:45: 307:81
    let mut _7: &[u8];                   // in scope 0 at cita-auth/src/handler.rs:307:64: 307:80
    let _8: &[u8];                       // in scope 0 at cita-auth/src/handler.rs:307:64: 307:80
    let mut _9: &cita_types::H160;       // in scope 0 at cita-auth/src/handler.rs:307:86: 307:91
    let mut _10: &&libproto::VerifyTxReq; // in scope 0 at cita-auth/src/handler.rs:307:18: 307:91
    let mut _11: &libproto::VerifyTxReq; // in scope 0 at cita-auth/src/handler.rs:307:18: 307:91

    bb0: {
        _10 = deref_copy (_1.0: &&libproto::VerifyTxReq); // scope 0 at cita-auth/src/handler.rs:307:64: 307:80
        _11 = deref_copy (*_10);         // scope 0 at cita-auth/src/handler.rs:307:64: 307:80
        _8 = VerifyTxReq::get_signer(_11) -> bb1; // scope 0 at cita-auth/src/handler.rs:307:64: 307:80
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:307:68: 307:78
                                         // + literal: Const { ty: for<'a> fn(&'a VerifyTxReq) -> &'a [u8] {VerifyTxReq::get_signer}, val: Value(<ZST>) }
    }

    bb1: {
        _7 = _8;                         // scope 0 at cita-auth/src/handler.rs:307:64: 307:80
        _6 = H512::from_slice(move _7) -> bb2; // scope 0 at cita-auth/src/handler.rs:307:45: 307:81
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:307:45: 307:63
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> H512 {H512::from_slice}, val: Value(<ZST>) }
    }

    bb2: {
        _5 = &_6;                        // scope 0 at cita-auth/src/handler.rs:307:44: 307:81
        _4 = pubkey_to_address(_5) -> bb3; // scope 0 at cita-auth/src/handler.rs:307:26: 307:82
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:307:26: 307:43
                                         // + literal: Const { ty: for<'a> fn(&'a H512) -> H160 {pubkey_to_address}, val: Value(<ZST>) }
    }

    bb3: {
        _3 = &_4;                        // scope 0 at cita-auth/src/handler.rs:307:26: 307:82
        _9 = &_2;                        // scope 0 at cita-auth/src/handler.rs:307:86: 307:91
        _0 = <H160 as PartialEq>::ne(move _3, move _9) -> bb4; // scope 0 at cita-auth/src/handler.rs:307:26: 307:91
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:307:26: 307:91
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a H160, &'b H160) -> bool {<H160 as PartialEq>::ne}, val: Value(<ZST>) }
    }

    bb4: {
        return;                          // scope 0 at cita-auth/src/handler.rs:307:91: 307:91
    }
}

fn handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::verify_tx_req::{closure#1}(_1: [closure@cita-auth/src/handler.rs:308:29: 308:31]) -> bool {
    let mut _0: bool;                    // return place in scope 0 at cita-auth/src/handler.rs:308:32: 308:32

    bb0: {
        _0 = const false;                // scope 0 at cita-auth/src/handler.rs:308:32: 308:37
        return;                          // scope 0 at cita-auth/src/handler.rs:308:37: 308:37
    }
}

fn handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::publish_tx_failed_result(_1: &MsgHandler, _2: Vec<u8>, _3: &transaction_verify::Error) -> () {
    debug self => _1;                    // in scope 0 at cita-auth/src/handler.rs:338:33: 338:38
    debug request_id => _2;              // in scope 0 at cita-auth/src/handler.rs:338:40: 338:50
    debug ret => _3;                     // in scope 0 at cita-auth/src/handler.rs:338:61: 338:64
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/handler.rs:338:74: 338:74
    let _4: std::string::String;         // in scope 0 at cita-auth/src/handler.rs:339:13: 339:19
    let _5: std::string::String;         // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:13: 120:16
    let mut _6: std::fmt::Arguments<'_>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
    let mut _7: &[&str];                 // in scope 0 at cita-auth/src/handler.rs:339:30: 339:36
    let mut _8: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
    let _9: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
    let _10: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
    let mut _11: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:339:38: 339:41
    let _12: &&transaction_verify::Error; // in scope 0 at cita-auth/src/handler.rs:339:38: 339:41
    let _14: ();                         // in scope 0 at cita-auth/src/handler.rs:341:9: 341:44
    let mut _15: &mut libproto::Response; // in scope 0 at cita-auth/src/handler.rs:341:9: 341:44
    let mut _16: std::vec::Vec<u8>;      // in scope 0 at cita-auth/src/handler.rs:341:33: 341:43
    let _17: ();                         // in scope 0 at cita-auth/src/handler.rs:342:9: 342:54
    let mut _18: &mut libproto::Response; // in scope 0 at cita-auth/src/handler.rs:342:9: 342:54
    let mut _19: i64;                    // in scope 0 at cita-auth/src/handler.rs:342:27: 342:53
    let _20: ();                         // in scope 0 at cita-auth/src/handler.rs:343:9: 343:39
    let mut _21: &mut libproto::Response; // in scope 0 at cita-auth/src/handler.rs:343:9: 343:39
    let mut _22: std::string::String;    // in scope 0 at cita-auth/src/handler.rs:343:32: 343:38
    let mut _24: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _25: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _26: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _27: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _28: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _29: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _30: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _31: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _32: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _33: &[&str];                // in scope 0 at cita-auth/src/handler.rs:345:16: 345:38
    let mut _34: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _35: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _36: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _37: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:345:40: 345:48
    let _38: &libproto::Response;        // in scope 0 at cita-auth/src/handler.rs:345:40: 345:48
    let mut _40: libproto::Response;     // in scope 0 at cita-auth/src/handler.rs:346:28: 346:36
    let _41: ();                         // in scope 0 at cita-auth/src/handler.rs:347:9: 352:22
    let mut _42: std::result::Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>>; // in scope 0 at cita-auth/src/handler.rs:347:9: 351:15
    let mut _43: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-auth/src/handler.rs:347:9: 351:15
    let mut _44: (std::string::String, std::vec::Vec<u8>); // in scope 0 at cita-auth/src/handler.rs:348:19: 351:14
    let mut _45: std::string::String;    // in scope 0 at cita-auth/src/handler.rs:349:17: 349:54
    let mut _46: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _47: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _48: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _49: std::vec::Vec<u8>;      // in scope 0 at cita-auth/src/handler.rs:350:17: 350:40
    let mut _50: std::result::Result<std::vec::Vec<u8>, libproto::TryIntoConvertError>; // in scope 0 at cita-auth/src/handler.rs:350:17: 350:31
    let mut _51: libproto::Message;      // in scope 0 at cita-auth/src/handler.rs:350:17: 350:20
    let mut _55: &[&str; 1];             // in scope 0 at cita-auth/src/handler.rs:339:30: 339:36
    let mut _56: bool;                   // in scope 0 at cita-auth/src/handler.rs:353:5: 353:6
    let mut _57: bool;                   // in scope 0 at cita-auth/src/handler.rs:353:5: 353:6
    let mut _58: bool;                   // in scope 0 at cita-auth/src/handler.rs:353:5: 353:6
    let mut _59: bool;                   // in scope 0 at cita-auth/src/handler.rs:353:5: 353:6
    scope 1 {
        debug result => _4;              // in scope 1 at cita-auth/src/handler.rs:339:13: 339:19
        let mut _13: libproto::Response; // in scope 1 at cita-auth/src/handler.rs:340:13: 340:25
        scope 3 {
            debug response => _13;       // in scope 3 at cita-auth/src/handler.rs:340:13: 340:25
            let _23: log::Level;         // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let _39: libproto::Message;  // in scope 3 at cita-auth/src/handler.rs:346:13: 346:16
            scope 4 {
                debug lvl => _23;        // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _52: &(&str, &str, &str, u32); // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _53: &[&str; 1]; // in scope 4 at cita-auth/src/handler.rs:345:16: 345:38
                let mut _54: &log::LevelFilter; // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
            scope 5 {
                debug msg => _39;        // in scope 5 at cita-auth/src/handler.rs:346:13: 346:16
            }
        }
    }
    scope 2 {
        debug res => _5;                 // in scope 2 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:13: 120:16
    }

    bb0: {
        _57 = const false;               // scope 0 at cita-auth/src/handler.rs:339:13: 339:19
        _59 = const false;               // scope 0 at cita-auth/src/handler.rs:339:13: 339:19
        _58 = const false;               // scope 0 at cita-auth/src/handler.rs:339:13: 339:19
        _56 = const false;               // scope 0 at cita-auth/src/handler.rs:339:13: 339:19
        _59 = const true;                // scope 0 at cita-auth/src/handler.rs:339:13: 339:19
        _55 = const _;                   // scope 0 at cita-auth/src/handler.rs:339:30: 339:36
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:339:30: 339:36
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(MsgHandler::publish_tx_failed_result, [], Some(promoted[3])) }
        _7 = _55 as &[&str] (Pointer(Unsize)); // scope 0 at cita-auth/src/handler.rs:339:30: 339:36
        _12 = &_3;                       // scope 0 at cita-auth/src/handler.rs:339:38: 339:41
        _11 = core::fmt::ArgumentV1::<'_>::new_debug::<&transaction_verify::Error>(_12) -> [return: bb1, unwind: bb34]; // scope 0 at cita-auth/src/handler.rs:339:38: 339:41
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:339:38: 339:41
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b &transaction_verify::Error) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<&transaction_verify::Error>}, val: Value(<ZST>) }
    }

    bb1: {
        _10 = [move _11];                // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
        _9 = &_10;                       // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
        _8 = _9 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
        _6 = Arguments::<'_>::new_v1(move _7, move _8) -> [return: bb2, unwind: bb34]; // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:39: 120:79
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _5 = format(move _6) -> [return: bb3, unwind: bb34]; // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:19: 120:80
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:120:19: 120:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> std::string::String {format}, val: Value(<ZST>) }
    }

    bb3: {
        _58 = const true;                // scope 2 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:121:9: 121:12
        _4 = move _5;                    // scope 2 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:121:9: 121:12
        _13 = libproto::Response::new() -> [return: bb4, unwind: bb26]; // scope 1 at cita-auth/src/handler.rs:340:28: 340:43
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:340:28: 340:41
                                         // + literal: Const { ty: fn() -> libproto::Response {libproto::Response::new}, val: Value(<ZST>) }
    }

    bb4: {
        _57 = const true;                // scope 3 at cita-auth/src/handler.rs:341:9: 341:44
        _15 = &mut _13;                  // scope 3 at cita-auth/src/handler.rs:341:9: 341:44
        _59 = const false;               // scope 3 at cita-auth/src/handler.rs:341:33: 341:43
        _16 = move _2;                   // scope 3 at cita-auth/src/handler.rs:341:33: 341:43
        _14 = libproto::Response::set_request_id(move _15, move _16) -> [return: bb5, unwind: bb31]; // scope 3 at cita-auth/src/handler.rs:341:9: 341:44
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:341:18: 341:32
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Response, Vec<u8>) {libproto::Response::set_request_id}, val: Value(<ZST>) }
    }

    bb5: {
        _18 = &mut _13;                  // scope 3 at cita-auth/src/handler.rs:342:9: 342:54
        _19 = error::ErrorCode::tx_auth_error() -> [return: bb6, unwind: bb31]; // scope 3 at cita-auth/src/handler.rs:342:27: 342:53
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:342:27: 342:51
                                         // + literal: Const { ty: fn() -> i64 {error::ErrorCode::tx_auth_error}, val: Value(<ZST>) }
    }

    bb6: {
        _17 = libproto::Response::set_code(move _18, move _19) -> [return: bb7, unwind: bb31]; // scope 3 at cita-auth/src/handler.rs:342:9: 342:54
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:342:18: 342:26
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Response, i64) {libproto::Response::set_code}, val: Value(<ZST>) }
    }

    bb7: {
        _21 = &mut _13;                  // scope 3 at cita-auth/src/handler.rs:343:9: 343:39
        _58 = const false;               // scope 3 at cita-auth/src/handler.rs:343:32: 343:38
        _22 = move _4;                   // scope 3 at cita-auth/src/handler.rs:343:32: 343:38
        _20 = libproto::Response::set_error_msg(move _21, move _22) -> [return: bb8, unwind: bb31]; // scope 3 at cita-auth/src/handler.rs:343:9: 343:39
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:343:18: 343:31
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Response, std::string::String) {libproto::Response::set_error_msg}, val: Value(<ZST>) }
    }

    bb8: {
        _23 = log::Level::Trace;         // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _26 = &_23;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _54 = const _;                   // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::publish_tx_failed_result, [], Some(promoted[2])) }
        _25 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _26, _54) -> [return: bb12, unwind: bb31]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb9: {
        _24 = const false;               // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb11;                    // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb10: {
        _28 = &_23;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _30 = log::max_level() -> [return: bb13, unwind: bb31]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb11: {
        switchInt(move _24) -> [0: bb18, otherwise: bb15]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb12: {
        switchInt(move _25) -> [0: bb9, otherwise: bb10]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb13: {
        _29 = &_30;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _27 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _28, move _29) -> [return: bb14, unwind: bb31]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb14: {
        _24 = move _27;                  // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb11;                    // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb15: {
        _53 = const _;                   // scope 4 at cita-auth/src/handler.rs:345:16: 345:38
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:345:16: 345:38
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(MsgHandler::publish_tx_failed_result, [], Some(promoted[1])) }
        _33 = _53 as &[&str] (Pointer(Unsize)); // scope 4 at cita-auth/src/handler.rs:345:16: 345:38
        _38 = &_13;                      // scope 4 at cita-auth/src/handler.rs:345:40: 345:48
        _37 = core::fmt::ArgumentV1::<'_>::new_debug::<libproto::Response>(_38) -> [return: bb16, unwind: bb31]; // scope 4 at cita-auth/src/handler.rs:345:40: 345:48
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:345:40: 345:48
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b libproto::Response) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<libproto::Response>}, val: Value(<ZST>) }
    }

    bb16: {
        _36 = [move _37];                // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _35 = &_36;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _34 = _35 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _32 = Arguments::<'_>::new_v1(move _33, move _34) -> [return: bb17, unwind: bb31]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb17: {
        _52 = const _;                   // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::publish_tx_failed_result, [], Some(promoted[0])) }
        _31 = log::__private_api_log(move _32, _23, _52) -> [return: bb35, unwind: bb31]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb18: {
        _57 = const false;               // scope 3 at cita-auth/src/handler.rs:346:28: 346:36
        _40 = move _13;                  // scope 3 at cita-auth/src/handler.rs:346:28: 346:36
        _39 = <libproto::Response as Into<libproto::Message>>::into(move _40) -> [return: bb19, unwind: bb31]; // scope 3 at cita-auth/src/handler.rs:346:28: 346:43
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:346:37: 346:41
                                         // + literal: Const { ty: fn(libproto::Response) -> libproto::Message {<libproto::Response as Into<libproto::Message>>::into}, val: Value(<ZST>) }
    }

    bb19: {
        _56 = const true;                // scope 3 at cita-auth/src/handler.rs:346:42: 346:43
        _43 = &((*_1).1: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 5 at cita-auth/src/handler.rs:347:9: 351:15
        _47 = const Auth;                // scope 5 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x04)) }
        _48 = const libproto::router::MsgType::Response; // scope 5 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x02)) }
        _46 = RoutingKey(move _47, move _48); // scope 5 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _45 = <RoutingKey as Into<std::string::String>>::into(move _46) -> [return: bb20, unwind: bb29]; // scope 5 at cita-auth/src/handler.rs:349:17: 349:54
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:349:48: 349:52
                                         // + literal: Const { ty: fn(RoutingKey) -> std::string::String {<RoutingKey as Into<std::string::String>>::into}, val: Value(<ZST>) }
    }

    bb20: {
        _56 = const false;               // scope 5 at cita-auth/src/handler.rs:350:17: 350:20
        _51 = move _39;                  // scope 5 at cita-auth/src/handler.rs:350:17: 350:20
        _50 = <libproto::Message as libproto::TryInto<Vec<u8>>>::try_into(move _51) -> [return: bb21, unwind: bb25]; // scope 5 at cita-auth/src/handler.rs:350:17: 350:31
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:350:21: 350:29
                                         // + literal: Const { ty: fn(libproto::Message) -> Result<Vec<u8>, <libproto::Message as libproto::TryInto<Vec<u8>>>::Error> {<libproto::Message as libproto::TryInto<Vec<u8>>>::try_into}, val: Value(<ZST>) }
    }

    bb21: {
        _49 = Result::<Vec<u8>, TryIntoConvertError>::unwrap(move _50) -> [return: bb22, unwind: bb25]; // scope 5 at cita-auth/src/handler.rs:350:17: 350:40
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:350:32: 350:38
                                         // + literal: Const { ty: fn(Result<Vec<u8>, TryIntoConvertError>) -> Vec<u8> {Result::<Vec<u8>, TryIntoConvertError>::unwrap}, val: Value(<ZST>) }
    }

    bb22: {
        _44 = (move _45, move _49);      // scope 5 at cita-auth/src/handler.rs:348:19: 351:14
        _42 = pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send(move _43, move _44) -> [return: bb23, unwind: bb29]; // scope 5 at cita-auth/src/handler.rs:347:9: 351:15
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:348:14: 348:18
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, (std::string::String, Vec<u8>)) -> Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>> {pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send}, val: Value(<ZST>) }
    }

    bb23: {
        _41 = Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap(move _42) -> [return: bb24, unwind: bb29]; // scope 5 at cita-auth/src/handler.rs:347:9: 352:22
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:352:14: 352:20
                                         // + literal: Const { ty: fn(Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>) {Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap}, val: Value(<ZST>) }
    }

    bb24: {
        _56 = const false;               // scope 3 at cita-auth/src/handler.rs:353:5: 353:6
        _57 = const false;               // scope 1 at cita-auth/src/handler.rs:353:5: 353:6
        _58 = const false;               // scope 0 at cita-auth/src/handler.rs:353:5: 353:6
        return;                          // scope 0 at cita-auth/src/handler.rs:353:6: 353:6
    }

    bb25 (cleanup): {
        drop(_45) -> bb29;               // scope 5 at cita-auth/src/handler.rs:351:13: 351:14
    }

    bb26 (cleanup): {
        switchInt(_58) -> [0: bb34, otherwise: bb32]; // scope 0 at cita-auth/src/handler.rs:353:5: 353:6
    }

    bb27 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/handler.rs:338:5: 353:6
    }

    bb28 (cleanup): {
        drop(_39) -> bb31;               // scope 3 at cita-auth/src/handler.rs:353:5: 353:6
    }

    bb29 (cleanup): {
        switchInt(_56) -> [0: bb31, otherwise: bb28]; // scope 3 at cita-auth/src/handler.rs:353:5: 353:6
    }

    bb30 (cleanup): {
        drop(_13) -> bb26;               // scope 1 at cita-auth/src/handler.rs:353:5: 353:6
    }

    bb31 (cleanup): {
        switchInt(_57) -> [0: bb26, otherwise: bb30]; // scope 1 at cita-auth/src/handler.rs:353:5: 353:6
    }

    bb32 (cleanup): {
        drop(_4) -> bb34;                // scope 0 at cita-auth/src/handler.rs:353:5: 353:6
    }

    bb33 (cleanup): {
        drop(_2) -> bb27;                // scope 0 at cita-auth/src/handler.rs:353:5: 353:6
    }

    bb34 (cleanup): {
        switchInt(_59) -> [0: bb27, otherwise: bb33]; // scope 0 at cita-auth/src/handler.rs:353:5: 353:6
    }

    bb35: {
        goto -> bb18;                    // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::publish_tx_failed_result: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:345:9: 345:49
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:345:9: 345:49

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:345:9: 345:49
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:345:9: 345:49
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:345:9: 345:49
        _1 = (move _2, move _4, move _6, const 345_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::publish_tx_failed_result: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/handler.rs:345:16: 345:38
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/handler.rs:345:16: 345:38

    bb0: {
        _1 = [const "response new tx "]; // scope 0 at cita-auth/src/handler.rs:345:16: 345:38
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:345:16: 345:38
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:345:16: 345:38
        return;                          // scope 0 at cita-auth/src/handler.rs:345:16: 345:38
    }
}

promoted[2] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::publish_tx_failed_result: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[3] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::publish_tx_failed_result: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/handler.rs:339:30: 339:36
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/handler.rs:339:30: 339:36

    bb0: {
        _1 = [const ""];                 // scope 0 at cita-auth/src/handler.rs:339:30: 339:36
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:339:30: 339:36
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:339:30: 339:36
        return;                          // scope 0 at cita-auth/src/handler.rs:339:30: 339:36
    }
}

fn handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::publish_tx_success_result(_1: &MsgHandler, _2: Vec<u8>, _3: H256) -> () {
    debug self => _1;                    // in scope 0 at cita-auth/src/handler.rs:355:34: 355:39
    debug request_id => _2;              // in scope 0 at cita-auth/src/handler.rs:355:41: 355:51
    debug tx_hash => _3;                 // in scope 0 at cita-auth/src/handler.rs:355:62: 355:69
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/handler.rs:355:77: 355:77
    let mut _4: libproto::Response;      // in scope 0 at cita-auth/src/handler.rs:356:13: 356:25
    let _5: ();                          // in scope 0 at cita-auth/src/handler.rs:357:9: 357:44
    let mut _6: &mut libproto::Response; // in scope 0 at cita-auth/src/handler.rs:357:9: 357:44
    let mut _7: std::vec::Vec<u8>;       // in scope 0 at cita-auth/src/handler.rs:357:33: 357:43
    let mut _9: std::string::String;     // in scope 0 at cita-auth/src/handler.rs:359:52: 359:69
    let _10: &str;                       // in scope 0 at cita-auth/src/handler.rs:359:52: 359:57
    let mut _12: std::result::Result<std::string::String, serde_json::Error>; // in scope 0 at cita-auth/src/handler.rs:360:24: 360:59
    let _13: &jsonrpc_types::rpc_types::TxResponse; // in scope 0 at cita-auth/src/handler.rs:360:46: 360:58
    let _14: ();                         // in scope 0 at cita-auth/src/handler.rs:361:9: 361:40
    let mut _15: &mut libproto::Response; // in scope 0 at cita-auth/src/handler.rs:361:9: 361:40
    let mut _16: std::string::String;    // in scope 0 at cita-auth/src/handler.rs:361:31: 361:39
    let mut _18: libproto::Response;     // in scope 0 at cita-auth/src/handler.rs:363:28: 363:36
    let _19: ();                         // in scope 0 at cita-auth/src/handler.rs:364:9: 369:22
    let mut _20: std::result::Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>>; // in scope 0 at cita-auth/src/handler.rs:364:9: 368:15
    let mut _21: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-auth/src/handler.rs:364:9: 368:15
    let mut _22: (std::string::String, std::vec::Vec<u8>); // in scope 0 at cita-auth/src/handler.rs:365:19: 368:14
    let mut _23: std::string::String;    // in scope 0 at cita-auth/src/handler.rs:366:17: 366:54
    let mut _24: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _25: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _26: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _27: std::vec::Vec<u8>;      // in scope 0 at cita-auth/src/handler.rs:367:17: 367:40
    let mut _28: std::result::Result<std::vec::Vec<u8>, libproto::TryIntoConvertError>; // in scope 0 at cita-auth/src/handler.rs:367:17: 367:31
    let mut _29: libproto::Message;      // in scope 0 at cita-auth/src/handler.rs:367:17: 367:20
    let mut _30: bool;                   // in scope 0 at cita-auth/src/handler.rs:370:5: 370:6
    let mut _31: bool;                   // in scope 0 at cita-auth/src/handler.rs:370:5: 370:6
    let mut _32: bool;                   // in scope 0 at cita-auth/src/handler.rs:370:5: 370:6
    scope 1 {
        debug response => _4;            // in scope 1 at cita-auth/src/handler.rs:356:13: 356:25
        let _8: jsonrpc_types::rpc_types::TxResponse; // in scope 1 at cita-auth/src/handler.rs:359:13: 359:24
        scope 2 {
            debug tx_response => _8;     // in scope 2 at cita-auth/src/handler.rs:359:13: 359:24
            let _11: std::string::String; // in scope 2 at cita-auth/src/handler.rs:360:13: 360:21
            scope 3 {
                debug tx_state => _11;   // in scope 3 at cita-auth/src/handler.rs:360:13: 360:21
                let _17: libproto::Message; // in scope 3 at cita-auth/src/handler.rs:363:13: 363:16
                scope 4 {
                    debug msg => _17;    // in scope 4 at cita-auth/src/handler.rs:363:13: 363:16
                }
            }
        }
    }

    bb0: {
        _30 = const false;               // scope 0 at cita-auth/src/handler.rs:356:13: 356:25
        _31 = const false;               // scope 0 at cita-auth/src/handler.rs:356:13: 356:25
        _32 = const false;               // scope 0 at cita-auth/src/handler.rs:356:13: 356:25
        _32 = const true;                // scope 0 at cita-auth/src/handler.rs:356:13: 356:25
        _4 = libproto::Response::new() -> [return: bb1, unwind: bb23]; // scope 0 at cita-auth/src/handler.rs:356:28: 356:43
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:356:28: 356:41
                                         // + literal: Const { ty: fn() -> libproto::Response {libproto::Response::new}, val: Value(<ZST>) }
    }

    bb1: {
        _31 = const true;                // scope 1 at cita-auth/src/handler.rs:357:9: 357:44
        _6 = &mut _4;                    // scope 1 at cita-auth/src/handler.rs:357:9: 357:44
        _32 = const false;               // scope 1 at cita-auth/src/handler.rs:357:33: 357:43
        _7 = move _2;                    // scope 1 at cita-auth/src/handler.rs:357:33: 357:43
        _5 = libproto::Response::set_request_id(move _6, move _7) -> [return: bb2, unwind: bb21]; // scope 1 at cita-auth/src/handler.rs:357:9: 357:44
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:357:18: 357:32
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Response, Vec<u8>) {libproto::Response::set_request_id}, val: Value(<ZST>) }
    }

    bb2: {
        _10 = const _;                   // scope 1 at cita-auth/src/handler.rs:359:52: 359:57
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:359:52: 359:57
                                         // + literal: Const { ty: &str, val: Unevaluated(TX_OK, [], None) }
        _9 = <str as ToString>::to_string(_10) -> [return: bb3, unwind: bb21]; // scope 1 at cita-auth/src/handler.rs:359:52: 359:69
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:359:58: 359:67
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> std::string::String {<str as ToString>::to_string}, val: Value(<ZST>) }
    }

    bb3: {
        _8 = jsonrpc_types::rpc_types::TxResponse::new(_3, move _9) -> [return: bb4, unwind: bb21]; // scope 1 at cita-auth/src/handler.rs:359:27: 359:70
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:359:27: 359:42
                                         // + literal: Const { ty: fn(H256, std::string::String) -> jsonrpc_types::rpc_types::TxResponse {jsonrpc_types::rpc_types::TxResponse::new}, val: Value(<ZST>) }
    }

    bb4: {
        _13 = &_8;                       // scope 2 at cita-auth/src/handler.rs:360:46: 360:58
        _12 = serde_json::to_string::<jsonrpc_types::rpc_types::TxResponse>(_13) -> [return: bb5, unwind: bb16]; // scope 2 at cita-auth/src/handler.rs:360:24: 360:59
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:360:24: 360:45
                                         // + literal: Const { ty: for<'a> fn(&'a jsonrpc_types::rpc_types::TxResponse) -> Result<std::string::String, serde_json::Error> {serde_json::to_string::<jsonrpc_types::rpc_types::TxResponse>}, val: Value(<ZST>) }
    }

    bb5: {
        _11 = Result::<std::string::String, serde_json::Error>::unwrap(move _12) -> [return: bb6, unwind: bb16]; // scope 2 at cita-auth/src/handler.rs:360:24: 360:68
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:360:60: 360:66
                                         // + literal: Const { ty: fn(Result<std::string::String, serde_json::Error>) -> std::string::String {Result::<std::string::String, serde_json::Error>::unwrap}, val: Value(<ZST>) }
    }

    bb6: {
        _15 = &mut _4;                   // scope 3 at cita-auth/src/handler.rs:361:9: 361:40
        _16 = move _11;                  // scope 3 at cita-auth/src/handler.rs:361:31: 361:39
        _14 = libproto::Response::set_tx_state(move _15, move _16) -> [return: bb7, unwind: bb16]; // scope 3 at cita-auth/src/handler.rs:361:9: 361:40
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:361:18: 361:30
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Response, std::string::String) {libproto::Response::set_tx_state}, val: Value(<ZST>) }
    }

    bb7: {
        _31 = const false;               // scope 3 at cita-auth/src/handler.rs:363:28: 363:36
        _18 = move _4;                   // scope 3 at cita-auth/src/handler.rs:363:28: 363:36
        _17 = <libproto::Response as Into<libproto::Message>>::into(move _18) -> [return: bb8, unwind: bb16]; // scope 3 at cita-auth/src/handler.rs:363:28: 363:43
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:363:37: 363:41
                                         // + literal: Const { ty: fn(libproto::Response) -> libproto::Message {<libproto::Response as Into<libproto::Message>>::into}, val: Value(<ZST>) }
    }

    bb8: {
        _30 = const true;                // scope 3 at cita-auth/src/handler.rs:363:42: 363:43
        _21 = &((*_1).1: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 4 at cita-auth/src/handler.rs:364:9: 368:15
        _25 = const Auth;                // scope 4 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x04)) }
        _26 = const libproto::router::MsgType::Response; // scope 4 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x02)) }
        _24 = RoutingKey(move _25, move _26); // scope 4 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _23 = <RoutingKey as Into<std::string::String>>::into(move _24) -> [return: bb9, unwind: bb19]; // scope 4 at cita-auth/src/handler.rs:366:17: 366:54
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:366:48: 366:52
                                         // + literal: Const { ty: fn(RoutingKey) -> std::string::String {<RoutingKey as Into<std::string::String>>::into}, val: Value(<ZST>) }
    }

    bb9: {
        _30 = const false;               // scope 4 at cita-auth/src/handler.rs:367:17: 367:20
        _29 = move _17;                  // scope 4 at cita-auth/src/handler.rs:367:17: 367:20
        _28 = <libproto::Message as libproto::TryInto<Vec<u8>>>::try_into(move _29) -> [return: bb10, unwind: bb15]; // scope 4 at cita-auth/src/handler.rs:367:17: 367:31
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:367:21: 367:29
                                         // + literal: Const { ty: fn(libproto::Message) -> Result<Vec<u8>, <libproto::Message as libproto::TryInto<Vec<u8>>>::Error> {<libproto::Message as libproto::TryInto<Vec<u8>>>::try_into}, val: Value(<ZST>) }
    }

    bb10: {
        _27 = Result::<Vec<u8>, TryIntoConvertError>::unwrap(move _28) -> [return: bb11, unwind: bb15]; // scope 4 at cita-auth/src/handler.rs:367:17: 367:40
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:367:32: 367:38
                                         // + literal: Const { ty: fn(Result<Vec<u8>, TryIntoConvertError>) -> Vec<u8> {Result::<Vec<u8>, TryIntoConvertError>::unwrap}, val: Value(<ZST>) }
    }

    bb11: {
        _22 = (move _23, move _27);      // scope 4 at cita-auth/src/handler.rs:365:19: 368:14
        _20 = pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send(move _21, move _22) -> [return: bb12, unwind: bb19]; // scope 4 at cita-auth/src/handler.rs:364:9: 368:15
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:365:14: 365:18
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, (std::string::String, Vec<u8>)) -> Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>> {pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send}, val: Value(<ZST>) }
    }

    bb12: {
        _19 = Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap(move _20) -> [return: bb13, unwind: bb19]; // scope 4 at cita-auth/src/handler.rs:364:9: 369:22
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:369:14: 369:20
                                         // + literal: Const { ty: fn(Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>) {Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap}, val: Value(<ZST>) }
    }

    bb13: {
        _30 = const false;               // scope 3 at cita-auth/src/handler.rs:370:5: 370:6
        drop(_8) -> [return: bb14, unwind: bb21]; // scope 1 at cita-auth/src/handler.rs:370:5: 370:6
    }

    bb14: {
        _31 = const false;               // scope 0 at cita-auth/src/handler.rs:370:5: 370:6
        return;                          // scope 0 at cita-auth/src/handler.rs:370:6: 370:6
    }

    bb15 (cleanup): {
        drop(_23) -> bb19;               // scope 4 at cita-auth/src/handler.rs:368:13: 368:14
    }

    bb16 (cleanup): {
        drop(_8) -> bb21;                // scope 1 at cita-auth/src/handler.rs:370:5: 370:6
    }

    bb17 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/handler.rs:355:5: 370:6
    }

    bb18 (cleanup): {
        drop(_17) -> bb16;               // scope 3 at cita-auth/src/handler.rs:370:5: 370:6
    }

    bb19 (cleanup): {
        switchInt(_30) -> [0: bb16, otherwise: bb18]; // scope 3 at cita-auth/src/handler.rs:370:5: 370:6
    }

    bb20 (cleanup): {
        drop(_4) -> bb23;                // scope 0 at cita-auth/src/handler.rs:370:5: 370:6
    }

    bb21 (cleanup): {
        switchInt(_31) -> [0: bb23, otherwise: bb20]; // scope 0 at cita-auth/src/handler.rs:370:5: 370:6
    }

    bb22 (cleanup): {
        drop(_2) -> bb17;                // scope 0 at cita-auth/src/handler.rs:370:5: 370:6
    }

    bb23 (cleanup): {
        switchInt(_32) -> [0: bb17, otherwise: bb22]; // scope 0 at cita-auth/src/handler.rs:370:5: 370:6
    }
}

fn handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::forward_request(_1: &MsgHandler, _2: libproto::Request) -> () {
    debug self => _1;                    // in scope 0 at cita-auth/src/handler.rs:372:24: 372:29
    debug tx_req => _2;                  // in scope 0 at cita-auth/src/handler.rs:372:31: 372:37
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/handler.rs:372:48: 372:48
    let mut _3: std::result::Result<(), pubsub::crossbeam_channel::SendError<libproto::Request>>; // in scope 0 at cita-auth/src/handler.rs:373:17: 373:45
    let mut _4: &pubsub::crossbeam_channel::Sender<libproto::Request>; // in scope 0 at cita-auth/src/handler.rs:373:17: 373:45
    scope 1 {
    }

    bb0: {
        _4 = &((*_1).7: pubsub::crossbeam_channel::Sender<libproto::Request>); // scope 0 at cita-auth/src/handler.rs:373:17: 373:45
        _3 = pubsub::crossbeam_channel::Sender::<libproto::Request>::send(move _4, move _2) -> bb1; // scope 0 at cita-auth/src/handler.rs:373:17: 373:45
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:373:33: 373:37
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<libproto::Request>, libproto::Request) -> Result<(), pubsub::crossbeam_channel::SendError<libproto::Request>> {pubsub::crossbeam_channel::Sender::<libproto::Request>::send}, val: Value(<ZST>) }
    }

    bb1: {
        drop(_3) -> bb2;                 // scope 0 at cita-auth/src/handler.rs:373:45: 373:46
    }

    bb2: {
        return;                          // scope 0 at cita-auth/src/handler.rs:374:6: 374:6
    }
}

fn handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::send_single_block_tx_hashes_req(_1: &mut MsgHandler, _2: u64) -> () {
    debug self => _1;                    // in scope 0 at cita-auth/src/handler.rs:376:40: 376:49
    debug height => _2;                  // in scope 0 at cita-auth/src/handler.rs:376:51: 376:57
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/handler.rs:376:64: 376:64
    let mut _3: libproto::BlockTxHashesReq; // in scope 0 at cita-auth/src/handler.rs:377:13: 377:20
    let _4: ();                          // in scope 0 at cita-auth/src/handler.rs:378:9: 378:31
    let mut _5: &mut libproto::BlockTxHashesReq; // in scope 0 at cita-auth/src/handler.rs:378:9: 378:31
    let mut _7: libproto::BlockTxHashesReq; // in scope 0 at cita-auth/src/handler.rs:379:28: 379:31
    let _8: ();                          // in scope 0 at cita-auth/src/handler.rs:380:9: 385:22
    let mut _9: std::result::Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>>; // in scope 0 at cita-auth/src/handler.rs:380:9: 384:15
    let mut _10: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-auth/src/handler.rs:380:9: 384:15
    let mut _11: (std::string::String, std::vec::Vec<u8>); // in scope 0 at cita-auth/src/handler.rs:381:19: 384:14
    let mut _12: std::string::String;    // in scope 0 at cita-auth/src/handler.rs:382:17: 382:62
    let mut _13: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _14: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _15: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _16: std::vec::Vec<u8>;      // in scope 0 at cita-auth/src/handler.rs:383:17: 383:40
    let mut _17: std::result::Result<std::vec::Vec<u8>, libproto::TryIntoConvertError>; // in scope 0 at cita-auth/src/handler.rs:383:17: 383:31
    let mut _18: libproto::Message;      // in scope 0 at cita-auth/src/handler.rs:383:17: 383:20
    let mut _19: bool;                   // in scope 0 at cita-auth/src/handler.rs:386:5: 386:6
    let mut _20: bool;                   // in scope 0 at cita-auth/src/handler.rs:386:5: 386:6
    scope 1 {
        debug req => _3;                 // in scope 1 at cita-auth/src/handler.rs:377:13: 377:20
        let _6: libproto::Message;       // in scope 1 at cita-auth/src/handler.rs:379:13: 379:16
        scope 2 {
            debug msg => _6;             // in scope 2 at cita-auth/src/handler.rs:379:13: 379:16
        }
    }

    bb0: {
        _20 = const false;               // scope 0 at cita-auth/src/handler.rs:377:13: 377:20
        _19 = const false;               // scope 0 at cita-auth/src/handler.rs:377:13: 377:20
        _20 = const true;                // scope 0 at cita-auth/src/handler.rs:377:23: 377:46
        _3 = libproto::BlockTxHashesReq::new() -> bb1; // scope 0 at cita-auth/src/handler.rs:377:23: 377:46
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:377:23: 377:44
                                         // + literal: Const { ty: fn() -> libproto::BlockTxHashesReq {libproto::BlockTxHashesReq::new}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = &mut _3;                    // scope 1 at cita-auth/src/handler.rs:378:9: 378:31
        _4 = libproto::BlockTxHashesReq::set_height(move _5, _2) -> [return: bb2, unwind: bb14]; // scope 1 at cita-auth/src/handler.rs:378:9: 378:31
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:378:13: 378:23
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::BlockTxHashesReq, u64) {libproto::BlockTxHashesReq::set_height}, val: Value(<ZST>) }
    }

    bb2: {
        _20 = const false;               // scope 1 at cita-auth/src/handler.rs:379:28: 379:31
        _7 = move _3;                    // scope 1 at cita-auth/src/handler.rs:379:28: 379:31
        _6 = <libproto::BlockTxHashesReq as Into<libproto::Message>>::into(move _7) -> [return: bb3, unwind: bb14]; // scope 1 at cita-auth/src/handler.rs:379:28: 379:38
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:379:32: 379:36
                                         // + literal: Const { ty: fn(libproto::BlockTxHashesReq) -> libproto::Message {<libproto::BlockTxHashesReq as Into<libproto::Message>>::into}, val: Value(<ZST>) }
    }

    bb3: {
        _19 = const true;                // scope 1 at cita-auth/src/handler.rs:379:37: 379:38
        _10 = &((*_1).1: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 2 at cita-auth/src/handler.rs:380:9: 384:15
        _14 = const Auth;                // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x04)) }
        _15 = const libproto::router::MsgType::BlockTxHashesReq; // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x0d)) }
        _13 = RoutingKey(move _14, move _15); // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _12 = <RoutingKey as Into<std::string::String>>::into(move _13) -> [return: bb4, unwind: bb12]; // scope 2 at cita-auth/src/handler.rs:382:17: 382:62
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:382:56: 382:60
                                         // + literal: Const { ty: fn(RoutingKey) -> std::string::String {<RoutingKey as Into<std::string::String>>::into}, val: Value(<ZST>) }
    }

    bb4: {
        _19 = const false;               // scope 2 at cita-auth/src/handler.rs:383:17: 383:20
        _18 = move _6;                   // scope 2 at cita-auth/src/handler.rs:383:17: 383:20
        _17 = <libproto::Message as libproto::TryInto<Vec<u8>>>::try_into(move _18) -> [return: bb5, unwind: bb9]; // scope 2 at cita-auth/src/handler.rs:383:17: 383:31
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:383:21: 383:29
                                         // + literal: Const { ty: fn(libproto::Message) -> Result<Vec<u8>, <libproto::Message as libproto::TryInto<Vec<u8>>>::Error> {<libproto::Message as libproto::TryInto<Vec<u8>>>::try_into}, val: Value(<ZST>) }
    }

    bb5: {
        _16 = Result::<Vec<u8>, TryIntoConvertError>::unwrap(move _17) -> [return: bb6, unwind: bb9]; // scope 2 at cita-auth/src/handler.rs:383:17: 383:40
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:383:32: 383:38
                                         // + literal: Const { ty: fn(Result<Vec<u8>, TryIntoConvertError>) -> Vec<u8> {Result::<Vec<u8>, TryIntoConvertError>::unwrap}, val: Value(<ZST>) }
    }

    bb6: {
        _11 = (move _12, move _16);      // scope 2 at cita-auth/src/handler.rs:381:19: 384:14
        _9 = pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send(move _10, move _11) -> [return: bb7, unwind: bb12]; // scope 2 at cita-auth/src/handler.rs:380:9: 384:15
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:381:14: 381:18
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, (std::string::String, Vec<u8>)) -> Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>> {pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send}, val: Value(<ZST>) }
    }

    bb7: {
        _8 = Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap(move _9) -> [return: bb8, unwind: bb12]; // scope 2 at cita-auth/src/handler.rs:380:9: 385:22
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:385:14: 385:20
                                         // + literal: Const { ty: fn(Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>) {Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap}, val: Value(<ZST>) }
    }

    bb8: {
        _19 = const false;               // scope 1 at cita-auth/src/handler.rs:386:5: 386:6
        _20 = const false;               // scope 0 at cita-auth/src/handler.rs:386:5: 386:6
        return;                          // scope 0 at cita-auth/src/handler.rs:386:6: 386:6
    }

    bb9 (cleanup): {
        drop(_12) -> bb12;               // scope 2 at cita-auth/src/handler.rs:384:13: 384:14
    }

    bb10 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/handler.rs:376:5: 386:6
    }

    bb11 (cleanup): {
        drop(_6) -> bb14;                // scope 1 at cita-auth/src/handler.rs:386:5: 386:6
    }

    bb12 (cleanup): {
        switchInt(_19) -> [0: bb14, otherwise: bb11]; // scope 1 at cita-auth/src/handler.rs:386:5: 386:6
    }

    bb13 (cleanup): {
        drop(_3) -> bb10;                // scope 0 at cita-auth/src/handler.rs:386:5: 386:6
    }

    bb14 (cleanup): {
        switchInt(_20) -> [0: bb10, otherwise: bb13]; // scope 0 at cita-auth/src/handler.rs:386:5: 386:6
    }
}

fn handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::send_block_tx_hashes_req(_1: &mut MsgHandler, _2: bool) -> () {
    debug self => _1;                    // in scope 0 at cita-auth/src/handler.rs:388:33: 388:42
    debug check => _2;                   // in scope 0 at cita-auth/src/handler.rs:388:44: 388:49
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/handler.rs:388:57: 388:57
    let mut _3: bool;                    // in scope 0 at cita-auth/src/handler.rs:391:12: 391:59
    let mut _4: bool;                    // in scope 0 at cita-auth/src/handler.rs:391:21: 391:59
    let mut _5: &history::HistoryHeights; // in scope 0 at cita-auth/src/handler.rs:391:21: 391:59
    let _6: log::Level;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
    let mut _7: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _8: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _9: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _10: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _11: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _12: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _13: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _14: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _15: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _16: &[&str];                // in scope 0 at cita-auth/src/handler.rs:395:13: 395:52
    let mut _17: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _18: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _19: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _20: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:396:13: 396:46
    let _21: &u64;                       // in scope 0 at cita-auth/src/handler.rs:396:13: 396:46
    let _22: u64;                        // in scope 0 at cita-auth/src/handler.rs:396:13: 396:46
    let mut _23: &history::HistoryHeights; // in scope 0 at cita-auth/src/handler.rs:396:13: 396:46
    let mut _24: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:397:13: 397:46
    let _25: &u64;                       // in scope 0 at cita-auth/src/handler.rs:397:13: 397:46
    let _26: u64;                        // in scope 0 at cita-auth/src/handler.rs:397:13: 397:46
    let mut _27: &history::HistoryHeights; // in scope 0 at cita-auth/src/handler.rs:397:13: 397:46
    let mut _28: std::ops::Range<u64>;   // in scope 0 at cita-auth/src/handler.rs:399:18: 399:86
    let mut _29: std::ops::Range<u64>;   // in scope 0 at cita-auth/src/handler.rs:399:18: 399:86
    let mut _30: u64;                    // in scope 0 at cita-auth/src/handler.rs:399:18: 399:51
    let mut _31: &history::HistoryHeights; // in scope 0 at cita-auth/src/handler.rs:399:18: 399:51
    let mut _32: u64;                    // in scope 0 at cita-auth/src/handler.rs:399:53: 399:86
    let mut _33: &history::HistoryHeights; // in scope 0 at cita-auth/src/handler.rs:399:53: 399:86
    let mut _34: std::ops::Range<u64>;   // in scope 0 at cita-auth/src/handler.rs:399:18: 399:86
    let mut _35: std::option::Option<u64>; // in scope 0 at cita-auth/src/handler.rs:399:18: 399:86
    let mut _36: &mut std::ops::Range<u64>; // in scope 0 at cita-auth/src/handler.rs:399:18: 399:86
    let mut _37: isize;                  // in scope 0 at cita-auth/src/handler.rs:399:9: 403:10
    let mut _39: bool;                   // in scope 0 at cita-auth/src/handler.rs:400:16: 400:53
    let mut _40: bool;                   // in scope 0 at cita-auth/src/handler.rs:400:17: 400:53
    let mut _41: &std::collections::HashMap<u64, std::collections::HashSet<cita_types::H256>>; // in scope 0 at cita-auth/src/handler.rs:400:17: 400:53
    let _42: &u64;                       // in scope 0 at cita-auth/src/handler.rs:400:50: 400:52
    let _43: ();                         // in scope 0 at cita-auth/src/handler.rs:401:17: 401:56
    let _44: ();                         // in scope 0 at cita-auth/src/handler.rs:405:9: 405:49
    let mut _45: &mut history::HistoryHeights; // in scope 0 at cita-auth/src/handler.rs:405:9: 405:49
    scope 1 {
        debug lvl => _6;                 // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _46: &(&str, &str, &str, u32); // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        let mut _47: &[&str; 2];         // in scope 1 at cita-auth/src/handler.rs:395:13: 395:52
        let mut _48: &log::LevelFilter;  // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
    scope 2 {
        debug iter => _34;               // in scope 2 at cita-auth/src/handler.rs:399:18: 399:86
        let _38: u64;                    // in scope 2 at cita-auth/src/handler.rs:399:13: 399:14
        scope 3 {
            debug i => _38;              // in scope 3 at cita-auth/src/handler.rs:399:13: 399:14
        }
    }

    bb0: {
        switchInt(_2) -> [0: bb1, otherwise: bb2]; // scope 0 at cita-auth/src/handler.rs:391:12: 391:59
    }

    bb1: {
        _3 = const false;                // scope 0 at cita-auth/src/handler.rs:391:12: 391:59
        goto -> bb3;                     // scope 0 at cita-auth/src/handler.rs:391:12: 391:59
    }

    bb2: {
        _5 = &((*_1).4: history::HistoryHeights); // scope 0 at cita-auth/src/handler.rs:391:21: 391:59
        _4 = HistoryHeights::is_too_frequent(move _5) -> bb4; // scope 0 at cita-auth/src/handler.rs:391:21: 391:59
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:391:42: 391:57
                                         // + literal: Const { ty: for<'a> fn(&'a HistoryHeights) -> bool {HistoryHeights::is_too_frequent}, val: Value(<ZST>) }
    }

    bb3: {
        switchInt(move _3) -> [0: bb5, otherwise: bb29]; // scope 0 at cita-auth/src/handler.rs:391:12: 391:59
    }

    bb4: {
        _3 = move _4;                    // scope 0 at cita-auth/src/handler.rs:391:12: 391:59
        goto -> bb3;                     // scope 0 at cita-auth/src/handler.rs:391:12: 391:59
    }

    bb5: {
        _6 = log::Level::Trace;          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _9 = &_6;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _48 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::send_block_tx_hashes_req, [], Some(promoted[2])) }
        _8 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _9, _48) -> bb9; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb6: {
        _7 = const false;                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb8;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        _11 = &_6;                       // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _13 = log::max_level() -> bb10;  // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb8: {
        switchInt(move _7) -> [0: bb18, otherwise: bb12]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb9: {
        switchInt(move _8) -> [0: bb6, otherwise: bb7]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb10: {
        _12 = &_13;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _10 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _11, move _12) -> bb11; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb11: {
        _7 = move _10;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb8;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb12: {
        _47 = const _;                   // scope 1 at cita-auth/src/handler.rs:395:13: 395:52
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:395:13: 395:52
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(MsgHandler::send_block_tx_hashes_req, [], Some(promoted[1])) }
        _16 = _47 as &[&str] (Pointer(Unsize)); // scope 1 at cita-auth/src/handler.rs:395:13: 395:52
        _23 = &((*_1).4: history::HistoryHeights); // scope 1 at cita-auth/src/handler.rs:396:13: 396:46
        _22 = HistoryHeights::min_height(move _23) -> bb13; // scope 1 at cita-auth/src/handler.rs:396:13: 396:46
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:396:34: 396:44
                                         // + literal: Const { ty: for<'a> fn(&'a HistoryHeights) -> u64 {HistoryHeights::min_height}, val: Value(<ZST>) }
    }

    bb13: {
        _21 = &_22;                      // scope 1 at cita-auth/src/handler.rs:396:13: 396:46
        _20 = core::fmt::ArgumentV1::<'_>::new_display::<u64>(_21) -> bb14; // scope 1 at cita-auth/src/handler.rs:396:13: 396:46
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:396:13: 396:46
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u64>}, val: Value(<ZST>) }
    }

    bb14: {
        _27 = &((*_1).4: history::HistoryHeights); // scope 1 at cita-auth/src/handler.rs:397:13: 397:46
        _26 = HistoryHeights::max_height(move _27) -> bb15; // scope 1 at cita-auth/src/handler.rs:397:13: 397:46
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:397:34: 397:44
                                         // + literal: Const { ty: for<'a> fn(&'a HistoryHeights) -> u64 {HistoryHeights::max_height}, val: Value(<ZST>) }
    }

    bb15: {
        _25 = &_26;                      // scope 1 at cita-auth/src/handler.rs:397:13: 397:46
        _24 = core::fmt::ArgumentV1::<'_>::new_display::<u64>(_25) -> bb16; // scope 1 at cita-auth/src/handler.rs:397:13: 397:46
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:397:13: 397:46
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u64>}, val: Value(<ZST>) }
    }

    bb16: {
        _19 = [move _20, move _24];      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _18 = &_19;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _17 = _18 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _15 = Arguments::<'_>::new_v1(move _16, move _17) -> bb17; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb17: {
        _46 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::send_block_tx_hashes_req, [], Some(promoted[0])) }
        _14 = log::__private_api_log(move _15, _6, _46) -> bb18; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb18: {
        _31 = &((*_1).4: history::HistoryHeights); // scope 0 at cita-auth/src/handler.rs:399:18: 399:51
        _30 = HistoryHeights::min_height(move _31) -> bb19; // scope 0 at cita-auth/src/handler.rs:399:18: 399:51
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:399:39: 399:49
                                         // + literal: Const { ty: for<'a> fn(&'a HistoryHeights) -> u64 {HistoryHeights::min_height}, val: Value(<ZST>) }
    }

    bb19: {
        _33 = &((*_1).4: history::HistoryHeights); // scope 0 at cita-auth/src/handler.rs:399:53: 399:86
        _32 = HistoryHeights::max_height(move _33) -> bb20; // scope 0 at cita-auth/src/handler.rs:399:53: 399:86
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:399:74: 399:84
                                         // + literal: Const { ty: for<'a> fn(&'a HistoryHeights) -> u64 {HistoryHeights::max_height}, val: Value(<ZST>) }
    }

    bb20: {
        _29 = std::ops::Range::<u64> { start: move _30, end: move _32 }; // scope 0 at cita-auth/src/handler.rs:399:18: 399:86
        _28 = <std::ops::Range<u64> as IntoIterator>::into_iter(move _29) -> bb21; // scope 0 at cita-auth/src/handler.rs:399:18: 399:86
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:399:18: 399:86
                                         // + literal: Const { ty: fn(std::ops::Range<u64>) -> <std::ops::Range<u64> as IntoIterator>::IntoIter {<std::ops::Range<u64> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb21: {
        _34 = move _28;                  // scope 0 at cita-auth/src/handler.rs:399:18: 399:86
        goto -> bb22;                    // scope 2 at cita-auth/src/handler.rs:399:9: 403:10
    }

    bb22: {
        _36 = &mut _34;                  // scope 2 at cita-auth/src/handler.rs:399:18: 399:86
        _35 = <std::ops::Range<u64> as Iterator>::next(_36) -> bb23; // scope 2 at cita-auth/src/handler.rs:399:18: 399:86
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:399:18: 399:86
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::ops::Range<u64>) -> std::option::Option<<std::ops::Range<u64> as Iterator>::Item> {<std::ops::Range<u64> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb23: {
        _37 = discriminant(_35);         // scope 2 at cita-auth/src/handler.rs:399:18: 399:86
        switchInt(move _37) -> [0: bb26, 1: bb24, otherwise: bb25]; // scope 2 at cita-auth/src/handler.rs:399:18: 399:86
    }

    bb24: {
        _38 = ((_35 as Some).0: u64);    // scope 2 at cita-auth/src/handler.rs:399:13: 399:14
        _41 = &((*_1).5: std::collections::HashMap<u64, std::collections::HashSet<cita_types::H256>>); // scope 3 at cita-auth/src/handler.rs:400:17: 400:53
        _42 = &_38;                      // scope 3 at cita-auth/src/handler.rs:400:50: 400:52
        _40 = HashMap::<u64, HashSet<H256>>::contains_key::<u64>(move _41, _42) -> bb27; // scope 3 at cita-auth/src/handler.rs:400:17: 400:53
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:400:37: 400:49
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a HashMap<u64, HashSet<H256>>, &'b u64) -> bool {HashMap::<u64, HashSet<H256>>::contains_key::<u64>}, val: Value(<ZST>) }
    }

    bb25: {
        unreachable;                     // scope 2 at cita-auth/src/handler.rs:399:18: 399:86
    }

    bb26: {
        _45 = &mut ((*_1).4: history::HistoryHeights); // scope 0 at cita-auth/src/handler.rs:405:9: 405:49
        _44 = HistoryHeights::update_time_stamp(move _45) -> bb29; // scope 0 at cita-auth/src/handler.rs:405:9: 405:49
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:405:30: 405:47
                                         // + literal: Const { ty: for<'a> fn(&'a mut HistoryHeights) {HistoryHeights::update_time_stamp}, val: Value(<ZST>) }
    }

    bb27: {
        _39 = Not(move _40);             // scope 3 at cita-auth/src/handler.rs:400:16: 400:53
        switchInt(move _39) -> [0: bb22, otherwise: bb28]; // scope 3 at cita-auth/src/handler.rs:400:16: 400:53
    }

    bb28: {
        _43 = MsgHandler::send_single_block_tx_hashes_req(_1, _38) -> bb22; // scope 3 at cita-auth/src/handler.rs:401:17: 401:56
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:401:22: 401:53
                                         // + literal: Const { ty: for<'a> fn(&'a mut MsgHandler, u64) {MsgHandler::send_single_block_tx_hashes_req}, val: Value(<ZST>) }
    }

    bb29: {
        return;                          // scope 0 at cita-auth/src/handler.rs:406:6: 406:6
    }
}

promoted[0] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::send_block_tx_hashes_req: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:394:9: 398:10
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:394:9: 398:10

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:394:9: 398:10
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:394:9: 398:10
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:394:9: 398:10
        _1 = (move _2, move _4, move _6, const 394_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::send_block_tx_hashes_req: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-auth/src/handler.rs:395:13: 395:52
    let mut _1: [&str; 2];               // in scope 0 at cita-auth/src/handler.rs:395:13: 395:52

    bb0: {
        _1 = [const "send block tx hashes request ", const " to "]; // scope 0 at cita-auth/src/handler.rs:395:13: 395:52
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:395:13: 395:52
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:395:13: 395:52
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:395:13: 395:52
        return;                          // scope 0 at cita-auth/src/handler.rs:395:13: 395:52
    }
}

promoted[2] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::send_block_tx_hashes_req: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::daily_task(_1: &mut MsgHandler) -> () {
    debug self => _1;                    // in scope 0 at cita-auth/src/handler.rs:408:19: 408:28
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/handler.rs:408:30: 408:30
    let mut _2: bool;                    // in scope 0 at cita-auth/src/handler.rs:409:12: 409:62
    let mut _3: bool;                    // in scope 0 at cita-auth/src/handler.rs:409:12: 409:43
    let mut _4: bool;                    // in scope 0 at cita-auth/src/handler.rs:409:47: 409:62
    let mut _5: &handler::MsgHandler;    // in scope 0 at cita-auth/src/handler.rs:409:47: 409:62
    let _6: ();                          // in scope 0 at cita-auth/src/handler.rs:410:13: 414:14
    let mut _7: &mut dispatcher::Dispatcher; // in scope 0 at cita-auth/src/handler.rs:410:13: 414:14
    let mut _8: usize;                   // in scope 0 at cita-auth/src/handler.rs:411:17: 411:66
    let mut _9: u64;                     // in scope 0 at cita-auth/src/handler.rs:411:17: 411:57
    let mut _10: u64;                    // in scope 0 at cita-auth/src/handler.rs:411:18: 411:52
    let mut _11: &history::HistoryHeights; // in scope 0 at cita-auth/src/handler.rs:411:18: 411:52
    let mut _12: (u64, bool);            // in scope 0 at cita-auth/src/handler.rs:411:17: 411:57
    let _13: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-auth/src/handler.rs:412:17: 412:29
    let _14: &handler::SysConfigInfo;    // in scope 0 at cita-auth/src/handler.rs:413:17: 413:34

    bb0: {
        _3 = ((*_1).11: bool);           // scope 0 at cita-auth/src/handler.rs:409:12: 409:43
        switchInt(move _3) -> [0: bb1, otherwise: bb2]; // scope 0 at cita-auth/src/handler.rs:409:12: 409:62
    }

    bb1: {
        _2 = const false;                // scope 0 at cita-auth/src/handler.rs:409:12: 409:62
        goto -> bb3;                     // scope 0 at cita-auth/src/handler.rs:409:12: 409:62
    }

    bb2: {
        _5 = &(*_1);                     // scope 0 at cita-auth/src/handler.rs:409:47: 409:62
        _4 = MsgHandler::is_ready(move _5) -> bb4; // scope 0 at cita-auth/src/handler.rs:409:47: 409:62
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:409:52: 409:60
                                         // + literal: Const { ty: for<'a> fn(&'a MsgHandler) -> bool {MsgHandler::is_ready}, val: Value(<ZST>) }
    }

    bb3: {
        switchInt(move _2) -> [0: bb9, otherwise: bb5]; // scope 0 at cita-auth/src/handler.rs:409:12: 409:62
    }

    bb4: {
        _2 = move _4;                    // scope 0 at cita-auth/src/handler.rs:409:12: 409:62
        goto -> bb3;                     // scope 0 at cita-auth/src/handler.rs:409:12: 409:62
    }

    bb5: {
        _7 = &mut ((*_1).6: dispatcher::Dispatcher); // scope 0 at cita-auth/src/handler.rs:410:13: 414:14
        _11 = &((*_1).4: history::HistoryHeights); // scope 0 at cita-auth/src/handler.rs:411:18: 411:52
        _10 = HistoryHeights::next_height(move _11) -> bb6; // scope 0 at cita-auth/src/handler.rs:411:18: 411:52
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:411:39: 411:50
                                         // + literal: Const { ty: for<'a> fn(&'a HistoryHeights) -> u64 {HistoryHeights::next_height}, val: Value(<ZST>) }
    }

    bb6: {
        _12 = CheckedSub(_10, const 1_u64); // scope 0 at cita-auth/src/handler.rs:411:17: 411:57
        assert(!move (_12.1: bool), "attempt to compute `{} - {}`, which would overflow", move _10, const 1_u64) -> bb7; // scope 0 at cita-auth/src/handler.rs:411:17: 411:57
    }

    bb7: {
        _9 = move (_12.0: u64);          // scope 0 at cita-auth/src/handler.rs:411:17: 411:57
        _8 = move _9 as usize (IntToInt); // scope 0 at cita-auth/src/handler.rs:411:17: 411:66
        _13 = &((*_1).1: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 0 at cita-auth/src/handler.rs:412:17: 412:29
        _14 = &((*_1).12: handler::SysConfigInfo); // scope 0 at cita-auth/src/handler.rs:413:17: 413:34
        _6 = Dispatcher::proposal_tx_list(move _7, move _8, _13, _14) -> bb8; // scope 0 at cita-auth/src/handler.rs:410:13: 414:14
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:410:29: 410:45
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(&'a mut Dispatcher, usize, &'b pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, &'c SysConfigInfo) {Dispatcher::proposal_tx_list}, val: Value(<ZST>) }
    }

    bb8: {
        ((*_1).11: bool) = const false;  // scope 0 at cita-auth/src/handler.rs:416:13: 416:52
        goto -> bb9;                     // scope 0 at cita-auth/src/handler.rs:409:9: 417:10
    }

    bb9: {
        return;                          // scope 0 at cita-auth/src/handler.rs:418:6: 418:6
    }
}

fn handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::get_chain_id(_1: &mut MsgHandler) -> () {
    debug self => _1;                    // in scope 0 at cita-auth/src/handler.rs:420:21: 420:30
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/handler.rs:420:32: 420:32
    let mut _2: bool;                    // in scope 0 at cita-auth/src/handler.rs:421:12: 421:73
    let mut _3: bool;                    // in scope 0 at cita-auth/src/handler.rs:421:12: 421:35
    let mut _4: &std::option::Option<handler::ChainId>; // in scope 0 at cita-auth/src/handler.rs:421:12: 421:35
    let mut _5: bool;                    // in scope 0 at cita-auth/src/handler.rs:421:39: 421:73
    let mut _6: &std::option::Option<u32>; // in scope 0 at cita-auth/src/handler.rs:421:39: 421:73
    let _7: log::Level;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
    let mut _8: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _9: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _10: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _11: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _12: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _13: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _14: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _15: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _16: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _17: &[&str];                // in scope 0 at cita-auth/src/handler.rs:422:20: 422:43
    let _18: libproto::Message;          // in scope 0 at cita-auth/src/handler.rs:423:17: 423:20
    let mut _19: libproto::MiscellaneousReq; // in scope 0 at cita-auth/src/handler.rs:423:32: 423:55
    let mut _20: std::result::Result<std::vec::Vec<u8>, libproto::TryIntoConvertError>; // in scope 0 at cita-auth/src/handler.rs:424:40: 424:54
    let mut _21: libproto::Message;      // in scope 0 at cita-auth/src/handler.rs:424:40: 424:43
    let mut _22: isize;                  // in scope 0 at cita-auth/src/handler.rs:424:20: 424:37
    let mut _24: std::result::Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>>; // in scope 0 at cita-auth/src/handler.rs:425:33: 427:90
    let mut _25: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-auth/src/handler.rs:425:33: 427:90
    let mut _26: (std::string::String, std::vec::Vec<u8>); // in scope 0 at cita-auth/src/handler.rs:427:27: 427:89
    let mut _27: std::string::String;    // in scope 0 at cita-auth/src/handler.rs:427:28: 427:73
    let mut _28: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _29: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _30: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _31: std::vec::Vec<u8>;      // in scope 0 at cita-auth/src/handler.rs:427:75: 427:88
    let mut _32: isize;                  // in scope 0 at cita-auth/src/handler.rs:425:24: 425:30
    let mut _35: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _36: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _37: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _38: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _39: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _40: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _41: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _42: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _43: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _44: &[&str];                // in scope 0 at cita-auth/src/handler.rs:429:28: 429:70
    let mut _45: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _46: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _47: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _48: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:429:72: 429:73
    let _49: &pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-auth/src/handler.rs:429:72: 429:73
    let mut _51: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _52: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _53: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _54: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _55: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _56: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _57: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _58: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _59: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _60: &[&str];                // in scope 0 at cita-auth/src/handler.rs:432:24: 432:78
    let mut _70: bool;                   // in scope 0 at cita-auth/src/handler.rs:431:13: 431:14
    let mut _71: bool;                   // in scope 0 at cita-auth/src/handler.rs:434:9: 434:10
    let mut _72: bool;                   // in scope 0 at cita-auth/src/handler.rs:431:13: 431:14
    let mut _73: isize;                  // in scope 0 at cita-auth/src/handler.rs:431:13: 431:14
    let mut _74: isize;                  // in scope 0 at cita-auth/src/handler.rs:434:9: 434:10
    let mut _75: isize;                  // in scope 0 at cita-auth/src/handler.rs:434:9: 434:10
    scope 1 {
        debug lvl => _7;                 // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _67: &(&str, &str, &str, u32); // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        let mut _68: &[&str; 1];         // in scope 1 at cita-auth/src/handler.rs:422:20: 422:43
        let mut _69: &log::LevelFilter;  // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
    scope 2 {
        debug msg => _18;                // in scope 2 at cita-auth/src/handler.rs:423:17: 423:20
        let _50: log::Level;             // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        scope 3 {
            debug rabbit_mq_msg => _23;  // in scope 3 at cita-auth/src/handler.rs:424:23: 424:36
            let _23: std::vec::Vec<u8>;  // in scope 3 at cita-auth/src/handler.rs:424:23: 424:36
            scope 4 {
                debug e => _33;          // in scope 4 at cita-auth/src/handler.rs:425:28: 425:29
                let _33: pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>; // in scope 4 at cita-auth/src/handler.rs:425:28: 425:29
                let _34: log::Level;     // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                scope 5 {
                    debug lvl => _34;    // in scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                    let mut _61: &(&str, &str, &str, u32); // in scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                    let mut _62: &[&str; 1]; // in scope 5 at cita-auth/src/handler.rs:429:28: 429:70
                    let mut _63: &log::LevelFilter; // in scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                }
            }
        }
        scope 6 {
            debug lvl => _50;            // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _64: &(&str, &str, &str, u32); // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _65: &[&str; 1];     // in scope 6 at cita-auth/src/handler.rs:432:24: 432:78
            let mut _66: &log::LevelFilter; // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
    }

    bb0: {
        _72 = const false;               // scope 0 at cita-auth/src/handler.rs:421:12: 421:73
        _71 = const false;               // scope 0 at cita-auth/src/handler.rs:421:12: 421:73
        _70 = const false;               // scope 0 at cita-auth/src/handler.rs:421:12: 421:73
        _4 = &((*_1).3: std::option::Option<handler::ChainId>); // scope 0 at cita-auth/src/handler.rs:421:12: 421:35
        _3 = std::option::Option::<ChainId>::is_none(move _4) -> bb4; // scope 0 at cita-auth/src/handler.rs:421:12: 421:35
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:421:26: 421:33
                                         // + literal: Const { ty: for<'a> fn(&'a std::option::Option<ChainId>) -> bool {std::option::Option::<ChainId>::is_none}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = const false;                // scope 0 at cita-auth/src/handler.rs:421:12: 421:73
        goto -> bb3;                     // scope 0 at cita-auth/src/handler.rs:421:12: 421:73
    }

    bb2: {
        _6 = &(((*_1).12: handler::SysConfigInfo).4: std::option::Option<u32>); // scope 0 at cita-auth/src/handler.rs:421:39: 421:73
        _5 = std::option::Option::<u32>::is_some(move _6) -> bb5; // scope 0 at cita-auth/src/handler.rs:421:39: 421:73
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:421:64: 421:71
                                         // + literal: Const { ty: for<'a> fn(&'a std::option::Option<u32>) -> bool {std::option::Option::<u32>::is_some}, val: Value(<ZST>) }
    }

    bb3: {
        switchInt(move _2) -> [0: bb43, otherwise: bb6]; // scope 0 at cita-auth/src/handler.rs:421:12: 421:73
    }

    bb4: {
        switchInt(move _3) -> [0: bb1, otherwise: bb2]; // scope 0 at cita-auth/src/handler.rs:421:12: 421:73
    }

    bb5: {
        _2 = move _5;                    // scope 0 at cita-auth/src/handler.rs:421:12: 421:73
        goto -> bb3;                     // scope 0 at cita-auth/src/handler.rs:421:12: 421:73
    }

    bb6: {
        _7 = log::Level::Trace;          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _10 = &_7;                       // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _69 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::get_chain_id, [], Some(promoted[8])) }
        _9 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _10, _69) -> bb10; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb7: {
        _8 = const false;                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb9;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb8: {
        _12 = &_7;                       // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _14 = log::max_level() -> bb11;  // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb9: {
        switchInt(move _8) -> [0: bb15, otherwise: bb13]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb10: {
        switchInt(move _9) -> [0: bb7, otherwise: bb8]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb11: {
        _13 = &_14;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _11 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _12, move _13) -> bb12; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb12: {
        _8 = move _11;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb9;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb13: {
        _68 = const _;                   // scope 1 at cita-auth/src/handler.rs:422:20: 422:43
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:422:20: 422:43
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(MsgHandler::get_chain_id, [], Some(promoted[7])) }
        _17 = _68 as &[&str] (Pointer(Unsize)); // scope 1 at cita-auth/src/handler.rs:422:20: 422:43
        _16 = Arguments::<'_>::new_const(move _17) -> bb14; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb14: {
        _67 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::get_chain_id, [], Some(promoted[6])) }
        _15 = log::__private_api_log(move _16, _7, _67) -> bb15; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb15: {
        _19 = libproto::MiscellaneousReq::new() -> bb16; // scope 0 at cita-auth/src/handler.rs:423:32: 423:55
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:423:32: 423:53
                                         // + literal: Const { ty: fn() -> libproto::MiscellaneousReq {libproto::MiscellaneousReq::new}, val: Value(<ZST>) }
    }

    bb16: {
        _18 = <libproto::MiscellaneousReq as Into<libproto::Message>>::into(move _19) -> bb17; // scope 0 at cita-auth/src/handler.rs:423:32: 423:62
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:423:56: 423:60
                                         // + literal: Const { ty: fn(libproto::MiscellaneousReq) -> libproto::Message {<libproto::MiscellaneousReq as Into<libproto::Message>>::into}, val: Value(<ZST>) }
    }

    bb17: {
        _21 = move _18;                  // scope 3 at cita-auth/src/handler.rs:424:40: 424:43
        _20 = <libproto::Message as libproto::TryInto<Vec<u8>>>::try_into(move _21) -> bb18; // scope 3 at cita-auth/src/handler.rs:424:40: 424:54
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:424:44: 424:52
                                         // + literal: Const { ty: fn(libproto::Message) -> Result<Vec<u8>, <libproto::Message as libproto::TryInto<Vec<u8>>>::Error> {<libproto::Message as libproto::TryInto<Vec<u8>>>::try_into}, val: Value(<ZST>) }
    }

    bb18: {
        _71 = const true;                // scope 3 at cita-auth/src/handler.rs:424:53: 424:54
        _22 = discriminant(_20);         // scope 3 at cita-auth/src/handler.rs:424:20: 424:37
        switchInt(move _22) -> [0: bb19, otherwise: bb33]; // scope 3 at cita-auth/src/handler.rs:424:20: 424:37
    }

    bb19: {
        _71 = const false;               // scope 3 at cita-auth/src/handler.rs:424:23: 424:36
        _72 = const true;                // scope 3 at cita-auth/src/handler.rs:424:23: 424:36
        _23 = move ((_20 as Ok).0: std::vec::Vec<u8>); // scope 3 at cita-auth/src/handler.rs:424:23: 424:36
        _25 = &((*_1).1: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 4 at cita-auth/src/handler.rs:425:33: 427:90
        _29 = const Auth;                // scope 4 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x04)) }
        _30 = const libproto::router::MsgType::MiscellaneousReq; // scope 4 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x14)) }
        _28 = RoutingKey(move _29, move _30); // scope 4 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _27 = <RoutingKey as Into<std::string::String>>::into(move _28) -> [return: bb20, unwind: bb54]; // scope 4 at cita-auth/src/handler.rs:427:28: 427:73
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:427:67: 427:71
                                         // + literal: Const { ty: fn(RoutingKey) -> std::string::String {<RoutingKey as Into<std::string::String>>::into}, val: Value(<ZST>) }
    }

    bb20: {
        _72 = const false;               // scope 4 at cita-auth/src/handler.rs:427:75: 427:88
        _31 = move _23;                  // scope 4 at cita-auth/src/handler.rs:427:75: 427:88
        _26 = (move _27, move _31);      // scope 4 at cita-auth/src/handler.rs:427:27: 427:89
        _24 = pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send(move _25, move _26) -> [return: bb21, unwind: bb54]; // scope 4 at cita-auth/src/handler.rs:425:33: 427:90
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:427:22: 427:26
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, (std::string::String, Vec<u8>)) -> Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>> {pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send}, val: Value(<ZST>) }
    }

    bb21: {
        _70 = const true;                // scope 4 at cita-auth/src/handler.rs:427:89: 427:90
        _32 = discriminant(_24);         // scope 4 at cita-auth/src/handler.rs:425:24: 425:30
        switchInt(move _32) -> [1: bb22, otherwise: bb49]; // scope 4 at cita-auth/src/handler.rs:425:24: 425:30
    }

    bb22: {
        _70 = const false;               // scope 4 at cita-auth/src/handler.rs:425:28: 425:29
        _33 = move ((_24 as Err).0: pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>); // scope 4 at cita-auth/src/handler.rs:425:28: 425:29
        _34 = log::Level::Error;         // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:67:14: 67:34
        _37 = &_34;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _63 = const _;                   // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::get_chain_id, [], Some(promoted[2])) }
        _36 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _37, _63) -> [return: bb26, unwind: bb44]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb23: {
        _35 = const false;               // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb25;                    // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb24: {
        _39 = &_34;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _41 = log::max_level() -> [return: bb27, unwind: bb44]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb25: {
        switchInt(move _35) -> [0: bb32, otherwise: bb29]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb26: {
        switchInt(move _36) -> [0: bb23, otherwise: bb24]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb27: {
        _40 = &_41;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _38 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _39, move _40) -> [return: bb28, unwind: bb44]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb28: {
        _35 = move _38;                  // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb25;                    // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb29: {
        _62 = const _;                   // scope 5 at cita-auth/src/handler.rs:429:28: 429:70
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:429:28: 429:70
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(MsgHandler::get_chain_id, [], Some(promoted[1])) }
        _44 = _62 as &[&str] (Pointer(Unsize)); // scope 5 at cita-auth/src/handler.rs:429:28: 429:70
        _49 = &_33;                      // scope 5 at cita-auth/src/handler.rs:429:72: 429:73
        _48 = core::fmt::ArgumentV1::<'_>::new_debug::<pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>(_49) -> [return: bb30, unwind: bb44]; // scope 5 at cita-auth/src/handler.rs:429:72: 429:73
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:429:72: 429:73
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'b> fn(&'b pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>}, val: Value(<ZST>) }
    }

    bb30: {
        _47 = [move _48];                // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _46 = &_47;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _45 = _46 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _43 = Arguments::<'_>::new_v1(move _44, move _45) -> [return: bb31, unwind: bb44]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb31: {
        _61 = const _;                   // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::get_chain_id, [], Some(promoted[0])) }
        _42 = log::__private_api_log(move _43, _34, _61) -> [return: bb58, unwind: bb44]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb32: {
        drop(_33) -> [return: bb49, unwind: bb54]; // scope 3 at cita-auth/src/handler.rs:430:17: 430:18
    }

    bb33: {
        _50 = log::Level::Error;         // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:67:14: 67:34
        _53 = &_50;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _66 = const _;                   // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::get_chain_id, [], Some(promoted[5])) }
        _52 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _53, _66) -> [return: bb37, unwind: bb57]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb34: {
        _51 = const false;               // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb36;                    // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb35: {
        _55 = &_50;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _57 = log::max_level() -> [return: bb38, unwind: bb57]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb36: {
        switchInt(move _51) -> [0: bb42, otherwise: bb40]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb37: {
        switchInt(move _52) -> [0: bb34, otherwise: bb35]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb38: {
        _56 = &_57;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _54 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _55, move _56) -> [return: bb39, unwind: bb57]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb39: {
        _51 = move _54;                  // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb36;                    // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb40: {
        _65 = const _;                   // scope 6 at cita-auth/src/handler.rs:432:24: 432:78
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:432:24: 432:78
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(MsgHandler::get_chain_id, [], Some(promoted[4])) }
        _60 = _65 as &[&str] (Pointer(Unsize)); // scope 6 at cita-auth/src/handler.rs:432:24: 432:78
        _59 = Arguments::<'_>::new_const(move _60) -> [return: bb41, unwind: bb57]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb41: {
        _64 = const _;                   // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::get_chain_id, [], Some(promoted[3])) }
        _58 = log::__private_api_log(move _59, _50, _64) -> [return: bb59, unwind: bb57]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb42: {
        _74 = discriminant(_20);         // scope 0 at cita-auth/src/handler.rs:434:9: 434:10
        switchInt(move _74) -> [0: bb51, otherwise: bb50]; // scope 0 at cita-auth/src/handler.rs:434:9: 434:10
    }

    bb43: {
        return;                          // scope 0 at cita-auth/src/handler.rs:435:6: 435:6
    }

    bb44 (cleanup): {
        drop(_33) -> bb54;               // scope 3 at cita-auth/src/handler.rs:430:17: 430:18
    }

    bb45 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/handler.rs:420:5: 435:6
    }

    bb46: {
        _70 = const false;               // scope 3 at cita-auth/src/handler.rs:431:13: 431:14
        _72 = const false;               // scope 2 at cita-auth/src/handler.rs:431:13: 431:14
        goto -> bb42;                    // scope 0 at cita-auth/src/handler.rs:434:9: 434:10
    }

    bb47: {
        switchInt(_70) -> [0: bb46, otherwise: bb48]; // scope 3 at cita-auth/src/handler.rs:431:13: 431:14
    }

    bb48: {
        drop(((_24 as Err).0: pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>)) -> [return: bb46, unwind: bb54]; // scope 3 at cita-auth/src/handler.rs:431:13: 431:14
    }

    bb49: {
        _73 = discriminant(_24);         // scope 3 at cita-auth/src/handler.rs:431:13: 431:14
        switchInt(move _73) -> [1: bb47, otherwise: bb46]; // scope 3 at cita-auth/src/handler.rs:431:13: 431:14
    }

    bb50: {
        _71 = const false;               // scope 0 at cita-auth/src/handler.rs:434:9: 434:10
        goto -> bb43;                    // scope 0 at cita-auth/src/handler.rs:421:9: 434:10
    }

    bb51: {
        switchInt(_71) -> [0: bb50, otherwise: bb52]; // scope 0 at cita-auth/src/handler.rs:434:9: 434:10
    }

    bb52: {
        drop(((_20 as Ok).0: std::vec::Vec<u8>)) -> bb50; // scope 0 at cita-auth/src/handler.rs:434:9: 434:10
    }

    bb53 (cleanup): {
        drop(_23) -> bb57;               // scope 2 at cita-auth/src/handler.rs:431:13: 431:14
    }

    bb54 (cleanup): {
        switchInt(_72) -> [0: bb57, otherwise: bb53]; // scope 2 at cita-auth/src/handler.rs:431:13: 431:14
    }

    bb55 (cleanup): {
        switchInt(_71) -> [0: bb45, otherwise: bb56]; // scope 0 at cita-auth/src/handler.rs:434:9: 434:10
    }

    bb56 (cleanup): {
        drop(((_20 as Ok).0: std::vec::Vec<u8>)) -> bb45; // scope 0 at cita-auth/src/handler.rs:434:9: 434:10
    }

    bb57 (cleanup): {
        _75 = discriminant(_20);         // scope 0 at cita-auth/src/handler.rs:434:9: 434:10
        switchInt(move _75) -> [0: bb55, otherwise: bb45]; // scope 0 at cita-auth/src/handler.rs:434:9: 434:10
    }

    bb58: {
        goto -> bb32;                    // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb59: {
        goto -> bb42;                    // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::get_chain_id: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:429:21: 429:74
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:429:21: 429:74

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:429:21: 429:74
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:429:21: 429:74
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:429:21: 429:74
        _1 = (move _2, move _4, move _6, const 429_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::get_chain_id: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/handler.rs:429:28: 429:70
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/handler.rs:429:28: 429:70

    bb0: {
        _1 = [const "Send MiscellaneousReq message error "]; // scope 0 at cita-auth/src/handler.rs:429:28: 429:70
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:429:28: 429:70
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:429:28: 429:70
        return;                          // scope 0 at cita-auth/src/handler.rs:429:28: 429:70
    }
}

promoted[2] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::get_chain_id: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[3] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::get_chain_id: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:432:17: 432:79
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:432:17: 432:79

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:432:17: 432:79
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:432:17: 432:79
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:432:17: 432:79
        _1 = (move _2, move _4, move _6, const 432_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[4] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::get_chain_id: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/handler.rs:432:24: 432:78
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/handler.rs:432:24: 432:78

    bb0: {
        _1 = [const "Can not get rabbit mq message from MiscellaneousReq."]; // scope 0 at cita-auth/src/handler.rs:432:24: 432:78
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:432:24: 432:78
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:432:24: 432:78
        return;                          // scope 0 at cita-auth/src/handler.rs:432:24: 432:78
    }
}

promoted[5] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::get_chain_id: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[6] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::get_chain_id: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:422:13: 422:44
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:422:13: 422:44

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:422:13: 422:44
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:422:13: 422:44
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:422:13: 422:44
        _1 = (move _2, move _4, move _6, const 422_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[7] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::get_chain_id: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/handler.rs:422:20: 422:43
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/handler.rs:422:20: 422:43

    bb0: {
        _1 = [const "chain id is not ready"]; // scope 0 at cita-auth/src/handler.rs:422:20: 422:43
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:422:20: 422:43
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:422:20: 422:43
        return;                          // scope 0 at cita-auth/src/handler.rs:422:20: 422:43
    }
}

promoted[8] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::get_chain_id: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::process_msg(_1: &mut MsgHandler) -> () {
    debug self => _1;                    // in scope 0 at cita-auth/src/handler.rs:437:20: 437:29
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/handler.rs:437:31: 437:31
    let mut _2: std::result::Result<(std::string::String, std::vec::Vec<u8>), pubsub::crossbeam_channel::RecvTimeoutError>; // in scope 0 at cita-auth/src/handler.rs:438:37: 438:82
    let mut _3: &pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-auth/src/handler.rs:438:37: 438:82
    let mut _4: std::time::Duration;     // in scope 0 at cita-auth/src/handler.rs:438:62: 438:81
    let mut _5: isize;                   // in scope 0 at cita-auth/src/handler.rs:438:16: 438:34
    let mut _8: bool;                    // in scope 0 at cita-auth/src/handler.rs:439:16: 439:52
    let mut _9: &std::result::Result<libproto::Message, libproto::TryFromConvertError>; // in scope 0 at cita-auth/src/handler.rs:439:16: 439:52
    let _10: std::result::Result<libproto::Message, libproto::TryFromConvertError>; // in scope 0 at cita-auth/src/handler.rs:439:16: 439:43
    let mut _11: &std::vec::Vec<u8>;     // in scope 0 at cita-auth/src/handler.rs:439:34: 439:42
    let mut _13: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _14: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _15: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _16: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _17: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _18: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _19: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _20: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _21: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _22: &[&str];                // in scope 0 at cita-auth/src/handler.rs:440:24: 440:63
    let mut _23: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _24: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _25: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _26: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:440:65: 440:73
    let _27: &&std::vec::Vec<u8>;        // in scope 0 at cita-auth/src/handler.rs:440:65: 440:73
    let _28: &std::vec::Vec<u8>;         // in scope 0 at cita-auth/src/handler.rs:440:65: 440:73
    let mut _30: std::result::Result<libproto::Message, libproto::TryFromConvertError>; // in scope 0 at cita-auth/src/handler.rs:444:27: 444:54
    let mut _31: &std::vec::Vec<u8>;     // in scope 0 at cita-auth/src/handler.rs:444:45: 444:53
    let mut _33: &std::string::String;   // in scope 0 at cita-auth/src/handler.rs:445:49: 445:53
    let mut _35: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _36: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _37: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _38: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _39: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _40: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _41: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _42: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _43: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _44: &[&str];                // in scope 0 at cita-auth/src/handler.rs:446:20: 446:46
    let mut _45: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _46: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _47: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _48: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:446:48: 446:51
    let _49: &std::string::String;       // in scope 0 at cita-auth/src/handler.rs:446:48: 446:51
    let mut _50: isize;                  // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _51: isize;                  // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _52: isize;                  // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _53: isize;                  // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _54: isize;                  // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _55: isize;                  // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _56: isize;                  // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _57: std::option::Option<libproto::BlockTxHashes>; // in scope 0 at cita-auth/src/handler.rs:450:52: 450:78
    let mut _58: &mut libproto::Message; // in scope 0 at cita-auth/src/handler.rs:450:52: 450:78
    let mut _59: isize;                  // in scope 0 at cita-auth/src/handler.rs:450:28: 450:49
    let _61: &libproto::BlockTxHashes;   // in scope 0 at cita-auth/src/handler.rs:451:51: 451:67
    let mut _63: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _64: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _65: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _66: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _67: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _68: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _69: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _70: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _71: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _72: &[&str];                // in scope 0 at cita-auth/src/handler.rs:453:32: 453:80
    let mut _73: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _74: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _75: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _76: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:453:82: 453:85
    let _77: &libproto::Message;         // in scope 0 at cita-auth/src/handler.rs:453:82: 453:85
    let mut _78: std::option::Option<libproto::BlackList>; // in scope 0 at cita-auth/src/handler.rs:457:47: 457:68
    let mut _79: &mut libproto::Message; // in scope 0 at cita-auth/src/handler.rs:457:47: 457:68
    let mut _80: isize;                  // in scope 0 at cita-auth/src/handler.rs:457:28: 457:44
    let _82: ();                         // in scope 0 at cita-auth/src/handler.rs:458:25: 458:58
    let _83: &libproto::BlackList;       // in scope 0 at cita-auth/src/handler.rs:458:46: 458:57
    let mut _85: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _86: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _87: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _88: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _89: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _90: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _91: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _92: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _93: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _94: &[&str];                // in scope 0 at cita-auth/src/handler.rs:460:32: 460:75
    let mut _95: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _96: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _97: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _98: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:460:77: 460:80
    let _99: &libproto::Message;         // in scope 0 at cita-auth/src/handler.rs:460:77: 460:80
    let mut _100: std::option::Option<libproto::Request>; // in scope 0 at cita-auth/src/handler.rs:464:46: 464:64
    let mut _101: &mut libproto::Message; // in scope 0 at cita-auth/src/handler.rs:464:46: 464:64
    let mut _102: isize;                 // in scope 0 at cita-auth/src/handler.rs:464:28: 464:43
    let mut _105: libproto::router::RoutingKey; // in scope 0 at cita-auth/src/handler.rs:465:40: 465:52
    let mut _106: libproto::router::SubModules; // in scope 0 at cita-auth/src/handler.rs:465:67: 465:86
    let _107: ();                        // in scope 0 at cita-auth/src/handler.rs:466:25: 466:63
    let mut _108: bool;                  // in scope 0 at cita-auth/src/handler.rs:466:43: 466:51
    let mut _109: libproto::Request;     // in scope 0 at cita-auth/src/handler.rs:466:53: 466:62
    let mut _111: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _112: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _113: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _114: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _115: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _116: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _117: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _118: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _119: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _120: &[&str];               // in scope 0 at cita-auth/src/handler.rs:468:32: 468:72
    let mut _121: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _122: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _123: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _124: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:468:74: 468:77
    let _125: &libproto::Message;        // in scope 0 at cita-auth/src/handler.rs:468:74: 468:77
    let mut _126: std::option::Option<libproto::Miscellaneous>; // in scope 0 at cita-auth/src/handler.rs:472:50: 472:74
    let mut _127: &mut libproto::Message; // in scope 0 at cita-auth/src/handler.rs:472:50: 472:74
    let mut _128: isize;                 // in scope 0 at cita-auth/src/handler.rs:472:28: 472:47
    let _130: ();                        // in scope 0 at cita-auth/src/handler.rs:473:25: 473:64
    let _131: &libproto::Miscellaneous;  // in scope 0 at cita-auth/src/handler.rs:473:49: 473:63
    let mut _133: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _134: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _135: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _136: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _137: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _138: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _139: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _140: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _141: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _142: &[&str];               // in scope 0 at cita-auth/src/handler.rs:475:32: 475:78
    let mut _143: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _144: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _145: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _146: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:475:80: 475:83
    let _147: &libproto::Message;        // in scope 0 at cita-auth/src/handler.rs:475:80: 475:83
    let mut _148: std::option::Option<libproto::SnapshotReq>; // in scope 0 at cita-auth/src/handler.rs:479:49: 479:72
    let mut _149: &mut libproto::Message; // in scope 0 at cita-auth/src/handler.rs:479:49: 479:72
    let mut _150: isize;                 // in scope 0 at cita-auth/src/handler.rs:479:28: 479:46
    let _152: ();                        // in scope 0 at cita-auth/src/handler.rs:480:25: 480:58
    let _153: &libproto::SnapshotReq;    // in scope 0 at cita-auth/src/handler.rs:480:44: 480:57
    let mut _155: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _156: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _157: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _158: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _159: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _160: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _161: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _162: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _163: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _164: &[&str];               // in scope 0 at cita-auth/src/handler.rs:482:32: 482:73
    let mut _165: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _166: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _167: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _168: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:482:75: 482:78
    let _169: &libproto::Message;        // in scope 0 at cita-auth/src/handler.rs:482:75: 482:78
    let mut _170: std::option::Option<libproto::GetBlockTxn>; // in scope 0 at cita-auth/src/handler.rs:486:54: 486:78
    let mut _171: &mut libproto::Message; // in scope 0 at cita-auth/src/handler.rs:486:54: 486:78
    let mut _172: isize;                 // in scope 0 at cita-auth/src/handler.rs:486:28: 486:51
    let mut _175: &libproto::Message;    // in scope 0 at cita-auth/src/handler.rs:487:38: 487:54
    let _176: ();                        // in scope 0 at cita-auth/src/handler.rs:488:25: 488:76
    let mut _177: &mut libproto::GetBlockTxn; // in scope 0 at cita-auth/src/handler.rs:488:49: 488:67
    let mut _178: u32;                   // in scope 0 at cita-auth/src/handler.rs:488:69: 488:75
    let mut _180: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _181: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _182: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _183: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _184: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _185: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _186: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _187: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _188: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _189: &[&str];               // in scope 0 at cita-auth/src/handler.rs:490:32: 490:74
    let mut _190: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _191: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _192: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _193: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:490:76: 490:79
    let _194: &libproto::Message;        // in scope 0 at cita-auth/src/handler.rs:490:76: 490:79
    let mut _195: bool;                  // in scope 0 at cita-auth/src/handler.rs:495:24: 495:40
    let mut _196: bool;                  // in scope 0 at cita-auth/src/handler.rs:495:25: 495:40
    let mut _197: &handler::MsgHandler;  // in scope 0 at cita-auth/src/handler.rs:495:25: 495:40
    let mut _199: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _200: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _201: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _202: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _203: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _204: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _205: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _206: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _207: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _208: &[&str];               // in scope 0 at cita-auth/src/handler.rs:496:31: 496:84
    let _209: ();                        // in scope 0 at cita-auth/src/handler.rs:498:25: 498:55
    let mut _210: libproto::Message;     // in scope 0 at cita-auth/src/handler.rs:498:51: 498:54
    let mut _211: bool;                  // in scope 0 at cita-auth/src/handler.rs:502:24: 502:75
    let mut _212: bool;                  // in scope 0 at cita-auth/src/handler.rs:502:24: 502:40
    let mut _213: bool;                  // in scope 0 at cita-auth/src/handler.rs:502:25: 502:40
    let mut _214: &handler::MsgHandler;  // in scope 0 at cita-auth/src/handler.rs:502:25: 502:40
    let mut _215: bool;                  // in scope 0 at cita-auth/src/handler.rs:502:44: 502:75
    let mut _216: &std::option::Option<libproto::VerifyBlockReq>; // in scope 0 at cita-auth/src/handler.rs:502:44: 502:75
    let mut _218: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _219: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _220: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _221: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _222: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _223: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _224: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _225: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _226: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _227: &[&str];               // in scope 0 at cita-auth/src/handler.rs:503:31: 503:67
    let mut _229: &std::option::Option<libproto::VerifyBlockReq>; // in scope 0 at cita-auth/src/handler.rs:505:48: 505:77
    let mut _230: isize;                 // in scope 0 at cita-auth/src/handler.rs:506:32: 506:54
    let _232: ();                        // in scope 0 at cita-auth/src/handler.rs:507:29: 507:71
    let mut _233: libproto::Message;     // in scope 0 at cita-auth/src/handler.rs:507:49: 507:52
    let mut _235: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _236: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _237: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _238: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _239: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _240: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _241: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _242: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _243: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _244: &[&str];               // in scope 0 at cita-auth/src/handler.rs:512:28: 512:63
    let mut _245: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _246: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _247: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _248: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:512:65: 512:68
    let _249: &std::string::String;      // in scope 0 at cita-auth/src/handler.rs:512:65: 512:68
    let mut _283: bool;                  // in scope 0 at cita-auth/src/handler.rs:455:17: 455:18
    let mut _284: bool;                  // in scope 0 at cita-auth/src/handler.rs:462:17: 462:18
    let mut _285: bool;                  // in scope 0 at cita-auth/src/handler.rs:470:17: 470:18
    let mut _286: bool;                  // in scope 0 at cita-auth/src/handler.rs:477:17: 477:18
    let mut _287: bool;                  // in scope 0 at cita-auth/src/handler.rs:484:17: 484:18
    let mut _288: bool;                  // in scope 0 at cita-auth/src/handler.rs:492:17: 492:18
    let mut _289: bool;                  // in scope 0 at cita-auth/src/handler.rs:509:21: 509:22
    let mut _290: bool;                  // in scope 0 at cita-auth/src/handler.rs:515:9: 515:10
    let mut _291: bool;                  // in scope 0 at cita-auth/src/handler.rs:516:5: 516:6
    let mut _292: bool;                  // in scope 0 at cita-auth/src/handler.rs:516:5: 516:6
    let mut _293: bool;                  // in scope 0 at cita-auth/src/handler.rs:467:21: 467:22
    let mut _294: isize;                 // in scope 0 at cita-auth/src/handler.rs:455:17: 455:18
    let mut _295: isize;                 // in scope 0 at cita-auth/src/handler.rs:462:17: 462:18
    let mut _296: isize;                 // in scope 0 at cita-auth/src/handler.rs:470:17: 470:18
    let mut _297: isize;                 // in scope 0 at cita-auth/src/handler.rs:477:17: 477:18
    let mut _298: isize;                 // in scope 0 at cita-auth/src/handler.rs:484:17: 484:18
    let mut _299: isize;                 // in scope 0 at cita-auth/src/handler.rs:492:17: 492:18
    let mut _300: isize;                 // in scope 0 at cita-auth/src/handler.rs:509:21: 509:22
    let mut _301: isize;                 // in scope 0 at cita-auth/src/handler.rs:516:5: 516:6
    let mut _302: isize;                 // in scope 0 at cita-auth/src/handler.rs:492:17: 492:18
    let mut _303: isize;                 // in scope 0 at cita-auth/src/handler.rs:484:17: 484:18
    let mut _304: isize;                 // in scope 0 at cita-auth/src/handler.rs:477:17: 477:18
    let mut _305: isize;                 // in scope 0 at cita-auth/src/handler.rs:470:17: 470:18
    let mut _306: isize;                 // in scope 0 at cita-auth/src/handler.rs:462:17: 462:18
    let mut _307: isize;                 // in scope 0 at cita-auth/src/handler.rs:455:17: 455:18
    scope 1 {
        debug key => _6;                 // in scope 1 at cita-auth/src/handler.rs:438:20: 438:23
        debug payload => _7;             // in scope 1 at cita-auth/src/handler.rs:438:25: 438:32
        let _6: std::string::String;     // in scope 1 at cita-auth/src/handler.rs:438:20: 438:23
        let _7: std::vec::Vec<u8>;       // in scope 1 at cita-auth/src/handler.rs:438:25: 438:32
        let _12: log::Level;             // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _29: libproto::Message;  // in scope 1 at cita-auth/src/handler.rs:444:17: 444:24
        scope 2 {
            debug lvl => _12;            // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _280: &(&str, &str, &str, u32); // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _281: &[&str; 1];    // in scope 2 at cita-auth/src/handler.rs:440:24: 440:63
            let mut _282: &log::LevelFilter; // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
        scope 3 {
            debug msg => _29;            // in scope 3 at cita-auth/src/handler.rs:444:17: 444:24
            let _32: libproto::router::RoutingKey; // in scope 3 at cita-auth/src/handler.rs:445:17: 445:29
            scope 4 {
                debug rounting_key => _32; // in scope 4 at cita-auth/src/handler.rs:445:17: 445:29
                let _34: log::Level;     // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let _62: log::Level;     // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let _84: log::Level;     // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let _110: log::Level;    // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let _132: log::Level;    // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let _154: log::Level;    // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let _179: log::Level;    // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let _198: log::Level;    // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let _217: log::Level;    // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let _228: std::option::Option<libproto::VerifyBlockReq>; // in scope 4 at cita-auth/src/handler.rs:505:29: 505:45
                let _234: log::Level;    // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                scope 5 {
                    debug lvl => _34;    // in scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                    let mut _277: &(&str, &str, &str, u32); // in scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                    let mut _278: &[&str; 1]; // in scope 5 at cita-auth/src/handler.rs:446:20: 446:46
                    let mut _279: &log::LevelFilter; // in scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                }
                scope 6 {
                    debug block_tx_hashes => _60; // in scope 6 at cita-auth/src/handler.rs:450:33: 450:48
                    let _60: libproto::BlockTxHashes; // in scope 6 at cita-auth/src/handler.rs:450:33: 450:48
                }
                scope 7 {
                    debug lvl => _62;    // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                    let mut _271: &(&str, &str, &str, u32); // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                    let mut _272: &[&str; 2]; // in scope 7 at cita-auth/src/handler.rs:453:32: 453:80
                    let mut _273: &log::LevelFilter; // in scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                }
                scope 8 {
                    debug black_list => _81; // in scope 8 at cita-auth/src/handler.rs:457:33: 457:43
                    let _81: libproto::BlackList; // in scope 8 at cita-auth/src/handler.rs:457:33: 457:43
                }
                scope 9 {
                    debug lvl => _84;    // in scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                    let mut _274: &(&str, &str, &str, u32); // in scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                    let mut _275: &[&str; 2]; // in scope 9 at cita-auth/src/handler.rs:460:32: 460:75
                    let mut _276: &log::LevelFilter; // in scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                }
                scope 10 {
                    debug newtx_req => _103; // in scope 10 at cita-auth/src/handler.rs:464:33: 464:42
                    let _103: libproto::Request; // in scope 10 at cita-auth/src/handler.rs:464:33: 464:42
                    let _104: bool;      // in scope 10 at cita-auth/src/handler.rs:465:29: 465:37
                    scope 11 {
                        debug is_local => _104; // in scope 11 at cita-auth/src/handler.rs:465:29: 465:37
                    }
                }
                scope 12 {
                    debug lvl => _110;   // in scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                    let mut _250: &(&str, &str, &str, u32); // in scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                    let mut _251: &[&str; 2]; // in scope 12 at cita-auth/src/handler.rs:468:32: 468:72
                    let mut _252: &log::LevelFilter; // in scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                }
                scope 13 {
                    debug miscellaneous => _129; // in scope 13 at cita-auth/src/handler.rs:472:33: 472:46
                    let _129: libproto::Miscellaneous; // in scope 13 at cita-auth/src/handler.rs:472:33: 472:46
                }
                scope 14 {
                    debug lvl => _132;   // in scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                    let mut _253: &(&str, &str, &str, u32); // in scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                    let mut _254: &[&str; 2]; // in scope 14 at cita-auth/src/handler.rs:475:32: 475:78
                    let mut _255: &log::LevelFilter; // in scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                }
                scope 15 {
                    debug snapshot_req => _151; // in scope 15 at cita-auth/src/handler.rs:479:33: 479:45
                    let _151: libproto::SnapshotReq; // in scope 15 at cita-auth/src/handler.rs:479:33: 479:45
                }
                scope 16 {
                    debug lvl => _154;   // in scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                    let mut _256: &(&str, &str, &str, u32); // in scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                    let mut _257: &[&str; 2]; // in scope 16 at cita-auth/src/handler.rs:482:32: 482:73
                    let mut _258: &log::LevelFilter; // in scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                }
                scope 17 {
                    debug get_block_txn => _173; // in scope 17 at cita-auth/src/handler.rs:486:33: 486:50
                    let mut _173: libproto::GetBlockTxn; // in scope 17 at cita-auth/src/handler.rs:486:33: 486:50
                    let _174: u32;       // in scope 17 at cita-auth/src/handler.rs:487:29: 487:35
                    scope 18 {
                        debug origin => _174; // in scope 18 at cita-auth/src/handler.rs:487:29: 487:35
                    }
                }
                scope 19 {
                    debug lvl => _179;   // in scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                    let mut _259: &(&str, &str, &str, u32); // in scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                    let mut _260: &[&str; 2]; // in scope 19 at cita-auth/src/handler.rs:490:32: 490:74
                    let mut _261: &log::LevelFilter; // in scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                }
                scope 20 {
                    debug lvl => _198;   // in scope 20 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                    let mut _262: &(&str, &str, &str, u32); // in scope 20 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                    let mut _263: &[&str; 1]; // in scope 20 at cita-auth/src/handler.rs:496:31: 496:84
                    let mut _264: &log::LevelFilter; // in scope 20 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                }
                scope 21 {
                    debug lvl => _217;   // in scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                    let mut _265: &(&str, &str, &str, u32); // in scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                    let mut _266: &[&str; 1]; // in scope 21 at cita-auth/src/handler.rs:503:31: 503:67
                    let mut _267: &log::LevelFilter; // in scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                }
                scope 22 {
                    debug verify_block_req => _228; // in scope 22 at cita-auth/src/handler.rs:505:29: 505:45
                    scope 23 {
                        debug verify_block_req => _231; // in scope 23 at cita-auth/src/handler.rs:506:37: 506:53
                        let _231: libproto::VerifyBlockReq; // in scope 23 at cita-auth/src/handler.rs:506:37: 506:53
                    }
                }
                scope 24 {
                    debug lvl => _234;   // in scope 24 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                    let mut _268: &(&str, &str, &str, u32); // in scope 24 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                    let mut _269: &[&str; 1]; // in scope 24 at cita-auth/src/handler.rs:512:28: 512:63
                    let mut _270: &log::LevelFilter; // in scope 24 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                }
            }
        }
    }

    bb0: {
        _291 = const false;              // scope 1 at cita-auth/src/handler.rs:438:37: 438:82
        _287 = const false;              // scope 1 at cita-auth/src/handler.rs:438:37: 438:82
        _284 = const false;              // scope 1 at cita-auth/src/handler.rs:438:37: 438:82
        _290 = const false;              // scope 1 at cita-auth/src/handler.rs:438:37: 438:82
        _289 = const false;              // scope 1 at cita-auth/src/handler.rs:438:37: 438:82
        _286 = const false;              // scope 1 at cita-auth/src/handler.rs:438:37: 438:82
        _293 = const false;              // scope 1 at cita-auth/src/handler.rs:438:37: 438:82
        _283 = const false;              // scope 1 at cita-auth/src/handler.rs:438:37: 438:82
        _292 = const false;              // scope 1 at cita-auth/src/handler.rs:438:37: 438:82
        _288 = const false;              // scope 1 at cita-auth/src/handler.rs:438:37: 438:82
        _285 = const false;              // scope 1 at cita-auth/src/handler.rs:438:37: 438:82
        _3 = &((*_1).0: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>); // scope 1 at cita-auth/src/handler.rs:438:37: 438:82
        _4 = Duration::new(const 3_u64, const 0_u32) -> bb1; // scope 1 at cita-auth/src/handler.rs:438:62: 438:81
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:438:62: 438:75
                                         // + literal: Const { ty: fn(u64, u32) -> Duration {Duration::new}, val: Value(<ZST>) }
    }

    bb1: {
        _291 = const true;               // scope 1 at cita-auth/src/handler.rs:438:37: 438:82
        _292 = const true;               // scope 1 at cita-auth/src/handler.rs:438:37: 438:82
        _2 = pubsub::crossbeam_channel::Receiver::<(std::string::String, Vec<u8>)>::recv_timeout(move _3, move _4) -> bb2; // scope 1 at cita-auth/src/handler.rs:438:37: 438:82
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:438:49: 438:61
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Receiver<(std::string::String, Vec<u8>)>, Duration) -> Result<(std::string::String, Vec<u8>), pubsub::crossbeam_channel::RecvTimeoutError> {pubsub::crossbeam_channel::Receiver::<(std::string::String, Vec<u8>)>::recv_timeout}, val: Value(<ZST>) }
    }

    bb2: {
        _5 = discriminant(_2);           // scope 1 at cita-auth/src/handler.rs:438:16: 438:34
        switchInt(move _5) -> [0: bb3, otherwise: bb215]; // scope 1 at cita-auth/src/handler.rs:438:16: 438:34
    }

    bb3: {
        _292 = const false;              // scope 1 at cita-auth/src/handler.rs:438:20: 438:23
        _6 = move (((_2 as Ok).0: (std::string::String, std::vec::Vec<u8>)).0: std::string::String); // scope 1 at cita-auth/src/handler.rs:438:20: 438:23
        _291 = const false;              // scope 1 at cita-auth/src/handler.rs:438:25: 438:32
        _7 = move (((_2 as Ok).0: (std::string::String, std::vec::Vec<u8>)).1: std::vec::Vec<u8>); // scope 1 at cita-auth/src/handler.rs:438:25: 438:32
        _11 = &_7;                       // scope 1 at cita-auth/src/handler.rs:439:34: 439:42
        _10 = <libproto::Message as libproto::TryFrom<&Vec<u8>>>::try_from(move _11) -> [return: bb4, unwind: bb176]; // scope 1 at cita-auth/src/handler.rs:439:16: 439:43
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:439:16: 439:33
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&Vec<u8>) -> Result<libproto::Message, <libproto::Message as libproto::TryFrom<&Vec<u8>>>::Error> {<libproto::Message as libproto::TryFrom<&Vec<u8>>>::try_from}, val: Value(<ZST>) }
    }

    bb4: {
        _9 = &_10;                       // scope 1 at cita-auth/src/handler.rs:439:16: 439:52
        _8 = Result::<libproto::Message, TryFromConvertError>::is_err(move _9) -> [return: bb5, unwind: bb175]; // scope 1 at cita-auth/src/handler.rs:439:16: 439:52
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:439:44: 439:50
                                         // + literal: Const { ty: for<'a> fn(&'a Result<libproto::Message, TryFromConvertError>) -> bool {Result::<libproto::Message, TryFromConvertError>::is_err}, val: Value(<ZST>) }
    }

    bb5: {
        drop(_10) -> [return: bb6, unwind: bb176]; // scope 1 at cita-auth/src/handler.rs:439:51: 439:52
    }

    bb6: {
        switchInt(move _8) -> [0: bb18, otherwise: bb7]; // scope 1 at cita-auth/src/handler.rs:439:16: 439:52
    }

    bb7: {
        _12 = log::Level::Error;         // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:67:14: 67:34
        _15 = &_12;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _282 = const _;                  // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::process_msg, [], Some(promoted[32])) }
        _14 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _15, _282) -> [return: bb11, unwind: bb176]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb8: {
        _13 = const false;               // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb10;                    // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb9: {
        _17 = &_12;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _19 = log::max_level() -> [return: bb12, unwind: bb176]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb10: {
        switchInt(move _13) -> [0: bb17, otherwise: bb14]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb11: {
        switchInt(move _14) -> [0: bb8, otherwise: bb9]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb12: {
        _18 = &_19;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _16 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _17, move _18) -> [return: bb13, unwind: bb176]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb13: {
        _13 = move _16;                  // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb10;                    // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb14: {
        _281 = const _;                  // scope 2 at cita-auth/src/handler.rs:440:24: 440:63
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:440:24: 440:63
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(MsgHandler::process_msg, [], Some(promoted[31])) }
        _22 = _281 as &[&str] (Pointer(Unsize)); // scope 2 at cita-auth/src/handler.rs:440:24: 440:63
        _28 = &_7;                       // scope 2 at cita-auth/src/handler.rs:440:65: 440:73
        _27 = &_28;                      // scope 2 at cita-auth/src/handler.rs:440:65: 440:73
        _26 = core::fmt::ArgumentV1::<'_>::new_debug::<&Vec<u8>>(_27) -> [return: bb15, unwind: bb176]; // scope 2 at cita-auth/src/handler.rs:440:65: 440:73
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:440:65: 440:73
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b &Vec<u8>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<&Vec<u8>>}, val: Value(<ZST>) }
    }

    bb15: {
        _25 = [move _26];                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _24 = &_25;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _23 = _24 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _21 = Arguments::<'_>::new_v1(move _22, move _23) -> [return: bb16, unwind: bb176]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb16: {
        _280 = const _;                  // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::process_msg, [], Some(promoted[30])) }
        _20 = log::__private_api_log(move _21, _12, _280) -> [return: bb238, unwind: bb176]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb17: {
        drop(_7) -> [return: bb167, unwind: bb177]; // scope 0 at cita-auth/src/handler.rs:515:9: 515:10
    }

    bb18: {
        _31 = &_7;                       // scope 1 at cita-auth/src/handler.rs:444:45: 444:53
        _30 = <libproto::Message as libproto::TryFrom<&Vec<u8>>>::try_from(move _31) -> [return: bb19, unwind: bb176]; // scope 1 at cita-auth/src/handler.rs:444:27: 444:54
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:444:27: 444:44
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(&Vec<u8>) -> Result<libproto::Message, <libproto::Message as libproto::TryFrom<&Vec<u8>>>::Error> {<libproto::Message as libproto::TryFrom<&Vec<u8>>>::try_from}, val: Value(<ZST>) }
    }

    bb19: {
        _29 = Result::<libproto::Message, TryFromConvertError>::unwrap(move _30) -> [return: bb20, unwind: bb176]; // scope 1 at cita-auth/src/handler.rs:444:27: 444:63
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:444:55: 444:61
                                         // + literal: Const { ty: fn(Result<libproto::Message, TryFromConvertError>) -> libproto::Message {Result::<libproto::Message, TryFromConvertError>::unwrap}, val: Value(<ZST>) }
    }

    bb20: {
        _290 = const true;               // scope 1 at cita-auth/src/handler.rs:444:62: 444:63
        _33 = &_6;                       // scope 3 at cita-auth/src/handler.rs:445:49: 445:53
        _32 = <RoutingKey as From<&std::string::String>>::from(move _33) -> [return: bb21, unwind: bb237]; // scope 3 at cita-auth/src/handler.rs:445:32: 445:54
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:445:32: 445:48
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(&std::string::String) -> RoutingKey {<RoutingKey as From<&std::string::String>>::from}, val: Value(<ZST>) }
    }

    bb21: {
        _34 = log::Level::Trace;         // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _37 = &_34;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _279 = const _;                  // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::process_msg, [], Some(promoted[29])) }
        _36 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _37, _279) -> [return: bb25, unwind: bb237]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb22: {
        _35 = const false;               // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb24;                    // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb23: {
        _39 = &_34;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _41 = log::max_level() -> [return: bb26, unwind: bb237]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb24: {
        switchInt(move _35) -> [0: bb31, otherwise: bb28]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb25: {
        switchInt(move _36) -> [0: bb22, otherwise: bb23]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb26: {
        _40 = &_41;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _38 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _39, move _40) -> [return: bb27, unwind: bb237]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb27: {
        _35 = move _38;                  // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb24;                    // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb28: {
        _278 = const _;                  // scope 5 at cita-auth/src/handler.rs:446:20: 446:46
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:446:20: 446:46
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(MsgHandler::process_msg, [], Some(promoted[28])) }
        _44 = _278 as &[&str] (Pointer(Unsize)); // scope 5 at cita-auth/src/handler.rs:446:20: 446:46
        _49 = &_6;                       // scope 5 at cita-auth/src/handler.rs:446:48: 446:51
        _48 = core::fmt::ArgumentV1::<'_>::new_display::<std::string::String>(_49) -> [return: bb29, unwind: bb237]; // scope 5 at cita-auth/src/handler.rs:446:48: 446:51
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:446:48: 446:51
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: for<'b> fn(&'b std::string::String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<std::string::String>}, val: Value(<ZST>) }
    }

    bb29: {
        _47 = [move _48];                // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _46 = &_47;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _45 = _46 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _43 = Arguments::<'_>::new_v1(move _44, move _45) -> [return: bb30, unwind: bb237]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb30: {
        _277 = const _;                  // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::process_msg, [], Some(promoted[27])) }
        _42 = log::__private_api_log(move _43, _34, _277) -> [return: bb239, unwind: bb237]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb31: {
        _56 = discriminant((_32.0: libproto::router::SubModules)); // scope 4 at cita-auth/src/handler.rs:447:19: 447:31
        switchInt(move _56) -> [0: bb32, 1: bb34, 2: bb35, 3: bb36, 5: bb37, 7: bb38, otherwise: bb33]; // scope 4 at cita-auth/src/handler.rs:447:13: 447:31
    }

    bb32: {
        _50 = discriminant((_32.1: libproto::router::MsgType)); // scope 4 at cita-auth/src/handler.rs:447:19: 447:31
        switchInt(move _50) -> [29: bb67, otherwise: bb33]; // scope 4 at cita-auth/src/handler.rs:447:13: 447:31
    }

    bb33: {
        _234 = log::Level::Error;        // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:67:14: 67:34
        _237 = &_234;                    // scope 24 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _270 = const _;                  // scope 24 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::process_msg, [], Some(promoted[20])) }
        _236 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _237, _270) -> [return: bb158, unwind: bb237]; // scope 24 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb34: {
        _51 = discriminant((_32.1: libproto::router::MsgType)); // scope 4 at cita-auth/src/handler.rs:447:19: 447:31
        switchInt(move _51) -> [1: bb67, 23: bb110, 24: bb137, otherwise: bb33]; // scope 4 at cita-auth/src/handler.rs:447:13: 447:31
    }

    bb35: {
        _52 = discriminant((_32.1: libproto::router::MsgType)); // scope 4 at cita-auth/src/handler.rs:447:19: 447:31
        switchInt(move _52) -> [12: bb39, otherwise: bb33]; // scope 4 at cita-auth/src/handler.rs:447:13: 447:31
    }

    bb36: {
        _53 = discriminant((_32.1: libproto::router::MsgType)); // scope 4 at cita-auth/src/handler.rs:447:19: 447:31
        switchInt(move _53) -> [14: bb125, otherwise: bb33]; // scope 4 at cita-auth/src/handler.rs:447:13: 447:31
    }

    bb37: {
        _54 = discriminant((_32.1: libproto::router::MsgType)); // scope 4 at cita-auth/src/handler.rs:447:19: 447:31
        switchInt(move _54) -> [19: bb82, 21: bb53, otherwise: bb33]; // scope 4 at cita-auth/src/handler.rs:447:13: 447:31
    }

    bb38: {
        _55 = discriminant((_32.1: libproto::router::MsgType)); // scope 4 at cita-auth/src/handler.rs:447:19: 447:31
        switchInt(move _55) -> [17: bb96, otherwise: bb33]; // scope 4 at cita-auth/src/handler.rs:447:13: 447:31
    }

    bb39: {
        _58 = &mut _29;                  // scope 6 at cita-auth/src/handler.rs:450:52: 450:78
        _57 = libproto::Message::take_block_tx_hashes(move _58) -> [return: bb40, unwind: bb237]; // scope 6 at cita-auth/src/handler.rs:450:52: 450:78
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:450:56: 450:76
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Message) -> std::option::Option<libproto::BlockTxHashes> {libproto::Message::take_block_tx_hashes}, val: Value(<ZST>) }
    }

    bb40: {
        _283 = const true;               // scope 6 at cita-auth/src/handler.rs:450:77: 450:78
        _59 = discriminant(_57);         // scope 6 at cita-auth/src/handler.rs:450:28: 450:49
        switchInt(move _59) -> [1: bb41, otherwise: bb43]; // scope 6 at cita-auth/src/handler.rs:450:28: 450:49
    }

    bb41: {
        _283 = const false;              // scope 6 at cita-auth/src/handler.rs:450:33: 450:48
        _60 = move ((_57 as Some).0: libproto::BlockTxHashes); // scope 6 at cita-auth/src/handler.rs:450:33: 450:48
        _61 = &_60;                      // scope 6 at cita-auth/src/handler.rs:451:51: 451:67
        _0 = MsgHandler::deal_block_tx_hashes(_1, _61) -> [return: bb42, unwind: bb174]; // scope 6 at cita-auth/src/handler.rs:451:25: 451:68
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:451:30: 451:50
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut MsgHandler, &'b libproto::BlockTxHashes) {MsgHandler::deal_block_tx_hashes}, val: Value(<ZST>) }
    }

    bb42: {
        drop(_60) -> [return: bb182, unwind: bb235]; // scope 4 at cita-auth/src/handler.rs:452:21: 452:22
    }

    bb43: {
        _62 = log::Level::Error;         // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:67:14: 67:34
        _65 = &_62;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _273 = const _;                  // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::process_msg, [], Some(promoted[23])) }
        _64 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _65, _273) -> [return: bb47, unwind: bb235]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb44: {
        _63 = const false;               // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb46;                    // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb45: {
        _67 = &_62;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _69 = log::max_level() -> [return: bb48, unwind: bb235]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb46: {
        switchInt(move _63) -> [0: bb182, otherwise: bb50]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb47: {
        switchInt(move _64) -> [0: bb44, otherwise: bb45]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb48: {
        _68 = &_69;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _66 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _67, move _68) -> [return: bb49, unwind: bb235]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb49: {
        _63 = move _66;                  // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb46;                    // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb50: {
        _272 = const _;                  // scope 7 at cita-auth/src/handler.rs:453:32: 453:80
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:453:32: 453:80
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(MsgHandler::process_msg, [], Some(promoted[22])) }
        _72 = _272 as &[&str] (Pointer(Unsize)); // scope 7 at cita-auth/src/handler.rs:453:32: 453:80
        _77 = &_29;                      // scope 7 at cita-auth/src/handler.rs:453:82: 453:85
        _76 = core::fmt::ArgumentV1::<'_>::new_debug::<libproto::Message>(_77) -> [return: bb51, unwind: bb235]; // scope 7 at cita-auth/src/handler.rs:453:82: 453:85
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:453:82: 453:85
                                         // + user_ty: UserType(8)
                                         // + literal: Const { ty: for<'b> fn(&'b libproto::Message) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<libproto::Message>}, val: Value(<ZST>) }
    }

    bb51: {
        _75 = [move _76];                // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _74 = &_75;                      // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _73 = _74 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _71 = Arguments::<'_>::new_v1(move _72, move _73) -> [return: bb52, unwind: bb235]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb52: {
        _271 = const _;                  // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::process_msg, [], Some(promoted[21])) }
        _70 = log::__private_api_log(move _71, _62, _271) -> [return: bb240, unwind: bb235]; // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb53: {
        _79 = &mut _29;                  // scope 8 at cita-auth/src/handler.rs:457:47: 457:68
        _78 = libproto::Message::take_black_list(move _79) -> [return: bb54, unwind: bb237]; // scope 8 at cita-auth/src/handler.rs:457:47: 457:68
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:457:51: 457:66
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Message) -> std::option::Option<libproto::BlackList> {libproto::Message::take_black_list}, val: Value(<ZST>) }
    }

    bb54: {
        _284 = const true;               // scope 8 at cita-auth/src/handler.rs:457:67: 457:68
        _80 = discriminant(_78);         // scope 8 at cita-auth/src/handler.rs:457:28: 457:44
        switchInt(move _80) -> [1: bb55, otherwise: bb57]; // scope 8 at cita-auth/src/handler.rs:457:28: 457:44
    }

    bb55: {
        _284 = const false;              // scope 8 at cita-auth/src/handler.rs:457:33: 457:43
        _81 = move ((_78 as Some).0: libproto::BlackList); // scope 8 at cita-auth/src/handler.rs:457:33: 457:43
        _83 = &_81;                      // scope 8 at cita-auth/src/handler.rs:458:46: 458:57
        _82 = MsgHandler::deal_black_list(_1, _83) -> [return: bb56, unwind: bb173]; // scope 8 at cita-auth/src/handler.rs:458:25: 458:58
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:458:30: 458:45
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut MsgHandler, &'b libproto::BlackList) {MsgHandler::deal_black_list}, val: Value(<ZST>) }
    }

    bb56: {
        drop(_81) -> [return: bb186, unwind: bb232]; // scope 4 at cita-auth/src/handler.rs:459:21: 459:22
    }

    bb57: {
        _84 = log::Level::Error;         // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:67:14: 67:34
        _87 = &_84;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _276 = const _;                  // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::process_msg, [], Some(promoted[26])) }
        _86 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _87, _276) -> [return: bb61, unwind: bb232]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb58: {
        _85 = const false;               // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb60;                    // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb59: {
        _89 = &_84;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _91 = log::max_level() -> [return: bb62, unwind: bb232]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb60: {
        switchInt(move _85) -> [0: bb186, otherwise: bb64]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb61: {
        switchInt(move _86) -> [0: bb58, otherwise: bb59]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb62: {
        _90 = &_91;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _88 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _89, move _90) -> [return: bb63, unwind: bb232]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb63: {
        _85 = move _88;                  // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb60;                    // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb64: {
        _275 = const _;                  // scope 9 at cita-auth/src/handler.rs:460:32: 460:75
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:460:32: 460:75
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(MsgHandler::process_msg, [], Some(promoted[25])) }
        _94 = _275 as &[&str] (Pointer(Unsize)); // scope 9 at cita-auth/src/handler.rs:460:32: 460:75
        _99 = &_29;                      // scope 9 at cita-auth/src/handler.rs:460:77: 460:80
        _98 = core::fmt::ArgumentV1::<'_>::new_debug::<libproto::Message>(_99) -> [return: bb65, unwind: bb232]; // scope 9 at cita-auth/src/handler.rs:460:77: 460:80
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:460:77: 460:80
                                         // + user_ty: UserType(10)
                                         // + literal: Const { ty: for<'b> fn(&'b libproto::Message) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<libproto::Message>}, val: Value(<ZST>) }
    }

    bb65: {
        _97 = [move _98];                // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _96 = &_97;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _95 = _96 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _93 = Arguments::<'_>::new_v1(move _94, move _95) -> [return: bb66, unwind: bb232]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(9)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb66: {
        _274 = const _;                  // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::process_msg, [], Some(promoted[24])) }
        _92 = log::__private_api_log(move _93, _84, _274) -> [return: bb241, unwind: bb232]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb67: {
        _101 = &mut _29;                 // scope 10 at cita-auth/src/handler.rs:464:46: 464:64
        _100 = libproto::Message::take_request(move _101) -> [return: bb68, unwind: bb237]; // scope 10 at cita-auth/src/handler.rs:464:46: 464:64
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:464:50: 464:62
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Message) -> std::option::Option<libproto::Request> {libproto::Message::take_request}, val: Value(<ZST>) }
    }

    bb68: {
        _285 = const true;               // scope 10 at cita-auth/src/handler.rs:464:63: 464:64
        _102 = discriminant(_100);       // scope 10 at cita-auth/src/handler.rs:464:28: 464:43
        switchInt(move _102) -> [1: bb69, otherwise: bb72]; // scope 10 at cita-auth/src/handler.rs:464:28: 464:43
    }

    bb69: {
        _285 = const false;              // scope 10 at cita-auth/src/handler.rs:464:33: 464:42
        _293 = const true;               // scope 10 at cita-auth/src/handler.rs:464:33: 464:42
        _103 = move ((_100 as Some).0: libproto::Request); // scope 10 at cita-auth/src/handler.rs:464:33: 464:42
        _105 = _32;                      // scope 10 at cita-auth/src/handler.rs:465:40: 465:52
        _106 = const Jsonrpc;            // scope 10 at cita-auth/src/handler.rs:465:67: 465:86
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x00)) }
        _104 = RoutingKey::is_sub_module(move _105, move _106) -> [return: bb70, unwind: bb226]; // scope 10 at cita-auth/src/handler.rs:465:40: 465:87
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:465:53: 465:66
                                         // + literal: Const { ty: fn(RoutingKey, SubModules) -> bool {RoutingKey::is_sub_module}, val: Value(<ZST>) }
    }

    bb70: {
        _108 = _104;                     // scope 11 at cita-auth/src/handler.rs:466:43: 466:51
        _293 = const false;              // scope 11 at cita-auth/src/handler.rs:466:53: 466:62
        _109 = move _103;                // scope 11 at cita-auth/src/handler.rs:466:53: 466:62
        _107 = MsgHandler::deal_request(_1, move _108, move _109) -> [return: bb71, unwind: bb226]; // scope 11 at cita-auth/src/handler.rs:466:25: 466:63
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:466:30: 466:42
                                         // + literal: Const { ty: for<'a> fn(&'a mut MsgHandler, bool, libproto::Request) {MsgHandler::deal_request}, val: Value(<ZST>) }
    }

    bb71: {
        _293 = const false;              // scope 4 at cita-auth/src/handler.rs:467:21: 467:22
        goto -> bb190;                   // scope 4 at cita-auth/src/handler.rs:464:21: 469:22
    }

    bb72: {
        _110 = log::Level::Error;        // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:67:14: 67:34
        _113 = &_110;                    // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _252 = const _;                  // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::process_msg, [], Some(promoted[2])) }
        _112 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _113, _252) -> [return: bb76, unwind: bb229]; // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb73: {
        _111 = const false;              // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb75;                    // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb74: {
        _115 = &_110;                    // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _117 = log::max_level() -> [return: bb77, unwind: bb229]; // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb75: {
        switchInt(move _111) -> [0: bb190, otherwise: bb79]; // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb76: {
        switchInt(move _112) -> [0: bb73, otherwise: bb74]; // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb77: {
        _116 = &_117;                    // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _114 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _115, move _116) -> [return: bb78, unwind: bb229]; // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb78: {
        _111 = move _114;                // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb75;                    // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb79: {
        _251 = const _;                  // scope 12 at cita-auth/src/handler.rs:468:32: 468:72
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:468:32: 468:72
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(MsgHandler::process_msg, [], Some(promoted[1])) }
        _120 = _251 as &[&str] (Pointer(Unsize)); // scope 12 at cita-auth/src/handler.rs:468:32: 468:72
        _125 = &_29;                     // scope 12 at cita-auth/src/handler.rs:468:74: 468:77
        _124 = core::fmt::ArgumentV1::<'_>::new_debug::<libproto::Message>(_125) -> [return: bb80, unwind: bb229]; // scope 12 at cita-auth/src/handler.rs:468:74: 468:77
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:468:74: 468:77
                                         // + user_ty: UserType(12)
                                         // + literal: Const { ty: for<'b> fn(&'b libproto::Message) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<libproto::Message>}, val: Value(<ZST>) }
    }

    bb80: {
        _123 = [move _124];              // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _122 = &_123;                    // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _121 = _122 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _119 = Arguments::<'_>::new_v1(move _120, move _121) -> [return: bb81, unwind: bb229]; // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(11)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb81: {
        _250 = const _;                  // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::process_msg, [], Some(promoted[0])) }
        _118 = log::__private_api_log(move _119, _110, _250) -> [return: bb242, unwind: bb229]; // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb82: {
        _127 = &mut _29;                 // scope 13 at cita-auth/src/handler.rs:472:50: 472:74
        _126 = libproto::Message::take_miscellaneous(move _127) -> [return: bb83, unwind: bb237]; // scope 13 at cita-auth/src/handler.rs:472:50: 472:74
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:472:54: 472:72
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Message) -> std::option::Option<libproto::Miscellaneous> {libproto::Message::take_miscellaneous}, val: Value(<ZST>) }
    }

    bb83: {
        _286 = const true;               // scope 13 at cita-auth/src/handler.rs:472:73: 472:74
        _128 = discriminant(_126);       // scope 13 at cita-auth/src/handler.rs:472:28: 472:47
        switchInt(move _128) -> [1: bb84, otherwise: bb86]; // scope 13 at cita-auth/src/handler.rs:472:28: 472:47
    }

    bb84: {
        _286 = const false;              // scope 13 at cita-auth/src/handler.rs:472:33: 472:46
        _129 = move ((_126 as Some).0: libproto::Miscellaneous); // scope 13 at cita-auth/src/handler.rs:472:33: 472:46
        _131 = &_129;                    // scope 13 at cita-auth/src/handler.rs:473:49: 473:63
        _130 = MsgHandler::deal_miscellaneous(_1, _131) -> [return: bb85, unwind: bb172]; // scope 13 at cita-auth/src/handler.rs:473:25: 473:64
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:473:30: 473:48
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut MsgHandler, &'b libproto::Miscellaneous) {MsgHandler::deal_miscellaneous}, val: Value(<ZST>) }
    }

    bb85: {
        drop(_129) -> [return: bb194, unwind: bb224]; // scope 4 at cita-auth/src/handler.rs:474:21: 474:22
    }

    bb86: {
        _132 = log::Level::Error;        // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:67:14: 67:34
        _135 = &_132;                    // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _255 = const _;                  // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::process_msg, [], Some(promoted[5])) }
        _134 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _135, _255) -> [return: bb90, unwind: bb224]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb87: {
        _133 = const false;              // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb89;                    // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb88: {
        _137 = &_132;                    // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _139 = log::max_level() -> [return: bb91, unwind: bb224]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb89: {
        switchInt(move _133) -> [0: bb194, otherwise: bb93]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb90: {
        switchInt(move _134) -> [0: bb87, otherwise: bb88]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb91: {
        _138 = &_139;                    // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _136 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _137, move _138) -> [return: bb92, unwind: bb224]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb92: {
        _133 = move _136;                // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb89;                    // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb93: {
        _254 = const _;                  // scope 14 at cita-auth/src/handler.rs:475:32: 475:78
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:475:32: 475:78
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(MsgHandler::process_msg, [], Some(promoted[4])) }
        _142 = _254 as &[&str] (Pointer(Unsize)); // scope 14 at cita-auth/src/handler.rs:475:32: 475:78
        _147 = &_29;                     // scope 14 at cita-auth/src/handler.rs:475:80: 475:83
        _146 = core::fmt::ArgumentV1::<'_>::new_debug::<libproto::Message>(_147) -> [return: bb94, unwind: bb224]; // scope 14 at cita-auth/src/handler.rs:475:80: 475:83
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:475:80: 475:83
                                         // + user_ty: UserType(14)
                                         // + literal: Const { ty: for<'b> fn(&'b libproto::Message) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<libproto::Message>}, val: Value(<ZST>) }
    }

    bb94: {
        _145 = [move _146];              // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _144 = &_145;                    // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _143 = _144 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _141 = Arguments::<'_>::new_v1(move _142, move _143) -> [return: bb95, unwind: bb224]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(13)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb95: {
        _253 = const _;                  // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::process_msg, [], Some(promoted[3])) }
        _140 = log::__private_api_log(move _141, _132, _253) -> [return: bb243, unwind: bb224]; // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb96: {
        _149 = &mut _29;                 // scope 15 at cita-auth/src/handler.rs:479:49: 479:72
        _148 = libproto::Message::take_snapshot_req(move _149) -> [return: bb97, unwind: bb237]; // scope 15 at cita-auth/src/handler.rs:479:49: 479:72
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:479:53: 479:70
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Message) -> std::option::Option<libproto::SnapshotReq> {libproto::Message::take_snapshot_req}, val: Value(<ZST>) }
    }

    bb97: {
        _287 = const true;               // scope 15 at cita-auth/src/handler.rs:479:71: 479:72
        _150 = discriminant(_148);       // scope 15 at cita-auth/src/handler.rs:479:28: 479:46
        switchInt(move _150) -> [1: bb98, otherwise: bb100]; // scope 15 at cita-auth/src/handler.rs:479:28: 479:46
    }

    bb98: {
        _287 = const false;              // scope 15 at cita-auth/src/handler.rs:479:33: 479:45
        _151 = move ((_148 as Some).0: libproto::SnapshotReq); // scope 15 at cita-auth/src/handler.rs:479:33: 479:45
        _153 = &_151;                    // scope 15 at cita-auth/src/handler.rs:480:44: 480:57
        _152 = MsgHandler::deal_snapshot(_1, _153) -> [return: bb99, unwind: bb171]; // scope 15 at cita-auth/src/handler.rs:480:25: 480:58
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:480:30: 480:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut MsgHandler, &'b libproto::SnapshotReq) {MsgHandler::deal_snapshot}, val: Value(<ZST>) }
    }

    bb99: {
        drop(_151) -> [return: bb198, unwind: bb221]; // scope 4 at cita-auth/src/handler.rs:481:21: 481:22
    }

    bb100: {
        _154 = log::Level::Error;        // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:67:14: 67:34
        _157 = &_154;                    // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _258 = const _;                  // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::process_msg, [], Some(promoted[8])) }
        _156 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _157, _258) -> [return: bb104, unwind: bb221]; // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb101: {
        _155 = const false;              // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb103;                   // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb102: {
        _159 = &_154;                    // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _161 = log::max_level() -> [return: bb105, unwind: bb221]; // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb103: {
        switchInt(move _155) -> [0: bb198, otherwise: bb107]; // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb104: {
        switchInt(move _156) -> [0: bb101, otherwise: bb102]; // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb105: {
        _160 = &_161;                    // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _158 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _159, move _160) -> [return: bb106, unwind: bb221]; // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb106: {
        _155 = move _158;                // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb103;                   // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb107: {
        _257 = const _;                  // scope 16 at cita-auth/src/handler.rs:482:32: 482:73
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:482:32: 482:73
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(MsgHandler::process_msg, [], Some(promoted[7])) }
        _164 = _257 as &[&str] (Pointer(Unsize)); // scope 16 at cita-auth/src/handler.rs:482:32: 482:73
        _169 = &_29;                     // scope 16 at cita-auth/src/handler.rs:482:75: 482:78
        _168 = core::fmt::ArgumentV1::<'_>::new_debug::<libproto::Message>(_169) -> [return: bb108, unwind: bb221]; // scope 16 at cita-auth/src/handler.rs:482:75: 482:78
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:482:75: 482:78
                                         // + user_ty: UserType(16)
                                         // + literal: Const { ty: for<'b> fn(&'b libproto::Message) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<libproto::Message>}, val: Value(<ZST>) }
    }

    bb108: {
        _167 = [move _168];              // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _166 = &_167;                    // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _165 = _166 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _163 = Arguments::<'_>::new_v1(move _164, move _165) -> [return: bb109, unwind: bb221]; // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(15)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb109: {
        _256 = const _;                  // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::process_msg, [], Some(promoted[6])) }
        _162 = log::__private_api_log(move _163, _154, _256) -> [return: bb244, unwind: bb221]; // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb110: {
        _171 = &mut _29;                 // scope 17 at cita-auth/src/handler.rs:486:54: 486:78
        _170 = libproto::Message::take_get_block_txn(move _171) -> [return: bb111, unwind: bb237]; // scope 17 at cita-auth/src/handler.rs:486:54: 486:78
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:486:58: 486:76
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Message) -> std::option::Option<libproto::GetBlockTxn> {libproto::Message::take_get_block_txn}, val: Value(<ZST>) }
    }

    bb111: {
        _288 = const true;               // scope 17 at cita-auth/src/handler.rs:486:77: 486:78
        _172 = discriminant(_170);       // scope 17 at cita-auth/src/handler.rs:486:28: 486:51
        switchInt(move _172) -> [1: bb112, otherwise: bb115]; // scope 17 at cita-auth/src/handler.rs:486:28: 486:51
    }

    bb112: {
        _288 = const false;              // scope 17 at cita-auth/src/handler.rs:486:33: 486:50
        _173 = move ((_170 as Some).0: libproto::GetBlockTxn); // scope 17 at cita-auth/src/handler.rs:486:33: 486:50
        _175 = &_29;                     // scope 17 at cita-auth/src/handler.rs:487:38: 487:54
        _174 = libproto::Message::get_origin(move _175) -> [return: bb113, unwind: bb170]; // scope 17 at cita-auth/src/handler.rs:487:38: 487:54
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:487:42: 487:52
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Message) -> u32 {libproto::Message::get_origin}, val: Value(<ZST>) }
    }

    bb113: {
        _177 = &mut _173;                // scope 18 at cita-auth/src/handler.rs:488:49: 488:67
        _178 = _174;                     // scope 18 at cita-auth/src/handler.rs:488:69: 488:75
        _176 = MsgHandler::deal_get_block_txn(_1, _177, move _178) -> [return: bb114, unwind: bb170]; // scope 18 at cita-auth/src/handler.rs:488:25: 488:76
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:488:30: 488:48
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut MsgHandler, &'b mut libproto::GetBlockTxn, u32) {MsgHandler::deal_get_block_txn}, val: Value(<ZST>) }
    }

    bb114: {
        drop(_173) -> [return: bb202, unwind: bb218]; // scope 4 at cita-auth/src/handler.rs:489:21: 489:22
    }

    bb115: {
        _179 = log::Level::Error;        // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:67:14: 67:34
        _182 = &_179;                    // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _261 = const _;                  // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::process_msg, [], Some(promoted[11])) }
        _181 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _182, _261) -> [return: bb119, unwind: bb218]; // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb116: {
        _180 = const false;              // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb118;                   // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb117: {
        _184 = &_179;                    // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _186 = log::max_level() -> [return: bb120, unwind: bb218]; // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb118: {
        switchInt(move _180) -> [0: bb202, otherwise: bb122]; // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb119: {
        switchInt(move _181) -> [0: bb116, otherwise: bb117]; // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb120: {
        _185 = &_186;                    // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _183 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _184, move _185) -> [return: bb121, unwind: bb218]; // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb121: {
        _180 = move _183;                // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb118;                   // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb122: {
        _260 = const _;                  // scope 19 at cita-auth/src/handler.rs:490:32: 490:74
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:490:32: 490:74
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(MsgHandler::process_msg, [], Some(promoted[10])) }
        _189 = _260 as &[&str] (Pointer(Unsize)); // scope 19 at cita-auth/src/handler.rs:490:32: 490:74
        _194 = &_29;                     // scope 19 at cita-auth/src/handler.rs:490:76: 490:79
        _193 = core::fmt::ArgumentV1::<'_>::new_debug::<libproto::Message>(_194) -> [return: bb123, unwind: bb218]; // scope 19 at cita-auth/src/handler.rs:490:76: 490:79
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:490:76: 490:79
                                         // + user_ty: UserType(18)
                                         // + literal: Const { ty: for<'b> fn(&'b libproto::Message) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<libproto::Message>}, val: Value(<ZST>) }
    }

    bb123: {
        _192 = [move _193];              // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _191 = &_192;                    // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _190 = _191 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _188 = Arguments::<'_>::new_v1(move _189, move _190) -> [return: bb124, unwind: bb218]; // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(17)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb124: {
        _259 = const _;                  // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::process_msg, [], Some(promoted[9])) }
        _187 = log::__private_api_log(move _188, _179, _259) -> [return: bb245, unwind: bb218]; // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb125: {
        _197 = &(*_1);                   // scope 4 at cita-auth/src/handler.rs:495:25: 495:40
        _196 = MsgHandler::is_ready(move _197) -> [return: bb126, unwind: bb237]; // scope 4 at cita-auth/src/handler.rs:495:25: 495:40
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:495:30: 495:38
                                         // + literal: Const { ty: for<'a> fn(&'a MsgHandler) -> bool {MsgHandler::is_ready}, val: Value(<ZST>) }
    }

    bb126: {
        _195 = Not(move _196);           // scope 4 at cita-auth/src/handler.rs:495:24: 495:40
        switchInt(move _195) -> [0: bb136, otherwise: bb127]; // scope 4 at cita-auth/src/handler.rs:495:24: 495:40
    }

    bb127: {
        _198 = log::Level::Info;         // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _201 = &_198;                    // scope 20 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _264 = const _;                  // scope 20 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::process_msg, [], Some(promoted[14])) }
        _200 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _201, _264) -> [return: bb131, unwind: bb237]; // scope 20 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb128: {
        _199 = const false;              // scope 20 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb130;                   // scope 20 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb129: {
        _203 = &_198;                    // scope 20 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _205 = log::max_level() -> [return: bb132, unwind: bb237]; // scope 20 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb130: {
        switchInt(move _199) -> [0: bb164, otherwise: bb134]; // scope 20 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb131: {
        switchInt(move _200) -> [0: bb128, otherwise: bb129]; // scope 20 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb132: {
        _204 = &_205;                    // scope 20 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _202 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _203, move _204) -> [return: bb133, unwind: bb237]; // scope 20 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb133: {
        _199 = move _202;                // scope 20 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb130;                   // scope 20 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb134: {
        _263 = const _;                  // scope 20 at cita-auth/src/handler.rs:496:31: 496:84
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:496:31: 496:84
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(MsgHandler::process_msg, [], Some(promoted[13])) }
        _208 = _263 as &[&str] (Pointer(Unsize)); // scope 20 at cita-auth/src/handler.rs:496:31: 496:84
        _207 = Arguments::<'_>::new_const(move _208) -> [return: bb135, unwind: bb237]; // scope 20 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(19)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb135: {
        _262 = const _;                  // scope 20 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::process_msg, [], Some(promoted[12])) }
        _206 = log::__private_api_log(move _207, _198, _262) -> [return: bb246, unwind: bb237]; // scope 20 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb136: {
        _290 = const false;              // scope 4 at cita-auth/src/handler.rs:498:51: 498:54
        _210 = move _29;                 // scope 4 at cita-auth/src/handler.rs:498:51: 498:54
        _209 = MsgHandler::deal_signed_proposal(_1, move _210) -> [return: bb247, unwind: bb237]; // scope 4 at cita-auth/src/handler.rs:498:25: 498:55
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:498:30: 498:50
                                         // + literal: Const { ty: for<'a> fn(&'a mut MsgHandler, libproto::Message) {MsgHandler::deal_signed_proposal}, val: Value(<ZST>) }
    }

    bb137: {
        _214 = &(*_1);                   // scope 4 at cita-auth/src/handler.rs:502:25: 502:40
        _213 = MsgHandler::is_ready(move _214) -> [return: bb141, unwind: bb237]; // scope 4 at cita-auth/src/handler.rs:502:25: 502:40
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:502:30: 502:38
                                         // + literal: Const { ty: for<'a> fn(&'a MsgHandler) -> bool {MsgHandler::is_ready}, val: Value(<ZST>) }
    }

    bb138: {
        _211 = const true;               // scope 4 at cita-auth/src/handler.rs:502:24: 502:75
        goto -> bb140;                   // scope 4 at cita-auth/src/handler.rs:502:24: 502:75
    }

    bb139: {
        _216 = &((*_1).14: std::option::Option<libproto::VerifyBlockReq>); // scope 4 at cita-auth/src/handler.rs:502:44: 502:75
        _215 = std::option::Option::<libproto::VerifyBlockReq>::is_none(move _216) -> [return: bb142, unwind: bb237]; // scope 4 at cita-auth/src/handler.rs:502:44: 502:75
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:502:66: 502:73
                                         // + literal: Const { ty: for<'a> fn(&'a std::option::Option<libproto::VerifyBlockReq>) -> bool {std::option::Option::<libproto::VerifyBlockReq>::is_none}, val: Value(<ZST>) }
    }

    bb140: {
        switchInt(move _211) -> [0: bb152, otherwise: bb143]; // scope 4 at cita-auth/src/handler.rs:502:24: 502:75
    }

    bb141: {
        _212 = Not(move _213);           // scope 4 at cita-auth/src/handler.rs:502:24: 502:40
        switchInt(move _212) -> [0: bb139, otherwise: bb138]; // scope 4 at cita-auth/src/handler.rs:502:24: 502:75
    }

    bb142: {
        _211 = move _215;                // scope 4 at cita-auth/src/handler.rs:502:24: 502:75
        goto -> bb140;                   // scope 4 at cita-auth/src/handler.rs:502:24: 502:75
    }

    bb143: {
        _217 = log::Level::Info;         // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _220 = &_217;                    // scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _267 = const _;                  // scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::process_msg, [], Some(promoted[17])) }
        _219 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _220, _267) -> [return: bb147, unwind: bb237]; // scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb144: {
        _218 = const false;              // scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb146;                   // scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb145: {
        _222 = &_217;                    // scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _224 = log::max_level() -> [return: bb148, unwind: bb237]; // scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb146: {
        switchInt(move _218) -> [0: bb164, otherwise: bb150]; // scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb147: {
        switchInt(move _219) -> [0: bb144, otherwise: bb145]; // scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb148: {
        _223 = &_224;                    // scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _221 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _222, move _223) -> [return: bb149, unwind: bb237]; // scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb149: {
        _218 = move _221;                // scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb146;                   // scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb150: {
        _266 = const _;                  // scope 21 at cita-auth/src/handler.rs:503:31: 503:67
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:503:31: 503:67
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(MsgHandler::process_msg, [], Some(promoted[16])) }
        _227 = _266 as &[&str] (Pointer(Unsize)); // scope 21 at cita-auth/src/handler.rs:503:31: 503:67
        _226 = Arguments::<'_>::new_const(move _227) -> [return: bb151, unwind: bb237]; // scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(20)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb151: {
        _265 = const _;                  // scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::process_msg, [], Some(promoted[15])) }
        _225 = log::__private_api_log(move _226, _217, _265) -> [return: bb248, unwind: bb237]; // scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb152: {
        _229 = &((*_1).14: std::option::Option<libproto::VerifyBlockReq>); // scope 4 at cita-auth/src/handler.rs:505:48: 505:77
        _228 = <std::option::Option<libproto::VerifyBlockReq> as Clone>::clone(move _229) -> [return: bb153, unwind: bb237]; // scope 4 at cita-auth/src/handler.rs:505:48: 505:77
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:505:70: 505:75
                                         // + literal: Const { ty: for<'a> fn(&'a std::option::Option<libproto::VerifyBlockReq>) -> std::option::Option<libproto::VerifyBlockReq> {<std::option::Option<libproto::VerifyBlockReq> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb153: {
        _289 = const true;               // scope 4 at cita-auth/src/handler.rs:505:76: 505:77
        _230 = discriminant(_228);       // scope 23 at cita-auth/src/handler.rs:506:32: 506:54
        switchInt(move _230) -> [1: bb154, otherwise: bb206]; // scope 23 at cita-auth/src/handler.rs:506:32: 506:54
    }

    bb154: {
        _289 = const false;              // scope 23 at cita-auth/src/handler.rs:506:37: 506:53
        _231 = move ((_228 as Some).0: libproto::VerifyBlockReq); // scope 23 at cita-auth/src/handler.rs:506:37: 506:53
        _290 = const false;              // scope 23 at cita-auth/src/handler.rs:507:49: 507:52
        _233 = move _29;                 // scope 23 at cita-auth/src/handler.rs:507:49: 507:52
        _232 = MsgHandler::deal_block_txn(_1, move _233, move _231) -> [return: bb249, unwind: bb237]; // scope 23 at cita-auth/src/handler.rs:507:29: 507:71
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:507:34: 507:48
                                         // + literal: Const { ty: for<'a> fn(&'a mut MsgHandler, libproto::Message, libproto::VerifyBlockReq) {MsgHandler::deal_block_txn}, val: Value(<ZST>) }
    }

    bb155: {
        _235 = const false;              // scope 24 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb157;                   // scope 24 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb156: {
        _239 = &_234;                    // scope 24 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _241 = log::max_level() -> [return: bb159, unwind: bb237]; // scope 24 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb157: {
        switchInt(move _235) -> [0: bb164, otherwise: bb161]; // scope 24 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb158: {
        switchInt(move _236) -> [0: bb155, otherwise: bb156]; // scope 24 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb159: {
        _240 = &_241;                    // scope 24 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _238 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _239, move _240) -> [return: bb160, unwind: bb237]; // scope 24 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb160: {
        _235 = move _238;                // scope 24 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb157;                   // scope 24 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb161: {
        _269 = const _;                  // scope 24 at cita-auth/src/handler.rs:512:28: 512:63
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:512:28: 512:63
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(MsgHandler::process_msg, [], Some(promoted[19])) }
        _244 = _269 as &[&str] (Pointer(Unsize)); // scope 24 at cita-auth/src/handler.rs:512:28: 512:63
        _249 = &_6;                      // scope 24 at cita-auth/src/handler.rs:512:65: 512:68
        _248 = core::fmt::ArgumentV1::<'_>::new_display::<std::string::String>(_249) -> [return: bb162, unwind: bb237]; // scope 24 at cita-auth/src/handler.rs:512:65: 512:68
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:512:65: 512:68
                                         // + user_ty: UserType(22)
                                         // + literal: Const { ty: for<'b> fn(&'b std::string::String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<std::string::String>}, val: Value(<ZST>) }
    }

    bb162: {
        _247 = [move _248];              // scope 24 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _246 = &_247;                    // scope 24 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _245 = _246 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 24 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _243 = Arguments::<'_>::new_v1(move _244, move _245) -> [return: bb163, unwind: bb237]; // scope 24 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(21)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb163: {
        _268 = const _;                  // scope 24 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::process_msg, [], Some(promoted[18])) }
        _242 = log::__private_api_log(move _243, _234, _268) -> [return: bb250, unwind: bb237]; // scope 24 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb164: {
        switchInt(_290) -> [0: bb165, otherwise: bb207]; // scope 1 at cita-auth/src/handler.rs:515:9: 515:10
    }

    bb165: {
        _290 = const false;              // scope 1 at cita-auth/src/handler.rs:515:9: 515:10
        drop(_7) -> [return: bb166, unwind: bb177]; // scope 0 at cita-auth/src/handler.rs:515:9: 515:10
    }

    bb166: {
        drop(_6) -> bb215;               // scope 0 at cita-auth/src/handler.rs:515:9: 515:10
    }

    bb167: {
        drop(_6) -> bb168;               // scope 0 at cita-auth/src/handler.rs:515:9: 515:10
    }

    bb168: {
        _291 = const false;              // scope 0 at cita-auth/src/handler.rs:516:5: 516:6
        _292 = const false;              // scope 0 at cita-auth/src/handler.rs:516:5: 516:6
        goto -> bb169;                   // scope 0 at cita-auth/src/handler.rs:516:6: 516:6
    }

    bb169: {
        return;                          // scope 0 at cita-auth/src/handler.rs:516:6: 516:6
    }

    bb170 (cleanup): {
        drop(_173) -> bb218;             // scope 4 at cita-auth/src/handler.rs:489:21: 489:22
    }

    bb171 (cleanup): {
        drop(_151) -> bb221;             // scope 4 at cita-auth/src/handler.rs:481:21: 481:22
    }

    bb172 (cleanup): {
        drop(_129) -> bb224;             // scope 4 at cita-auth/src/handler.rs:474:21: 474:22
    }

    bb173 (cleanup): {
        drop(_81) -> bb232;              // scope 4 at cita-auth/src/handler.rs:459:21: 459:22
    }

    bb174 (cleanup): {
        drop(_60) -> bb235;              // scope 4 at cita-auth/src/handler.rs:452:21: 452:22
    }

    bb175 (cleanup): {
        drop(_10) -> bb176;              // scope 1 at cita-auth/src/handler.rs:439:51: 439:52
    }

    bb176 (cleanup): {
        drop(_7) -> bb177;               // scope 0 at cita-auth/src/handler.rs:515:9: 515:10
    }

    bb177 (cleanup): {
        drop(_6) -> bb178;               // scope 0 at cita-auth/src/handler.rs:515:9: 515:10
    }

    bb178 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/handler.rs:437:5: 516:6
    }

    bb179: {
        _283 = const false;              // scope 4 at cita-auth/src/handler.rs:455:17: 455:18
        goto -> bb164;                   // scope 4 at cita-auth/src/handler.rs:455:17: 455:18
    }

    bb180: {
        switchInt(_283) -> [0: bb179, otherwise: bb181]; // scope 4 at cita-auth/src/handler.rs:455:17: 455:18
    }

    bb181: {
        drop(((_57 as Some).0: libproto::BlockTxHashes)) -> [return: bb179, unwind: bb237]; // scope 4 at cita-auth/src/handler.rs:455:17: 455:18
    }

    bb182: {
        _294 = discriminant(_57);        // scope 4 at cita-auth/src/handler.rs:455:17: 455:18
        switchInt(move _294) -> [1: bb180, otherwise: bb179]; // scope 4 at cita-auth/src/handler.rs:455:17: 455:18
    }

    bb183: {
        _284 = const false;              // scope 4 at cita-auth/src/handler.rs:462:17: 462:18
        goto -> bb164;                   // scope 4 at cita-auth/src/handler.rs:462:17: 462:18
    }

    bb184: {
        switchInt(_284) -> [0: bb183, otherwise: bb185]; // scope 4 at cita-auth/src/handler.rs:462:17: 462:18
    }

    bb185: {
        drop(((_78 as Some).0: libproto::BlackList)) -> [return: bb183, unwind: bb237]; // scope 4 at cita-auth/src/handler.rs:462:17: 462:18
    }

    bb186: {
        _295 = discriminant(_78);        // scope 4 at cita-auth/src/handler.rs:462:17: 462:18
        switchInt(move _295) -> [1: bb184, otherwise: bb183]; // scope 4 at cita-auth/src/handler.rs:462:17: 462:18
    }

    bb187: {
        _285 = const false;              // scope 4 at cita-auth/src/handler.rs:470:17: 470:18
        goto -> bb164;                   // scope 4 at cita-auth/src/handler.rs:470:17: 470:18
    }

    bb188: {
        switchInt(_285) -> [0: bb187, otherwise: bb189]; // scope 4 at cita-auth/src/handler.rs:470:17: 470:18
    }

    bb189: {
        drop(((_100 as Some).0: libproto::Request)) -> [return: bb187, unwind: bb237]; // scope 4 at cita-auth/src/handler.rs:470:17: 470:18
    }

    bb190: {
        _296 = discriminant(_100);       // scope 4 at cita-auth/src/handler.rs:470:17: 470:18
        switchInt(move _296) -> [1: bb188, otherwise: bb187]; // scope 4 at cita-auth/src/handler.rs:470:17: 470:18
    }

    bb191: {
        _286 = const false;              // scope 4 at cita-auth/src/handler.rs:477:17: 477:18
        goto -> bb164;                   // scope 4 at cita-auth/src/handler.rs:477:17: 477:18
    }

    bb192: {
        switchInt(_286) -> [0: bb191, otherwise: bb193]; // scope 4 at cita-auth/src/handler.rs:477:17: 477:18
    }

    bb193: {
        drop(((_126 as Some).0: libproto::Miscellaneous)) -> [return: bb191, unwind: bb237]; // scope 4 at cita-auth/src/handler.rs:477:17: 477:18
    }

    bb194: {
        _297 = discriminant(_126);       // scope 4 at cita-auth/src/handler.rs:477:17: 477:18
        switchInt(move _297) -> [1: bb192, otherwise: bb191]; // scope 4 at cita-auth/src/handler.rs:477:17: 477:18
    }

    bb195: {
        _287 = const false;              // scope 4 at cita-auth/src/handler.rs:484:17: 484:18
        goto -> bb164;                   // scope 4 at cita-auth/src/handler.rs:484:17: 484:18
    }

    bb196: {
        switchInt(_287) -> [0: bb195, otherwise: bb197]; // scope 4 at cita-auth/src/handler.rs:484:17: 484:18
    }

    bb197: {
        drop(((_148 as Some).0: libproto::SnapshotReq)) -> [return: bb195, unwind: bb237]; // scope 4 at cita-auth/src/handler.rs:484:17: 484:18
    }

    bb198: {
        _298 = discriminant(_148);       // scope 4 at cita-auth/src/handler.rs:484:17: 484:18
        switchInt(move _298) -> [1: bb196, otherwise: bb195]; // scope 4 at cita-auth/src/handler.rs:484:17: 484:18
    }

    bb199: {
        _288 = const false;              // scope 4 at cita-auth/src/handler.rs:492:17: 492:18
        goto -> bb164;                   // scope 4 at cita-auth/src/handler.rs:492:17: 492:18
    }

    bb200: {
        switchInt(_288) -> [0: bb199, otherwise: bb201]; // scope 4 at cita-auth/src/handler.rs:492:17: 492:18
    }

    bb201: {
        drop(((_170 as Some).0: libproto::GetBlockTxn)) -> [return: bb199, unwind: bb237]; // scope 4 at cita-auth/src/handler.rs:492:17: 492:18
    }

    bb202: {
        _299 = discriminant(_170);       // scope 4 at cita-auth/src/handler.rs:492:17: 492:18
        switchInt(move _299) -> [1: bb200, otherwise: bb199]; // scope 4 at cita-auth/src/handler.rs:492:17: 492:18
    }

    bb203: {
        _289 = const false;              // scope 4 at cita-auth/src/handler.rs:509:21: 509:22
        goto -> bb164;                   // scope 4 at cita-auth/src/handler.rs:502:21: 509:22
    }

    bb204: {
        switchInt(_289) -> [0: bb203, otherwise: bb205]; // scope 4 at cita-auth/src/handler.rs:509:21: 509:22
    }

    bb205: {
        drop(((_228 as Some).0: libproto::VerifyBlockReq)) -> [return: bb203, unwind: bb237]; // scope 4 at cita-auth/src/handler.rs:509:21: 509:22
    }

    bb206: {
        _300 = discriminant(_228);       // scope 4 at cita-auth/src/handler.rs:509:21: 509:22
        switchInt(move _300) -> [1: bb204, otherwise: bb203]; // scope 4 at cita-auth/src/handler.rs:509:21: 509:22
    }

    bb207: {
        drop(_29) -> [return: bb165, unwind: bb176]; // scope 1 at cita-auth/src/handler.rs:515:9: 515:10
    }

    bb208: {
        _291 = const false;              // scope 0 at cita-auth/src/handler.rs:516:5: 516:6
        _292 = const false;              // scope 0 at cita-auth/src/handler.rs:516:5: 516:6
        goto -> bb169;                   // scope 0 at cita-auth/src/handler.rs:516:6: 516:6
    }

    bb209: {
        switchInt(_292) -> [0: bb212, otherwise: bb214]; // scope 0 at cita-auth/src/handler.rs:516:5: 516:6
    }

    bb210 (cleanup): {
        switchInt(_291) -> [0: bb178, otherwise: bb211]; // scope 0 at cita-auth/src/handler.rs:516:5: 516:6
    }

    bb211 (cleanup): {
        drop((((_2 as Ok).0: (std::string::String, std::vec::Vec<u8>)).1: std::vec::Vec<u8>)) -> bb178; // scope 0 at cita-auth/src/handler.rs:516:5: 516:6
    }

    bb212: {
        switchInt(_291) -> [0: bb208, otherwise: bb213]; // scope 0 at cita-auth/src/handler.rs:516:5: 516:6
    }

    bb213: {
        drop((((_2 as Ok).0: (std::string::String, std::vec::Vec<u8>)).1: std::vec::Vec<u8>)) -> bb208; // scope 0 at cita-auth/src/handler.rs:516:5: 516:6
    }

    bb214: {
        drop((((_2 as Ok).0: (std::string::String, std::vec::Vec<u8>)).0: std::string::String)) -> [return: bb212, unwind: bb210]; // scope 0 at cita-auth/src/handler.rs:516:5: 516:6
    }

    bb215: {
        _301 = discriminant(_2);         // scope 0 at cita-auth/src/handler.rs:516:5: 516:6
        switchInt(move _301) -> [0: bb209, otherwise: bb208]; // scope 0 at cita-auth/src/handler.rs:516:5: 516:6
    }

    bb216 (cleanup): {
        switchInt(_288) -> [0: bb237, otherwise: bb217]; // scope 4 at cita-auth/src/handler.rs:492:17: 492:18
    }

    bb217 (cleanup): {
        drop(((_170 as Some).0: libproto::GetBlockTxn)) -> bb237; // scope 4 at cita-auth/src/handler.rs:492:17: 492:18
    }

    bb218 (cleanup): {
        _302 = discriminant(_170);       // scope 4 at cita-auth/src/handler.rs:492:17: 492:18
        switchInt(move _302) -> [1: bb216, otherwise: bb237]; // scope 4 at cita-auth/src/handler.rs:492:17: 492:18
    }

    bb219 (cleanup): {
        switchInt(_287) -> [0: bb237, otherwise: bb220]; // scope 4 at cita-auth/src/handler.rs:484:17: 484:18
    }

    bb220 (cleanup): {
        drop(((_148 as Some).0: libproto::SnapshotReq)) -> bb237; // scope 4 at cita-auth/src/handler.rs:484:17: 484:18
    }

    bb221 (cleanup): {
        _303 = discriminant(_148);       // scope 4 at cita-auth/src/handler.rs:484:17: 484:18
        switchInt(move _303) -> [1: bb219, otherwise: bb237]; // scope 4 at cita-auth/src/handler.rs:484:17: 484:18
    }

    bb222 (cleanup): {
        switchInt(_286) -> [0: bb237, otherwise: bb223]; // scope 4 at cita-auth/src/handler.rs:477:17: 477:18
    }

    bb223 (cleanup): {
        drop(((_126 as Some).0: libproto::Miscellaneous)) -> bb237; // scope 4 at cita-auth/src/handler.rs:477:17: 477:18
    }

    bb224 (cleanup): {
        _304 = discriminant(_126);       // scope 4 at cita-auth/src/handler.rs:477:17: 477:18
        switchInt(move _304) -> [1: bb222, otherwise: bb237]; // scope 4 at cita-auth/src/handler.rs:477:17: 477:18
    }

    bb225 (cleanup): {
        drop(_103) -> bb229;             // scope 4 at cita-auth/src/handler.rs:467:21: 467:22
    }

    bb226 (cleanup): {
        switchInt(_293) -> [0: bb229, otherwise: bb225]; // scope 4 at cita-auth/src/handler.rs:467:21: 467:22
    }

    bb227 (cleanup): {
        switchInt(_285) -> [0: bb237, otherwise: bb228]; // scope 4 at cita-auth/src/handler.rs:470:17: 470:18
    }

    bb228 (cleanup): {
        drop(((_100 as Some).0: libproto::Request)) -> bb237; // scope 4 at cita-auth/src/handler.rs:470:17: 470:18
    }

    bb229 (cleanup): {
        _305 = discriminant(_100);       // scope 4 at cita-auth/src/handler.rs:470:17: 470:18
        switchInt(move _305) -> [1: bb227, otherwise: bb237]; // scope 4 at cita-auth/src/handler.rs:470:17: 470:18
    }

    bb230 (cleanup): {
        switchInt(_284) -> [0: bb237, otherwise: bb231]; // scope 4 at cita-auth/src/handler.rs:462:17: 462:18
    }

    bb231 (cleanup): {
        drop(((_78 as Some).0: libproto::BlackList)) -> bb237; // scope 4 at cita-auth/src/handler.rs:462:17: 462:18
    }

    bb232 (cleanup): {
        _306 = discriminant(_78);        // scope 4 at cita-auth/src/handler.rs:462:17: 462:18
        switchInt(move _306) -> [1: bb230, otherwise: bb237]; // scope 4 at cita-auth/src/handler.rs:462:17: 462:18
    }

    bb233 (cleanup): {
        switchInt(_283) -> [0: bb237, otherwise: bb234]; // scope 4 at cita-auth/src/handler.rs:455:17: 455:18
    }

    bb234 (cleanup): {
        drop(((_57 as Some).0: libproto::BlockTxHashes)) -> bb237; // scope 4 at cita-auth/src/handler.rs:455:17: 455:18
    }

    bb235 (cleanup): {
        _307 = discriminant(_57);        // scope 4 at cita-auth/src/handler.rs:455:17: 455:18
        switchInt(move _307) -> [1: bb233, otherwise: bb237]; // scope 4 at cita-auth/src/handler.rs:455:17: 455:18
    }

    bb236 (cleanup): {
        drop(_29) -> bb176;              // scope 1 at cita-auth/src/handler.rs:515:9: 515:10
    }

    bb237 (cleanup): {
        switchInt(_290) -> [0: bb176, otherwise: bb236]; // scope 1 at cita-auth/src/handler.rs:515:9: 515:10
    }

    bb238: {
        goto -> bb17;                    // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb239: {
        goto -> bb31;                    // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb240: {
        goto -> bb182;                   // scope 7 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb241: {
        goto -> bb186;                   // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb242: {
        goto -> bb190;                   // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb243: {
        goto -> bb194;                   // scope 14 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb244: {
        goto -> bb198;                   // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb245: {
        goto -> bb202;                   // scope 19 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb246: {
        goto -> bb164;                   // scope 20 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb247: {
        goto -> bb164;                   // scope 4 at cita-auth/src/handler.rs:498:25: 498:55
    }

    bb248: {
        goto -> bb164;                   // scope 21 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb249: {
        goto -> bb206;                   // scope 23 at cita-auth/src/handler.rs:507:29: 507:71
    }

    bb250: {
        goto -> bb164;                   // scope 24 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::process_msg: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:468:25: 468:78
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:468:25: 468:78

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:468:25: 468:78
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:468:25: 468:78
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:468:25: 468:78
        _1 = (move _2, move _4, move _6, const 468_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::process_msg: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-auth/src/handler.rs:468:32: 468:72
    let mut _1: [&str; 2];               // in scope 0 at cita-auth/src/handler.rs:468:32: 468:72

    bb0: {
        _1 = [const "Can not get request from message ", const "."]; // scope 0 at cita-auth/src/handler.rs:468:32: 468:72
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:468:32: 468:72
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:468:32: 468:72
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:468:32: 468:72
        return;                          // scope 0 at cita-auth/src/handler.rs:468:32: 468:72
    }
}

promoted[2] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::process_msg: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[3] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::process_msg: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:475:25: 475:84
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:475:25: 475:84

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:475:25: 475:84
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:475:25: 475:84
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:475:25: 475:84
        _1 = (move _2, move _4, move _6, const 475_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[4] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::process_msg: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-auth/src/handler.rs:475:32: 475:78
    let mut _1: [&str; 2];               // in scope 0 at cita-auth/src/handler.rs:475:32: 475:78

    bb0: {
        _1 = [const "Can not get miscellaneous from message ", const "."]; // scope 0 at cita-auth/src/handler.rs:475:32: 475:78
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:475:32: 475:78
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:475:32: 475:78
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:475:32: 475:78
        return;                          // scope 0 at cita-auth/src/handler.rs:475:32: 475:78
    }
}

promoted[5] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::process_msg: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[6] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::process_msg: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:482:25: 482:79
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:482:25: 482:79

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:482:25: 482:79
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:482:25: 482:79
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:482:25: 482:79
        _1 = (move _2, move _4, move _6, const 482_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[7] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::process_msg: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-auth/src/handler.rs:482:32: 482:73
    let mut _1: [&str; 2];               // in scope 0 at cita-auth/src/handler.rs:482:32: 482:73

    bb0: {
        _1 = [const "Can not get snapshot from message ", const "."]; // scope 0 at cita-auth/src/handler.rs:482:32: 482:73
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:482:32: 482:73
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:482:32: 482:73
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:482:32: 482:73
        return;                          // scope 0 at cita-auth/src/handler.rs:482:32: 482:73
    }
}

promoted[8] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::process_msg: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[9] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::process_msg: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:490:25: 490:80
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:490:25: 490:80

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:490:25: 490:80
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:490:25: 490:80
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:490:25: 490:80
        _1 = (move _2, move _4, move _6, const 490_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[10] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::process_msg: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-auth/src/handler.rs:490:32: 490:74
    let mut _1: [&str; 2];               // in scope 0 at cita-auth/src/handler.rs:490:32: 490:74

    bb0: {
        _1 = [const "Can not get block txn from message ", const "."]; // scope 0 at cita-auth/src/handler.rs:490:32: 490:74
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:490:32: 490:74
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:490:32: 490:74
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:490:32: 490:74
        return;                          // scope 0 at cita-auth/src/handler.rs:490:32: 490:74
    }
}

promoted[11] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::process_msg: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[12] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::process_msg: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:496:25: 496:85
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:496:25: 496:85

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:496:25: 496:85
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:496:25: 496:85
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:496:25: 496:85
        _1 = (move _2, move _4, move _6, const 496_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[13] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::process_msg: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/handler.rs:496:31: 496:84
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/handler.rs:496:31: 496:84

    bb0: {
        _1 = [const "Net/Consensus >> CompactProposal: auth is not ready"]; // scope 0 at cita-auth/src/handler.rs:496:31: 496:84
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:496:31: 496:84
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:496:31: 496:84
        return;                          // scope 0 at cita-auth/src/handler.rs:496:31: 496:84
    }
}

promoted[14] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::process_msg: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[15] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::process_msg: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:503:25: 503:68
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:503:25: 503:68

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:503:25: 503:68
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:503:25: 503:68
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:503:25: 503:68
        _1 = (move _2, move _4, move _6, const 503_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[16] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::process_msg: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/handler.rs:503:31: 503:67
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/handler.rs:503:31: 503:67

    bb0: {
        _1 = [const "Net >> BlockTxn: auth is not ready"]; // scope 0 at cita-auth/src/handler.rs:503:31: 503:67
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:503:31: 503:67
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:503:31: 503:67
        return;                          // scope 0 at cita-auth/src/handler.rs:503:31: 503:67
    }
}

promoted[17] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::process_msg: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[18] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::process_msg: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:512:21: 512:69
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:512:21: 512:69

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:512:21: 512:69
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:512:21: 512:69
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:512:21: 512:69
        _1 = (move _2, move _4, move _6, const 512_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[19] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::process_msg: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/handler.rs:512:28: 512:63
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/handler.rs:512:28: 512:63

    bb0: {
        _1 = [const "receive unexpected message key "]; // scope 0 at cita-auth/src/handler.rs:512:28: 512:63
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:512:28: 512:63
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:512:28: 512:63
        return;                          // scope 0 at cita-auth/src/handler.rs:512:28: 512:63
    }
}

promoted[20] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::process_msg: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[21] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::process_msg: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:453:25: 453:86
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:453:25: 453:86

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:453:25: 453:86
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:453:25: 453:86
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:453:25: 453:86
        _1 = (move _2, move _4, move _6, const 453_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[22] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::process_msg: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-auth/src/handler.rs:453:32: 453:80
    let mut _1: [&str; 2];               // in scope 0 at cita-auth/src/handler.rs:453:32: 453:80

    bb0: {
        _1 = [const "Can not get block tx hashes from message ", const "."]; // scope 0 at cita-auth/src/handler.rs:453:32: 453:80
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:453:32: 453:80
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:453:32: 453:80
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:453:32: 453:80
        return;                          // scope 0 at cita-auth/src/handler.rs:453:32: 453:80
    }
}

promoted[23] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::process_msg: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[24] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::process_msg: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:460:25: 460:81
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:460:25: 460:81

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:460:25: 460:81
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:460:25: 460:81
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:460:25: 460:81
        _1 = (move _2, move _4, move _6, const 460_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[25] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::process_msg: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-auth/src/handler.rs:460:32: 460:75
    let mut _1: [&str; 2];               // in scope 0 at cita-auth/src/handler.rs:460:32: 460:75

    bb0: {
        _1 = [const "Can not get black list from message ", const "."]; // scope 0 at cita-auth/src/handler.rs:460:32: 460:75
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:460:32: 460:75
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:460:32: 460:75
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:460:32: 460:75
        return;                          // scope 0 at cita-auth/src/handler.rs:460:32: 460:75
    }
}

promoted[26] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::process_msg: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[27] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::process_msg: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:446:13: 446:52
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:446:13: 446:52

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:446:13: 446:52
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:446:13: 446:52
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:446:13: 446:52
        _1 = (move _2, move _4, move _6, const 446_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[28] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::process_msg: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/handler.rs:446:20: 446:46
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/handler.rs:446:20: 446:46

    bb0: {
        _1 = [const "process message key = "]; // scope 0 at cita-auth/src/handler.rs:446:20: 446:46
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:446:20: 446:46
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:446:20: 446:46
        return;                          // scope 0 at cita-auth/src/handler.rs:446:20: 446:46
    }
}

promoted[29] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::process_msg: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[30] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::process_msg: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:440:17: 440:74
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:440:17: 440:74

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:440:17: 440:74
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:440:17: 440:74
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:440:17: 440:74
        _1 = (move _2, move _4, move _6, const 440_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[31] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::process_msg: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/handler.rs:440:24: 440:63
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/handler.rs:440:24: 440:63

    bb0: {
        _1 = [const "Can not get message from payload "]; // scope 0 at cita-auth/src/handler.rs:440:24: 440:63
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:440:24: 440:63
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:440:24: 440:63
        return;                          // scope 0 at cita-auth/src/handler.rs:440:24: 440:63
    }
}

promoted[32] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::process_msg: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::handle_remote_msg(_1: &mut MsgHandler) -> () {
    debug self => _1;                    // in scope 0 at cita-auth/src/handler.rs:517:30: 517:39
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/handler.rs:517:41: 517:41
    let _2: ();                          // in scope 0 at cita-auth/src/handler.rs:522:13: 522:32
    let mut _3: bool;                    // in scope 0 at cita-auth/src/handler.rs:526:16: 526:47
    let mut _4: bool;                    // in scope 0 at cita-auth/src/handler.rs:526:17: 526:47
    let mut _5: &history::HistoryHeights; // in scope 0 at cita-auth/src/handler.rs:526:17: 526:47
    let _6: log::Level;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
    let mut _7: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _8: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _9: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _10: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _11: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _12: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _13: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _14: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _15: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _16: &[&str];                // in scope 0 at cita-auth/src/handler.rs:527:24: 527:59
    let _17: ();                         // in scope 0 at cita-auth/src/handler.rs:528:17: 528:52
    let _18: ();                         // in scope 0 at cita-auth/src/handler.rs:532:13: 532:30
    let _19: ();                         // in scope 0 at cita-auth/src/handler.rs:535:13: 535:31
    scope 1 {
        debug lvl => _6;                 // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _20: &(&str, &str, &str, u32); // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        let mut _21: &[&str; 1];         // in scope 1 at cita-auth/src/handler.rs:527:24: 527:59
        let mut _22: &log::LevelFilter;  // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }

    bb0: {
        goto -> bb1;                     // scope 0 at cita-auth/src/handler.rs:518:9: 536:10
    }

    bb1: {
        _2 = MsgHandler::get_chain_id(_1) -> bb2; // scope 0 at cita-auth/src/handler.rs:522:13: 522:32
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:522:18: 522:30
                                         // + literal: Const { ty: for<'a> fn(&'a mut MsgHandler) {MsgHandler::get_chain_id}, val: Value(<ZST>) }
    }

    bb2: {
        _5 = &((*_1).4: history::HistoryHeights); // scope 0 at cita-auth/src/handler.rs:526:17: 526:47
        _4 = HistoryHeights::is_init(move _5) -> bb3; // scope 0 at cita-auth/src/handler.rs:526:17: 526:47
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:526:38: 526:45
                                         // + literal: Const { ty: for<'a> fn(&'a HistoryHeights) -> bool {HistoryHeights::is_init}, val: Value(<ZST>) }
    }

    bb3: {
        _3 = Not(move _4);               // scope 0 at cita-auth/src/handler.rs:526:16: 526:47
        switchInt(move _3) -> [0: bb14, otherwise: bb4]; // scope 0 at cita-auth/src/handler.rs:526:16: 526:47
    }

    bb4: {
        _6 = log::Level::Trace;          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _9 = &_6;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _22 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::handle_remote_msg, [], Some(promoted[2])) }
        _8 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _9, _22) -> bb8; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb5: {
        _7 = const false;                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb7;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb6: {
        _11 = &_6;                       // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _13 = log::max_level() -> bb9;   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb7: {
        switchInt(move _7) -> [0: bb13, otherwise: bb11]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb8: {
        switchInt(move _8) -> [0: bb5, otherwise: bb6]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb9: {
        _12 = &_13;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _10 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _11, move _12) -> bb10; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb10: {
        _7 = move _10;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb7;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb11: {
        _21 = const _;                   // scope 1 at cita-auth/src/handler.rs:527:24: 527:59
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:527:24: 527:59
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(MsgHandler::handle_remote_msg, [], Some(promoted[1])) }
        _16 = _21 as &[&str] (Pointer(Unsize)); // scope 1 at cita-auth/src/handler.rs:527:24: 527:59
        _15 = Arguments::<'_>::new_const(move _16) -> bb12; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb12: {
        _20 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::handle_remote_msg, [], Some(promoted[0])) }
        _14 = log::__private_api_log(move _15, _6, _20) -> bb13; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb13: {
        _17 = MsgHandler::send_block_tx_hashes_req(_1, const true) -> bb14; // scope 0 at cita-auth/src/handler.rs:528:17: 528:52
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:528:22: 528:46
                                         // + literal: Const { ty: for<'a> fn(&'a mut MsgHandler, bool) {MsgHandler::send_block_tx_hashes_req}, val: Value(<ZST>) }
    }

    bb14: {
        _18 = MsgHandler::daily_task(_1) -> bb15; // scope 0 at cita-auth/src/handler.rs:532:13: 532:30
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:532:18: 532:28
                                         // + literal: Const { ty: for<'a> fn(&'a mut MsgHandler) {MsgHandler::daily_task}, val: Value(<ZST>) }
    }

    bb15: {
        _19 = MsgHandler::process_msg(_1) -> bb1; // scope 0 at cita-auth/src/handler.rs:535:13: 535:31
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:535:18: 535:29
                                         // + literal: Const { ty: for<'a> fn(&'a mut MsgHandler) {MsgHandler::process_msg}, val: Value(<ZST>) }
    }
}

promoted[0] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::handle_remote_msg: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:527:17: 527:60
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:527:17: 527:60

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:527:17: 527:60
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:527:17: 527:60
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:527:17: 527:60
        _1 = (move _2, move _4, move _6, const 527_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::handle_remote_msg: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/handler.rs:527:24: 527:59
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/handler.rs:527:24: 527:59

    bb0: {
        _1 = [const "history block hashes is not ready"]; // scope 0 at cita-auth/src/handler.rs:527:24: 527:59
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:527:24: 527:59
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:527:24: 527:59
        return;                          // scope 0 at cita-auth/src/handler.rs:527:24: 527:59
    }
}

promoted[2] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::handle_remote_msg: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_block_tx_hashes(_1: &mut MsgHandler, _2: &libproto::BlockTxHashes) -> () {
    debug self => _1;                    // in scope 0 at cita-auth/src/handler.rs:539:29: 539:38
    debug block_tx_hashes => _2;         // in scope 0 at cita-auth/src/handler.rs:539:40: 539:55
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/handler.rs:539:73: 539:73
    let _3: u64;                         // in scope 0 at cita-auth/src/handler.rs:540:13: 540:19
    let mut _5: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _6: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _7: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _8: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _9: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _10: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _11: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _12: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _13: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _14: &[&str];                // in scope 0 at cita-auth/src/handler.rs:541:15: 541:52
    let mut _15: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _16: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _17: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _18: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:541:54: 541:60
    let _19: &u64;                       // in scope 0 at cita-auth/src/handler.rs:541:54: 541:60
    let mut _21: bool;                   // in scope 0 at cita-auth/src/handler.rs:546:12: 547:72
    let mut _22: bool;                   // in scope 0 at cita-auth/src/handler.rs:546:12: 546:56
    let mut _23: u64;                    // in scope 0 at cita-auth/src/handler.rs:546:12: 546:18
    let mut _24: u64;                    // in scope 0 at cita-auth/src/handler.rs:546:22: 546:56
    let mut _25: &history::HistoryHeights; // in scope 0 at cita-auth/src/handler.rs:546:22: 546:56
    let mut _26: bool;                   // in scope 0 at cita-auth/src/handler.rs:547:16: 547:72
    let mut _27: u64;                    // in scope 0 at cita-auth/src/handler.rs:547:17: 547:51
    let mut _28: &history::HistoryHeights; // in scope 0 at cita-auth/src/handler.rs:547:17: 547:51
    let mut _29: bool;                   // in scope 0 at cita-auth/src/handler.rs:547:60: 547:71
    let mut _30: u64;                    // in scope 0 at cita-auth/src/handler.rs:547:60: 547:66
    let mut _33: &libproto::AccountGasLimit; // in scope 0 at cita-auth/src/handler.rs:551:39: 551:88
    let _34: &libproto::AccountGasLimit; // in scope 0 at cita-auth/src/handler.rs:551:39: 551:80
    let mut _36: bool;                   // in scope 0 at cita-auth/src/handler.rs:553:44: 553:55
    let mut _37: u64;                    // in scope 0 at cita-auth/src/handler.rs:554:50: 554:67
    let mut _38: libproto::AccountGasLimit; // in scope 0 at cita-auth/src/handler.rs:555:52: 555:79
    let mut _39: &libproto::AccountGasLimit; // in scope 0 at cita-auth/src/handler.rs:555:52: 555:79
    let mut _40: std::option::Option<cita_types::H160>; // in scope 0 at cita-auth/src/handler.rs:556:46: 560:14
    let mut _41: bool;                   // in scope 0 at cita-auth/src/handler.rs:556:49: 556:95
    let mut _42: &[u8];                  // in scope 0 at cita-auth/src/handler.rs:556:49: 556:95
    let _43: &[u8];                      // in scope 0 at cita-auth/src/handler.rs:556:49: 556:84
    let mut _44: cita_types::H160;       // in scope 0 at cita-auth/src/handler.rs:559:22: 559:72
    let mut _45: &[u8];                  // in scope 0 at cita-auth/src/handler.rs:559:36: 559:71
    let mut _48: bool;                   // in scope 0 at cita-auth/src/handler.rs:562:33: 562:53
    let mut _49: u32;                    // in scope 0 at cita-auth/src/handler.rs:562:33: 562:49
    let mut _50: bool;                   // in scope 0 at cita-auth/src/handler.rs:562:57: 562:77
    let mut _51: u32;                    // in scope 0 at cita-auth/src/handler.rs:562:57: 562:73
    let mut _52: bool;                   // in scope 0 at cita-auth/src/handler.rs:564:16: 564:68
    let mut _53: bool;                   // in scope 0 at cita-auth/src/handler.rs:564:16: 564:29
    let mut _54: bool;                   // in scope 0 at cita-auth/src/handler.rs:564:33: 564:68
    let mut _55: &std::option::Option<u32>; // in scope 0 at cita-auth/src/handler.rs:564:33: 564:57
    let mut _57: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _58: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _59: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _60: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _61: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _62: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _63: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _64: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _65: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _66: &[&str];                // in scope 0 at cita-auth/src/handler.rs:565:24: 565:44
    let mut _68: libproto::MiscellaneousReq; // in scope 0 at cita-auth/src/handler.rs:566:36: 566:59
    let _69: ();                         // in scope 0 at cita-auth/src/handler.rs:567:17: 572:30
    let mut _70: std::result::Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>>; // in scope 0 at cita-auth/src/handler.rs:567:17: 571:23
    let mut _71: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-auth/src/handler.rs:567:17: 571:23
    let mut _72: (std::string::String, std::vec::Vec<u8>); // in scope 0 at cita-auth/src/handler.rs:568:27: 571:22
    let mut _73: std::string::String;    // in scope 0 at cita-auth/src/handler.rs:569:25: 569:70
    let mut _74: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _75: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _76: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _77: std::vec::Vec<u8>;      // in scope 0 at cita-auth/src/handler.rs:570:25: 570:48
    let mut _78: std::result::Result<std::vec::Vec<u8>, libproto::TryIntoConvertError>; // in scope 0 at cita-auth/src/handler.rs:570:25: 570:39
    let mut _79: libproto::Message;      // in scope 0 at cita-auth/src/handler.rs:570:25: 570:28
    let mut _80: std::option::Option<u32>; // in scope 0 at cita-auth/src/handler.rs:574:40: 574:75
    let mut _81: u32;                    // in scope 0 at cita-auth/src/handler.rs:574:45: 574:74
    let mut _83: &history::HistoryHeights; // in scope 0 at cita-auth/src/handler.rs:581:30: 581:63
    let _84: ();                         // in scope 0 at cita-auth/src/handler.rs:582:9: 582:51
    let mut _85: &mut history::HistoryHeights; // in scope 0 at cita-auth/src/handler.rs:582:9: 582:51
    let mut _86: u64;                    // in scope 0 at cita-auth/src/handler.rs:582:44: 582:50
    let mut _88: usize;                  // in scope 0 at cita-auth/src/handler.rs:585:57: 585:72
    let mut _89: &[std::vec::Vec<u8>];   // in scope 0 at cita-auth/src/handler.rs:585:57: 585:72
    let mut _90: std::slice::Iter<'_, std::vec::Vec<u8>>; // in scope 0 at cita-auth/src/handler.rs:586:21: 586:37
    let mut _91: std::slice::Iter<'_, std::vec::Vec<u8>>; // in scope 0 at cita-auth/src/handler.rs:586:21: 586:37
    let mut _92: &[std::vec::Vec<u8>];   // in scope 0 at cita-auth/src/handler.rs:586:21: 586:37
    let mut _94: std::option::Option<&std::vec::Vec<u8>>; // in scope 0 at cita-auth/src/handler.rs:586:21: 586:37
    let mut _95: &mut std::slice::Iter<'_, std::vec::Vec<u8>>; // in scope 0 at cita-auth/src/handler.rs:586:21: 586:37
    let mut _96: isize;                  // in scope 0 at cita-auth/src/handler.rs:586:9: 589:10
    let mut _99: &[u8];                  // in scope 0 at cita-auth/src/handler.rs:587:41: 587:45
    let _100: &[u8];                     // in scope 0 at cita-auth/src/handler.rs:587:41: 587:45
    let _101: bool;                      // in scope 0 at cita-auth/src/handler.rs:588:13: 588:40
    let mut _102: &mut std::collections::HashSet<cita_types::H256>; // in scope 0 at cita-auth/src/handler.rs:588:13: 588:40
    let mut _103: cita_types::H256;      // in scope 0 at cita-auth/src/handler.rs:588:35: 588:39
    let _104: ();                        // in scope 0 at cita-auth/src/handler.rs:590:9: 590:69
    let mut _105: &dispatcher::Dispatcher; // in scope 0 at cita-auth/src/handler.rs:590:9: 590:69
    let _106: &std::collections::HashSet<cita_types::H256>; // in scope 0 at cita-auth/src/handler.rs:590:53: 590:68
    let mut _107: std::ops::Range<u64>;  // in scope 0 at cita-auth/src/handler.rs:593:18: 593:67
    let mut _108: std::ops::Range<u64>;  // in scope 0 at cita-auth/src/handler.rs:593:18: 593:67
    let mut _109: u64;                   // in scope 0 at cita-auth/src/handler.rs:593:18: 593:32
    let mut _110: u64;                   // in scope 0 at cita-auth/src/handler.rs:593:34: 593:67
    let mut _111: &history::HistoryHeights; // in scope 0 at cita-auth/src/handler.rs:593:34: 593:67
    let mut _113: std::option::Option<u64>; // in scope 0 at cita-auth/src/handler.rs:593:18: 593:67
    let mut _114: &mut std::ops::Range<u64>; // in scope 0 at cita-auth/src/handler.rs:593:18: 593:67
    let mut _115: isize;                 // in scope 0 at cita-auth/src/handler.rs:593:9: 595:10
    let _117: std::option::Option<std::collections::HashSet<cita_types::H256>>; // in scope 0 at cita-auth/src/handler.rs:594:13: 594:43
    let mut _118: &mut std::collections::HashMap<u64, std::collections::HashSet<cita_types::H256>>; // in scope 0 at cita-auth/src/handler.rs:594:13: 594:43
    let _119: &u64;                      // in scope 0 at cita-auth/src/handler.rs:594:40: 594:42
    let _120: &mut std::collections::HashSet<cita_types::H256>; // in scope 0 at cita-auth/src/handler.rs:596:9: 596:68
    let mut _121: std::collections::hash_map::Entry<'_, u64, std::collections::HashSet<cita_types::H256>>; // in scope 0 at cita-auth/src/handler.rs:596:9: 596:42
    let mut _122: &mut std::collections::HashMap<u64, std::collections::HashSet<cita_types::H256>>; // in scope 0 at cita-auth/src/handler.rs:596:9: 596:42
    let mut _123: u64;                   // in scope 0 at cita-auth/src/handler.rs:596:35: 596:41
    let mut _124: std::collections::HashSet<cita_types::H256>; // in scope 0 at cita-auth/src/handler.rs:596:53: 596:67
    let mut _132: bool;                  // in scope 0 at cita-auth/src/handler.rs:597:5: 597:6
    let mut _133: bool;                  // in scope 0 at cita-auth/src/handler.rs:573:13: 573:14
    scope 1 {
        debug height => _3;              // in scope 1 at cita-auth/src/handler.rs:540:13: 540:19
        let _4: log::Level;              // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let _20: &[std::vec::Vec<u8>];   // in scope 1 at cita-auth/src/handler.rs:542:13: 542:22
        scope 2 {
            debug lvl => _4;             // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _129: &(&str, &str, &str, u32); // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _130: &[&str; 1];    // in scope 2 at cita-auth/src/handler.rs:541:15: 541:52
            let mut _131: &log::LevelFilter; // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
        scope 3 {
            debug tx_hashes => _20;      // in scope 3 at cita-auth/src/handler.rs:542:13: 542:22
            let _31: u64;                // in scope 3 at cita-auth/src/handler.rs:550:17: 550:34
            let _82: u64;                // in scope 3 at cita-auth/src/handler.rs:581:13: 581:27
            scope 4 {
                debug block_quota_limit => _31; // in scope 4 at cita-auth/src/handler.rs:550:17: 550:34
                let _32: libproto::AccountGasLimit; // in scope 4 at cita-auth/src/handler.rs:551:17: 551:36
                scope 5 {
                    debug account_quota_limit => _32; // in scope 5 at cita-auth/src/handler.rs:551:17: 551:36
                    let _35: bool;       // in scope 5 at cita-auth/src/handler.rs:552:17: 552:28
                    scope 6 {
                        debug check_quota => _35; // in scope 6 at cita-auth/src/handler.rs:552:17: 552:28
                        let _46: u32;    // in scope 6 at cita-auth/src/handler.rs:561:17: 561:33
                        scope 7 {
                            debug block_tx_version => _46; // in scope 7 at cita-auth/src/handler.rs:561:17: 561:33
                            let _47: bool; // in scope 7 at cita-auth/src/handler.rs:562:17: 562:30
                            scope 8 {
                                debug check_version => _47; // in scope 8 at cita-auth/src/handler.rs:562:17: 562:30
                                let _56: log::Level; // in scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                                let _67: libproto::Message; // in scope 8 at cita-auth/src/handler.rs:566:21: 566:24
                                let mut _128: &std::option::Option<u32>; // in scope 8 at cita-auth/src/handler.rs:564:61: 564:68
                                scope 9 {
                                    debug lvl => _56; // in scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                                    let mut _125: &(&str, &str, &str, u32); // in scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                    let mut _126: &[&str; 1]; // in scope 9 at cita-auth/src/handler.rs:565:24: 565:44
                                    let mut _127: &log::LevelFilter; // in scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                }
                                scope 10 {
                                    debug msg => _67; // in scope 10 at cita-auth/src/handler.rs:566:21: 566:24
                                }
                            }
                        }
                    }
                }
            }
            scope 11 {
                debug old_min_height => _82; // in scope 11 at cita-auth/src/handler.rs:581:13: 581:27
                let mut _87: std::collections::HashSet<cita_types::H256>; // in scope 11 at cita-auth/src/handler.rs:585:13: 585:31
                scope 12 {
                    debug tx_hashes_h256 => _87; // in scope 12 at cita-auth/src/handler.rs:585:13: 585:31
                    let mut _93: std::slice::Iter<'_, std::vec::Vec<u8>>; // in scope 12 at cita-auth/src/handler.rs:586:21: 586:37
                    let mut _112: std::ops::Range<u64>; // in scope 12 at cita-auth/src/handler.rs:593:18: 593:67
                    scope 13 {
                        debug iter => _93; // in scope 13 at cita-auth/src/handler.rs:586:21: 586:37
                        let _97: &std::vec::Vec<u8>; // in scope 13 at cita-auth/src/handler.rs:586:13: 586:17
                        scope 14 {
                            debug data => _97; // in scope 14 at cita-auth/src/handler.rs:586:13: 586:17
                            let _98: cita_types::H256; // in scope 14 at cita-auth/src/handler.rs:587:17: 587:21
                            scope 15 {
                                debug hash => _98; // in scope 15 at cita-auth/src/handler.rs:587:17: 587:21
                            }
                        }
                    }
                    scope 16 {
                        debug iter => _112; // in scope 16 at cita-auth/src/handler.rs:593:18: 593:67
                        let _116: u64;   // in scope 16 at cita-auth/src/handler.rs:593:13: 593:14
                        scope 17 {
                            debug i => _116; // in scope 17 at cita-auth/src/handler.rs:593:13: 593:14
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _133 = const false;              // scope 0 at cita-auth/src/handler.rs:540:13: 540:19
        _132 = const false;              // scope 0 at cita-auth/src/handler.rs:540:13: 540:19
        _3 = libproto::BlockTxHashes::get_height(_2) -> bb1; // scope 0 at cita-auth/src/handler.rs:540:22: 540:50
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:540:38: 540:48
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::BlockTxHashes) -> u64 {libproto::BlockTxHashes::get_height}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = log::Level::Info;           // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _7 = &_4;                        // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _131 = const _;                  // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::deal_block_tx_hashes, [], Some(promoted[6])) }
        _6 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _7, _131) -> bb5; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb2: {
        _5 = const false;                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb4;                     // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb3: {
        _9 = &_4;                        // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _11 = log::max_level() -> bb6;   // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb4: {
        switchInt(move _5) -> [0: bb11, otherwise: bb8]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb5: {
        switchInt(move _6) -> [0: bb2, otherwise: bb3]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb6: {
        _10 = &_11;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _8 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _9, move _10) -> bb7; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb7: {
        _5 = move _8;                    // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb4;                     // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb8: {
        _130 = const _;                  // scope 2 at cita-auth/src/handler.rs:541:15: 541:52
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:541:15: 541:52
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(MsgHandler::deal_block_tx_hashes, [], Some(promoted[5])) }
        _14 = _130 as &[&str] (Pointer(Unsize)); // scope 2 at cita-auth/src/handler.rs:541:15: 541:52
        _19 = &_3;                       // scope 2 at cita-auth/src/handler.rs:541:54: 541:60
        _18 = core::fmt::ArgumentV1::<'_>::new_debug::<u64>(_19) -> bb9; // scope 2 at cita-auth/src/handler.rs:541:54: 541:60
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:541:54: 541:60
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<u64>}, val: Value(<ZST>) }
    }

    bb9: {
        _17 = [move _18];                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _16 = &_17;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _15 = _16 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _13 = Arguments::<'_>::new_v1(move _14, move _15) -> bb10; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb10: {
        _129 = const _;                  // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::deal_block_tx_hashes, [], Some(promoted[4])) }
        _12 = log::__private_api_log(move _13, _4, _129) -> bb11; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb11: {
        _20 = libproto::BlockTxHashes::get_tx_hashes(_2) -> bb12; // scope 1 at cita-auth/src/handler.rs:542:25: 542:56
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:542:41: 542:54
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::BlockTxHashes) -> &'a [Vec<u8>] {libproto::BlockTxHashes::get_tx_hashes}, val: Value(<ZST>) }
    }

    bb12: {
        _23 = _3;                        // scope 3 at cita-auth/src/handler.rs:546:12: 546:18
        _25 = &((*_1).4: history::HistoryHeights); // scope 3 at cita-auth/src/handler.rs:546:22: 546:56
        _24 = HistoryHeights::next_height(move _25) -> bb16; // scope 3 at cita-auth/src/handler.rs:546:22: 546:56
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:546:43: 546:54
                                         // + literal: Const { ty: for<'a> fn(&'a HistoryHeights) -> u64 {HistoryHeights::next_height}, val: Value(<ZST>) }
    }

    bb13: {
        _21 = const true;                // scope 3 at cita-auth/src/handler.rs:546:12: 547:72
        goto -> bb15;                    // scope 3 at cita-auth/src/handler.rs:546:12: 547:72
    }

    bb14: {
        _28 = &((*_1).4: history::HistoryHeights); // scope 3 at cita-auth/src/handler.rs:547:17: 547:51
        _27 = HistoryHeights::next_height(move _28) -> bb20; // scope 3 at cita-auth/src/handler.rs:547:17: 547:51
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:547:38: 547:49
                                         // + literal: Const { ty: for<'a> fn(&'a HistoryHeights) -> u64 {HistoryHeights::next_height}, val: Value(<ZST>) }
    }

    bb15: {
        switchInt(move _21) -> [0: bb63, otherwise: bb21]; // scope 3 at cita-auth/src/handler.rs:546:12: 547:72
    }

    bb16: {
        _22 = Ge(move _23, move _24);    // scope 3 at cita-auth/src/handler.rs:546:12: 546:56
        switchInt(move _22) -> [0: bb14, otherwise: bb13]; // scope 3 at cita-auth/src/handler.rs:546:12: 547:72
    }

    bb17: {
        _26 = const false;               // scope 3 at cita-auth/src/handler.rs:547:16: 547:72
        goto -> bb19;                    // scope 3 at cita-auth/src/handler.rs:547:16: 547:72
    }

    bb18: {
        _30 = _3;                        // scope 3 at cita-auth/src/handler.rs:547:60: 547:66
        _29 = Eq(move _30, const 0_u64); // scope 3 at cita-auth/src/handler.rs:547:60: 547:71
        _26 = move _29;                  // scope 3 at cita-auth/src/handler.rs:547:16: 547:72
        goto -> bb19;                    // scope 3 at cita-auth/src/handler.rs:547:16: 547:72
    }

    bb19: {
        _21 = move _26;                  // scope 3 at cita-auth/src/handler.rs:546:12: 547:72
        goto -> bb15;                    // scope 3 at cita-auth/src/handler.rs:546:12: 547:72
    }

    bb20: {
        switchInt(move _27) -> [1: bb18, otherwise: bb17]; // scope 3 at cita-auth/src/handler.rs:547:16: 547:72
    }

    bb21: {
        _31 = libproto::BlockTxHashes::get_block_quota_limit(_2) -> bb22; // scope 3 at cita-auth/src/handler.rs:550:37: 550:76
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:550:53: 550:74
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::BlockTxHashes) -> u64 {libproto::BlockTxHashes::get_block_quota_limit}, val: Value(<ZST>) }
    }

    bb22: {
        _34 = libproto::BlockTxHashes::get_account_quota_limit(_2) -> bb23; // scope 4 at cita-auth/src/handler.rs:551:39: 551:80
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:551:55: 551:78
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::BlockTxHashes) -> &'a AccountGasLimit {libproto::BlockTxHashes::get_account_quota_limit}, val: Value(<ZST>) }
    }

    bb23: {
        _33 = _34;                       // scope 4 at cita-auth/src/handler.rs:551:39: 551:88
        _32 = <AccountGasLimit as Clone>::clone(move _33) -> bb24; // scope 4 at cita-auth/src/handler.rs:551:39: 551:88
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:551:81: 551:86
                                         // + literal: Const { ty: for<'a> fn(&'a AccountGasLimit) -> AccountGasLimit {<AccountGasLimit as Clone>::clone}, val: Value(<ZST>) }
    }

    bb24: {
        _35 = libproto::BlockTxHashes::get_check_quota(_2) -> [return: bb25, unwind: bb88]; // scope 5 at cita-auth/src/handler.rs:552:31: 552:64
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:552:47: 552:62
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::BlockTxHashes) -> bool {libproto::BlockTxHashes::get_check_quota}, val: Value(<ZST>) }
    }

    bb25: {
        _36 = _35;                       // scope 6 at cita-auth/src/handler.rs:553:44: 553:55
        (((*_1).12: handler::SysConfigInfo).2: bool) = move _36; // scope 6 at cita-auth/src/handler.rs:553:13: 553:55
        _37 = _31;                       // scope 6 at cita-auth/src/handler.rs:554:50: 554:67
        (((*_1).12: handler::SysConfigInfo).0: u64) = move _37; // scope 6 at cita-auth/src/handler.rs:554:13: 554:67
        _39 = &_32;                      // scope 6 at cita-auth/src/handler.rs:555:52: 555:79
        _38 = <AccountGasLimit as Clone>::clone(move _39) -> [return: bb26, unwind: bb88]; // scope 6 at cita-auth/src/handler.rs:555:52: 555:79
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:555:72: 555:77
                                         // + literal: Const { ty: for<'a> fn(&'a AccountGasLimit) -> AccountGasLimit {<AccountGasLimit as Clone>::clone}, val: Value(<ZST>) }
    }

    bb26: {
        drop((((*_1).12: handler::SysConfigInfo).1: libproto::AccountGasLimit)) -> [return: bb27, unwind: bb28]; // scope 6 at cita-auth/src/handler.rs:555:13: 555:49
    }

    bb27: {
        (((*_1).12: handler::SysConfigInfo).1: libproto::AccountGasLimit) = move _38; // scope 6 at cita-auth/src/handler.rs:555:13: 555:49
        _43 = libproto::BlockTxHashes::get_admin_address(_2) -> [return: bb29, unwind: bb88]; // scope 6 at cita-auth/src/handler.rs:556:49: 556:84
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:556:65: 556:82
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::BlockTxHashes) -> &'a [u8] {libproto::BlockTxHashes::get_admin_address}, val: Value(<ZST>) }
    }

    bb28 (cleanup): {
        (((*_1).12: handler::SysConfigInfo).1: libproto::AccountGasLimit) = move _38; // scope 6 at cita-auth/src/handler.rs:555:13: 555:49
        goto -> bb88;                    // scope 6 at cita-auth/src/handler.rs:555:78: 555:79
    }

    bb29: {
        _42 = _43;                       // scope 6 at cita-auth/src/handler.rs:556:49: 556:95
        _41 = core::slice::<impl [u8]>::is_empty(move _42) -> [return: bb30, unwind: bb88]; // scope 6 at cita-auth/src/handler.rs:556:49: 556:95
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:556:85: 556:93
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> bool {core::slice::<impl [u8]>::is_empty}, val: Value(<ZST>) }
    }

    bb30: {
        switchInt(move _41) -> [0: bb32, otherwise: bb31]; // scope 6 at cita-auth/src/handler.rs:556:49: 556:95
    }

    bb31: {
        _40 = std::option::Option::<H160>::None; // scope 6 at cita-auth/src/handler.rs:557:17: 557:21
        goto -> bb35;                    // scope 6 at cita-auth/src/handler.rs:556:46: 560:14
    }

    bb32: {
        _45 = libproto::BlockTxHashes::get_admin_address(_2) -> [return: bb33, unwind: bb88]; // scope 6 at cita-auth/src/handler.rs:559:36: 559:71
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:559:52: 559:69
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::BlockTxHashes) -> &'a [u8] {libproto::BlockTxHashes::get_admin_address}, val: Value(<ZST>) }
    }

    bb33: {
        _44 = <H160 as From<&[u8]>>::from(move _45) -> [return: bb34, unwind: bb88]; // scope 6 at cita-auth/src/handler.rs:559:22: 559:72
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:559:22: 559:35
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[u8]) -> H160 {<H160 as From<&[u8]>>::from}, val: Value(<ZST>) }
    }

    bb34: {
        _40 = std::option::Option::<H160>::Some(move _44); // scope 6 at cita-auth/src/handler.rs:559:17: 559:73
        goto -> bb35;                    // scope 6 at cita-auth/src/handler.rs:556:46: 560:14
    }

    bb35: {
        (((*_1).12: handler::SysConfigInfo).3: std::option::Option<cita_types::H160>) = move _40; // scope 6 at cita-auth/src/handler.rs:556:13: 560:14
        _46 = libproto::BlockTxHashes::get_version(_2) -> [return: bb36, unwind: bb88]; // scope 6 at cita-auth/src/handler.rs:561:36: 561:65
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:561:52: 561:63
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::BlockTxHashes) -> u32 {libproto::BlockTxHashes::get_version}, val: Value(<ZST>) }
    }

    bb36: {
        _49 = _46;                       // scope 7 at cita-auth/src/handler.rs:562:33: 562:49
        _48 = Gt(move _49, const 0_u32); // scope 7 at cita-auth/src/handler.rs:562:33: 562:53
        switchInt(move _48) -> [0: bb37, otherwise: bb38]; // scope 7 at cita-auth/src/handler.rs:562:33: 562:77
    }

    bb37: {
        _47 = const false;               // scope 7 at cita-auth/src/handler.rs:562:33: 562:77
        goto -> bb39;                    // scope 7 at cita-auth/src/handler.rs:562:33: 562:77
    }

    bb38: {
        _51 = _46;                       // scope 7 at cita-auth/src/handler.rs:562:57: 562:73
        _50 = Lt(move _51, const 3_u32); // scope 7 at cita-auth/src/handler.rs:562:57: 562:77
        _47 = move _50;                  // scope 7 at cita-auth/src/handler.rs:562:33: 562:77
        goto -> bb39;                    // scope 7 at cita-auth/src/handler.rs:562:33: 562:77
    }

    bb39: {
        _53 = _47;                       // scope 8 at cita-auth/src/handler.rs:564:16: 564:29
        switchInt(move _53) -> [0: bb40, otherwise: bb41]; // scope 8 at cita-auth/src/handler.rs:564:16: 564:68
    }

    bb40: {
        _52 = const false;               // scope 8 at cita-auth/src/handler.rs:564:16: 564:68
        goto -> bb42;                    // scope 8 at cita-auth/src/handler.rs:564:16: 564:68
    }

    bb41: {
        _55 = &(((*_1).12: handler::SysConfigInfo).4: std::option::Option<u32>); // scope 8 at cita-auth/src/handler.rs:564:33: 564:57
        _128 = const _;                  // scope 8 at cita-auth/src/handler.rs:564:61: 564:68
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:564:61: 564:68
                                         // + literal: Const { ty: &std::option::Option<u32>, val: Unevaluated(MsgHandler::deal_block_tx_hashes, [], Some(promoted[3])) }
        _54 = <std::option::Option<u32> as PartialEq>::eq(move _55, _128) -> [return: bb43, unwind: bb88]; // scope 8 at cita-auth/src/handler.rs:564:33: 564:68
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:564:33: 564:68
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a std::option::Option<u32>, &'b std::option::Option<u32>) -> bool {<std::option::Option<u32> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb42: {
        switchInt(move _52) -> [0: bb61, otherwise: bb44]; // scope 8 at cita-auth/src/handler.rs:564:16: 564:68
    }

    bb43: {
        _52 = move _54;                  // scope 8 at cita-auth/src/handler.rs:564:16: 564:68
        goto -> bb42;                    // scope 8 at cita-auth/src/handler.rs:564:16: 564:68
    }

    bb44: {
        _56 = log::Level::Trace;         // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _59 = &_56;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _127 = const _;                  // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::deal_block_tx_hashes, [], Some(promoted[2])) }
        _58 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _59, _127) -> [return: bb48, unwind: bb88]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb45: {
        _57 = const false;               // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb47;                    // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb46: {
        _61 = &_56;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _63 = log::max_level() -> [return: bb49, unwind: bb88]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb47: {
        switchInt(move _57) -> [0: bb53, otherwise: bb51]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb48: {
        switchInt(move _58) -> [0: bb45, otherwise: bb46]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb49: {
        _62 = &_63;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _60 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _61, move _62) -> [return: bb50, unwind: bb88]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb50: {
        _57 = move _60;                  // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb47;                    // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb51: {
        _126 = const _;                  // scope 9 at cita-auth/src/handler.rs:565:24: 565:44
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:565:24: 565:44
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(MsgHandler::deal_block_tx_hashes, [], Some(promoted[1])) }
        _66 = _126 as &[&str] (Pointer(Unsize)); // scope 9 at cita-auth/src/handler.rs:565:24: 565:44
        _65 = Arguments::<'_>::new_const(move _66) -> [return: bb52, unwind: bb88]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb52: {
        _125 = const _;                  // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::deal_block_tx_hashes, [], Some(promoted[0])) }
        _64 = log::__private_api_log(move _65, _56, _125) -> [return: bb94, unwind: bb88]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb53: {
        _68 = libproto::MiscellaneousReq::new() -> [return: bb54, unwind: bb88]; // scope 8 at cita-auth/src/handler.rs:566:36: 566:59
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:566:36: 566:57
                                         // + literal: Const { ty: fn() -> libproto::MiscellaneousReq {libproto::MiscellaneousReq::new}, val: Value(<ZST>) }
    }

    bb54: {
        _67 = <libproto::MiscellaneousReq as Into<libproto::Message>>::into(move _68) -> [return: bb55, unwind: bb88]; // scope 8 at cita-auth/src/handler.rs:566:36: 566:66
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:566:60: 566:64
                                         // + literal: Const { ty: fn(libproto::MiscellaneousReq) -> libproto::Message {<libproto::MiscellaneousReq as Into<libproto::Message>>::into}, val: Value(<ZST>) }
    }

    bb55: {
        _133 = const true;               // scope 8 at cita-auth/src/handler.rs:566:65: 566:66
        _71 = &((*_1).1: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 10 at cita-auth/src/handler.rs:567:17: 571:23
        _75 = const Auth;                // scope 10 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x04)) }
        _76 = const libproto::router::MsgType::MiscellaneousReq; // scope 10 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x14)) }
        _74 = RoutingKey(move _75, move _76); // scope 10 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _73 = <RoutingKey as Into<std::string::String>>::into(move _74) -> [return: bb56, unwind: bb93]; // scope 10 at cita-auth/src/handler.rs:569:25: 569:70
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:569:64: 569:68
                                         // + literal: Const { ty: fn(RoutingKey) -> std::string::String {<RoutingKey as Into<std::string::String>>::into}, val: Value(<ZST>) }
    }

    bb56: {
        _133 = const false;              // scope 10 at cita-auth/src/handler.rs:570:25: 570:28
        _79 = move _67;                  // scope 10 at cita-auth/src/handler.rs:570:25: 570:28
        _78 = <libproto::Message as libproto::TryInto<Vec<u8>>>::try_into(move _79) -> [return: bb57, unwind: bb87]; // scope 10 at cita-auth/src/handler.rs:570:25: 570:39
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:570:29: 570:37
                                         // + literal: Const { ty: fn(libproto::Message) -> Result<Vec<u8>, <libproto::Message as libproto::TryInto<Vec<u8>>>::Error> {<libproto::Message as libproto::TryInto<Vec<u8>>>::try_into}, val: Value(<ZST>) }
    }

    bb57: {
        _77 = Result::<Vec<u8>, TryIntoConvertError>::unwrap(move _78) -> [return: bb58, unwind: bb87]; // scope 10 at cita-auth/src/handler.rs:570:25: 570:48
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:570:40: 570:46
                                         // + literal: Const { ty: fn(Result<Vec<u8>, TryIntoConvertError>) -> Vec<u8> {Result::<Vec<u8>, TryIntoConvertError>::unwrap}, val: Value(<ZST>) }
    }

    bb58: {
        _72 = (move _73, move _77);      // scope 10 at cita-auth/src/handler.rs:568:27: 571:22
        _70 = pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send(move _71, move _72) -> [return: bb59, unwind: bb93]; // scope 10 at cita-auth/src/handler.rs:567:17: 571:23
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:568:22: 568:26
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, (std::string::String, Vec<u8>)) -> Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>> {pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send}, val: Value(<ZST>) }
    }

    bb59: {
        _69 = Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap(move _70) -> [return: bb60, unwind: bb93]; // scope 10 at cita-auth/src/handler.rs:567:17: 572:30
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:572:22: 572:28
                                         // + literal: Const { ty: fn(Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>) {Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap}, val: Value(<ZST>) }
    }

    bb60: {
        _133 = const false;              // scope 8 at cita-auth/src/handler.rs:573:13: 573:14
        goto -> bb61;                    // scope 8 at cita-auth/src/handler.rs:564:13: 573:14
    }

    bb61: {
        _81 = libproto::BlockTxHashes::get_version(_2) -> [return: bb62, unwind: bb88]; // scope 8 at cita-auth/src/handler.rs:574:45: 574:74
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:574:61: 574:72
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::BlockTxHashes) -> u32 {libproto::BlockTxHashes::get_version}, val: Value(<ZST>) }
    }

    bb62: {
        _80 = std::option::Option::<u32>::Some(move _81); // scope 8 at cita-auth/src/handler.rs:574:40: 574:75
        (((*_1).12: handler::SysConfigInfo).4: std::option::Option<u32>) = move _80; // scope 8 at cita-auth/src/handler.rs:574:13: 574:75
        ((*_1).11: bool) = const true;   // scope 8 at cita-auth/src/handler.rs:577:13: 577:51
        drop(_32) -> bb63;               // scope 4 at cita-auth/src/handler.rs:578:9: 578:10
    }

    bb63: {
        _83 = &((*_1).4: history::HistoryHeights); // scope 3 at cita-auth/src/handler.rs:581:30: 581:63
        _82 = HistoryHeights::min_height(move _83) -> bb64; // scope 3 at cita-auth/src/handler.rs:581:30: 581:63
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:581:51: 581:61
                                         // + literal: Const { ty: for<'a> fn(&'a HistoryHeights) -> u64 {HistoryHeights::min_height}, val: Value(<ZST>) }
    }

    bb64: {
        _85 = &mut ((*_1).4: history::HistoryHeights); // scope 11 at cita-auth/src/handler.rs:582:9: 582:51
        _86 = _3;                        // scope 11 at cita-auth/src/handler.rs:582:44: 582:50
        _84 = HistoryHeights::update_height(move _85, move _86) -> bb65; // scope 11 at cita-auth/src/handler.rs:582:9: 582:51
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:582:30: 582:43
                                         // + literal: Const { ty: for<'a> fn(&'a mut HistoryHeights, u64) {HistoryHeights::update_height}, val: Value(<ZST>) }
    }

    bb65: {
        _89 = _20;                       // scope 11 at cita-auth/src/handler.rs:585:57: 585:72
        _88 = Len((*_89));               // scope 11 at cita-auth/src/handler.rs:585:57: 585:72
        _132 = const true;               // scope 11 at cita-auth/src/handler.rs:585:34: 585:73
        _87 = HashSet::<H256>::with_capacity(move _88) -> bb66; // scope 11 at cita-auth/src/handler.rs:585:34: 585:73
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:585:34: 585:56
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: fn(usize) -> HashSet<H256> {HashSet::<H256>::with_capacity}, val: Value(<ZST>) }
    }

    bb66: {
        _92 = _20;                       // scope 12 at cita-auth/src/handler.rs:586:21: 586:37
        _91 = core::slice::<impl [Vec<u8>]>::iter(move _92) -> [return: bb67, unwind: bb91]; // scope 12 at cita-auth/src/handler.rs:586:21: 586:37
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:586:31: 586:35
                                         // + literal: Const { ty: for<'a> fn(&'a [Vec<u8>]) -> std::slice::Iter<'a, Vec<u8>> {core::slice::<impl [Vec<u8>]>::iter}, val: Value(<ZST>) }
    }

    bb67: {
        _90 = <std::slice::Iter<'_, Vec<u8>> as IntoIterator>::into_iter(move _91) -> [return: bb68, unwind: bb91]; // scope 12 at cita-auth/src/handler.rs:586:21: 586:37
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:586:21: 586:37
                                         // + literal: Const { ty: fn(std::slice::Iter<'_, Vec<u8>>) -> <std::slice::Iter<'_, Vec<u8>> as IntoIterator>::IntoIter {<std::slice::Iter<'_, Vec<u8>> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb68: {
        _93 = move _90;                  // scope 12 at cita-auth/src/handler.rs:586:21: 586:37
        goto -> bb69;                    // scope 13 at cita-auth/src/handler.rs:586:9: 589:10
    }

    bb69: {
        _95 = &mut _93;                  // scope 13 at cita-auth/src/handler.rs:586:21: 586:37
        _94 = <std::slice::Iter<'_, Vec<u8>> as Iterator>::next(_95) -> [return: bb70, unwind: bb91]; // scope 13 at cita-auth/src/handler.rs:586:21: 586:37
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:586:21: 586:37
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::slice::Iter<'_, Vec<u8>>) -> std::option::Option<<std::slice::Iter<'_, Vec<u8>> as Iterator>::Item> {<std::slice::Iter<'_, Vec<u8>> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb70: {
        _96 = discriminant(_94);         // scope 13 at cita-auth/src/handler.rs:586:21: 586:37
        switchInt(move _96) -> [0: bb73, 1: bb71, otherwise: bb72]; // scope 13 at cita-auth/src/handler.rs:586:21: 586:37
    }

    bb71: {
        _97 = ((_94 as Some).0: &std::vec::Vec<u8>); // scope 13 at cita-auth/src/handler.rs:586:13: 586:17
        _100 = <Vec<u8> as Deref>::deref(_97) -> [return: bb74, unwind: bb91]; // scope 14 at cita-auth/src/handler.rs:587:41: 587:45
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:587:41: 587:45
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<u8>) -> &'a <Vec<u8> as Deref>::Target {<Vec<u8> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb72: {
        unreachable;                     // scope 13 at cita-auth/src/handler.rs:586:21: 586:37
    }

    bb73: {
        _105 = &((*_1).6: dispatcher::Dispatcher); // scope 12 at cita-auth/src/handler.rs:590:9: 590:69
        _106 = &_87;                     // scope 12 at cita-auth/src/handler.rs:590:53: 590:68
        _104 = Dispatcher::del_txs_from_pool_with_hash(move _105, _106) -> [return: bb76, unwind: bb91]; // scope 12 at cita-auth/src/handler.rs:590:9: 590:69
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:590:25: 590:52
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Dispatcher, &'b HashSet<H256>) {Dispatcher::del_txs_from_pool_with_hash}, val: Value(<ZST>) }
    }

    bb74: {
        _99 = _100;                      // scope 14 at cita-auth/src/handler.rs:587:41: 587:45
        _98 = H256::from_slice(move _99) -> [return: bb75, unwind: bb91]; // scope 14 at cita-auth/src/handler.rs:587:24: 587:46
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:587:24: 587:40
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> H256 {H256::from_slice}, val: Value(<ZST>) }
    }

    bb75: {
        _102 = &mut _87;                 // scope 15 at cita-auth/src/handler.rs:588:13: 588:40
        _103 = _98;                      // scope 15 at cita-auth/src/handler.rs:588:35: 588:39
        _101 = HashSet::<H256>::insert(move _102, move _103) -> [return: bb95, unwind: bb91]; // scope 15 at cita-auth/src/handler.rs:588:13: 588:40
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:588:28: 588:34
                                         // + literal: Const { ty: for<'a> fn(&'a mut HashSet<H256>, H256) -> bool {HashSet::<H256>::insert}, val: Value(<ZST>) }
    }

    bb76: {
        _109 = _82;                      // scope 12 at cita-auth/src/handler.rs:593:18: 593:32
        _111 = &((*_1).4: history::HistoryHeights); // scope 12 at cita-auth/src/handler.rs:593:34: 593:67
        _110 = HistoryHeights::min_height(move _111) -> [return: bb77, unwind: bb91]; // scope 12 at cita-auth/src/handler.rs:593:34: 593:67
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:593:55: 593:65
                                         // + literal: Const { ty: for<'a> fn(&'a HistoryHeights) -> u64 {HistoryHeights::min_height}, val: Value(<ZST>) }
    }

    bb77: {
        _108 = std::ops::Range::<u64> { start: move _109, end: move _110 }; // scope 12 at cita-auth/src/handler.rs:593:18: 593:67
        _107 = <std::ops::Range<u64> as IntoIterator>::into_iter(move _108) -> [return: bb78, unwind: bb91]; // scope 12 at cita-auth/src/handler.rs:593:18: 593:67
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:593:18: 593:67
                                         // + literal: Const { ty: fn(std::ops::Range<u64>) -> <std::ops::Range<u64> as IntoIterator>::IntoIter {<std::ops::Range<u64> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb78: {
        _112 = move _107;                // scope 12 at cita-auth/src/handler.rs:593:18: 593:67
        goto -> bb79;                    // scope 16 at cita-auth/src/handler.rs:593:9: 595:10
    }

    bb79: {
        _114 = &mut _112;                // scope 16 at cita-auth/src/handler.rs:593:18: 593:67
        _113 = <std::ops::Range<u64> as Iterator>::next(_114) -> [return: bb80, unwind: bb91]; // scope 16 at cita-auth/src/handler.rs:593:18: 593:67
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:593:18: 593:67
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::ops::Range<u64>) -> std::option::Option<<std::ops::Range<u64> as Iterator>::Item> {<std::ops::Range<u64> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb80: {
        _115 = discriminant(_113);       // scope 16 at cita-auth/src/handler.rs:593:18: 593:67
        switchInt(move _115) -> [0: bb83, 1: bb81, otherwise: bb82]; // scope 16 at cita-auth/src/handler.rs:593:18: 593:67
    }

    bb81: {
        _116 = ((_113 as Some).0: u64);  // scope 16 at cita-auth/src/handler.rs:593:13: 593:14
        _118 = &mut ((*_1).5: std::collections::HashMap<u64, std::collections::HashSet<cita_types::H256>>); // scope 17 at cita-auth/src/handler.rs:594:13: 594:43
        _119 = &_116;                    // scope 17 at cita-auth/src/handler.rs:594:40: 594:42
        _117 = HashMap::<u64, HashSet<H256>>::remove::<u64>(move _118, _119) -> [return: bb84, unwind: bb91]; // scope 17 at cita-auth/src/handler.rs:594:13: 594:43
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:594:33: 594:39
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut HashMap<u64, HashSet<H256>>, &'b u64) -> std::option::Option<HashSet<H256>> {HashMap::<u64, HashSet<H256>>::remove::<u64>}, val: Value(<ZST>) }
    }

    bb82: {
        unreachable;                     // scope 16 at cita-auth/src/handler.rs:593:18: 593:67
    }

    bb83: {
        _122 = &mut ((*_1).5: std::collections::HashMap<u64, std::collections::HashSet<cita_types::H256>>); // scope 12 at cita-auth/src/handler.rs:596:9: 596:42
        _123 = _3;                       // scope 12 at cita-auth/src/handler.rs:596:35: 596:41
        _121 = HashMap::<u64, HashSet<H256>>::entry(move _122, move _123) -> [return: bb85, unwind: bb91]; // scope 12 at cita-auth/src/handler.rs:596:9: 596:42
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:596:29: 596:34
                                         // + literal: Const { ty: for<'a> fn(&'a mut HashMap<u64, HashSet<H256>>, u64) -> std::collections::hash_map::Entry<'a, u64, HashSet<H256>> {HashMap::<u64, HashSet<H256>>::entry}, val: Value(<ZST>) }
    }

    bb84: {
        drop(_117) -> [return: bb79, unwind: bb91]; // scope 17 at cita-auth/src/handler.rs:594:43: 594:44
    }

    bb85: {
        _132 = const false;              // scope 12 at cita-auth/src/handler.rs:596:53: 596:67
        _124 = move _87;                 // scope 12 at cita-auth/src/handler.rs:596:53: 596:67
        _120 = std::collections::hash_map::Entry::<'_, u64, HashSet<H256>>::or_insert(move _121, move _124) -> [return: bb86, unwind: bb91]; // scope 12 at cita-auth/src/handler.rs:596:9: 596:68
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:596:43: 596:52
                                         // + literal: Const { ty: fn(std::collections::hash_map::Entry<'_, u64, HashSet<H256>>, HashSet<H256>) -> &mut HashSet<H256> {std::collections::hash_map::Entry::<'_, u64, HashSet<H256>>::or_insert}, val: Value(<ZST>) }
    }

    bb86: {
        _132 = const false;              // scope 11 at cita-auth/src/handler.rs:597:5: 597:6
        return;                          // scope 0 at cita-auth/src/handler.rs:597:6: 597:6
    }

    bb87 (cleanup): {
        drop(_73) -> bb93;               // scope 10 at cita-auth/src/handler.rs:571:21: 571:22
    }

    bb88 (cleanup): {
        drop(_32) -> bb89;               // scope 4 at cita-auth/src/handler.rs:578:9: 578:10
    }

    bb89 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/handler.rs:539:5: 597:6
    }

    bb90 (cleanup): {
        drop(_87) -> bb89;               // scope 11 at cita-auth/src/handler.rs:597:5: 597:6
    }

    bb91 (cleanup): {
        switchInt(_132) -> [0: bb89, otherwise: bb90]; // scope 11 at cita-auth/src/handler.rs:597:5: 597:6
    }

    bb92 (cleanup): {
        drop(_67) -> bb88;               // scope 8 at cita-auth/src/handler.rs:573:13: 573:14
    }

    bb93 (cleanup): {
        switchInt(_133) -> [0: bb88, otherwise: bb92]; // scope 8 at cita-auth/src/handler.rs:573:13: 573:14
    }

    bb94: {
        goto -> bb53;                    // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb95: {
        goto -> bb69;                    // scope 15 at cita-auth/src/handler.rs:588:13: 588:40
    }
}

promoted[0] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_block_tx_hashes: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:565:17: 565:45
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:565:17: 565:45

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:565:17: 565:45
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:565:17: 565:45
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:565:17: 565:45
        _1 = (move _2, move _4, move _6, const 565_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_block_tx_hashes: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/handler.rs:565:24: 565:44
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/handler.rs:565:24: 565:44

    bb0: {
        _1 = [const "Fetch new chain id"]; // scope 0 at cita-auth/src/handler.rs:565:24: 565:44
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:565:24: 565:44
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:565:24: 565:44
        return;                          // scope 0 at cita-auth/src/handler.rs:565:24: 565:44
    }
}

promoted[2] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_block_tx_hashes: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[3] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_block_tx_hashes: &std::option::Option<u32> = {
    let mut _0: &std::option::Option<u32>; // return place in scope 0 at cita-auth/src/handler.rs:564:61: 564:68
    let mut _1: std::option::Option<u32>; // in scope 0 at cita-auth/src/handler.rs:564:61: 564:68

    bb0: {
        _1 = std::option::Option::<u32>::Some(const 0_u32); // scope 0 at cita-auth/src/handler.rs:564:61: 564:68
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:564:61: 564:68
        return;                          // scope 0 at cita-auth/src/handler.rs:564:61: 564:68
    }
}

promoted[4] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_block_tx_hashes: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:541:9: 541:61
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:541:9: 541:61

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:541:9: 541:61
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:541:9: 541:61
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:541:9: 541:61
        _1 = (move _2, move _4, move _6, const 541_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[5] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_block_tx_hashes: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/handler.rs:541:15: 541:52
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/handler.rs:541:15: 541:52

    bb0: {
        _1 = [const "get block tx hashes for height "]; // scope 0 at cita-auth/src/handler.rs:541:15: 541:52
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:541:15: 541:52
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:541:15: 541:52
        return;                          // scope 0 at cita-auth/src/handler.rs:541:15: 541:52
    }
}

promoted[6] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_block_tx_hashes: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_black_list(_1: &mut MsgHandler, _2: &libproto::BlackList) -> () {
    debug self => _1;                    // in scope 0 at cita-auth/src/handler.rs:599:24: 599:33
    debug black_list => _2;              // in scope 0 at cita-auth/src/handler.rs:599:35: 599:45
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/handler.rs:599:59: 599:59
    let _3: ();                          // in scope 0 at cita-auth/src/handler.rs:600:9: 611:15
    let mut _4: std::slice::Iter<'_, std::vec::Vec<u8>>; // in scope 0 at cita-auth/src/handler.rs:600:9: 602:20
    let mut _5: &[std::vec::Vec<u8>];    // in scope 0 at cita-auth/src/handler.rs:600:9: 602:20
    let _6: &[std::vec::Vec<u8>];        // in scope 0 at cita-auth/src/handler.rs:600:9: 601:30
    let mut _7: [closure@cita-auth/src/handler.rs:603:23: 603:45]; // in scope 0 at cita-auth/src/handler.rs:603:23: 611:14
    let mut _8: &mut &mut handler::MsgHandler; // in scope 0 at cita-auth/src/handler.rs:603:23: 611:14
    let _9: ();                          // in scope 0 at cita-auth/src/handler.rs:613:9: 626:15
    let mut _10: std::slice::Iter<'_, std::vec::Vec<u8>>; // in scope 0 at cita-auth/src/handler.rs:613:9: 615:20
    let mut _11: &[std::vec::Vec<u8>];   // in scope 0 at cita-auth/src/handler.rs:613:9: 615:20
    let _12: &[std::vec::Vec<u8>];       // in scope 0 at cita-auth/src/handler.rs:613:9: 614:30
    let mut _13: [closure@cita-auth/src/handler.rs:616:23: 616:44]; // in scope 0 at cita-auth/src/handler.rs:616:23: 626:14
    let mut _14: &mut &mut handler::MsgHandler; // in scope 0 at cita-auth/src/handler.rs:616:23: 626:14

    bb0: {
        _6 = libproto::BlackList::get_clear_list(_2) -> bb1; // scope 0 at cita-auth/src/handler.rs:600:9: 601:30
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:601:14: 601:28
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::BlackList) -> &'a [Vec<u8>] {libproto::BlackList::get_clear_list}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = _6;                         // scope 0 at cita-auth/src/handler.rs:600:9: 602:20
        _4 = core::slice::<impl [Vec<u8>]>::iter(move _5) -> bb2; // scope 0 at cita-auth/src/handler.rs:600:9: 602:20
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:602:14: 602:18
                                         // + literal: Const { ty: for<'a> fn(&'a [Vec<u8>]) -> std::slice::Iter<'a, Vec<u8>> {core::slice::<impl [Vec<u8>]>::iter}, val: Value(<ZST>) }
    }

    bb2: {
        _8 = &mut _1;                    // scope 0 at cita-auth/src/handler.rs:603:23: 611:14
        _7 = [closure@cita-auth/src/handler.rs:603:23: 603:45] { self: move _8 }; // scope 0 at cita-auth/src/handler.rs:603:23: 611:14
                                         // closure
                                         // + def_id: DefId(0:285 ~ cita_auth[81d6]::handler::{impl#0}::deal_black_list::{closure#0})
                                         // + substs: [
                                         //     i16,
                                         //     extern "rust-call" fn((&std::vec::Vec<u8>,)),
                                         //     (&mut &mut handler::MsgHandler,),
                                         // ]
        _3 = <std::slice::Iter<'_, Vec<u8>> as Iterator>::for_each::<[closure@cita-auth/src/handler.rs:603:23: 603:45]>(move _4, move _7) -> bb3; // scope 0 at cita-auth/src/handler.rs:600:9: 611:15
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:603:14: 603:22
                                         // + literal: Const { ty: fn(std::slice::Iter<'_, Vec<u8>>, [closure@cita-auth/src/handler.rs:603:23: 603:45]) {<std::slice::Iter<'_, Vec<u8>> as Iterator>::for_each::<[closure@cita-auth/src/handler.rs:603:23: 603:45]>}, val: Value(<ZST>) }
    }

    bb3: {
        _12 = libproto::BlackList::get_black_list(_2) -> bb4; // scope 0 at cita-auth/src/handler.rs:613:9: 614:30
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:614:14: 614:28
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::BlackList) -> &'a [Vec<u8>] {libproto::BlackList::get_black_list}, val: Value(<ZST>) }
    }

    bb4: {
        _11 = _12;                       // scope 0 at cita-auth/src/handler.rs:613:9: 615:20
        _10 = core::slice::<impl [Vec<u8>]>::iter(move _11) -> bb5; // scope 0 at cita-auth/src/handler.rs:613:9: 615:20
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:615:14: 615:18
                                         // + literal: Const { ty: for<'a> fn(&'a [Vec<u8>]) -> std::slice::Iter<'a, Vec<u8>> {core::slice::<impl [Vec<u8>]>::iter}, val: Value(<ZST>) }
    }

    bb5: {
        _14 = &mut _1;                   // scope 0 at cita-auth/src/handler.rs:616:23: 626:14
        _13 = [closure@cita-auth/src/handler.rs:616:23: 616:44] { self: move _14 }; // scope 0 at cita-auth/src/handler.rs:616:23: 626:14
                                         // closure
                                         // + def_id: DefId(0:286 ~ cita_auth[81d6]::handler::{impl#0}::deal_black_list::{closure#1})
                                         // + substs: [
                                         //     i16,
                                         //     extern "rust-call" fn((&std::vec::Vec<u8>,)),
                                         //     (&mut &mut handler::MsgHandler,),
                                         // ]
        _9 = <std::slice::Iter<'_, Vec<u8>> as Iterator>::for_each::<[closure@cita-auth/src/handler.rs:616:23: 616:44]>(move _10, move _13) -> bb6; // scope 0 at cita-auth/src/handler.rs:613:9: 626:15
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:616:14: 616:22
                                         // + literal: Const { ty: fn(std::slice::Iter<'_, Vec<u8>>, [closure@cita-auth/src/handler.rs:616:23: 616:44]) {<std::slice::Iter<'_, Vec<u8>> as Iterator>::for_each::<[closure@cita-auth/src/handler.rs:616:23: 616:44]>}, val: Value(<ZST>) }
    }

    bb6: {
        return;                          // scope 0 at cita-auth/src/handler.rs:627:6: 627:6
    }
}

fn handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_black_list::{closure#0}(_1: &mut [closure@cita-auth/src/handler.rs:603:23: 603:45], _2: &Vec<u8>) -> () {
    debug clear_list => _2;              // in scope 0 at cita-auth/src/handler.rs:603:24: 603:34
    debug self => (*((*_1).0: &mut &mut handler::MsgHandler)); // in scope 0 at cita-auth/src/handler.rs:599:29: 599:33
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/handler.rs:603:46: 603:46
    let _3: cita_types::H160;            // in scope 0 at cita-auth/src/handler.rs:604:21: 604:28
    let mut _4: &[u8];                   // in scope 0 at cita-auth/src/handler.rs:604:51: 604:72
    let _5: &[u8];                       // in scope 0 at cita-auth/src/handler.rs:604:51: 604:72
    let mut _6: bool;                    // in scope 0 at cita-auth/src/handler.rs:605:20: 605:49
    let mut _7: &cita_types::H160;       // in scope 0 at cita-auth/src/handler.rs:605:20: 605:27
    let mut _8: &cita_types::H160;       // in scope 0 at cita-auth/src/handler.rs:605:31: 605:49
    let _9: cita_types::H160;            // in scope 0 at cita-auth/src/handler.rs:605:31: 605:49
    let mut _11: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _12: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _13: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _14: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _15: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _16: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _17: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _18: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _19: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _20: &[&str];                // in scope 0 at cita-auth/src/handler.rs:606:28: 606:74
    let _21: ();                         // in scope 0 at cita-auth/src/handler.rs:607:21: 607:50
    let mut _22: &mut std::collections::HashMap<cita_types::H160, i8>; // in scope 0 at cita-auth/src/handler.rs:607:21: 607:50
    let _23: std::option::Option<i8>;    // in scope 0 at cita-auth/src/handler.rs:610:17: 610:55
    let mut _24: &mut std::collections::HashMap<cita_types::H160, i8>; // in scope 0 at cita-auth/src/handler.rs:610:17: 610:55
    let _25: &cita_types::H160;          // in scope 0 at cita-auth/src/handler.rs:610:46: 610:54
    let mut _29: &mut &mut handler::MsgHandler; // in scope 0 at cita-auth/src/handler.rs:603:23: 611:14
    let mut _30: &mut handler::MsgHandler; // in scope 0 at cita-auth/src/handler.rs:603:23: 611:14
    let mut _31: &mut &mut handler::MsgHandler; // in scope 0 at cita-auth/src/handler.rs:603:23: 611:14
    let mut _32: &mut handler::MsgHandler; // in scope 0 at cita-auth/src/handler.rs:603:23: 611:14
    scope 1 {
        debug address => _3;             // in scope 1 at cita-auth/src/handler.rs:604:21: 604:28
        let _10: log::Level;             // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        scope 2 {
            debug lvl => _10;            // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _26: &(&str, &str, &str, u32); // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _27: &[&str; 1];     // in scope 2 at cita-auth/src/handler.rs:606:28: 606:74
            let mut _28: &log::LevelFilter; // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
    }

    bb0: {
        _5 = Vec::<u8>::as_slice(_2) -> bb1; // scope 0 at cita-auth/src/handler.rs:604:51: 604:72
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:604:62: 604:70
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<u8>) -> &'a [u8] {Vec::<u8>::as_slice}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = _5;                         // scope 0 at cita-auth/src/handler.rs:604:51: 604:72
        _3 = H160::from_slice(move _4) -> bb2; // scope 0 at cita-auth/src/handler.rs:604:31: 604:73
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:604:31: 604:50
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> H160 {H160::from_slice}, val: Value(<ZST>) }
    }

    bb2: {
        _7 = &_3;                        // scope 1 at cita-auth/src/handler.rs:605:20: 605:27
        _9 = <H160 as Default>::default() -> bb3; // scope 1 at cita-auth/src/handler.rs:605:31: 605:49
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:605:31: 605:47
                                         // + literal: Const { ty: fn() -> H160 {<H160 as Default>::default}, val: Value(<ZST>) }
    }

    bb3: {
        _8 = &_9;                        // scope 1 at cita-auth/src/handler.rs:605:31: 605:49
        _6 = <H160 as PartialEq>::eq(move _7, move _8) -> bb4; // scope 1 at cita-auth/src/handler.rs:605:20: 605:49
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:605:20: 605:49
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a H160, &'b H160) -> bool {<H160 as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb4: {
        switchInt(move _6) -> [0: bb15, otherwise: bb5]; // scope 1 at cita-auth/src/handler.rs:605:20: 605:49
    }

    bb5: {
        _10 = log::Level::Debug;         // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:142:14: 142:34
        _13 = &_10;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _28 = const _;                   // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::deal_black_list::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[2])) }
        _12 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _13, _28) -> bb9; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb6: {
        _11 = const false;               // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb8;                     // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        _15 = &_10;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _17 = log::max_level() -> bb10;  // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb8: {
        switchInt(move _11) -> [0: bb14, otherwise: bb12]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb9: {
        switchInt(move _12) -> [0: bb6, otherwise: bb7]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb10: {
        _16 = &_17;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _14 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _15, move _16) -> bb11; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb11: {
        _11 = move _14;                  // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb8;                     // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb12: {
        _27 = const _;                   // scope 2 at cita-auth/src/handler.rs:606:28: 606:74
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:606:28: 606:74
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(MsgHandler::deal_black_list::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[1])) }
        _20 = _27 as &[&str] (Pointer(Unsize)); // scope 2 at cita-auth/src/handler.rs:606:28: 606:74
        _19 = Arguments::<'_>::new_const(move _20) -> bb13; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb13: {
        _26 = const _;                   // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::deal_black_list::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[0])) }
        _18 = log::__private_api_log(move _19, _10, _26) -> bb14; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb14: {
        _29 = deref_copy ((*_1).0: &mut &mut handler::MsgHandler); // scope 1 at cita-auth/src/handler.rs:607:21: 607:50
        _30 = deref_copy (*_29);         // scope 1 at cita-auth/src/handler.rs:607:21: 607:50
        _22 = &mut ((*_30).10: std::collections::HashMap<cita_types::H160, i8>); // scope 1 at cita-auth/src/handler.rs:607:21: 607:50
        _21 = HashMap::<H160, i8>::clear(move _22) -> bb16; // scope 1 at cita-auth/src/handler.rs:607:21: 607:50
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:607:43: 607:48
                                         // + literal: Const { ty: for<'a> fn(&'a mut HashMap<H160, i8>) {HashMap::<H160, i8>::clear}, val: Value(<ZST>) }
    }

    bb15: {
        _31 = deref_copy ((*_1).0: &mut &mut handler::MsgHandler); // scope 1 at cita-auth/src/handler.rs:610:17: 610:55
        _32 = deref_copy (*_31);         // scope 1 at cita-auth/src/handler.rs:610:17: 610:55
        _24 = &mut ((*_32).10: std::collections::HashMap<cita_types::H160, i8>); // scope 1 at cita-auth/src/handler.rs:610:17: 610:55
        _25 = &_3;                       // scope 1 at cita-auth/src/handler.rs:610:46: 610:54
        _23 = HashMap::<H160, i8>::remove::<H160>(move _24, _25) -> bb16; // scope 1 at cita-auth/src/handler.rs:610:17: 610:55
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:610:39: 610:45
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut HashMap<H160, i8>, &'b H160) -> std::option::Option<i8> {HashMap::<H160, i8>::remove::<H160>}, val: Value(<ZST>) }
    }

    bb16: {
        return;                          // scope 0 at cita-auth/src/handler.rs:611:14: 611:14
    }
}

promoted[0] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_black_list::{closure#0}: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:606:21: 606:75
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:606:21: 606:75

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:606:21: 606:75
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:606:21: 606:75
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:606:21: 606:75
        _1 = (move _2, move _4, move _6, const 606_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_black_list::{closure#0}: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/handler.rs:606:28: 606:74
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/handler.rs:606:28: 606:74

    bb0: {
        _1 = [const "Clean blacklist when cita-executor restarts "]; // scope 0 at cita-auth/src/handler.rs:606:28: 606:74
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:606:28: 606:74
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:606:28: 606:74
        return;                          // scope 0 at cita-auth/src/handler.rs:606:28: 606:74
    }
}

promoted[2] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_black_list::{closure#0}: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_black_list::{closure#1}(_1: &mut [closure@cita-auth/src/handler.rs:616:23: 616:44], _2: &Vec<u8>) -> () {
    debug blacklist => _2;               // in scope 0 at cita-auth/src/handler.rs:616:24: 616:33
    debug self => (*((*_1).0: &mut &mut handler::MsgHandler)); // in scope 0 at cita-auth/src/handler.rs:599:29: 599:33
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/handler.rs:616:45: 616:45
    let _3: &mut i8;                     // in scope 0 at cita-auth/src/handler.rs:617:17: 624:34
    let mut _4: std::collections::hash_map::Entry<'_, cita_types::H160, i8>; // in scope 0 at cita-auth/src/handler.rs:617:17: 623:23
    let mut _5: std::collections::hash_map::Entry<'_, cita_types::H160, i8>; // in scope 0 at cita-auth/src/handler.rs:617:17: 618:70
    let mut _6: &mut std::collections::HashMap<cita_types::H160, i8>; // in scope 0 at cita-auth/src/handler.rs:617:17: 618:70
    let mut _7: cita_types::H160;        // in scope 0 at cita-auth/src/handler.rs:618:28: 618:69
    let mut _8: &[u8];                   // in scope 0 at cita-auth/src/handler.rs:618:48: 618:68
    let _9: &[u8];                       // in scope 0 at cita-auth/src/handler.rs:618:48: 618:68
    let _10: log::Level;                 // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
    let mut _11: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _12: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _13: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _14: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _15: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _16: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _17: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _18: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _19: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _20: &[&str];                // in scope 0 at cita-auth/src/handler.rs:625:24: 625:52
    let mut _21: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _22: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _23: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _24: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:625:54: 625:75
    let _25: &std::collections::HashMap<cita_types::H160, i8>; // in scope 0 at cita-auth/src/handler.rs:625:54: 625:75
    let mut _29: &mut &mut handler::MsgHandler; // in scope 0 at cita-auth/src/handler.rs:616:23: 626:14
    let mut _30: &mut handler::MsgHandler; // in scope 0 at cita-auth/src/handler.rs:616:23: 626:14
    let mut _31: &mut &mut handler::MsgHandler; // in scope 0 at cita-auth/src/handler.rs:616:23: 626:14
    let mut _32: &mut handler::MsgHandler; // in scope 0 at cita-auth/src/handler.rs:616:23: 626:14
    scope 1 {
        debug lvl => _10;                // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _26: &(&str, &str, &str, u32); // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        let mut _27: &[&str; 1];         // in scope 1 at cita-auth/src/handler.rs:625:24: 625:52
        let mut _28: &log::LevelFilter;  // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }

    bb0: {
        _29 = deref_copy ((*_1).0: &mut &mut handler::MsgHandler); // scope 0 at cita-auth/src/handler.rs:617:17: 618:70
        _30 = deref_copy (*_29);         // scope 0 at cita-auth/src/handler.rs:617:17: 618:70
        _6 = &mut ((*_30).10: std::collections::HashMap<cita_types::H160, i8>); // scope 0 at cita-auth/src/handler.rs:617:17: 618:70
        _9 = Vec::<u8>::as_slice(_2) -> bb1; // scope 0 at cita-auth/src/handler.rs:618:48: 618:68
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:618:58: 618:66
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<u8>) -> &'a [u8] {Vec::<u8>::as_slice}, val: Value(<ZST>) }
    }

    bb1: {
        _8 = _9;                         // scope 0 at cita-auth/src/handler.rs:618:48: 618:68
        _7 = H160::from_slice(move _8) -> bb2; // scope 0 at cita-auth/src/handler.rs:618:28: 618:69
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:618:28: 618:47
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> H160 {H160::from_slice}, val: Value(<ZST>) }
    }

    bb2: {
        _5 = HashMap::<H160, i8>::entry(move _6, move _7) -> bb3; // scope 0 at cita-auth/src/handler.rs:617:17: 618:70
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:618:22: 618:27
                                         // + literal: Const { ty: for<'a> fn(&'a mut HashMap<H160, i8>, H160) -> std::collections::hash_map::Entry<'a, H160, i8> {HashMap::<H160, i8>::entry}, val: Value(<ZST>) }
    }

    bb3: {
        _4 = std::collections::hash_map::Entry::<'_, H160, i8>::and_modify::<[closure@cita-auth/src/handler.rs:619:33: 619:36]>(move _5, const ZeroSized: [closure@cita-auth/src/handler.rs:619:33: 619:36]) -> bb4; // scope 0 at cita-auth/src/handler.rs:617:17: 623:23
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:619:22: 619:32
                                         // + literal: Const { ty: fn(std::collections::hash_map::Entry<'_, H160, i8>, [closure@cita-auth/src/handler.rs:619:33: 619:36]) -> std::collections::hash_map::Entry<'_, H160, i8> {std::collections::hash_map::Entry::<'_, H160, i8>::and_modify::<[closure@cita-auth/src/handler.rs:619:33: 619:36]>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: [closure@cita-auth/src/handler.rs:619:33: 619:36], val: Value(<ZST>) }
    }

    bb4: {
        _3 = std::collections::hash_map::Entry::<'_, H160, i8>::or_insert(move _4, const 3_i8) -> bb5; // scope 0 at cita-auth/src/handler.rs:617:17: 624:34
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:624:22: 624:31
                                         // + literal: Const { ty: fn(std::collections::hash_map::Entry<'_, H160, i8>, i8) -> &mut i8 {std::collections::hash_map::Entry::<'_, H160, i8>::or_insert}, val: Value(<ZST>) }
    }

    bb5: {
        _10 = log::Level::Debug;         // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:142:14: 142:34
        _13 = &_10;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _28 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::deal_black_list::{closure#1}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[2])) }
        _12 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _13, _28) -> bb9; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb6: {
        _11 = const false;               // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb8;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        _15 = &_10;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _17 = log::max_level() -> bb10;  // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb8: {
        switchInt(move _11) -> [0: bb15, otherwise: bb12]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb9: {
        switchInt(move _12) -> [0: bb6, otherwise: bb7]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb10: {
        _16 = &_17;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _14 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _15, move _16) -> bb11; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb11: {
        _11 = move _14;                  // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb8;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb12: {
        _27 = const _;                   // scope 1 at cita-auth/src/handler.rs:625:24: 625:52
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:625:24: 625:52
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(MsgHandler::deal_black_list::{closure#1}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[1])) }
        _20 = _27 as &[&str] (Pointer(Unsize)); // scope 1 at cita-auth/src/handler.rs:625:24: 625:52
        _31 = deref_copy ((*_1).0: &mut &mut handler::MsgHandler); // scope 1 at cita-auth/src/handler.rs:625:54: 625:75
        _32 = deref_copy (*_31);         // scope 1 at cita-auth/src/handler.rs:625:54: 625:75
        _25 = &((*_32).10: std::collections::HashMap<cita_types::H160, i8>); // scope 1 at cita-auth/src/handler.rs:625:54: 625:75
        _24 = core::fmt::ArgumentV1::<'_>::new_debug::<HashMap<H160, i8>>(_25) -> bb13; // scope 1 at cita-auth/src/handler.rs:625:54: 625:75
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:625:54: 625:75
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b HashMap<H160, i8>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<HashMap<H160, i8>>}, val: Value(<ZST>) }
    }

    bb13: {
        _23 = [move _24];                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _22 = &_23;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _21 = _22 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _19 = Arguments::<'_>::new_v1(move _20, move _21) -> bb14; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb14: {
        _26 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::deal_black_list::{closure#1}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[0])) }
        _18 = log::__private_api_log(move _19, _10, _26) -> bb15; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb15: {
        return;                          // scope 0 at cita-auth/src/handler.rs:626:14: 626:14
    }
}

promoted[0] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_black_list::{closure#1}: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:625:17: 625:76
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:625:17: 625:76

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:625:17: 625:76
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:625:17: 625:76
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:625:17: 625:76
        _1 = (move _2, move _4, move _6, const 625_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_black_list::{closure#1}: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/handler.rs:625:24: 625:52
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/handler.rs:625:24: 625:52

    bb0: {
        _1 = [const "Current black list is "]; // scope 0 at cita-auth/src/handler.rs:625:24: 625:52
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:625:24: 625:52
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:625:24: 625:52
        return;                          // scope 0 at cita-auth/src/handler.rs:625:24: 625:52
    }
}

promoted[2] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_black_list::{closure#1}: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_black_list::{closure#1}::{closure#0}(_1: [closure@cita-auth/src/handler.rs:619:33: 619:36], _2: &mut i8) -> () {
    debug e => _2;                       // in scope 0 at cita-auth/src/handler.rs:619:34: 619:35
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/handler.rs:619:37: 619:37
    let mut _3: bool;                    // in scope 0 at cita-auth/src/handler.rs:620:28: 620:35
    let mut _4: i8;                      // in scope 0 at cita-auth/src/handler.rs:620:28: 620:30
    let mut _5: (i8, bool);              // in scope 0 at cita-auth/src/handler.rs:621:29: 621:36

    bb0: {
        _4 = (*_2);                      // scope 0 at cita-auth/src/handler.rs:620:28: 620:30
        _3 = Ge(move _4, const 0_i8);    // scope 0 at cita-auth/src/handler.rs:620:28: 620:35
        switchInt(move _3) -> [0: bb3, otherwise: bb1]; // scope 0 at cita-auth/src/handler.rs:620:28: 620:35
    }

    bb1: {
        _5 = CheckedSub((*_2), const 1_i8); // scope 0 at cita-auth/src/handler.rs:621:29: 621:36
        assert(!move (_5.1: bool), "attempt to compute `{} - {}`, which would overflow", (*_2), const 1_i8) -> bb2; // scope 0 at cita-auth/src/handler.rs:621:29: 621:36
    }

    bb2: {
        (*_2) = move (_5.0: i8);         // scope 0 at cita-auth/src/handler.rs:621:29: 621:36
        goto -> bb3;                     // scope 0 at cita-auth/src/handler.rs:620:25: 622:26
    }

    bb3: {
        return;                          // scope 0 at cita-auth/src/handler.rs:623:22: 623:22
    }
}

fn handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_request(_1: &mut MsgHandler, _2: bool, _3: libproto::Request) -> () {
    debug self => _1;                    // in scope 0 at cita-auth/src/handler.rs:630:21: 630:30
    debug is_local => _2;                // in scope 0 at cita-auth/src/handler.rs:630:32: 630:40
    debug newtx_req => _3;               // in scope 0 at cita-auth/src/handler.rs:630:48: 630:57
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/handler.rs:630:68: 630:68
    let mut _4: bool;                    // in scope 0 at cita-auth/src/handler.rs:631:12: 631:37
    let mut _5: &libproto::Request;      // in scope 0 at cita-auth/src/handler.rs:631:12: 631:37
    let _6: &[libproto::Request];        // in scope 0 at cita-auth/src/handler.rs:632:17: 632:29
    let mut _7: &libproto::BatchRequest; // in scope 0 at cita-auth/src/handler.rs:632:32: 632:79
    let _8: &libproto::BatchRequest;     // in scope 0 at cita-auth/src/handler.rs:632:32: 632:57
    let mut _9: &libproto::Request;      // in scope 0 at cita-auth/src/handler.rs:632:32: 632:57
    let mut _11: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _12: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _13: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _14: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _15: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _16: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _17: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _18: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _19: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _20: &[&str];                // in scope 0 at cita-auth/src/handler.rs:634:17: 634:67
    let mut _21: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _22: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _23: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _24: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:635:17: 635:35
    let _25: &usize;                     // in scope 0 at cita-auth/src/handler.rs:635:17: 635:35
    let _26: usize;                      // in scope 0 at cita-auth/src/handler.rs:635:17: 635:35
    let mut _27: &[libproto::Request];   // in scope 0 at cita-auth/src/handler.rs:635:17: 635:35
    let mut _28: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:636:17: 636:25
    let _29: &bool;                      // in scope 0 at cita-auth/src/handler.rs:636:17: 636:25
    let mut _30: bool;                   // in scope 0 at cita-auth/src/handler.rs:638:16: 638:32
    let mut _31: bool;                   // in scope 0 at cita-auth/src/handler.rs:638:17: 638:32
    let mut _32: &handler::MsgHandler;   // in scope 0 at cita-auth/src/handler.rs:638:17: 638:32
    let mut _33: std::slice::Iter<'_, libproto::Request>; // in scope 0 at cita-auth/src/handler.rs:640:35: 640:54
    let mut _34: std::slice::Iter<'_, libproto::Request>; // in scope 0 at cita-auth/src/handler.rs:640:35: 640:54
    let mut _35: &[libproto::Request];   // in scope 0 at cita-auth/src/handler.rs:640:35: 640:54
    let mut _37: std::option::Option<&libproto::Request>; // in scope 0 at cita-auth/src/handler.rs:640:35: 640:54
    let mut _38: &mut std::slice::Iter<'_, libproto::Request>; // in scope 0 at cita-auth/src/handler.rs:640:35: 640:54
    let mut _39: isize;                  // in scope 0 at cita-auth/src/handler.rs:640:21: 643:22
    let mut _42: &[u8];                  // in scope 0 at cita-auth/src/handler.rs:641:42: 641:74
    let _43: &[u8];                      // in scope 0 at cita-auth/src/handler.rs:641:42: 641:65
    let _44: ();                         // in scope 0 at cita-auth/src/handler.rs:642:25: 642:84
    let mut _45: &handler::MsgHandler;   // in scope 0 at cita-auth/src/handler.rs:642:25: 642:84
    let mut _46: std::vec::Vec<u8>;      // in scope 0 at cita-auth/src/handler.rs:642:55: 642:65
    let mut _47: bool;                   // in scope 0 at cita-auth/src/handler.rs:648:16: 648:56
    let mut _48: &handler::MsgHandler;   // in scope 0 at cita-auth/src/handler.rs:648:16: 648:56
    let mut _49: usize;                  // in scope 0 at cita-auth/src/handler.rs:648:37: 648:55
    let mut _50: &[libproto::Request];   // in scope 0 at cita-auth/src/handler.rs:648:37: 648:55
    let mut _52: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _53: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _54: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _55: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _56: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _57: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _58: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _59: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _60: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _61: &[&str];                // in scope 0 at cita-auth/src/handler.rs:649:24: 649:42
    let mut _62: std::slice::Iter<'_, libproto::Request>; // in scope 0 at cita-auth/src/handler.rs:651:35: 651:54
    let mut _63: std::slice::Iter<'_, libproto::Request>; // in scope 0 at cita-auth/src/handler.rs:651:35: 651:54
    let mut _64: &[libproto::Request];   // in scope 0 at cita-auth/src/handler.rs:651:35: 651:54
    let mut _66: std::option::Option<&libproto::Request>; // in scope 0 at cita-auth/src/handler.rs:651:35: 651:54
    let mut _67: &mut std::slice::Iter<'_, libproto::Request>; // in scope 0 at cita-auth/src/handler.rs:651:35: 651:54
    let mut _68: isize;                  // in scope 0 at cita-auth/src/handler.rs:651:21: 654:22
    let mut _71: &[u8];                  // in scope 0 at cita-auth/src/handler.rs:652:42: 652:74
    let _72: &[u8];                      // in scope 0 at cita-auth/src/handler.rs:652:42: 652:65
    let _73: ();                         // in scope 0 at cita-auth/src/handler.rs:653:25: 653:80
    let mut _74: &handler::MsgHandler;   // in scope 0 at cita-auth/src/handler.rs:653:25: 653:80
    let mut _75: std::vec::Vec<u8>;      // in scope 0 at cita-auth/src/handler.rs:653:55: 653:65
    let mut _78: std::slice::Iter<'_, libproto::Request>; // in scope 0 at cita-auth/src/handler.rs:661:27: 661:39
    let mut _79: &[libproto::Request];   // in scope 0 at cita-auth/src/handler.rs:661:27: 661:39
    let mut _81: std::option::Option<&libproto::Request>; // in scope 0 at cita-auth/src/handler.rs:661:27: 661:39
    let mut _82: &mut std::slice::Iter<'_, libproto::Request>; // in scope 0 at cita-auth/src/handler.rs:661:27: 661:39
    let mut _83: isize;                  // in scope 0 at cita-auth/src/handler.rs:661:13: 679:14
    let mut _86: &libproto::UnverifiedTransaction; // in scope 0 at cita-auth/src/handler.rs:662:27: 662:65
    let _87: &libproto::UnverifiedTransaction; // in scope 0 at cita-auth/src/handler.rs:662:27: 662:45
    let mut _89: &[u8];                  // in scope 0 at cita-auth/src/handler.rs:663:48: 663:65
    let _90: &[u8];                      // in scope 0 at cita-auth/src/handler.rs:663:48: 663:65
    let mut _91: &libproto::VerifyTxReq; // in scope 0 at cita-auth/src/handler.rs:663:48: 663:65
    let mut _92: std::option::Option<std::option::Option<std::vec::Vec<u8>>>; // in scope 0 at cita-auth/src/handler.rs:664:46: 664:79
    let mut _93: &handler::MsgHandler;   // in scope 0 at cita-auth/src/handler.rs:664:46: 664:79
    let _94: &cita_types::H256;          // in scope 0 at cita-auth/src/handler.rs:664:70: 664:78
    let mut _95: isize;                  // in scope 0 at cita-auth/src/handler.rs:664:24: 664:43
    let mut _97: bool;                   // in scope 0 at cita-auth/src/handler.rs:665:24: 665:47
    let mut _98: &std::option::Option<std::vec::Vec<u8>>; // in scope 0 at cita-auth/src/handler.rs:665:24: 665:47
    let mut _100: &[u8];                 // in scope 0 at cita-auth/src/handler.rs:667:46: 667:78
    let _101: &[u8];                     // in scope 0 at cita-auth/src/handler.rs:667:46: 667:69
    let _102: ();                        // in scope 0 at cita-auth/src/handler.rs:668:29: 668:86
    let mut _103: &handler::MsgHandler;  // in scope 0 at cita-auth/src/handler.rs:668:29: 668:86
    let mut _104: std::vec::Vec<u8>;     // in scope 0 at cita-auth/src/handler.rs:668:59: 668:69
    let mut _106: &libproto::VerifyTxReq; // in scope 0 at cita-auth/src/handler.rs:672:39: 672:50
    let _107: ();                        // in scope 0 at cita-auth/src/handler.rs:673:21: 673:63
    let mut _108: &mut libproto::VerifyTxReq; // in scope 0 at cita-auth/src/handler.rs:673:21: 673:63
    let mut _109: std::vec::Vec<u8>;     // in scope 0 at cita-auth/src/handler.rs:673:40: 673:62
    let mut _110: std::option::Option<std::vec::Vec<u8>>; // in scope 0 at cita-auth/src/handler.rs:673:40: 673:53
    let _111: std::option::Option<(libproto::VerifyTxReq, &libproto::Request, bool)>; // in scope 0 at cita-auth/src/handler.rs:674:21: 674:70
    let mut _112: &mut std::collections::HashMap<cita_types::H256, (libproto::VerifyTxReq, &libproto::Request, bool)>; // in scope 0 at cita-auth/src/handler.rs:674:21: 674:70
    let mut _113: cita_types::H256;      // in scope 0 at cita-auth/src/handler.rs:674:37: 674:44
    let mut _114: (libproto::VerifyTxReq, &libproto::Request, bool); // in scope 0 at cita-auth/src/handler.rs:674:46: 674:69
    let mut _115: libproto::VerifyTxReq; // in scope 0 at cita-auth/src/handler.rs:674:47: 674:54
    let _116: std::option::Option<libproto::VerifyTxReq>; // in scope 0 at cita-auth/src/handler.rs:676:21: 676:68
    let mut _117: &mut std::collections::HashMap<cita_types::H256, libproto::VerifyTxReq>; // in scope 0 at cita-auth/src/handler.rs:676:21: 676:68
    let mut _118: cita_types::H256;      // in scope 0 at cita-auth/src/handler.rs:676:47: 676:54
    let mut _119: libproto::VerifyTxReq; // in scope 0 at cita-auth/src/handler.rs:676:56: 676:67
    let mut _120: &libproto::VerifyTxReq; // in scope 0 at cita-auth/src/handler.rs:676:56: 676:67
    let _121: std::option::Option<(libproto::VerifyTxReq, &libproto::Request, bool)>; // in scope 0 at cita-auth/src/handler.rs:677:21: 677:66
    let mut _122: &mut std::collections::HashMap<cita_types::H256, (libproto::VerifyTxReq, &libproto::Request, bool)>; // in scope 0 at cita-auth/src/handler.rs:677:21: 677:66
    let mut _123: cita_types::H256;      // in scope 0 at cita-auth/src/handler.rs:677:37: 677:44
    let mut _124: (libproto::VerifyTxReq, &libproto::Request, bool); // in scope 0 at cita-auth/src/handler.rs:677:46: 677:65
    let mut _125: libproto::VerifyTxReq; // in scope 0 at cita-auth/src/handler.rs:677:47: 677:50
    let mut _127: rayon::iter::Map<rayon::collections::hash_map::IntoIter<cita_types::H256, libproto::VerifyTxReq>, [closure@cita-auth/src/handler.rs:683:22: 683:42]>; // in scope 0 at cita-auth/src/handler.rs:681:57: 693:19
    let mut _128: rayon::collections::hash_map::IntoIter<cita_types::H256, libproto::VerifyTxReq>; // in scope 0 at cita-auth/src/handler.rs:681:57: 682:33
    let mut _129: std::collections::HashMap<cita_types::H256, libproto::VerifyTxReq>; // in scope 0 at cita-auth/src/handler.rs:681:57: 681:75
    let mut _130: std::vec::IntoIter<(cita_types::H256, std::option::Option<std::vec::Vec<u8>>)>; // in scope 0 at cita-auth/src/handler.rs:696:45: 696:52
    let mut _131: std::vec::Vec<(cita_types::H256, std::option::Option<std::vec::Vec<u8>>)>; // in scope 0 at cita-auth/src/handler.rs:696:45: 696:52
    let mut _133: std::option::Option<(cita_types::H256, std::option::Option<std::vec::Vec<u8>>)>; // in scope 0 at cita-auth/src/handler.rs:696:45: 696:52
    let mut _134: &mut std::vec::IntoIter<(cita_types::H256, std::option::Option<std::vec::Vec<u8>>)>; // in scope 0 at cita-auth/src/handler.rs:696:45: 696:52
    let mut _135: isize;                 // in scope 0 at cita-auth/src/handler.rs:696:13: 709:14
    let _138: ();                        // in scope 0 at cita-auth/src/handler.rs:697:17: 697:71
    let mut _139: std::option::Option<std::vec::Vec<u8>>; // in scope 0 at cita-auth/src/handler.rs:697:49: 697:70
    let mut _140: &std::option::Option<std::vec::Vec<u8>>; // in scope 0 at cita-auth/src/handler.rs:697:49: 697:70
    let mut _141: isize;                 // in scope 0 at cita-auth/src/handler.rs:698:24: 698:36
    let mut _143: std::option::Option<&mut (libproto::VerifyTxReq, &libproto::Request, bool)>; // in scope 0 at cita-auth/src/handler.rs:699:46: 699:72
    let mut _144: &mut std::collections::HashMap<cita_types::H256, (libproto::VerifyTxReq, &libproto::Request, bool)>; // in scope 0 at cita-auth/src/handler.rs:699:46: 699:72
    let _145: &cita_types::H256;         // in scope 0 at cita-auth/src/handler.rs:699:63: 699:71
    let mut _146: isize;                 // in scope 0 at cita-auth/src/handler.rs:699:28: 699:43
    let _148: ();                        // in scope 0 at cita-auth/src/handler.rs:700:25: 700:47
    let mut _149: &mut libproto::VerifyTxReq; // in scope 0 at cita-auth/src/handler.rs:700:25: 700:47
    let mut _150: std::vec::Vec<u8>;     // in scope 0 at cita-auth/src/handler.rs:700:40: 700:46
    let mut _151: std::option::Option<&mut (libproto::VerifyTxReq, &libproto::Request, bool)>; // in scope 0 at cita-auth/src/handler.rs:702:49: 702:75
    let mut _152: &mut std::collections::HashMap<cita_types::H256, (libproto::VerifyTxReq, &libproto::Request, bool)>; // in scope 0 at cita-auth/src/handler.rs:702:49: 702:75
    let _153: &cita_types::H256;         // in scope 0 at cita-auth/src/handler.rs:702:66: 702:74
    let mut _154: isize;                 // in scope 0 at cita-auth/src/handler.rs:702:31: 702:46
    let mut _157: &[u8];                 // in scope 0 at cita-auth/src/handler.rs:704:42: 704:71
    let _158: &[u8];                     // in scope 0 at cita-auth/src/handler.rs:704:42: 704:62
    let _159: ();                        // in scope 0 at cita-auth/src/handler.rs:705:25: 705:82
    let mut _160: &handler::MsgHandler;  // in scope 0 at cita-auth/src/handler.rs:705:25: 705:82
    let mut _161: std::vec::Vec<u8>;     // in scope 0 at cita-auth/src/handler.rs:705:55: 705:65
    let _162: ();                        // in scope 0 at cita-auth/src/handler.rs:712:13: 764:19
    let mut _163: std::iter::Filter<std::iter::Filter<std::iter::Filter<std::iter::Filter<std::collections::hash_map::IntoIter<cita_types::H256, (libproto::VerifyTxReq, &libproto::Request, bool)>, [closure@cita-auth/src/handler.rs:714:25: 714:60]>, [closure@cita-auth/src/handler.rs:715:25: 715:67]>, [closure@cita-auth/src/handler.rs:726:25: 726:68]>, [closure@cita-auth/src/handler.rs:737:25: 737:67]>; // in scope 0 at cita-auth/src/handler.rs:712:13: 747:19
    let mut _164: std::iter::Filter<std::iter::Filter<std::iter::Filter<std::collections::hash_map::IntoIter<cita_types::H256, (libproto::VerifyTxReq, &libproto::Request, bool)>, [closure@cita-auth/src/handler.rs:714:25: 714:60]>, [closure@cita-auth/src/handler.rs:715:25: 715:67]>, [closure@cita-auth/src/handler.rs:726:25: 726:68]>; // in scope 0 at cita-auth/src/handler.rs:712:13: 736:19
    let mut _165: std::iter::Filter<std::iter::Filter<std::collections::hash_map::IntoIter<cita_types::H256, (libproto::VerifyTxReq, &libproto::Request, bool)>, [closure@cita-auth/src/handler.rs:714:25: 714:60]>, [closure@cita-auth/src/handler.rs:715:25: 715:67]>; // in scope 0 at cita-auth/src/handler.rs:712:13: 725:19
    let mut _166: std::iter::Filter<std::collections::hash_map::IntoIter<cita_types::H256, (libproto::VerifyTxReq, &libproto::Request, bool)>, [closure@cita-auth/src/handler.rs:714:25: 714:60]>; // in scope 0 at cita-auth/src/handler.rs:712:13: 714:67
    let mut _167: std::collections::hash_map::IntoIter<cita_types::H256, (libproto::VerifyTxReq, &libproto::Request, bool)>; // in scope 0 at cita-auth/src/handler.rs:712:13: 713:29
    let mut _168: std::collections::HashMap<cita_types::H256, (libproto::VerifyTxReq, &libproto::Request, bool)>; // in scope 0 at cita-auth/src/handler.rs:712:13: 712:21
    let mut _169: [closure@cita-auth/src/handler.rs:715:25: 715:67]; // in scope 0 at cita-auth/src/handler.rs:715:25: 725:18
    let mut _170: &&mut handler::MsgHandler; // in scope 0 at cita-auth/src/handler.rs:715:25: 725:18
    let mut _171: &bool;                 // in scope 0 at cita-auth/src/handler.rs:715:25: 725:18
    let mut _172: [closure@cita-auth/src/handler.rs:726:25: 726:68]; // in scope 0 at cita-auth/src/handler.rs:726:25: 736:18
    let mut _173: &&mut handler::MsgHandler; // in scope 0 at cita-auth/src/handler.rs:726:25: 736:18
    let mut _174: &bool;                 // in scope 0 at cita-auth/src/handler.rs:726:25: 736:18
    let mut _175: [closure@cita-auth/src/handler.rs:737:25: 737:67]; // in scope 0 at cita-auth/src/handler.rs:737:25: 747:18
    let mut _176: &&mut handler::MsgHandler; // in scope 0 at cita-auth/src/handler.rs:737:25: 747:18
    let mut _177: &bool;                 // in scope 0 at cita-auth/src/handler.rs:737:25: 747:18
    let mut _178: [closure@cita-auth/src/handler.rs:748:27: 748:60]; // in scope 0 at cita-auth/src/handler.rs:748:27: 764:18
    let mut _179: &&mut handler::MsgHandler; // in scope 0 at cita-auth/src/handler.rs:748:27: 764:18
    let mut _180: &bool;                 // in scope 0 at cita-auth/src/handler.rs:748:27: 764:18
    let mut _181: bool;                  // in scope 0 at cita-auth/src/handler.rs:765:19: 765:40
    let mut _182: &libproto::Request;    // in scope 0 at cita-auth/src/handler.rs:765:19: 765:40
    let _183: log::Level;                // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
    let mut _184: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _185: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _186: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _187: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _188: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _189: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _190: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _191: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _192: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _193: &[&str];               // in scope 0 at cita-auth/src/handler.rs:766:20: 766:60
    let _194: std::vec::Vec<u8>;         // in scope 0 at cita-auth/src/handler.rs:767:17: 767:27
    let mut _195: &[u8];                 // in scope 0 at cita-auth/src/handler.rs:767:30: 767:65
    let _196: &[u8];                     // in scope 0 at cita-auth/src/handler.rs:767:30: 767:56
    let mut _197: &libproto::Request;    // in scope 0 at cita-auth/src/handler.rs:767:30: 767:56
    let mut _198: bool;                  // in scope 0 at cita-auth/src/handler.rs:768:16: 768:32
    let mut _199: bool;                  // in scope 0 at cita-auth/src/handler.rs:768:17: 768:32
    let mut _200: &handler::MsgHandler;  // in scope 0 at cita-auth/src/handler.rs:768:17: 768:32
    let mut _202: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _203: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _204: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _205: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _206: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _207: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _208: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _209: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _210: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _211: &[&str];               // in scope 0 at cita-auth/src/handler.rs:769:24: 769:59
    let _212: ();                        // in scope 0 at cita-auth/src/handler.rs:771:21: 771:80
    let mut _213: &handler::MsgHandler;  // in scope 0 at cita-auth/src/handler.rs:771:21: 771:80
    let mut _214: std::vec::Vec<u8>;     // in scope 0 at cita-auth/src/handler.rs:771:51: 771:61
    let mut _215: bool;                  // in scope 0 at cita-auth/src/handler.rs:775:16: 775:39
    let mut _216: &handler::MsgHandler;  // in scope 0 at cita-auth/src/handler.rs:775:16: 775:39
    let mut _218: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _219: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _220: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _221: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _222: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _223: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _224: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _225: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _226: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _227: &[&str];               // in scope 0 at cita-auth/src/handler.rs:776:24: 776:42
    let _228: ();                        // in scope 0 at cita-auth/src/handler.rs:778:21: 778:76
    let mut _229: &handler::MsgHandler;  // in scope 0 at cita-auth/src/handler.rs:778:21: 778:76
    let mut _230: std::vec::Vec<u8>;     // in scope 0 at cita-auth/src/handler.rs:778:51: 778:61
    let mut _232: &libproto::UnverifiedTransaction; // in scope 0 at cita-auth/src/handler.rs:782:27: 782:68
    let _233: &libproto::UnverifiedTransaction; // in scope 0 at cita-auth/src/handler.rs:782:27: 782:48
    let mut _234: &libproto::Request;    // in scope 0 at cita-auth/src/handler.rs:782:27: 782:48
    let mut _236: &[u8];                 // in scope 0 at cita-auth/src/handler.rs:784:44: 784:61
    let _237: &[u8];                     // in scope 0 at cita-auth/src/handler.rs:784:44: 784:61
    let mut _238: &libproto::VerifyTxReq; // in scope 0 at cita-auth/src/handler.rs:784:44: 784:61
    let mut _239: std::option::Option<std::option::Option<std::vec::Vec<u8>>>; // in scope 0 at cita-auth/src/handler.rs:785:42: 785:75
    let mut _240: &handler::MsgHandler;  // in scope 0 at cita-auth/src/handler.rs:785:42: 785:75
    let _241: &cita_types::H256;         // in scope 0 at cita-auth/src/handler.rs:785:66: 785:74
    let mut _242: isize;                 // in scope 0 at cita-auth/src/handler.rs:785:20: 785:39
    let mut _244: bool;                  // in scope 0 at cita-auth/src/handler.rs:786:20: 786:43
    let mut _245: &std::option::Option<std::vec::Vec<u8>>; // in scope 0 at cita-auth/src/handler.rs:786:20: 786:43
    let _246: ();                        // in scope 0 at cita-auth/src/handler.rs:787:21: 787:78
    let mut _247: &handler::MsgHandler;  // in scope 0 at cita-auth/src/handler.rs:787:21: 787:78
    let mut _248: std::vec::Vec<u8>;     // in scope 0 at cita-auth/src/handler.rs:787:51: 787:61
    let _249: ();                        // in scope 0 at cita-auth/src/handler.rs:790:17: 790:55
    let mut _250: &mut libproto::VerifyTxReq; // in scope 0 at cita-auth/src/handler.rs:790:17: 790:55
    let mut _251: std::vec::Vec<u8>;     // in scope 0 at cita-auth/src/handler.rs:790:32: 790:54
    let mut _252: std::option::Option<std::vec::Vec<u8>>; // in scope 0 at cita-auth/src/handler.rs:790:32: 790:45
    let mut _254: libproto::Crypto;      // in scope 0 at cita-auth/src/handler.rs:793:21: 793:37
    let mut _255: &libproto::VerifyTxReq; // in scope 0 at cita-auth/src/handler.rs:793:21: 793:37
    let _256: &cita_types::H256;         // in scope 0 at cita-auth/src/handler.rs:794:21: 794:48
    let _257: cita_types::H256;          // in scope 0 at cita-auth/src/handler.rs:794:22: 794:48
    let mut _258: &[u8];                 // in scope 0 at cita-auth/src/handler.rs:794:33: 794:47
    let mut _259: &libproto::VerifyTxReq; // in scope 0 at cita-auth/src/handler.rs:794:33: 794:47
    let _260: &&[u8];                    // in scope 0 at cita-auth/src/handler.rs:795:21: 795:41
    let _261: &[u8];                     // in scope 0 at cita-auth/src/handler.rs:795:22: 795:41
    let mut _262: &libproto::VerifyTxReq; // in scope 0 at cita-auth/src/handler.rs:795:22: 795:41
    let _263: ();                        // in scope 0 at cita-auth/src/handler.rs:797:17: 797:69
    let mut _264: cita_types::H256;      // in scope 0 at cita-auth/src/handler.rs:797:40: 797:47
    let mut _265: std::option::Option<std::vec::Vec<u8>>; // in scope 0 at cita-auth/src/handler.rs:797:49: 797:68
    let mut _266: std::result::Result<std::vec::Vec<u8>, ()>; // in scope 0 at cita-auth/src/handler.rs:797:49: 797:63
    let mut _267: &std::result::Result<std::vec::Vec<u8>, ()>; // in scope 0 at cita-auth/src/handler.rs:797:49: 797:63
    let mut _268: isize;                 // in scope 0 at cita-auth/src/handler.rs:799:21: 799:31
    let _270: ();                        // in scope 0 at cita-auth/src/handler.rs:800:25: 800:47
    let mut _271: &mut libproto::VerifyTxReq; // in scope 0 at cita-auth/src/handler.rs:800:25: 800:47
    let _272: ();                        // in scope 0 at cita-auth/src/handler.rs:804:29: 804:86
    let mut _273: &handler::MsgHandler;  // in scope 0 at cita-auth/src/handler.rs:804:29: 804:86
    let mut _274: std::vec::Vec<u8>;     // in scope 0 at cita-auth/src/handler.rs:804:59: 804:69
    let mut _275: std::result::Result<(), transaction_verify::Error>; // in scope 0 at cita-auth/src/handler.rs:812:29: 812:57
    let mut _276: &handler::MsgHandler;  // in scope 0 at cita-auth/src/handler.rs:812:29: 812:57
    let _277: &libproto::VerifyTxReq;    // in scope 0 at cita-auth/src/handler.rs:812:52: 812:56
    let mut _278: isize;                 // in scope 0 at cita-auth/src/handler.rs:812:20: 812:26
    let _280: ();                        // in scope 0 at cita-auth/src/handler.rs:814:21: 814:66
    let mut _281: &handler::MsgHandler;  // in scope 0 at cita-auth/src/handler.rs:814:21: 814:66
    let mut _282: std::vec::Vec<u8>;     // in scope 0 at cita-auth/src/handler.rs:814:51: 814:61
    let _283: &transaction_verify::Error; // in scope 0 at cita-auth/src/handler.rs:814:63: 814:65
    let mut _284: std::result::Result<(), transaction_verify::Error>; // in scope 0 at cita-auth/src/handler.rs:819:29: 819:60
    let mut _285: &handler::MsgHandler;  // in scope 0 at cita-auth/src/handler.rs:819:29: 819:60
    let _286: &libproto::Request;        // in scope 0 at cita-auth/src/handler.rs:819:49: 819:59
    let mut _287: isize;                 // in scope 0 at cita-auth/src/handler.rs:819:20: 819:26
    let _289: ();                        // in scope 0 at cita-auth/src/handler.rs:821:21: 821:66
    let mut _290: &handler::MsgHandler;  // in scope 0 at cita-auth/src/handler.rs:821:21: 821:66
    let mut _291: std::vec::Vec<u8>;     // in scope 0 at cita-auth/src/handler.rs:821:51: 821:61
    let _292: &transaction_verify::Error; // in scope 0 at cita-auth/src/handler.rs:821:63: 821:65
    let mut _293: std::result::Result<(), transaction_verify::Error>; // in scope 0 at cita-auth/src/handler.rs:827:29: 827:53
    let mut _294: &handler::MsgHandler;  // in scope 0 at cita-auth/src/handler.rs:827:29: 827:53
    let _295: &libproto::VerifyTxReq;    // in scope 0 at cita-auth/src/handler.rs:827:48: 827:52
    let mut _296: isize;                 // in scope 0 at cita-auth/src/handler.rs:827:20: 827:26
    let _298: ();                        // in scope 0 at cita-auth/src/handler.rs:829:21: 829:66
    let mut _299: &handler::MsgHandler;  // in scope 0 at cita-auth/src/handler.rs:829:21: 829:66
    let mut _300: std::vec::Vec<u8>;     // in scope 0 at cita-auth/src/handler.rs:829:51: 829:61
    let _301: &transaction_verify::Error; // in scope 0 at cita-auth/src/handler.rs:829:63: 829:65
    let _303: ();                        // in scope 0 at cita-auth/src/handler.rs:836:13: 836:78
    let mut _304: &mut libproto::SignedTransaction; // in scope 0 at cita-auth/src/handler.rs:836:13: 836:78
    let mut _305: libproto::UnverifiedTransaction; // in scope 0 at cita-auth/src/handler.rs:836:48: 836:77
    let mut _306: &libproto::UnverifiedTransaction; // in scope 0 at cita-auth/src/handler.rs:836:48: 836:77
    let _307: &libproto::UnverifiedTransaction; // in scope 0 at cita-auth/src/handler.rs:836:48: 836:69
    let mut _308: &libproto::Request;    // in scope 0 at cita-auth/src/handler.rs:836:48: 836:69
    let _309: ();                        // in scope 0 at cita-auth/src/handler.rs:837:13: 837:60
    let mut _310: &mut libproto::SignedTransaction; // in scope 0 at cita-auth/src/handler.rs:837:13: 837:60
    let mut _311: std::vec::Vec<u8>;     // in scope 0 at cita-auth/src/handler.rs:837:34: 837:59
    let mut _312: &[u8];                 // in scope 0 at cita-auth/src/handler.rs:837:34: 837:59
    let _313: &[u8];                     // in scope 0 at cita-auth/src/handler.rs:837:34: 837:50
    let mut _314: &libproto::VerifyTxReq; // in scope 0 at cita-auth/src/handler.rs:837:34: 837:50
    let _315: ();                        // in scope 0 at cita-auth/src/handler.rs:838:13: 838:52
    let mut _316: &mut libproto::SignedTransaction; // in scope 0 at cita-auth/src/handler.rs:838:13: 838:52
    let mut _317: std::vec::Vec<u8>;     // in scope 0 at cita-auth/src/handler.rs:838:35: 838:51
    let mut _318: &[u8];                 // in scope 0 at cita-auth/src/handler.rs:838:35: 838:51
    let _319: &[u8];                     // in scope 0 at cita-auth/src/handler.rs:838:35: 838:51
    let mut _320: &cita_types::H256;     // in scope 0 at cita-auth/src/handler.rs:838:35: 838:51
    let mut _321: bool;                  // in scope 0 at cita-auth/src/handler.rs:839:16: 839:58
    let mut _322: &dispatcher::Dispatcher; // in scope 0 at cita-auth/src/handler.rs:839:16: 839:58
    let _323: &libproto::SignedTransaction; // in scope 0 at cita-auth/src/handler.rs:839:47: 839:57
    let _324: ();                        // in scope 0 at cita-auth/src/handler.rs:841:21: 841:72
    let mut _325: &handler::MsgHandler;  // in scope 0 at cita-auth/src/handler.rs:841:21: 841:72
    let mut _326: std::vec::Vec<u8>;     // in scope 0 at cita-auth/src/handler.rs:841:52: 841:62
    let mut _327: cita_types::H256;      // in scope 0 at cita-auth/src/handler.rs:841:64: 841:71
    let _328: ();                        // in scope 0 at cita-auth/src/handler.rs:844:17: 844:48
    let mut _329: &handler::MsgHandler;  // in scope 0 at cita-auth/src/handler.rs:844:17: 844:48
    let mut _330: libproto::Request;     // in scope 0 at cita-auth/src/handler.rs:844:38: 844:47
    let _331: ();                        // in scope 0 at cita-auth/src/handler.rs:847:17: 847:71
    let mut _332: &handler::MsgHandler;  // in scope 0 at cita-auth/src/handler.rs:847:17: 847:71
    let mut _333: std::vec::Vec<u8>;     // in scope 0 at cita-auth/src/handler.rs:847:47: 847:57
    let mut _358: &mut (libproto::VerifyTxReq, &libproto::Request, bool); // in scope 0 at cita-auth/src/handler.rs:699:33: 699:42
    let mut _359: &mut (libproto::VerifyTxReq, &libproto::Request, bool); // in scope 0 at cita-auth/src/handler.rs:702:36: 702:45
    let mut _360: &libproto::Request;    // in scope 0 at cita-auth/src/handler.rs:702:36: 702:45
    let mut _361: &mut (libproto::VerifyTxReq, &libproto::Request, bool); // in scope 0 at cita-auth/src/handler.rs:702:36: 702:45
    let mut _362: &[u8];                 // in scope 0 at cita-auth/src/handler.rs:795:21: 795:41
    let mut _363: bool;                  // in scope 0 at cita-auth/src/handler.rs:679:13: 679:14
    let mut _364: bool;                  // in scope 0 at cita-auth/src/handler.rs:679:13: 679:14
    let mut _365: bool;                  // in scope 0 at cita-auth/src/handler.rs:702:17: 702:18
    let mut _366: bool;                  // in scope 0 at cita-auth/src/handler.rs:709:13: 709:14
    let mut _367: bool;                  // in scope 0 at cita-auth/src/handler.rs:809:13: 809:14
    let mut _368: bool;                  // in scope 0 at cita-auth/src/handler.rs:849:9: 849:10
    let mut _369: bool;                  // in scope 0 at cita-auth/src/handler.rs:850:5: 850:6
    let mut _370: bool;                  // in scope 0 at cita-auth/src/handler.rs:809:13: 809:14
    let mut _371: bool;                  // in scope 0 at cita-auth/src/handler.rs:791:13: 791:14
    let mut _372: bool;                  // in scope 0 at cita-auth/src/handler.rs:675:17: 675:18
    let mut _373: bool;                  // in scope 0 at cita-auth/src/handler.rs:675:17: 675:18
    let mut _374: bool;                  // in scope 0 at cita-auth/src/handler.rs:765:9: 765:10
    let mut _375: bool;                  // in scope 0 at cita-auth/src/handler.rs:765:9: 765:10
    let mut _376: isize;                 // in scope 0 at cita-auth/src/handler.rs:679:13: 679:14
    let mut _377: isize;                 // in scope 0 at cita-auth/src/handler.rs:709:13: 709:14
    let mut _378: isize;                 // in scope 0 at cita-auth/src/handler.rs:809:13: 809:14
    let mut _379: isize;                 // in scope 0 at cita-auth/src/handler.rs:809:13: 809:14
    let mut _380: isize;                 // in scope 0 at cita-auth/src/handler.rs:809:13: 809:14
    let mut _381: isize;                 // in scope 0 at cita-auth/src/handler.rs:809:13: 809:14
    let mut _382: isize;                 // in scope 0 at cita-auth/src/handler.rs:709:13: 709:14
    let mut _383: isize;                 // in scope 0 at cita-auth/src/handler.rs:679:13: 679:14
    scope 1 {
        debug batch_new_tx => _6;        // in scope 1 at cita-auth/src/handler.rs:632:17: 632:29
        let _10: log::Level;             // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _36: std::slice::Iter<'_, libproto::Request>; // in scope 1 at cita-auth/src/handler.rs:640:35: 640:54
        let _51: log::Level;             // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _65: std::slice::Iter<'_, libproto::Request>; // in scope 1 at cita-auth/src/handler.rs:651:35: 651:54
        let mut _76: std::collections::HashMap<cita_types::H256, (libproto::VerifyTxReq, &libproto::Request, bool)>; // in scope 1 at cita-auth/src/handler.rs:659:17: 659:29
        scope 2 {
            debug lvl => _10;            // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _355: &(&str, &str, &str, u32); // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _356: &[&str; 2];    // in scope 2 at cita-auth/src/handler.rs:634:17: 634:67
            let mut _357: &log::LevelFilter; // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
        scope 3 {
            debug iter => _36;           // in scope 3 at cita-auth/src/handler.rs:640:35: 640:54
            let _40: &libproto::Request; // in scope 3 at cita-auth/src/handler.rs:640:25: 640:31
            scope 4 {
                debug tx_req => _40;     // in scope 4 at cita-auth/src/handler.rs:640:25: 640:31
                let _41: std::vec::Vec<u8>; // in scope 4 at cita-auth/src/handler.rs:641:29: 641:39
                scope 5 {
                    debug request_id => _41; // in scope 5 at cita-auth/src/handler.rs:641:29: 641:39
                    let mut _354: &transaction_verify::Error; // in scope 5 at cita-auth/src/handler.rs:642:67: 642:83
                }
            }
        }
        scope 6 {
            debug lvl => _51;            // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _351: &(&str, &str, &str, u32); // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _352: &[&str; 1];    // in scope 6 at cita-auth/src/handler.rs:649:24: 649:42
            let mut _353: &log::LevelFilter; // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
        scope 7 {
            debug iter => _65;           // in scope 7 at cita-auth/src/handler.rs:651:35: 651:54
            let _69: &libproto::Request; // in scope 7 at cita-auth/src/handler.rs:651:25: 651:31
            scope 8 {
                debug tx_req => _69;     // in scope 8 at cita-auth/src/handler.rs:651:25: 651:31
                let _70: std::vec::Vec<u8>; // in scope 8 at cita-auth/src/handler.rs:652:29: 652:39
                scope 9 {
                    debug request_id => _70; // in scope 9 at cita-auth/src/handler.rs:652:29: 652:39
                    let mut _350: &transaction_verify::Error; // in scope 9 at cita-auth/src/handler.rs:653:67: 653:79
                }
            }
        }
        scope 10 {
            debug requests => _76;       // in scope 10 at cita-auth/src/handler.rs:659:17: 659:29
            let mut _77: std::collections::HashMap<cita_types::H256, libproto::VerifyTxReq>; // in scope 10 at cita-auth/src/handler.rs:660:17: 660:39
            scope 11 {
                debug requests_no_cached => _77; // in scope 11 at cita-auth/src/handler.rs:660:17: 660:39
                let mut _80: std::slice::Iter<'_, libproto::Request>; // in scope 11 at cita-auth/src/handler.rs:661:27: 661:39
                let _126: std::vec::Vec<(cita_types::H256, std::option::Option<std::vec::Vec<u8>>)>; // in scope 11 at cita-auth/src/handler.rs:681:17: 681:24
                scope 12 {
                    debug iter => _80;   // in scope 12 at cita-auth/src/handler.rs:661:27: 661:39
                    let _84: &libproto::Request; // in scope 12 at cita-auth/src/handler.rs:661:17: 661:23
                    scope 13 {
                        debug tx_req => _84; // in scope 13 at cita-auth/src/handler.rs:661:17: 661:23
                        let _85: libproto::VerifyTxReq; // in scope 13 at cita-auth/src/handler.rs:662:21: 662:24
                        scope 14 {
                            debug req => _85; // in scope 14 at cita-auth/src/handler.rs:662:21: 662:24
                            let _88: cita_types::H256; // in scope 14 at cita-auth/src/handler.rs:663:21: 663:28
                            scope 15 {
                                debug tx_hash => _88; // in scope 15 at cita-auth/src/handler.rs:663:21: 663:28
                                scope 16 {
                                    debug option_pubkey => _96; // in scope 16 at cita-auth/src/handler.rs:664:29: 664:42
                                    let _96: std::option::Option<std::vec::Vec<u8>>; // in scope 16 at cita-auth/src/handler.rs:664:29: 664:42
                                    let _99: std::vec::Vec<u8>; // in scope 16 at cita-auth/src/handler.rs:667:33: 667:43
                                    let mut _105: libproto::VerifyTxReq; // in scope 16 at cita-auth/src/handler.rs:672:25: 672:36
                                    scope 17 {
                                        debug request_id => _99; // in scope 17 at cita-auth/src/handler.rs:667:33: 667:43
                                        let mut _349: &transaction_verify::Error; // in scope 17 at cita-auth/src/handler.rs:668:71: 668:85
                                    }
                                    scope 18 {
                                        debug new_req => _105; // in scope 18 at cita-auth/src/handler.rs:672:25: 672:36
                                    }
                                }
                            }
                        }
                    }
                }
                scope 19 {
                    debug results => _126; // in scope 19 at cita-auth/src/handler.rs:681:17: 681:24
                    let mut _132: std::vec::IntoIter<(cita_types::H256, std::option::Option<std::vec::Vec<u8>>)>; // in scope 19 at cita-auth/src/handler.rs:696:45: 696:52
                    scope 20 {
                        debug iter => _132; // in scope 20 at cita-auth/src/handler.rs:696:45: 696:52
                        let _136: cita_types::H256; // in scope 20 at cita-auth/src/handler.rs:696:18: 696:25
                        let _137: std::option::Option<std::vec::Vec<u8>>; // in scope 20 at cita-auth/src/handler.rs:696:27: 696:40
                        scope 21 {
                            debug tx_hash => _136; // in scope 21 at cita-auth/src/handler.rs:696:18: 696:25
                            debug option_pubkey => _137; // in scope 21 at cita-auth/src/handler.rs:696:27: 696:40
                            scope 22 {
                                debug pubkey => _142; // in scope 22 at cita-auth/src/handler.rs:698:29: 698:35
                                let _142: std::vec::Vec<u8>; // in scope 22 at cita-auth/src/handler.rs:698:29: 698:35
                                scope 23 {
                                    debug v => _147; // in scope 23 at cita-auth/src/handler.rs:699:33: 699:42
                                    let _147: &mut &mut (libproto::VerifyTxReq, &libproto::Request, bool); // in scope 23 at cita-auth/src/handler.rs:699:33: 699:42
                                }
                            }
                            scope 24 {
                                debug v => _155; // in scope 24 at cita-auth/src/handler.rs:702:36: 702:45
                                let _155: &mut &mut (libproto::VerifyTxReq, &libproto::Request, bool); // in scope 24 at cita-auth/src/handler.rs:702:36: 702:45
                                let _156: std::vec::Vec<u8>; // in scope 24 at cita-auth/src/handler.rs:704:29: 704:39
                                scope 25 {
                                    debug request_id => _156; // in scope 25 at cita-auth/src/handler.rs:704:29: 704:39
                                    let mut _348: &transaction_verify::Error; // in scope 25 at cita-auth/src/handler.rs:705:67: 705:81
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    scope 26 {
        debug lvl => _183;               // in scope 26 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _345: &(&str, &str, &str, u32); // in scope 26 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        let mut _346: &[&str; 1];        // in scope 26 at cita-auth/src/handler.rs:766:20: 766:60
        let mut _347: &log::LevelFilter; // in scope 26 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
    scope 27 {
        debug request_id => _194;        // in scope 27 at cita-auth/src/handler.rs:767:17: 767:27
        let _201: log::Level;            // in scope 27 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let _217: log::Level;            // in scope 27 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _231: libproto::VerifyTxReq; // in scope 27 at cita-auth/src/handler.rs:782:17: 782:24
        let mut _337: &transaction_verify::Error; // in scope 27 at cita-auth/src/handler.rs:778:63: 778:75
        let mut _341: &transaction_verify::Error; // in scope 27 at cita-auth/src/handler.rs:771:63: 771:79
        scope 28 {
            debug lvl => _201;           // in scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _342: &(&str, &str, &str, u32); // in scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _343: &[&str; 1];    // in scope 28 at cita-auth/src/handler.rs:769:24: 769:59
            let mut _344: &log::LevelFilter; // in scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
        scope 29 {
            debug lvl => _217;           // in scope 29 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _338: &(&str, &str, &str, u32); // in scope 29 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _339: &[&str; 1];    // in scope 29 at cita-auth/src/handler.rs:776:24: 776:42
            let mut _340: &log::LevelFilter; // in scope 29 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
        scope 30 {
            debug req => _231;           // in scope 30 at cita-auth/src/handler.rs:782:17: 782:24
            let _235: cita_types::H256;  // in scope 30 at cita-auth/src/handler.rs:784:17: 784:24
            scope 31 {
                debug tx_hash => _235;   // in scope 31 at cita-auth/src/handler.rs:784:17: 784:24
                let _253: std::result::Result<std::vec::Vec<u8>, ()>; // in scope 31 at cita-auth/src/handler.rs:792:21: 792:27
                let mut _302: libproto::SignedTransaction; // in scope 31 at cita-auth/src/handler.rs:835:17: 835:30
                scope 32 {
                    debug option_pubkey => _243; // in scope 32 at cita-auth/src/handler.rs:785:25: 785:38
                    let _243: std::option::Option<std::vec::Vec<u8>>; // in scope 32 at cita-auth/src/handler.rs:785:25: 785:38
                    let mut _335: &transaction_verify::Error; // in scope 32 at cita-auth/src/handler.rs:787:63: 787:77
                }
                scope 33 {
                    debug result => _253; // in scope 33 at cita-auth/src/handler.rs:792:21: 792:27
                    let _269: std::vec::Vec<u8>; // in scope 33 at cita-auth/src/handler.rs:799:24: 799:30
                    let mut _336: &transaction_verify::Error; // in scope 33 at cita-auth/src/handler.rs:804:71: 804:85
                    scope 34 {
                        debug pubkey => _269; // in scope 34 at cita-auth/src/handler.rs:799:24: 799:30
                    }
                }
                scope 35 {
                    debug e => _279;     // in scope 35 at cita-auth/src/handler.rs:812:24: 812:25
                    let _279: transaction_verify::Error; // in scope 35 at cita-auth/src/handler.rs:812:24: 812:25
                }
                scope 36 {
                    debug e => _288;     // in scope 36 at cita-auth/src/handler.rs:819:24: 819:25
                    let _288: transaction_verify::Error; // in scope 36 at cita-auth/src/handler.rs:819:24: 819:25
                }
                scope 37 {
                    debug e => _297;     // in scope 37 at cita-auth/src/handler.rs:827:24: 827:25
                    let _297: transaction_verify::Error; // in scope 37 at cita-auth/src/handler.rs:827:24: 827:25
                }
                scope 38 {
                    debug signed_tx => _302; // in scope 38 at cita-auth/src/handler.rs:835:17: 835:30
                    let mut _334: &transaction_verify::Error; // in scope 38 at cita-auth/src/handler.rs:847:59: 847:70
                }
            }
        }
    }

    bb0: {
        _369 = const false;              // scope 0 at cita-auth/src/handler.rs:631:12: 631:37
        _363 = const false;              // scope 0 at cita-auth/src/handler.rs:631:12: 631:37
        _371 = const false;              // scope 0 at cita-auth/src/handler.rs:631:12: 631:37
        _370 = const false;              // scope 0 at cita-auth/src/handler.rs:631:12: 631:37
        _373 = const false;              // scope 0 at cita-auth/src/handler.rs:631:12: 631:37
        _372 = const false;              // scope 0 at cita-auth/src/handler.rs:631:12: 631:37
        _364 = const false;              // scope 0 at cita-auth/src/handler.rs:631:12: 631:37
        _374 = const false;              // scope 0 at cita-auth/src/handler.rs:631:12: 631:37
        _375 = const false;              // scope 0 at cita-auth/src/handler.rs:631:12: 631:37
        _367 = const false;              // scope 0 at cita-auth/src/handler.rs:631:12: 631:37
        _365 = const false;              // scope 0 at cita-auth/src/handler.rs:631:12: 631:37
        _368 = const false;              // scope 0 at cita-auth/src/handler.rs:631:12: 631:37
        _366 = const false;              // scope 0 at cita-auth/src/handler.rs:631:12: 631:37
        _369 = const true;               // scope 0 at cita-auth/src/handler.rs:631:12: 631:37
        _5 = &_3;                        // scope 0 at cita-auth/src/handler.rs:631:12: 631:37
        _4 = libproto::Request::has_batch_req(move _5) -> [return: bb1, unwind: bb276]; // scope 0 at cita-auth/src/handler.rs:631:12: 631:37
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:631:22: 631:35
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Request) -> bool {libproto::Request::has_batch_req}, val: Value(<ZST>) }
    }

    bb1: {
        switchInt(move _4) -> [0: bb116, otherwise: bb2]; // scope 0 at cita-auth/src/handler.rs:631:12: 631:37
    }

    bb2: {
        _9 = &_3;                        // scope 0 at cita-auth/src/handler.rs:632:32: 632:57
        _8 = libproto::Request::get_batch_req(move _9) -> [return: bb3, unwind: bb276]; // scope 0 at cita-auth/src/handler.rs:632:32: 632:57
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:632:42: 632:55
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Request) -> &'a BatchRequest {libproto::Request::get_batch_req}, val: Value(<ZST>) }
    }

    bb3: {
        _7 = _8;                         // scope 0 at cita-auth/src/handler.rs:632:32: 632:79
        _6 = BatchRequest::get_new_tx_requests(move _7) -> [return: bb4, unwind: bb276]; // scope 0 at cita-auth/src/handler.rs:632:32: 632:79
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:632:58: 632:77
                                         // + literal: Const { ty: for<'a> fn(&'a BatchRequest) -> &'a [libproto::Request] {BatchRequest::get_new_tx_requests}, val: Value(<ZST>) }
    }

    bb4: {
        _10 = log::Level::Trace;         // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _13 = &_10;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _357 = const _;                  // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::deal_request, [], Some(promoted[23])) }
        _12 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _13, _357) -> [return: bb8, unwind: bb276]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb5: {
        _11 = const false;               // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb7;                     // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb6: {
        _15 = &_10;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _17 = log::max_level() -> [return: bb9, unwind: bb276]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb7: {
        switchInt(move _11) -> [0: bb16, otherwise: bb11]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb8: {
        switchInt(move _12) -> [0: bb5, otherwise: bb6]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb9: {
        _16 = &_17;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _14 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _15, move _16) -> [return: bb10, unwind: bb276]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb10: {
        _11 = move _14;                  // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb7;                     // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb11: {
        _356 = const _;                  // scope 2 at cita-auth/src/handler.rs:634:17: 634:67
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:634:17: 634:67
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(MsgHandler::deal_request, [], Some(promoted[22])) }
        _20 = _356 as &[&str] (Pointer(Unsize)); // scope 2 at cita-auth/src/handler.rs:634:17: 634:67
        _27 = _6;                        // scope 2 at cita-auth/src/handler.rs:635:17: 635:35
        _26 = core::slice::<impl [libproto::Request]>::len(move _27) -> [return: bb12, unwind: bb276]; // scope 2 at cita-auth/src/handler.rs:635:17: 635:35
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:635:30: 635:33
                                         // + literal: Const { ty: for<'a> fn(&'a [libproto::Request]) -> usize {core::slice::<impl [libproto::Request]>::len}, val: Value(<ZST>) }
    }

    bb12: {
        _25 = &_26;                      // scope 2 at cita-auth/src/handler.rs:635:17: 635:35
        _24 = core::fmt::ArgumentV1::<'_>::new_display::<usize>(_25) -> [return: bb13, unwind: bb276]; // scope 2 at cita-auth/src/handler.rs:635:17: 635:35
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:635:17: 635:35
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b usize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<usize>}, val: Value(<ZST>) }
    }

    bb13: {
        _29 = &_2;                       // scope 2 at cita-auth/src/handler.rs:636:17: 636:25
        _28 = core::fmt::ArgumentV1::<'_>::new_display::<bool>(_29) -> [return: bb14, unwind: bb276]; // scope 2 at cita-auth/src/handler.rs:636:17: 636:25
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:636:17: 636:25
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b bool) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<bool>}, val: Value(<ZST>) }
    }

    bb14: {
        _23 = [move _24, move _28];      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _22 = &_23;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _21 = _22 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _19 = Arguments::<'_>::new_v1(move _20, move _21) -> [return: bb15, unwind: bb276]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb15: {
        _355 = const _;                  // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::deal_request, [], Some(promoted[21])) }
        _18 = log::__private_api_log(move _19, _10, _355) -> [return: bb277, unwind: bb276]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb16: {
        _32 = &(*_1);                    // scope 1 at cita-auth/src/handler.rs:638:17: 638:32
        _31 = MsgHandler::is_ready(move _32) -> [return: bb17, unwind: bb276]; // scope 1 at cita-auth/src/handler.rs:638:17: 638:32
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:638:22: 638:30
                                         // + literal: Const { ty: for<'a> fn(&'a MsgHandler) -> bool {MsgHandler::is_ready}, val: Value(<ZST>) }
    }

    bb17: {
        _30 = Not(move _31);             // scope 1 at cita-auth/src/handler.rs:638:16: 638:32
        switchInt(move _30) -> [0: bb28, otherwise: bb18]; // scope 1 at cita-auth/src/handler.rs:638:16: 638:32
    }

    bb18: {
        switchInt(_2) -> [0: bb219, otherwise: bb19]; // scope 1 at cita-auth/src/handler.rs:639:20: 639:28
    }

    bb19: {
        _35 = _6;                        // scope 1 at cita-auth/src/handler.rs:640:35: 640:54
        _34 = core::slice::<impl [libproto::Request]>::iter(move _35) -> [return: bb20, unwind: bb276]; // scope 1 at cita-auth/src/handler.rs:640:35: 640:54
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:640:48: 640:52
                                         // + literal: Const { ty: for<'a> fn(&'a [libproto::Request]) -> std::slice::Iter<'a, libproto::Request> {core::slice::<impl [libproto::Request]>::iter}, val: Value(<ZST>) }
    }

    bb20: {
        _33 = <std::slice::Iter<'_, libproto::Request> as IntoIterator>::into_iter(move _34) -> [return: bb21, unwind: bb276]; // scope 1 at cita-auth/src/handler.rs:640:35: 640:54
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:640:35: 640:54
                                         // + literal: Const { ty: fn(std::slice::Iter<'_, libproto::Request>) -> <std::slice::Iter<'_, libproto::Request> as IntoIterator>::IntoIter {<std::slice::Iter<'_, libproto::Request> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb21: {
        _36 = move _33;                  // scope 1 at cita-auth/src/handler.rs:640:35: 640:54
        goto -> bb22;                    // scope 3 at cita-auth/src/handler.rs:640:21: 643:22
    }

    bb22: {
        _38 = &mut _36;                  // scope 3 at cita-auth/src/handler.rs:640:35: 640:54
        _37 = <std::slice::Iter<'_, libproto::Request> as Iterator>::next(_38) -> [return: bb23, unwind: bb276]; // scope 3 at cita-auth/src/handler.rs:640:35: 640:54
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:640:35: 640:54
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::slice::Iter<'_, libproto::Request>) -> std::option::Option<<std::slice::Iter<'_, libproto::Request> as Iterator>::Item> {<std::slice::Iter<'_, libproto::Request> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb23: {
        _39 = discriminant(_37);         // scope 3 at cita-auth/src/handler.rs:640:35: 640:54
        switchInt(move _39) -> [0: bb219, 1: bb24, otherwise: bb25]; // scope 3 at cita-auth/src/handler.rs:640:35: 640:54
    }

    bb24: {
        _40 = ((_37 as Some).0: &libproto::Request); // scope 3 at cita-auth/src/handler.rs:640:25: 640:31
        _43 = libproto::Request::get_request_id(_40) -> [return: bb26, unwind: bb276]; // scope 4 at cita-auth/src/handler.rs:641:42: 641:65
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:641:49: 641:63
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Request) -> &'a [u8] {libproto::Request::get_request_id}, val: Value(<ZST>) }
    }

    bb25: {
        unreachable;                     // scope 3 at cita-auth/src/handler.rs:640:35: 640:54
    }

    bb26: {
        _42 = _43;                       // scope 4 at cita-auth/src/handler.rs:641:42: 641:74
        _41 = std::slice::<impl [u8]>::to_vec(move _42) -> [return: bb27, unwind: bb276]; // scope 4 at cita-auth/src/handler.rs:641:42: 641:74
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:641:66: 641:72
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> Vec<u8> {std::slice::<impl [u8]>::to_vec}, val: Value(<ZST>) }
    }

    bb27: {
        _45 = &(*_1);                    // scope 5 at cita-auth/src/handler.rs:642:25: 642:84
        _46 = move _41;                  // scope 5 at cita-auth/src/handler.rs:642:55: 642:65
        _354 = const _;                  // scope 5 at cita-auth/src/handler.rs:642:67: 642:83
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:642:67: 642:83
                                         // + literal: Const { ty: &transaction_verify::Error, val: Unevaluated(MsgHandler::deal_request, [], Some(promoted[20])) }
        _44 = MsgHandler::publish_tx_failed_result(move _45, move _46, _354) -> [return: bb278, unwind: bb276]; // scope 5 at cita-auth/src/handler.rs:642:25: 642:84
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:642:30: 642:54
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a MsgHandler, Vec<u8>, &'b transaction_verify::Error) {MsgHandler::publish_tx_failed_result}, val: Value(<ZST>) }
    }

    bb28: {
        _48 = &(*_1);                    // scope 1 at cita-auth/src/handler.rs:648:16: 648:56
        _50 = _6;                        // scope 1 at cita-auth/src/handler.rs:648:37: 648:55
        _49 = core::slice::<impl [libproto::Request]>::len(move _50) -> [return: bb29, unwind: bb276]; // scope 1 at cita-auth/src/handler.rs:648:37: 648:55
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:648:50: 648:53
                                         // + literal: Const { ty: for<'a> fn(&'a [libproto::Request]) -> usize {core::slice::<impl [libproto::Request]>::len}, val: Value(<ZST>) }
    }

    bb29: {
        _47 = MsgHandler::is_flow_control(move _48, move _49) -> [return: bb30, unwind: bb276]; // scope 1 at cita-auth/src/handler.rs:648:16: 648:56
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:648:21: 648:36
                                         // + literal: Const { ty: for<'a> fn(&'a MsgHandler, usize) -> bool {MsgHandler::is_flow_control}, val: Value(<ZST>) }
    }

    bb30: {
        switchInt(move _47) -> [0: bb50, otherwise: bb31]; // scope 1 at cita-auth/src/handler.rs:648:16: 648:56
    }

    bb31: {
        _51 = log::Level::Trace;         // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _54 = &_51;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _353 = const _;                  // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::deal_request, [], Some(promoted[19])) }
        _53 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _54, _353) -> [return: bb35, unwind: bb276]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb32: {
        _52 = const false;               // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb34;                    // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb33: {
        _56 = &_51;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _58 = log::max_level() -> [return: bb36, unwind: bb276]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb34: {
        switchInt(move _52) -> [0: bb40, otherwise: bb38]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb35: {
        switchInt(move _53) -> [0: bb32, otherwise: bb33]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb36: {
        _57 = &_58;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _55 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _56, move _57) -> [return: bb37, unwind: bb276]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb37: {
        _52 = move _55;                  // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb34;                    // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb38: {
        _352 = const _;                  // scope 6 at cita-auth/src/handler.rs:649:24: 649:42
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:649:24: 649:42
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(MsgHandler::deal_request, [], Some(promoted[18])) }
        _61 = _352 as &[&str] (Pointer(Unsize)); // scope 6 at cita-auth/src/handler.rs:649:24: 649:42
        _60 = Arguments::<'_>::new_const(move _61) -> [return: bb39, unwind: bb276]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb39: {
        _351 = const _;                  // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::deal_request, [], Some(promoted[17])) }
        _59 = log::__private_api_log(move _60, _51, _351) -> [return: bb279, unwind: bb276]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb40: {
        switchInt(_2) -> [0: bb219, otherwise: bb41]; // scope 1 at cita-auth/src/handler.rs:650:20: 650:28
    }

    bb41: {
        _64 = _6;                        // scope 1 at cita-auth/src/handler.rs:651:35: 651:54
        _63 = core::slice::<impl [libproto::Request]>::iter(move _64) -> [return: bb42, unwind: bb276]; // scope 1 at cita-auth/src/handler.rs:651:35: 651:54
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:651:48: 651:52
                                         // + literal: Const { ty: for<'a> fn(&'a [libproto::Request]) -> std::slice::Iter<'a, libproto::Request> {core::slice::<impl [libproto::Request]>::iter}, val: Value(<ZST>) }
    }

    bb42: {
        _62 = <std::slice::Iter<'_, libproto::Request> as IntoIterator>::into_iter(move _63) -> [return: bb43, unwind: bb276]; // scope 1 at cita-auth/src/handler.rs:651:35: 651:54
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:651:35: 651:54
                                         // + literal: Const { ty: fn(std::slice::Iter<'_, libproto::Request>) -> <std::slice::Iter<'_, libproto::Request> as IntoIterator>::IntoIter {<std::slice::Iter<'_, libproto::Request> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb43: {
        _65 = move _62;                  // scope 1 at cita-auth/src/handler.rs:651:35: 651:54
        goto -> bb44;                    // scope 7 at cita-auth/src/handler.rs:651:21: 654:22
    }

    bb44: {
        _67 = &mut _65;                  // scope 7 at cita-auth/src/handler.rs:651:35: 651:54
        _66 = <std::slice::Iter<'_, libproto::Request> as Iterator>::next(_67) -> [return: bb45, unwind: bb276]; // scope 7 at cita-auth/src/handler.rs:651:35: 651:54
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:651:35: 651:54
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::slice::Iter<'_, libproto::Request>) -> std::option::Option<<std::slice::Iter<'_, libproto::Request> as Iterator>::Item> {<std::slice::Iter<'_, libproto::Request> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb45: {
        _68 = discriminant(_66);         // scope 7 at cita-auth/src/handler.rs:651:35: 651:54
        switchInt(move _68) -> [0: bb219, 1: bb46, otherwise: bb47]; // scope 7 at cita-auth/src/handler.rs:651:35: 651:54
    }

    bb46: {
        _69 = ((_66 as Some).0: &libproto::Request); // scope 7 at cita-auth/src/handler.rs:651:25: 651:31
        _72 = libproto::Request::get_request_id(_69) -> [return: bb48, unwind: bb276]; // scope 8 at cita-auth/src/handler.rs:652:42: 652:65
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:652:49: 652:63
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Request) -> &'a [u8] {libproto::Request::get_request_id}, val: Value(<ZST>) }
    }

    bb47: {
        unreachable;                     // scope 7 at cita-auth/src/handler.rs:651:35: 651:54
    }

    bb48: {
        _71 = _72;                       // scope 8 at cita-auth/src/handler.rs:652:42: 652:74
        _70 = std::slice::<impl [u8]>::to_vec(move _71) -> [return: bb49, unwind: bb276]; // scope 8 at cita-auth/src/handler.rs:652:42: 652:74
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:652:66: 652:72
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> Vec<u8> {std::slice::<impl [u8]>::to_vec}, val: Value(<ZST>) }
    }

    bb49: {
        _74 = &(*_1);                    // scope 9 at cita-auth/src/handler.rs:653:25: 653:80
        _75 = move _70;                  // scope 9 at cita-auth/src/handler.rs:653:55: 653:65
        _350 = const _;                  // scope 9 at cita-auth/src/handler.rs:653:67: 653:79
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:653:67: 653:79
                                         // + literal: Const { ty: &transaction_verify::Error, val: Unevaluated(MsgHandler::deal_request, [], Some(promoted[16])) }
        _73 = MsgHandler::publish_tx_failed_result(move _74, move _75, _350) -> [return: bb280, unwind: bb276]; // scope 9 at cita-auth/src/handler.rs:653:25: 653:80
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:653:30: 653:54
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a MsgHandler, Vec<u8>, &'b transaction_verify::Error) {MsgHandler::publish_tx_failed_result}, val: Value(<ZST>) }
    }

    bb50: {
        _76 = HashMap::<H256, (VerifyTxReq, &libproto::Request, bool)>::new() -> [return: bb51, unwind: bb276]; // scope 1 at cita-auth/src/handler.rs:659:32: 659:46
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:659:32: 659:44
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn() -> HashMap<H256, (VerifyTxReq, &libproto::Request, bool)> {HashMap::<H256, (VerifyTxReq, &libproto::Request, bool)>::new}, val: Value(<ZST>) }
    }

    bb51: {
        _375 = const true;               // scope 10 at cita-auth/src/handler.rs:660:17: 660:39
        _77 = HashMap::<H256, VerifyTxReq>::new() -> [return: bb52, unwind: bb274]; // scope 10 at cita-auth/src/handler.rs:660:42: 660:56
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:660:42: 660:54
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: fn() -> HashMap<H256, VerifyTxReq> {HashMap::<H256, VerifyTxReq>::new}, val: Value(<ZST>) }
    }

    bb52: {
        _374 = const true;               // scope 11 at cita-auth/src/handler.rs:661:13: 679:14
        _79 = _6;                        // scope 11 at cita-auth/src/handler.rs:661:27: 661:39
        _78 = <&[libproto::Request] as IntoIterator>::into_iter(move _79) -> [return: bb53, unwind: bb272]; // scope 11 at cita-auth/src/handler.rs:661:27: 661:39
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:661:27: 661:39
                                         // + literal: Const { ty: fn(&[libproto::Request]) -> <&[libproto::Request] as IntoIterator>::IntoIter {<&[libproto::Request] as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb53: {
        _80 = move _78;                  // scope 11 at cita-auth/src/handler.rs:661:27: 661:39
        goto -> bb54;                    // scope 12 at cita-auth/src/handler.rs:661:13: 679:14
    }

    bb54: {
        _82 = &mut _80;                  // scope 12 at cita-auth/src/handler.rs:661:27: 661:39
        _81 = <std::slice::Iter<'_, libproto::Request> as Iterator>::next(_82) -> [return: bb55, unwind: bb272]; // scope 12 at cita-auth/src/handler.rs:661:27: 661:39
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:661:27: 661:39
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::slice::Iter<'_, libproto::Request>) -> std::option::Option<<std::slice::Iter<'_, libproto::Request> as Iterator>::Item> {<std::slice::Iter<'_, libproto::Request> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb55: {
        _83 = discriminant(_81);         // scope 12 at cita-auth/src/handler.rs:661:27: 661:39
        switchInt(move _83) -> [0: bb58, 1: bb56, otherwise: bb57]; // scope 12 at cita-auth/src/handler.rs:661:27: 661:39
    }

    bb56: {
        _84 = ((_81 as Some).0: &libproto::Request); // scope 12 at cita-auth/src/handler.rs:661:17: 661:23
        _87 = libproto::Request::get_un_tx(_84) -> [return: bb59, unwind: bb272]; // scope 13 at cita-auth/src/handler.rs:662:27: 662:45
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:662:34: 662:43
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Request) -> &'a UnverifiedTransaction {libproto::Request::get_un_tx}, val: Value(<ZST>) }
    }

    bb57: {
        unreachable;                     // scope 12 at cita-auth/src/handler.rs:661:27: 661:39
    }

    bb58: {
        _374 = const false;              // scope 11 at cita-auth/src/handler.rs:681:57: 681:75
        _129 = move _77;                 // scope 11 at cita-auth/src/handler.rs:681:57: 681:75
        _128 = <HashMap<H256, VerifyTxReq> as IntoParallelIterator>::into_par_iter(move _129) -> [return: bb86, unwind: bb272]; // scope 11 at cita-auth/src/handler.rs:681:57: 682:33
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:682:18: 682:31
                                         // + literal: Const { ty: fn(HashMap<H256, VerifyTxReq>) -> <HashMap<H256, VerifyTxReq> as IntoParallelIterator>::Iter {<HashMap<H256, VerifyTxReq> as IntoParallelIterator>::into_par_iter}, val: Value(<ZST>) }
    }

    bb59: {
        _86 = _87;                       // scope 13 at cita-auth/src/handler.rs:662:27: 662:65
        _85 = libproto::<impl UnverifiedTransaction>::tx_verify_req_msg(move _86) -> [return: bb60, unwind: bb272]; // scope 13 at cita-auth/src/handler.rs:662:27: 662:65
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:662:46: 662:63
                                         // + literal: Const { ty: for<'a> fn(&'a UnverifiedTransaction) -> VerifyTxReq {libproto::<impl UnverifiedTransaction>::tx_verify_req_msg}, val: Value(<ZST>) }
    }

    bb60: {
        _363 = const true;               // scope 13 at cita-auth/src/handler.rs:662:64: 662:65
        _91 = &_85;                      // scope 14 at cita-auth/src/handler.rs:663:48: 663:65
        _90 = VerifyTxReq::get_tx_hash(move _91) -> [return: bb61, unwind: bb224]; // scope 14 at cita-auth/src/handler.rs:663:48: 663:65
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:663:52: 663:63
                                         // + literal: Const { ty: for<'a> fn(&'a VerifyTxReq) -> &'a [u8] {VerifyTxReq::get_tx_hash}, val: Value(<ZST>) }
    }

    bb61: {
        _89 = _90;                       // scope 14 at cita-auth/src/handler.rs:663:48: 663:65
        _88 = H256::from_slice(move _89) -> [return: bb62, unwind: bb224]; // scope 14 at cita-auth/src/handler.rs:663:31: 663:66
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:663:31: 663:47
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> H256 {H256::from_slice}, val: Value(<ZST>) }
    }

    bb62: {
        _93 = &(*_1);                    // scope 16 at cita-auth/src/handler.rs:664:46: 664:79
        _94 = &_88;                      // scope 16 at cita-auth/src/handler.rs:664:70: 664:78
        _92 = MsgHandler::get_ret_from_cache(move _93, _94) -> [return: bb63, unwind: bb224]; // scope 16 at cita-auth/src/handler.rs:664:46: 664:79
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:664:51: 664:69
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a MsgHandler, &'b H256) -> std::option::Option<std::option::Option<Vec<u8>>> {MsgHandler::get_ret_from_cache}, val: Value(<ZST>) }
    }

    bb63: {
        _364 = const true;               // scope 16 at cita-auth/src/handler.rs:664:78: 664:79
        _95 = discriminant(_92);         // scope 16 at cita-auth/src/handler.rs:664:24: 664:43
        switchInt(move _95) -> [1: bb64, otherwise: bb77]; // scope 16 at cita-auth/src/handler.rs:664:24: 664:43
    }

    bb64: {
        _364 = const false;              // scope 16 at cita-auth/src/handler.rs:664:29: 664:42
        _373 = const true;               // scope 16 at cita-auth/src/handler.rs:664:29: 664:42
        _96 = move ((_92 as Some).0: std::option::Option<std::vec::Vec<u8>>); // scope 16 at cita-auth/src/handler.rs:664:29: 664:42
        _98 = &_96;                      // scope 16 at cita-auth/src/handler.rs:665:24: 665:47
        _97 = std::option::Option::<Vec<u8>>::is_none(move _98) -> [return: bb65, unwind: bb265]; // scope 16 at cita-auth/src/handler.rs:665:24: 665:47
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:665:38: 665:45
                                         // + literal: Const { ty: for<'a> fn(&'a std::option::Option<Vec<u8>>) -> bool {std::option::Option::<Vec<u8>>::is_none}, val: Value(<ZST>) }
    }

    bb65: {
        switchInt(move _97) -> [0: bb71, otherwise: bb66]; // scope 16 at cita-auth/src/handler.rs:665:24: 665:47
    }

    bb66: {
        switchInt(_2) -> [0: bb70, otherwise: bb67]; // scope 16 at cita-auth/src/handler.rs:666:28: 666:36
    }

    bb67: {
        _101 = libproto::Request::get_request_id(_84) -> [return: bb68, unwind: bb265]; // scope 16 at cita-auth/src/handler.rs:667:46: 667:69
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:667:53: 667:67
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Request) -> &'a [u8] {libproto::Request::get_request_id}, val: Value(<ZST>) }
    }

    bb68: {
        _100 = _101;                     // scope 16 at cita-auth/src/handler.rs:667:46: 667:78
        _99 = std::slice::<impl [u8]>::to_vec(move _100) -> [return: bb69, unwind: bb265]; // scope 16 at cita-auth/src/handler.rs:667:46: 667:78
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:667:70: 667:76
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> Vec<u8> {std::slice::<impl [u8]>::to_vec}, val: Value(<ZST>) }
    }

    bb69: {
        _103 = &(*_1);                   // scope 17 at cita-auth/src/handler.rs:668:29: 668:86
        _104 = move _99;                 // scope 17 at cita-auth/src/handler.rs:668:59: 668:69
        _349 = const _;                  // scope 17 at cita-auth/src/handler.rs:668:71: 668:85
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:668:71: 668:85
                                         // + literal: Const { ty: &transaction_verify::Error, val: Unevaluated(MsgHandler::deal_request, [], Some(promoted[15])) }
        _102 = MsgHandler::publish_tx_failed_result(move _103, move _104, _349) -> [return: bb281, unwind: bb265]; // scope 17 at cita-auth/src/handler.rs:668:29: 668:86
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:668:34: 668:58
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a MsgHandler, Vec<u8>, &'b transaction_verify::Error) {MsgHandler::publish_tx_failed_result}, val: Value(<ZST>) }
    }

    bb70: {
        drop(_96) -> [return: bb84, unwind: bb267]; // scope 15 at cita-auth/src/handler.rs:675:17: 675:18
    }

    bb71: {
        _106 = &_85;                     // scope 16 at cita-auth/src/handler.rs:672:39: 672:50
        _105 = <VerifyTxReq as Clone>::clone(move _106) -> [return: bb72, unwind: bb265]; // scope 16 at cita-auth/src/handler.rs:672:39: 672:50
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:672:43: 672:48
                                         // + literal: Const { ty: for<'a> fn(&'a VerifyTxReq) -> VerifyTxReq {<VerifyTxReq as Clone>::clone}, val: Value(<ZST>) }
    }

    bb72: {
        _372 = const true;               // scope 16 at cita-auth/src/handler.rs:672:49: 672:50
        _108 = &mut _105;                // scope 18 at cita-auth/src/handler.rs:673:21: 673:63
        _373 = const false;              // scope 18 at cita-auth/src/handler.rs:673:40: 673:53
        _110 = move _96;                 // scope 18 at cita-auth/src/handler.rs:673:40: 673:53
        _109 = std::option::Option::<Vec<u8>>::unwrap(move _110) -> [return: bb73, unwind: bb263]; // scope 18 at cita-auth/src/handler.rs:673:40: 673:62
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:673:54: 673:60
                                         // + literal: Const { ty: fn(std::option::Option<Vec<u8>>) -> Vec<u8> {std::option::Option::<Vec<u8>>::unwrap}, val: Value(<ZST>) }
    }

    bb73: {
        _107 = VerifyTxReq::set_signer(move _108, move _109) -> [return: bb74, unwind: bb263]; // scope 18 at cita-auth/src/handler.rs:673:21: 673:63
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:673:29: 673:39
                                         // + literal: Const { ty: for<'a> fn(&'a mut VerifyTxReq, Vec<u8>) {VerifyTxReq::set_signer}, val: Value(<ZST>) }
    }

    bb74: {
        _112 = &mut _76;                 // scope 18 at cita-auth/src/handler.rs:674:21: 674:70
        _113 = _88;                      // scope 18 at cita-auth/src/handler.rs:674:37: 674:44
        _372 = const false;              // scope 18 at cita-auth/src/handler.rs:674:47: 674:54
        _115 = move _105;                // scope 18 at cita-auth/src/handler.rs:674:47: 674:54
        _114 = (move _115, _84, const true); // scope 18 at cita-auth/src/handler.rs:674:46: 674:69
        _111 = HashMap::<H256, (VerifyTxReq, &libproto::Request, bool)>::insert(move _112, move _113, move _114) -> [return: bb75, unwind: bb263]; // scope 18 at cita-auth/src/handler.rs:674:21: 674:70
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:674:30: 674:36
                                         // + literal: Const { ty: for<'a> fn(&'a mut HashMap<H256, (VerifyTxReq, &libproto::Request, bool)>, H256, (VerifyTxReq, &libproto::Request, bool)) -> std::option::Option<(VerifyTxReq, &libproto::Request, bool)> {HashMap::<H256, (VerifyTxReq, &libproto::Request, bool)>::insert}, val: Value(<ZST>) }
    }

    bb75: {
        drop(_111) -> [return: bb76, unwind: bb263]; // scope 18 at cita-auth/src/handler.rs:674:70: 674:71
    }

    bb76: {
        _372 = const false;              // scope 16 at cita-auth/src/handler.rs:675:17: 675:18
        _373 = const false;              // scope 15 at cita-auth/src/handler.rs:675:17: 675:18
        goto -> bb82;                    // scope 15 at cita-auth/src/handler.rs:664:17: 678:18
    }

    bb77: {
        _117 = &mut _77;                 // scope 15 at cita-auth/src/handler.rs:676:21: 676:68
        _118 = _88;                      // scope 15 at cita-auth/src/handler.rs:676:47: 676:54
        _120 = &_85;                     // scope 15 at cita-auth/src/handler.rs:676:56: 676:67
        _119 = <VerifyTxReq as Clone>::clone(move _120) -> [return: bb78, unwind: bb267]; // scope 15 at cita-auth/src/handler.rs:676:56: 676:67
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:676:60: 676:65
                                         // + literal: Const { ty: for<'a> fn(&'a VerifyTxReq) -> VerifyTxReq {<VerifyTxReq as Clone>::clone}, val: Value(<ZST>) }
    }

    bb78: {
        _116 = HashMap::<H256, VerifyTxReq>::insert(move _117, move _118, move _119) -> [return: bb79, unwind: bb267]; // scope 15 at cita-auth/src/handler.rs:676:21: 676:68
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:676:40: 676:46
                                         // + literal: Const { ty: for<'a> fn(&'a mut HashMap<H256, VerifyTxReq>, H256, VerifyTxReq) -> std::option::Option<VerifyTxReq> {HashMap::<H256, VerifyTxReq>::insert}, val: Value(<ZST>) }
    }

    bb79: {
        drop(_116) -> [return: bb80, unwind: bb267]; // scope 15 at cita-auth/src/handler.rs:676:68: 676:69
    }

    bb80: {
        _122 = &mut _76;                 // scope 15 at cita-auth/src/handler.rs:677:21: 677:66
        _123 = _88;                      // scope 15 at cita-auth/src/handler.rs:677:37: 677:44
        _363 = const false;              // scope 15 at cita-auth/src/handler.rs:677:47: 677:50
        _125 = move _85;                 // scope 15 at cita-auth/src/handler.rs:677:47: 677:50
        _124 = (move _125, _84, const true); // scope 15 at cita-auth/src/handler.rs:677:46: 677:65
        _121 = HashMap::<H256, (VerifyTxReq, &libproto::Request, bool)>::insert(move _122, move _123, move _124) -> [return: bb81, unwind: bb267]; // scope 15 at cita-auth/src/handler.rs:677:21: 677:66
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:677:30: 677:36
                                         // + literal: Const { ty: for<'a> fn(&'a mut HashMap<H256, (VerifyTxReq, &libproto::Request, bool)>, H256, (VerifyTxReq, &libproto::Request, bool)) -> std::option::Option<(VerifyTxReq, &libproto::Request, bool)> {HashMap::<H256, (VerifyTxReq, &libproto::Request, bool)>::insert}, val: Value(<ZST>) }
    }

    bb81: {
        drop(_121) -> [return: bb82, unwind: bb267]; // scope 15 at cita-auth/src/handler.rs:677:66: 677:67
    }

    bb82: {
        switchInt(_363) -> [0: bb83, otherwise: bb226]; // scope 13 at cita-auth/src/handler.rs:679:13: 679:14
    }

    bb83: {
        _363 = const false;              // scope 13 at cita-auth/src/handler.rs:679:13: 679:14
        _376 = discriminant(_92);        // scope 13 at cita-auth/src/handler.rs:679:13: 679:14
        switchInt(move _376) -> [1: bb228, otherwise: bb227]; // scope 13 at cita-auth/src/handler.rs:679:13: 679:14
    }

    bb84: {
        _373 = const false;              // scope 15 at cita-auth/src/handler.rs:675:17: 675:18
        drop(_85) -> [return: bb85, unwind: bb270]; // scope 13 at cita-auth/src/handler.rs:679:13: 679:14
    }

    bb85: {
        _363 = const false;              // scope 13 at cita-auth/src/handler.rs:679:13: 679:14
        _364 = const false;              // scope 13 at cita-auth/src/handler.rs:679:13: 679:14
        goto -> bb54;                    // scope 12 at no-location
    }

    bb86: {
        _127 = <rayon::collections::hash_map::IntoIter<H256, VerifyTxReq> as ParallelIterator>::map::<[closure@cita-auth/src/handler.rs:683:22: 683:42], (H256, std::option::Option<Vec<u8>>)>(move _128, const ZeroSized: [closure@cita-auth/src/handler.rs:683:22: 683:42]) -> [return: bb87, unwind: bb272]; // scope 11 at cita-auth/src/handler.rs:681:57: 693:19
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:683:18: 683:21
                                         // + literal: Const { ty: fn(rayon::collections::hash_map::IntoIter<H256, VerifyTxReq>, [closure@cita-auth/src/handler.rs:683:22: 683:42]) -> rayon::iter::Map<rayon::collections::hash_map::IntoIter<H256, VerifyTxReq>, [closure@cita-auth/src/handler.rs:683:22: 683:42]> {<rayon::collections::hash_map::IntoIter<H256, VerifyTxReq> as ParallelIterator>::map::<[closure@cita-auth/src/handler.rs:683:22: 683:42], (H256, std::option::Option<Vec<u8>>)>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: [closure@cita-auth/src/handler.rs:683:22: 683:42], val: Value(<ZST>) }
    }

    bb87: {
        _126 = <rayon::iter::Map<rayon::collections::hash_map::IntoIter<H256, VerifyTxReq>, [closure@cita-auth/src/handler.rs:683:22: 683:42]> as ParallelIterator>::collect::<Vec<(H256, std::option::Option<Vec<u8>>)>>(move _127) -> [return: bb88, unwind: bb272]; // scope 11 at cita-auth/src/handler.rs:681:57: 694:27
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:694:18: 694:25
                                         // + literal: Const { ty: fn(rayon::iter::Map<rayon::collections::hash_map::IntoIter<H256, VerifyTxReq>, [closure@cita-auth/src/handler.rs:683:22: 683:42]>) -> Vec<(H256, std::option::Option<Vec<u8>>)> {<rayon::iter::Map<rayon::collections::hash_map::IntoIter<H256, VerifyTxReq>, [closure@cita-auth/src/handler.rs:683:22: 683:42]> as ParallelIterator>::collect::<Vec<(H256, std::option::Option<Vec<u8>>)>>}, val: Value(<ZST>) }
    }

    bb88: {
        _131 = move _126;                // scope 19 at cita-auth/src/handler.rs:696:45: 696:52
        _130 = <Vec<(H256, std::option::Option<Vec<u8>>)> as IntoIterator>::into_iter(move _131) -> [return: bb89, unwind: bb272]; // scope 19 at cita-auth/src/handler.rs:696:45: 696:52
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:696:45: 696:52
                                         // + literal: Const { ty: fn(Vec<(H256, std::option::Option<Vec<u8>>)>) -> <Vec<(H256, std::option::Option<Vec<u8>>)> as IntoIterator>::IntoIter {<Vec<(H256, std::option::Option<Vec<u8>>)> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb89: {
        _132 = move _130;                // scope 19 at cita-auth/src/handler.rs:696:45: 696:52
        goto -> bb90;                    // scope 20 at cita-auth/src/handler.rs:696:13: 709:14
    }

    bb90: {
        _134 = &mut _132;                // scope 20 at cita-auth/src/handler.rs:696:45: 696:52
        _133 = <std::vec::IntoIter<(H256, std::option::Option<Vec<u8>>)> as Iterator>::next(_134) -> [return: bb91, unwind: bb223]; // scope 20 at cita-auth/src/handler.rs:696:45: 696:52
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:696:45: 696:52
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::vec::IntoIter<(H256, std::option::Option<Vec<u8>>)>) -> std::option::Option<<std::vec::IntoIter<(H256, std::option::Option<Vec<u8>>)> as Iterator>::Item> {<std::vec::IntoIter<(H256, std::option::Option<Vec<u8>>)> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb91: {
        _135 = discriminant(_133);       // scope 20 at cita-auth/src/handler.rs:696:45: 696:52
        switchInt(move _135) -> [0: bb94, 1: bb92, otherwise: bb93]; // scope 20 at cita-auth/src/handler.rs:696:45: 696:52
    }

    bb92: {
        _136 = (((_133 as Some).0: (cita_types::H256, std::option::Option<std::vec::Vec<u8>>)).0: cita_types::H256); // scope 20 at cita-auth/src/handler.rs:696:18: 696:25
        _366 = const true;               // scope 20 at cita-auth/src/handler.rs:696:27: 696:40
        _137 = move (((_133 as Some).0: (cita_types::H256, std::option::Option<std::vec::Vec<u8>>)).1: std::option::Option<std::vec::Vec<u8>>); // scope 20 at cita-auth/src/handler.rs:696:27: 696:40
        _140 = &_137;                    // scope 21 at cita-auth/src/handler.rs:697:49: 697:70
        _139 = <std::option::Option<Vec<u8>> as Clone>::clone(move _140) -> [return: bb95, unwind: bb261]; // scope 21 at cita-auth/src/handler.rs:697:49: 697:70
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:697:63: 697:68
                                         // + literal: Const { ty: for<'a> fn(&'a std::option::Option<Vec<u8>>) -> std::option::Option<Vec<u8>> {<std::option::Option<Vec<u8>> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb93: {
        unreachable;                     // scope 20 at cita-auth/src/handler.rs:696:45: 696:52
    }

    bb94: {
        drop(_132) -> [return: bb109, unwind: bb272]; // scope 19 at cita-auth/src/handler.rs:709:13: 709:14
    }

    bb95: {
        _138 = MsgHandler::save_ret_to_cache(_1, _136, move _139) -> [return: bb96, unwind: bb261]; // scope 21 at cita-auth/src/handler.rs:697:17: 697:71
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:697:22: 697:39
                                         // + literal: Const { ty: for<'a> fn(&'a mut MsgHandler, H256, std::option::Option<Vec<u8>>) {MsgHandler::save_ret_to_cache}, val: Value(<ZST>) }
    }

    bb96: {
        _141 = discriminant(_137);       // scope 22 at cita-auth/src/handler.rs:698:24: 698:36
        switchInt(move _141) -> [1: bb97, otherwise: bb101]; // scope 22 at cita-auth/src/handler.rs:698:24: 698:36
    }

    bb97: {
        _366 = const false;              // scope 22 at cita-auth/src/handler.rs:698:29: 698:35
        _365 = const true;               // scope 22 at cita-auth/src/handler.rs:698:29: 698:35
        _142 = move ((_137 as Some).0: std::vec::Vec<u8>); // scope 22 at cita-auth/src/handler.rs:698:29: 698:35
        _144 = &mut _76;                 // scope 23 at cita-auth/src/handler.rs:699:46: 699:72
        _145 = &_136;                    // scope 23 at cita-auth/src/handler.rs:699:63: 699:71
        _143 = HashMap::<H256, (VerifyTxReq, &libproto::Request, bool)>::get_mut::<H256>(move _144, _145) -> [return: bb98, unwind: bb258]; // scope 23 at cita-auth/src/handler.rs:699:46: 699:72
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:699:55: 699:62
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut HashMap<H256, (VerifyTxReq, &libproto::Request, bool)>, &'b H256) -> std::option::Option<&'a mut (VerifyTxReq, &libproto::Request, bool)> {HashMap::<H256, (VerifyTxReq, &libproto::Request, bool)>::get_mut::<H256>}, val: Value(<ZST>) }
    }

    bb98: {
        _146 = discriminant(_143);       // scope 23 at cita-auth/src/handler.rs:699:28: 699:43
        switchInt(move _146) -> [1: bb99, otherwise: bb100]; // scope 23 at cita-auth/src/handler.rs:699:28: 699:43
    }

    bb99: {
        _147 = &mut ((_143 as Some).0: &mut (libproto::VerifyTxReq, &libproto::Request, bool)); // scope 23 at cita-auth/src/handler.rs:699:33: 699:42
        _358 = deref_copy (*_147);       // scope 23 at cita-auth/src/handler.rs:700:25: 700:47
        _149 = &mut ((*_358).0: libproto::VerifyTxReq); // scope 23 at cita-auth/src/handler.rs:700:25: 700:47
        _365 = const false;              // scope 23 at cita-auth/src/handler.rs:700:40: 700:46
        _150 = move _142;                // scope 23 at cita-auth/src/handler.rs:700:40: 700:46
        _148 = VerifyTxReq::set_signer(move _149, move _150) -> [return: bb282, unwind: bb258]; // scope 23 at cita-auth/src/handler.rs:700:25: 700:47
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:700:29: 700:39
                                         // + literal: Const { ty: for<'a> fn(&'a mut VerifyTxReq, Vec<u8>) {VerifyTxReq::set_signer}, val: Value(<ZST>) }
    }

    bb100: {
        switchInt(_365) -> [0: bb102, otherwise: bb230]; // scope 21 at cita-auth/src/handler.rs:702:17: 702:18
    }

    bb101: {
        _152 = &mut _76;                 // scope 24 at cita-auth/src/handler.rs:702:49: 702:75
        _153 = &_136;                    // scope 24 at cita-auth/src/handler.rs:702:66: 702:74
        _151 = HashMap::<H256, (VerifyTxReq, &libproto::Request, bool)>::get_mut::<H256>(move _152, _153) -> [return: bb103, unwind: bb261]; // scope 24 at cita-auth/src/handler.rs:702:49: 702:75
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:702:58: 702:65
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut HashMap<H256, (VerifyTxReq, &libproto::Request, bool)>, &'b H256) -> std::option::Option<&'a mut (VerifyTxReq, &libproto::Request, bool)> {HashMap::<H256, (VerifyTxReq, &libproto::Request, bool)>::get_mut::<H256>}, val: Value(<ZST>) }
    }

    bb102: {
        _365 = const false;              // scope 21 at cita-auth/src/handler.rs:702:17: 702:18
        goto -> bb234;                   // scope 21 at cita-auth/src/handler.rs:698:17: 708:18
    }

    bb103: {
        _154 = discriminant(_151);       // scope 24 at cita-auth/src/handler.rs:702:31: 702:46
        switchInt(move _154) -> [1: bb104, otherwise: bb234]; // scope 24 at cita-auth/src/handler.rs:702:31: 702:46
    }

    bb104: {
        _155 = &mut ((_151 as Some).0: &mut (libproto::VerifyTxReq, &libproto::Request, bool)); // scope 24 at cita-auth/src/handler.rs:702:36: 702:45
        switchInt(_2) -> [0: bb108, otherwise: bb105]; // scope 24 at cita-auth/src/handler.rs:703:24: 703:32
    }

    bb105: {
        _359 = deref_copy (*_155);       // scope 24 at cita-auth/src/handler.rs:704:42: 704:62
        _360 = deref_copy ((*_359).1: &libproto::Request); // scope 24 at cita-auth/src/handler.rs:704:42: 704:62
        _158 = libproto::Request::get_request_id(_360) -> [return: bb106, unwind: bb261]; // scope 24 at cita-auth/src/handler.rs:704:42: 704:62
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:704:46: 704:60
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Request) -> &'a [u8] {libproto::Request::get_request_id}, val: Value(<ZST>) }
    }

    bb106: {
        _157 = _158;                     // scope 24 at cita-auth/src/handler.rs:704:42: 704:71
        _156 = std::slice::<impl [u8]>::to_vec(move _157) -> [return: bb107, unwind: bb261]; // scope 24 at cita-auth/src/handler.rs:704:42: 704:71
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:704:63: 704:69
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> Vec<u8> {std::slice::<impl [u8]>::to_vec}, val: Value(<ZST>) }
    }

    bb107: {
        _160 = &(*_1);                   // scope 25 at cita-auth/src/handler.rs:705:25: 705:82
        _161 = move _156;                // scope 25 at cita-auth/src/handler.rs:705:55: 705:65
        _348 = const _;                  // scope 25 at cita-auth/src/handler.rs:705:67: 705:81
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:705:67: 705:81
                                         // + literal: Const { ty: &transaction_verify::Error, val: Unevaluated(MsgHandler::deal_request, [], Some(promoted[14])) }
        _159 = MsgHandler::publish_tx_failed_result(move _160, move _161, _348) -> [return: bb283, unwind: bb261]; // scope 25 at cita-auth/src/handler.rs:705:25: 705:82
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:705:30: 705:54
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a MsgHandler, Vec<u8>, &'b transaction_verify::Error) {MsgHandler::publish_tx_failed_result}, val: Value(<ZST>) }
    }

    bb108: {
        _361 = deref_copy (*_155);       // scope 24 at cita-auth/src/handler.rs:707:21: 707:32
        ((*_361).2: bool) = const false; // scope 24 at cita-auth/src/handler.rs:707:21: 707:32
        goto -> bb234;                   // scope 21 at cita-auth/src/handler.rs:702:24: 708:18
    }

    bb109: {
        _375 = const false;              // scope 19 at cita-auth/src/handler.rs:712:13: 712:21
        _168 = move _76;                 // scope 19 at cita-auth/src/handler.rs:712:13: 712:21
        _167 = <HashMap<H256, (VerifyTxReq, &libproto::Request, bool)> as IntoIterator>::into_iter(move _168) -> [return: bb110, unwind: bb272]; // scope 19 at cita-auth/src/handler.rs:712:13: 713:29
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:713:18: 713:27
                                         // + literal: Const { ty: fn(HashMap<H256, (VerifyTxReq, &libproto::Request, bool)>) -> <HashMap<H256, (VerifyTxReq, &libproto::Request, bool)> as IntoIterator>::IntoIter {<HashMap<H256, (VerifyTxReq, &libproto::Request, bool)> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb110: {
        _166 = <std::collections::hash_map::IntoIter<H256, (VerifyTxReq, &libproto::Request, bool)> as Iterator>::filter::<[closure@cita-auth/src/handler.rs:714:25: 714:60]>(move _167, const ZeroSized: [closure@cita-auth/src/handler.rs:714:25: 714:60]) -> [return: bb111, unwind: bb272]; // scope 19 at cita-auth/src/handler.rs:712:13: 714:67
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:714:18: 714:24
                                         // + literal: Const { ty: fn(std::collections::hash_map::IntoIter<H256, (VerifyTxReq, &libproto::Request, bool)>, [closure@cita-auth/src/handler.rs:714:25: 714:60]) -> std::iter::Filter<std::collections::hash_map::IntoIter<H256, (VerifyTxReq, &libproto::Request, bool)>, [closure@cita-auth/src/handler.rs:714:25: 714:60]> {<std::collections::hash_map::IntoIter<H256, (VerifyTxReq, &libproto::Request, bool)> as Iterator>::filter::<[closure@cita-auth/src/handler.rs:714:25: 714:60]>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: [closure@cita-auth/src/handler.rs:714:25: 714:60], val: Value(<ZST>) }
    }

    bb111: {
        _170 = &_1;                      // scope 19 at cita-auth/src/handler.rs:715:25: 725:18
        _171 = &_2;                      // scope 19 at cita-auth/src/handler.rs:715:25: 725:18
        _169 = [closure@cita-auth/src/handler.rs:715:25: 715:67] { self: move _170, is_local: move _171 }; // scope 19 at cita-auth/src/handler.rs:715:25: 725:18
                                         // closure
                                         // + def_id: DefId(0:291 ~ cita_auth[81d6]::handler::{impl#0}::deal_request::{closure#2})
                                         // + substs: [
                                         //     i16,
                                         //     for<'a> extern "rust-call" fn((&'a (cita_types::H256, (libproto::VerifyTxReq, &libproto::Request, bool)),)) -> bool,
                                         //     (&&mut handler::MsgHandler, &bool),
                                         // ]
        _165 = <std::iter::Filter<std::collections::hash_map::IntoIter<H256, (VerifyTxReq, &libproto::Request, bool)>, [closure@cita-auth/src/handler.rs:714:25: 714:60]> as Iterator>::filter::<[closure@cita-auth/src/handler.rs:715:25: 715:67]>(move _166, move _169) -> [return: bb112, unwind: bb272]; // scope 19 at cita-auth/src/handler.rs:712:13: 725:19
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:715:18: 715:24
                                         // + literal: Const { ty: fn(std::iter::Filter<std::collections::hash_map::IntoIter<H256, (VerifyTxReq, &libproto::Request, bool)>, [closure@cita-auth/src/handler.rs:714:25: 714:60]>, [closure@cita-auth/src/handler.rs:715:25: 715:67]) -> std::iter::Filter<std::iter::Filter<std::collections::hash_map::IntoIter<H256, (VerifyTxReq, &libproto::Request, bool)>, [closure@cita-auth/src/handler.rs:714:25: 714:60]>, [closure@cita-auth/src/handler.rs:715:25: 715:67]> {<std::iter::Filter<std::collections::hash_map::IntoIter<H256, (VerifyTxReq, &libproto::Request, bool)>, [closure@cita-auth/src/handler.rs:714:25: 714:60]> as Iterator>::filter::<[closure@cita-auth/src/handler.rs:715:25: 715:67]>}, val: Value(<ZST>) }
    }

    bb112: {
        _173 = &_1;                      // scope 19 at cita-auth/src/handler.rs:726:25: 736:18
        _174 = &_2;                      // scope 19 at cita-auth/src/handler.rs:726:25: 736:18
        _172 = [closure@cita-auth/src/handler.rs:726:25: 726:68] { self: move _173, is_local: move _174 }; // scope 19 at cita-auth/src/handler.rs:726:25: 736:18
                                         // closure
                                         // + def_id: DefId(0:292 ~ cita_auth[81d6]::handler::{impl#0}::deal_request::{closure#3})
                                         // + substs: [
                                         //     i16,
                                         //     for<'a> extern "rust-call" fn((&'a (cita_types::H256, (libproto::VerifyTxReq, &libproto::Request, bool)),)) -> bool,
                                         //     (&&mut handler::MsgHandler, &bool),
                                         // ]
        _164 = <std::iter::Filter<std::iter::Filter<std::collections::hash_map::IntoIter<H256, (VerifyTxReq, &libproto::Request, bool)>, [closure@cita-auth/src/handler.rs:714:25: 714:60]>, [closure@cita-auth/src/handler.rs:715:25: 715:67]> as Iterator>::filter::<[closure@cita-auth/src/handler.rs:726:25: 726:68]>(move _165, move _172) -> [return: bb113, unwind: bb272]; // scope 19 at cita-auth/src/handler.rs:712:13: 736:19
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:726:18: 726:24
                                         // + literal: Const { ty: fn(std::iter::Filter<std::iter::Filter<std::collections::hash_map::IntoIter<H256, (VerifyTxReq, &libproto::Request, bool)>, [closure@cita-auth/src/handler.rs:714:25: 714:60]>, [closure@cita-auth/src/handler.rs:715:25: 715:67]>, [closure@cita-auth/src/handler.rs:726:25: 726:68]) -> std::iter::Filter<std::iter::Filter<std::iter::Filter<std::collections::hash_map::IntoIter<H256, (VerifyTxReq, &libproto::Request, bool)>, [closure@cita-auth/src/handler.rs:714:25: 714:60]>, [closure@cita-auth/src/handler.rs:715:25: 715:67]>, [closure@cita-auth/src/handler.rs:726:25: 726:68]> {<std::iter::Filter<std::iter::Filter<std::collections::hash_map::IntoIter<H256, (VerifyTxReq, &libproto::Request, bool)>, [closure@cita-auth/src/handler.rs:714:25: 714:60]>, [closure@cita-auth/src/handler.rs:715:25: 715:67]> as Iterator>::filter::<[closure@cita-auth/src/handler.rs:726:25: 726:68]>}, val: Value(<ZST>) }
    }

    bb113: {
        _176 = &_1;                      // scope 19 at cita-auth/src/handler.rs:737:25: 747:18
        _177 = &_2;                      // scope 19 at cita-auth/src/handler.rs:737:25: 747:18
        _175 = [closure@cita-auth/src/handler.rs:737:25: 737:67] { self: move _176, is_local: move _177 }; // scope 19 at cita-auth/src/handler.rs:737:25: 747:18
                                         // closure
                                         // + def_id: DefId(0:293 ~ cita_auth[81d6]::handler::{impl#0}::deal_request::{closure#4})
                                         // + substs: [
                                         //     i16,
                                         //     for<'a> extern "rust-call" fn((&'a (cita_types::H256, (libproto::VerifyTxReq, &libproto::Request, bool)),)) -> bool,
                                         //     (&&mut handler::MsgHandler, &bool),
                                         // ]
        _163 = <std::iter::Filter<std::iter::Filter<std::iter::Filter<std::collections::hash_map::IntoIter<H256, (VerifyTxReq, &libproto::Request, bool)>, [closure@cita-auth/src/handler.rs:714:25: 714:60]>, [closure@cita-auth/src/handler.rs:715:25: 715:67]>, [closure@cita-auth/src/handler.rs:726:25: 726:68]> as Iterator>::filter::<[closure@cita-auth/src/handler.rs:737:25: 737:67]>(move _164, move _175) -> [return: bb114, unwind: bb272]; // scope 19 at cita-auth/src/handler.rs:712:13: 747:19
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:737:18: 737:24
                                         // + literal: Const { ty: fn(std::iter::Filter<std::iter::Filter<std::iter::Filter<std::collections::hash_map::IntoIter<H256, (VerifyTxReq, &libproto::Request, bool)>, [closure@cita-auth/src/handler.rs:714:25: 714:60]>, [closure@cita-auth/src/handler.rs:715:25: 715:67]>, [closure@cita-auth/src/handler.rs:726:25: 726:68]>, [closure@cita-auth/src/handler.rs:737:25: 737:67]) -> std::iter::Filter<std::iter::Filter<std::iter::Filter<std::iter::Filter<std::collections::hash_map::IntoIter<H256, (VerifyTxReq, &libproto::Request, bool)>, [closure@cita-auth/src/handler.rs:714:25: 714:60]>, [closure@cita-auth/src/handler.rs:715:25: 715:67]>, [closure@cita-auth/src/handler.rs:726:25: 726:68]>, [closure@cita-auth/src/handler.rs:737:25: 737:67]> {<std::iter::Filter<std::iter::Filter<std::iter::Filter<std::collections::hash_map::IntoIter<H256, (VerifyTxReq, &libproto::Request, bool)>, [closure@cita-auth/src/handler.rs:714:25: 714:60]>, [closure@cita-auth/src/handler.rs:715:25: 715:67]>, [closure@cita-auth/src/handler.rs:726:25: 726:68]> as Iterator>::filter::<[closure@cita-auth/src/handler.rs:737:25: 737:67]>}, val: Value(<ZST>) }
    }

    bb114: {
        _179 = &_1;                      // scope 19 at cita-auth/src/handler.rs:748:27: 764:18
        _180 = &_2;                      // scope 19 at cita-auth/src/handler.rs:748:27: 764:18
        _178 = [closure@cita-auth/src/handler.rs:748:27: 748:60] { self: move _179, is_local: move _180 }; // scope 19 at cita-auth/src/handler.rs:748:27: 764:18
                                         // closure
                                         // + def_id: DefId(0:294 ~ cita_auth[81d6]::handler::{impl#0}::deal_request::{closure#5})
                                         // + substs: [
                                         //     i16,
                                         //     extern "rust-call" fn(((cita_types::H256, (libproto::VerifyTxReq, &libproto::Request, bool)),)),
                                         //     (&&mut handler::MsgHandler, &bool),
                                         // ]
        _162 = <std::iter::Filter<std::iter::Filter<std::iter::Filter<std::iter::Filter<std::collections::hash_map::IntoIter<H256, (VerifyTxReq, &libproto::Request, bool)>, [closure@cita-auth/src/handler.rs:714:25: 714:60]>, [closure@cita-auth/src/handler.rs:715:25: 715:67]>, [closure@cita-auth/src/handler.rs:726:25: 726:68]>, [closure@cita-auth/src/handler.rs:737:25: 737:67]> as Iterator>::for_each::<[closure@cita-auth/src/handler.rs:748:27: 748:60]>(move _163, move _178) -> [return: bb115, unwind: bb272]; // scope 19 at cita-auth/src/handler.rs:712:13: 764:19
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:748:18: 748:26
                                         // + literal: Const { ty: fn(std::iter::Filter<std::iter::Filter<std::iter::Filter<std::iter::Filter<std::collections::hash_map::IntoIter<H256, (VerifyTxReq, &libproto::Request, bool)>, [closure@cita-auth/src/handler.rs:714:25: 714:60]>, [closure@cita-auth/src/handler.rs:715:25: 715:67]>, [closure@cita-auth/src/handler.rs:726:25: 726:68]>, [closure@cita-auth/src/handler.rs:737:25: 737:67]>, [closure@cita-auth/src/handler.rs:748:27: 748:60]) {<std::iter::Filter<std::iter::Filter<std::iter::Filter<std::iter::Filter<std::collections::hash_map::IntoIter<H256, (VerifyTxReq, &libproto::Request, bool)>, [closure@cita-auth/src/handler.rs:714:25: 714:60]>, [closure@cita-auth/src/handler.rs:715:25: 715:67]>, [closure@cita-auth/src/handler.rs:726:25: 726:68]>, [closure@cita-auth/src/handler.rs:737:25: 737:67]> as Iterator>::for_each::<[closure@cita-auth/src/handler.rs:748:27: 748:60]>}, val: Value(<ZST>) }
    }

    bb115: {
        _374 = const false;              // scope 10 at cita-auth/src/handler.rs:765:9: 765:10
        _375 = const false;              // scope 1 at cita-auth/src/handler.rs:765:9: 765:10
        goto -> bb215;                   // scope 0 at cita-auth/src/handler.rs:631:9: 849:10
    }

    bb116: {
        _182 = &_3;                      // scope 0 at cita-auth/src/handler.rs:765:19: 765:40
        _181 = libproto::Request::has_un_tx(move _182) -> [return: bb117, unwind: bb276]; // scope 0 at cita-auth/src/handler.rs:765:19: 765:40
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:765:29: 765:38
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Request) -> bool {libproto::Request::has_un_tx}, val: Value(<ZST>) }
    }

    bb117: {
        switchInt(move _181) -> [0: bb215, otherwise: bb118]; // scope 0 at cita-auth/src/handler.rs:765:19: 765:40
    }

    bb118: {
        _183 = log::Level::Trace;        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _186 = &_183;                    // scope 26 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _347 = const _;                  // scope 26 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::deal_request, [], Some(promoted[13])) }
        _185 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _186, _347) -> [return: bb122, unwind: bb276]; // scope 26 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb119: {
        _184 = const false;              // scope 26 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb121;                   // scope 26 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb120: {
        _188 = &_183;                    // scope 26 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _190 = log::max_level() -> [return: bb123, unwind: bb276]; // scope 26 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb121: {
        switchInt(move _184) -> [0: bb127, otherwise: bb125]; // scope 26 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb122: {
        switchInt(move _185) -> [0: bb119, otherwise: bb120]; // scope 26 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb123: {
        _189 = &_190;                    // scope 26 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _187 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _188, move _189) -> [return: bb124, unwind: bb276]; // scope 26 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb124: {
        _184 = move _187;                // scope 26 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb121;                   // scope 26 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb125: {
        _346 = const _;                  // scope 26 at cita-auth/src/handler.rs:766:20: 766:60
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:766:20: 766:60
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(MsgHandler::deal_request, [], Some(promoted[12])) }
        _193 = _346 as &[&str] (Pointer(Unsize)); // scope 26 at cita-auth/src/handler.rs:766:20: 766:60
        _192 = Arguments::<'_>::new_const(move _193) -> [return: bb126, unwind: bb276]; // scope 26 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(8)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb126: {
        _345 = const _;                  // scope 26 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::deal_request, [], Some(promoted[11])) }
        _191 = log::__private_api_log(move _192, _183, _345) -> [return: bb284, unwind: bb276]; // scope 26 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb127: {
        _197 = &_3;                      // scope 0 at cita-auth/src/handler.rs:767:30: 767:56
        _196 = libproto::Request::get_request_id(move _197) -> [return: bb128, unwind: bb276]; // scope 0 at cita-auth/src/handler.rs:767:30: 767:56
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:767:40: 767:54
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Request) -> &'a [u8] {libproto::Request::get_request_id}, val: Value(<ZST>) }
    }

    bb128: {
        _195 = _196;                     // scope 0 at cita-auth/src/handler.rs:767:30: 767:65
        _194 = std::slice::<impl [u8]>::to_vec(move _195) -> [return: bb129, unwind: bb276]; // scope 0 at cita-auth/src/handler.rs:767:30: 767:65
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:767:57: 767:63
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> Vec<u8> {std::slice::<impl [u8]>::to_vec}, val: Value(<ZST>) }
    }

    bb129: {
        _368 = const true;               // scope 0 at cita-auth/src/handler.rs:767:64: 767:65
        _200 = &(*_1);                   // scope 27 at cita-auth/src/handler.rs:768:17: 768:32
        _199 = MsgHandler::is_ready(move _200) -> [return: bb130, unwind: bb256]; // scope 27 at cita-auth/src/handler.rs:768:17: 768:32
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:768:22: 768:30
                                         // + literal: Const { ty: for<'a> fn(&'a MsgHandler) -> bool {MsgHandler::is_ready}, val: Value(<ZST>) }
    }

    bb130: {
        _198 = Not(move _199);           // scope 27 at cita-auth/src/handler.rs:768:16: 768:32
        switchInt(move _198) -> [0: bb142, otherwise: bb131]; // scope 27 at cita-auth/src/handler.rs:768:16: 768:32
    }

    bb131: {
        _201 = log::Level::Trace;        // scope 27 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _204 = &_201;                    // scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _344 = const _;                  // scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::deal_request, [], Some(promoted[10])) }
        _203 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _204, _344) -> [return: bb135, unwind: bb256]; // scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb132: {
        _202 = const false;              // scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb134;                   // scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb133: {
        _206 = &_201;                    // scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _208 = log::max_level() -> [return: bb136, unwind: bb256]; // scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb134: {
        switchInt(move _202) -> [0: bb140, otherwise: bb138]; // scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb135: {
        switchInt(move _203) -> [0: bb132, otherwise: bb133]; // scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb136: {
        _207 = &_208;                    // scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _205 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _206, move _207) -> [return: bb137, unwind: bb256]; // scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb137: {
        _202 = move _205;                // scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb134;                   // scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb138: {
        _343 = const _;                  // scope 28 at cita-auth/src/handler.rs:769:24: 769:59
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:769:24: 769:59
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(MsgHandler::deal_request, [], Some(promoted[9])) }
        _211 = _343 as &[&str] (Pointer(Unsize)); // scope 28 at cita-auth/src/handler.rs:769:24: 769:59
        _210 = Arguments::<'_>::new_const(move _211) -> [return: bb139, unwind: bb256]; // scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(9)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb139: {
        _342 = const _;                  // scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::deal_request, [], Some(promoted[8])) }
        _209 = log::__private_api_log(move _210, _201, _342) -> [return: bb285, unwind: bb256]; // scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb140: {
        switchInt(_2) -> [0: bb246, otherwise: bb141]; // scope 27 at cita-auth/src/handler.rs:770:20: 770:28
    }

    bb141: {
        _213 = &(*_1);                   // scope 27 at cita-auth/src/handler.rs:771:21: 771:80
        _368 = const false;              // scope 27 at cita-auth/src/handler.rs:771:51: 771:61
        _214 = move _194;                // scope 27 at cita-auth/src/handler.rs:771:51: 771:61
        _341 = const _;                  // scope 27 at cita-auth/src/handler.rs:771:63: 771:79
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:771:63: 771:79
                                         // + literal: Const { ty: &transaction_verify::Error, val: Unevaluated(MsgHandler::deal_request, [], Some(promoted[7])) }
        _212 = MsgHandler::publish_tx_failed_result(move _213, move _214, _341) -> [return: bb286, unwind: bb256]; // scope 27 at cita-auth/src/handler.rs:771:21: 771:80
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:771:26: 771:50
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a MsgHandler, Vec<u8>, &'b transaction_verify::Error) {MsgHandler::publish_tx_failed_result}, val: Value(<ZST>) }
    }

    bb142: {
        _216 = &(*_1);                   // scope 27 at cita-auth/src/handler.rs:775:16: 775:39
        _215 = MsgHandler::is_flow_control(move _216, const 1_usize) -> [return: bb143, unwind: bb256]; // scope 27 at cita-auth/src/handler.rs:775:16: 775:39
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:775:21: 775:36
                                         // + literal: Const { ty: for<'a> fn(&'a MsgHandler, usize) -> bool {MsgHandler::is_flow_control}, val: Value(<ZST>) }
    }

    bb143: {
        switchInt(move _215) -> [0: bb155, otherwise: bb144]; // scope 27 at cita-auth/src/handler.rs:775:16: 775:39
    }

    bb144: {
        _217 = log::Level::Trace;        // scope 27 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _220 = &_217;                    // scope 29 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _340 = const _;                  // scope 29 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::deal_request, [], Some(promoted[6])) }
        _219 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _220, _340) -> [return: bb148, unwind: bb256]; // scope 29 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb145: {
        _218 = const false;              // scope 29 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb147;                   // scope 29 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb146: {
        _222 = &_217;                    // scope 29 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _224 = log::max_level() -> [return: bb149, unwind: bb256]; // scope 29 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb147: {
        switchInt(move _218) -> [0: bb153, otherwise: bb151]; // scope 29 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb148: {
        switchInt(move _219) -> [0: bb145, otherwise: bb146]; // scope 29 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb149: {
        _223 = &_224;                    // scope 29 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _221 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _222, move _223) -> [return: bb150, unwind: bb256]; // scope 29 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb150: {
        _218 = move _221;                // scope 29 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb147;                   // scope 29 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb151: {
        _339 = const _;                  // scope 29 at cita-auth/src/handler.rs:776:24: 776:42
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:776:24: 776:42
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(MsgHandler::deal_request, [], Some(promoted[5])) }
        _227 = _339 as &[&str] (Pointer(Unsize)); // scope 29 at cita-auth/src/handler.rs:776:24: 776:42
        _226 = Arguments::<'_>::new_const(move _227) -> [return: bb152, unwind: bb256]; // scope 29 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(10)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb152: {
        _338 = const _;                  // scope 29 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::deal_request, [], Some(promoted[4])) }
        _225 = log::__private_api_log(move _226, _217, _338) -> [return: bb287, unwind: bb256]; // scope 29 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb153: {
        switchInt(_2) -> [0: bb246, otherwise: bb154]; // scope 27 at cita-auth/src/handler.rs:777:20: 777:28
    }

    bb154: {
        _229 = &(*_1);                   // scope 27 at cita-auth/src/handler.rs:778:21: 778:76
        _368 = const false;              // scope 27 at cita-auth/src/handler.rs:778:51: 778:61
        _230 = move _194;                // scope 27 at cita-auth/src/handler.rs:778:51: 778:61
        _337 = const _;                  // scope 27 at cita-auth/src/handler.rs:778:63: 778:75
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:778:63: 778:75
                                         // + literal: Const { ty: &transaction_verify::Error, val: Unevaluated(MsgHandler::deal_request, [], Some(promoted[3])) }
        _228 = MsgHandler::publish_tx_failed_result(move _229, move _230, _337) -> [return: bb288, unwind: bb256]; // scope 27 at cita-auth/src/handler.rs:778:21: 778:76
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:778:26: 778:50
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a MsgHandler, Vec<u8>, &'b transaction_verify::Error) {MsgHandler::publish_tx_failed_result}, val: Value(<ZST>) }
    }

    bb155: {
        _234 = &_3;                      // scope 27 at cita-auth/src/handler.rs:782:27: 782:48
        _233 = libproto::Request::get_un_tx(move _234) -> [return: bb156, unwind: bb256]; // scope 27 at cita-auth/src/handler.rs:782:27: 782:48
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:782:37: 782:46
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Request) -> &'a UnverifiedTransaction {libproto::Request::get_un_tx}, val: Value(<ZST>) }
    }

    bb156: {
        _232 = _233;                     // scope 27 at cita-auth/src/handler.rs:782:27: 782:68
        _231 = libproto::<impl UnverifiedTransaction>::tx_verify_req_msg(move _232) -> [return: bb157, unwind: bb256]; // scope 27 at cita-auth/src/handler.rs:782:27: 782:68
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:782:49: 782:66
                                         // + literal: Const { ty: for<'a> fn(&'a UnverifiedTransaction) -> VerifyTxReq {libproto::<impl UnverifiedTransaction>::tx_verify_req_msg}, val: Value(<ZST>) }
    }

    bb157: {
        _238 = &_231;                    // scope 30 at cita-auth/src/handler.rs:784:44: 784:61
        _237 = VerifyTxReq::get_tx_hash(move _238) -> [return: bb158, unwind: bb222]; // scope 30 at cita-auth/src/handler.rs:784:44: 784:61
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:784:48: 784:59
                                         // + literal: Const { ty: for<'a> fn(&'a VerifyTxReq) -> &'a [u8] {VerifyTxReq::get_tx_hash}, val: Value(<ZST>) }
    }

    bb158: {
        _236 = _237;                     // scope 30 at cita-auth/src/handler.rs:784:44: 784:61
        _235 = H256::from_slice(move _236) -> [return: bb159, unwind: bb222]; // scope 30 at cita-auth/src/handler.rs:784:27: 784:62
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:784:27: 784:43
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> H256 {H256::from_slice}, val: Value(<ZST>) }
    }

    bb159: {
        _240 = &(*_1);                   // scope 32 at cita-auth/src/handler.rs:785:42: 785:75
        _241 = &_235;                    // scope 32 at cita-auth/src/handler.rs:785:66: 785:74
        _239 = MsgHandler::get_ret_from_cache(move _240, _241) -> [return: bb160, unwind: bb222]; // scope 32 at cita-auth/src/handler.rs:785:42: 785:75
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:785:47: 785:65
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a MsgHandler, &'b H256) -> std::option::Option<std::option::Option<Vec<u8>>> {MsgHandler::get_ret_from_cache}, val: Value(<ZST>) }
    }

    bb160: {
        _367 = const true;               // scope 32 at cita-auth/src/handler.rs:785:74: 785:75
        _242 = discriminant(_239);       // scope 32 at cita-auth/src/handler.rs:785:20: 785:39
        switchInt(move _242) -> [1: bb161, otherwise: bb168]; // scope 32 at cita-auth/src/handler.rs:785:20: 785:39
    }

    bb161: {
        _367 = const false;              // scope 32 at cita-auth/src/handler.rs:785:25: 785:38
        _371 = const true;               // scope 32 at cita-auth/src/handler.rs:785:25: 785:38
        _243 = move ((_239 as Some).0: std::option::Option<std::vec::Vec<u8>>); // scope 32 at cita-auth/src/handler.rs:785:25: 785:38
        _245 = &_243;                    // scope 32 at cita-auth/src/handler.rs:786:20: 786:43
        _244 = std::option::Option::<Vec<u8>>::is_none(move _245) -> [return: bb162, unwind: bb251]; // scope 32 at cita-auth/src/handler.rs:786:20: 786:43
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:786:34: 786:41
                                         // + literal: Const { ty: for<'a> fn(&'a std::option::Option<Vec<u8>>) -> bool {std::option::Option::<Vec<u8>>::is_none}, val: Value(<ZST>) }
    }

    bb162: {
        switchInt(move _244) -> [0: bb165, otherwise: bb163]; // scope 32 at cita-auth/src/handler.rs:786:20: 786:43
    }

    bb163: {
        _247 = &(*_1);                   // scope 32 at cita-auth/src/handler.rs:787:21: 787:78
        _368 = const false;              // scope 32 at cita-auth/src/handler.rs:787:51: 787:61
        _248 = move _194;                // scope 32 at cita-auth/src/handler.rs:787:51: 787:61
        _335 = const _;                  // scope 32 at cita-auth/src/handler.rs:787:63: 787:77
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:787:63: 787:77
                                         // + literal: Const { ty: &transaction_verify::Error, val: Unevaluated(MsgHandler::deal_request, [], Some(promoted[1])) }
        _246 = MsgHandler::publish_tx_failed_result(move _247, move _248, _335) -> [return: bb164, unwind: bb251]; // scope 32 at cita-auth/src/handler.rs:787:21: 787:78
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:787:26: 787:50
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a MsgHandler, Vec<u8>, &'b transaction_verify::Error) {MsgHandler::publish_tx_failed_result}, val: Value(<ZST>) }
    }

    bb164: {
        drop(_243) -> [return: bb216, unwind: bb254]; // scope 31 at cita-auth/src/handler.rs:791:13: 791:14
    }

    bb165: {
        _250 = &mut _231;                // scope 32 at cita-auth/src/handler.rs:790:17: 790:55
        _371 = const false;              // scope 32 at cita-auth/src/handler.rs:790:32: 790:45
        _252 = move _243;                // scope 32 at cita-auth/src/handler.rs:790:32: 790:45
        _251 = std::option::Option::<Vec<u8>>::unwrap(move _252) -> [return: bb166, unwind: bb251]; // scope 32 at cita-auth/src/handler.rs:790:32: 790:54
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:790:46: 790:52
                                         // + literal: Const { ty: fn(std::option::Option<Vec<u8>>) -> Vec<u8> {std::option::Option::<Vec<u8>>::unwrap}, val: Value(<ZST>) }
    }

    bb166: {
        _249 = VerifyTxReq::set_signer(move _250, move _251) -> [return: bb167, unwind: bb251]; // scope 32 at cita-auth/src/handler.rs:790:17: 790:55
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:790:21: 790:31
                                         // + literal: Const { ty: for<'a> fn(&'a mut VerifyTxReq, Vec<u8>) {VerifyTxReq::set_signer}, val: Value(<ZST>) }
    }

    bb167: {
        _371 = const false;              // scope 31 at cita-auth/src/handler.rs:791:13: 791:14
        goto -> bb238;                   // scope 31 at cita-auth/src/handler.rs:785:13: 809:14
    }

    bb168: {
        _255 = &_231;                    // scope 31 at cita-auth/src/handler.rs:793:21: 793:37
        _254 = VerifyTxReq::get_crypto(move _255) -> [return: bb169, unwind: bb254]; // scope 31 at cita-auth/src/handler.rs:793:21: 793:37
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:793:25: 793:35
                                         // + literal: Const { ty: for<'a> fn(&'a VerifyTxReq) -> Crypto {VerifyTxReq::get_crypto}, val: Value(<ZST>) }
    }

    bb169: {
        _259 = &_231;                    // scope 31 at cita-auth/src/handler.rs:794:33: 794:47
        _258 = VerifyTxReq::get_hash(move _259) -> [return: bb170, unwind: bb254]; // scope 31 at cita-auth/src/handler.rs:794:33: 794:47
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:794:37: 794:45
                                         // + literal: Const { ty: for<'a> fn(&'a VerifyTxReq) -> &'a [u8] {VerifyTxReq::get_hash}, val: Value(<ZST>) }
    }

    bb170: {
        _257 = <H256 as From<&[u8]>>::from(move _258) -> [return: bb171, unwind: bb254]; // scope 31 at cita-auth/src/handler.rs:794:22: 794:48
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:794:22: 794:32
                                         // + user_ty: UserType(11)
                                         // + literal: Const { ty: fn(&[u8]) -> H256 {<H256 as From<&[u8]>>::from}, val: Value(<ZST>) }
    }

    bb171: {
        _256 = &_257;                    // scope 31 at cita-auth/src/handler.rs:794:21: 794:48
        _262 = &_231;                    // scope 31 at cita-auth/src/handler.rs:795:22: 795:41
        _261 = VerifyTxReq::get_signature(move _262) -> [return: bb172, unwind: bb254]; // scope 31 at cita-auth/src/handler.rs:795:22: 795:41
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:795:26: 795:39
                                         // + literal: Const { ty: for<'a> fn(&'a VerifyTxReq) -> &'a [u8] {VerifyTxReq::get_signature}, val: Value(<ZST>) }
    }

    bb172: {
        _260 = &_261;                    // scope 31 at cita-auth/src/handler.rs:795:21: 795:41
        _362 = deref_copy (*_260);       // scope 31 at cita-auth/src/handler.rs:795:21: 795:41
        _253 = verify_tx_sig(move _254, _256, _362) -> [return: bb173, unwind: bb254]; // scope 31 at cita-auth/src/handler.rs:792:30: 796:18
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:792:30: 792:43
                                         // + literal: Const { ty: for<'a, 'b> fn(Crypto, &'a H256, &'b [u8]) -> Result<Vec<u8>, ()> {verify_tx_sig}, val: Value(<ZST>) }
    }

    bb173: {
        _370 = const true;               // scope 31 at cita-auth/src/handler.rs:796:17: 796:18
        _264 = _235;                     // scope 33 at cita-auth/src/handler.rs:797:40: 797:47
        _267 = &_253;                    // scope 33 at cita-auth/src/handler.rs:797:49: 797:63
        _266 = <Result<Vec<u8>, ()> as Clone>::clone(move _267) -> [return: bb174, unwind: bb249]; // scope 33 at cita-auth/src/handler.rs:797:49: 797:63
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:797:56: 797:61
                                         // + literal: Const { ty: for<'a> fn(&'a Result<Vec<u8>, ()>) -> Result<Vec<u8>, ()> {<Result<Vec<u8>, ()> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb174: {
        _265 = Result::<Vec<u8>, ()>::ok(move _266) -> [return: bb175, unwind: bb249]; // scope 33 at cita-auth/src/handler.rs:797:49: 797:68
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:797:64: 797:66
                                         // + literal: Const { ty: fn(Result<Vec<u8>, ()>) -> std::option::Option<Vec<u8>> {Result::<Vec<u8>, ()>::ok}, val: Value(<ZST>) }
    }

    bb175: {
        _263 = MsgHandler::save_ret_to_cache(_1, move _264, move _265) -> [return: bb176, unwind: bb249]; // scope 33 at cita-auth/src/handler.rs:797:17: 797:69
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:797:22: 797:39
                                         // + literal: Const { ty: for<'a> fn(&'a mut MsgHandler, H256, std::option::Option<Vec<u8>>) {MsgHandler::save_ret_to_cache}, val: Value(<ZST>) }
    }

    bb176: {
        _268 = discriminant(_253);       // scope 33 at cita-auth/src/handler.rs:798:23: 798:29
        switchInt(move _268) -> [0: bb179, 1: bb177, otherwise: bb178]; // scope 33 at cita-auth/src/handler.rs:798:17: 798:29
    }

    bb177: {
        switchInt(_2) -> [0: bb182, otherwise: bb181]; // scope 33 at cita-auth/src/handler.rs:803:28: 803:36
    }

    bb178: {
        unreachable;                     // scope 33 at cita-auth/src/handler.rs:798:23: 798:29
    }

    bb179: {
        _370 = const false;              // scope 33 at cita-auth/src/handler.rs:799:24: 799:30
        _269 = move ((_253 as Ok).0: std::vec::Vec<u8>); // scope 33 at cita-auth/src/handler.rs:799:24: 799:30
        _271 = &mut _231;                // scope 34 at cita-auth/src/handler.rs:800:25: 800:47
        _270 = VerifyTxReq::set_signer(move _271, move _269) -> [return: bb180, unwind: bb249]; // scope 34 at cita-auth/src/handler.rs:800:25: 800:47
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:800:29: 800:39
                                         // + literal: Const { ty: for<'a> fn(&'a mut VerifyTxReq, Vec<u8>) {VerifyTxReq::set_signer}, val: Value(<ZST>) }
    }

    bb180: {
        _370 = const false;              // scope 31 at cita-auth/src/handler.rs:809:13: 809:14
        goto -> bb238;                   // scope 31 at cita-auth/src/handler.rs:785:13: 809:14
    }

    bb181: {
        _273 = &(*_1);                   // scope 33 at cita-auth/src/handler.rs:804:29: 804:86
        _368 = const false;              // scope 33 at cita-auth/src/handler.rs:804:59: 804:69
        _274 = move _194;                // scope 33 at cita-auth/src/handler.rs:804:59: 804:69
        _336 = const _;                  // scope 33 at cita-auth/src/handler.rs:804:71: 804:85
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:804:71: 804:85
                                         // + literal: Const { ty: &transaction_verify::Error, val: Unevaluated(MsgHandler::deal_request, [], Some(promoted[2])) }
        _272 = MsgHandler::publish_tx_failed_result(move _273, move _274, _336) -> [return: bb289, unwind: bb249]; // scope 33 at cita-auth/src/handler.rs:804:29: 804:86
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:804:34: 804:58
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a MsgHandler, Vec<u8>, &'b transaction_verify::Error) {MsgHandler::publish_tx_failed_result}, val: Value(<ZST>) }
    }

    bb182: {
        _370 = const false;              // scope 31 at cita-auth/src/handler.rs:809:13: 809:14
        goto -> bb244;                   // scope 31 at no-location
    }

    bb183: {
        _278 = discriminant(_275);       // scope 35 at cita-auth/src/handler.rs:812:20: 812:26
        switchInt(move _278) -> [1: bb184, otherwise: bb186]; // scope 35 at cita-auth/src/handler.rs:812:20: 812:26
    }

    bb184: {
        _279 = move ((_275 as Err).0: transaction_verify::Error); // scope 35 at cita-auth/src/handler.rs:812:24: 812:25
        switchInt(_2) -> [0: bb217, otherwise: bb185]; // scope 35 at cita-auth/src/handler.rs:813:20: 813:28
    }

    bb185: {
        _281 = &(*_1);                   // scope 35 at cita-auth/src/handler.rs:814:21: 814:66
        _368 = const false;              // scope 35 at cita-auth/src/handler.rs:814:51: 814:61
        _282 = move _194;                // scope 35 at cita-auth/src/handler.rs:814:51: 814:61
        _283 = &_279;                    // scope 35 at cita-auth/src/handler.rs:814:63: 814:65
        _280 = MsgHandler::publish_tx_failed_result(move _281, move _282, _283) -> [return: bb290, unwind: bb222]; // scope 35 at cita-auth/src/handler.rs:814:21: 814:66
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:814:26: 814:50
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a MsgHandler, Vec<u8>, &'b transaction_verify::Error) {MsgHandler::publish_tx_failed_result}, val: Value(<ZST>) }
    }

    bb186: {
        _285 = &(*_1);                   // scope 36 at cita-auth/src/handler.rs:819:29: 819:60
        _286 = &_3;                      // scope 36 at cita-auth/src/handler.rs:819:49: 819:59
        _284 = MsgHandler::verify_request(move _285, _286) -> [return: bb187, unwind: bb222]; // scope 36 at cita-auth/src/handler.rs:819:29: 819:60
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:819:34: 819:48
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a MsgHandler, &'b libproto::Request) -> Result<(), transaction_verify::Error> {MsgHandler::verify_request}, val: Value(<ZST>) }
    }

    bb187: {
        _287 = discriminant(_284);       // scope 36 at cita-auth/src/handler.rs:819:20: 819:26
        switchInt(move _287) -> [1: bb188, otherwise: bb190]; // scope 36 at cita-auth/src/handler.rs:819:20: 819:26
    }

    bb188: {
        _288 = move ((_284 as Err).0: transaction_verify::Error); // scope 36 at cita-auth/src/handler.rs:819:24: 819:25
        switchInt(_2) -> [0: bb217, otherwise: bb189]; // scope 36 at cita-auth/src/handler.rs:820:20: 820:28
    }

    bb189: {
        _290 = &(*_1);                   // scope 36 at cita-auth/src/handler.rs:821:21: 821:66
        _368 = const false;              // scope 36 at cita-auth/src/handler.rs:821:51: 821:61
        _291 = move _194;                // scope 36 at cita-auth/src/handler.rs:821:51: 821:61
        _292 = &_288;                    // scope 36 at cita-auth/src/handler.rs:821:63: 821:65
        _289 = MsgHandler::publish_tx_failed_result(move _290, move _291, _292) -> [return: bb291, unwind: bb222]; // scope 36 at cita-auth/src/handler.rs:821:21: 821:66
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:821:26: 821:50
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a MsgHandler, Vec<u8>, &'b transaction_verify::Error) {MsgHandler::publish_tx_failed_result}, val: Value(<ZST>) }
    }

    bb190: {
        _294 = &(*_1);                   // scope 37 at cita-auth/src/handler.rs:827:29: 827:53
        _295 = &_231;                    // scope 37 at cita-auth/src/handler.rs:827:48: 827:52
        _293 = MsgHandler::verify_tx_req(move _294, _295) -> [return: bb191, unwind: bb222]; // scope 37 at cita-auth/src/handler.rs:827:29: 827:53
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:827:34: 827:47
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a MsgHandler, &'b VerifyTxReq) -> Result<(), transaction_verify::Error> {MsgHandler::verify_tx_req}, val: Value(<ZST>) }
    }

    bb191: {
        _296 = discriminant(_293);       // scope 37 at cita-auth/src/handler.rs:827:20: 827:26
        switchInt(move _296) -> [1: bb192, otherwise: bb194]; // scope 37 at cita-auth/src/handler.rs:827:20: 827:26
    }

    bb192: {
        _297 = move ((_293 as Err).0: transaction_verify::Error); // scope 37 at cita-auth/src/handler.rs:827:24: 827:25
        switchInt(_2) -> [0: bb217, otherwise: bb193]; // scope 37 at cita-auth/src/handler.rs:828:20: 828:28
    }

    bb193: {
        _299 = &(*_1);                   // scope 37 at cita-auth/src/handler.rs:829:21: 829:66
        _368 = const false;              // scope 37 at cita-auth/src/handler.rs:829:51: 829:61
        _300 = move _194;                // scope 37 at cita-auth/src/handler.rs:829:51: 829:61
        _301 = &_297;                    // scope 37 at cita-auth/src/handler.rs:829:63: 829:65
        _298 = MsgHandler::publish_tx_failed_result(move _299, move _300, _301) -> [return: bb292, unwind: bb222]; // scope 37 at cita-auth/src/handler.rs:829:21: 829:66
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:829:26: 829:50
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a MsgHandler, Vec<u8>, &'b transaction_verify::Error) {MsgHandler::publish_tx_failed_result}, val: Value(<ZST>) }
    }

    bb194: {
        _302 = SignedTransaction::new() -> [return: bb195, unwind: bb222]; // scope 31 at cita-auth/src/handler.rs:835:33: 835:57
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:835:33: 835:55
                                         // + literal: Const { ty: fn() -> SignedTransaction {SignedTransaction::new}, val: Value(<ZST>) }
    }

    bb195: {
        _304 = &mut _302;                // scope 38 at cita-auth/src/handler.rs:836:13: 836:78
        _308 = &_3;                      // scope 38 at cita-auth/src/handler.rs:836:48: 836:69
        _307 = libproto::Request::get_un_tx(move _308) -> [return: bb196, unwind: bb221]; // scope 38 at cita-auth/src/handler.rs:836:48: 836:69
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:836:58: 836:67
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Request) -> &'a UnverifiedTransaction {libproto::Request::get_un_tx}, val: Value(<ZST>) }
    }

    bb196: {
        _306 = _307;                     // scope 38 at cita-auth/src/handler.rs:836:48: 836:77
        _305 = <UnverifiedTransaction as Clone>::clone(move _306) -> [return: bb197, unwind: bb221]; // scope 38 at cita-auth/src/handler.rs:836:48: 836:77
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:836:70: 836:75
                                         // + literal: Const { ty: for<'a> fn(&'a UnverifiedTransaction) -> UnverifiedTransaction {<UnverifiedTransaction as Clone>::clone}, val: Value(<ZST>) }
    }

    bb197: {
        _303 = SignedTransaction::set_transaction_with_sig(move _304, move _305) -> [return: bb198, unwind: bb221]; // scope 38 at cita-auth/src/handler.rs:836:13: 836:78
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:836:23: 836:47
                                         // + literal: Const { ty: for<'a> fn(&'a mut SignedTransaction, UnverifiedTransaction) {SignedTransaction::set_transaction_with_sig}, val: Value(<ZST>) }
    }

    bb198: {
        _310 = &mut _302;                // scope 38 at cita-auth/src/handler.rs:837:13: 837:60
        _314 = &_231;                    // scope 38 at cita-auth/src/handler.rs:837:34: 837:50
        _313 = VerifyTxReq::get_signer(move _314) -> [return: bb199, unwind: bb221]; // scope 38 at cita-auth/src/handler.rs:837:34: 837:50
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:837:38: 837:48
                                         // + literal: Const { ty: for<'a> fn(&'a VerifyTxReq) -> &'a [u8] {VerifyTxReq::get_signer}, val: Value(<ZST>) }
    }

    bb199: {
        _312 = _313;                     // scope 38 at cita-auth/src/handler.rs:837:34: 837:59
        _311 = std::slice::<impl [u8]>::to_vec(move _312) -> [return: bb200, unwind: bb221]; // scope 38 at cita-auth/src/handler.rs:837:34: 837:59
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:837:51: 837:57
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> Vec<u8> {std::slice::<impl [u8]>::to_vec}, val: Value(<ZST>) }
    }

    bb200: {
        _309 = SignedTransaction::set_signer(move _310, move _311) -> [return: bb201, unwind: bb221]; // scope 38 at cita-auth/src/handler.rs:837:13: 837:60
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:837:23: 837:33
                                         // + literal: Const { ty: for<'a> fn(&'a mut SignedTransaction, Vec<u8>) {SignedTransaction::set_signer}, val: Value(<ZST>) }
    }

    bb201: {
        _316 = &mut _302;                // scope 38 at cita-auth/src/handler.rs:838:13: 838:52
        _320 = &_235;                    // scope 38 at cita-auth/src/handler.rs:838:35: 838:51
        _319 = <H256 as Deref>::deref(move _320) -> [return: bb202, unwind: bb221]; // scope 38 at cita-auth/src/handler.rs:838:35: 838:51
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:838:35: 838:51
                                         // + literal: Const { ty: for<'a> fn(&'a H256) -> &'a <H256 as Deref>::Target {<H256 as Deref>::deref}, val: Value(<ZST>) }
    }

    bb202: {
        _318 = _319;                     // scope 38 at cita-auth/src/handler.rs:838:35: 838:51
        _317 = std::slice::<impl [u8]>::to_vec(move _318) -> [return: bb203, unwind: bb221]; // scope 38 at cita-auth/src/handler.rs:838:35: 838:51
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:838:43: 838:49
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> Vec<u8> {std::slice::<impl [u8]>::to_vec}, val: Value(<ZST>) }
    }

    bb203: {
        _315 = SignedTransaction::set_tx_hash(move _316, move _317) -> [return: bb204, unwind: bb221]; // scope 38 at cita-auth/src/handler.rs:838:13: 838:52
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:838:23: 838:34
                                         // + literal: Const { ty: for<'a> fn(&'a mut SignedTransaction, Vec<u8>) {SignedTransaction::set_tx_hash}, val: Value(<ZST>) }
    }

    bb204: {
        _322 = &((*_1).6: dispatcher::Dispatcher); // scope 38 at cita-auth/src/handler.rs:839:16: 839:58
        _323 = &_302;                    // scope 38 at cita-auth/src/handler.rs:839:47: 839:57
        _321 = Dispatcher::add_tx_to_pool(move _322, _323) -> [return: bb205, unwind: bb221]; // scope 38 at cita-auth/src/handler.rs:839:16: 839:58
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:839:32: 839:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Dispatcher, &'b SignedTransaction) -> bool {Dispatcher::add_tx_to_pool}, val: Value(<ZST>) }
    }

    bb205: {
        switchInt(move _321) -> [0: bb209, otherwise: bb206]; // scope 38 at cita-auth/src/handler.rs:839:16: 839:58
    }

    bb206: {
        switchInt(_2) -> [0: bb208, otherwise: bb207]; // scope 38 at cita-auth/src/handler.rs:840:20: 840:28
    }

    bb207: {
        _325 = &(*_1);                   // scope 38 at cita-auth/src/handler.rs:841:21: 841:72
        _368 = const false;              // scope 38 at cita-auth/src/handler.rs:841:52: 841:62
        _326 = move _194;                // scope 38 at cita-auth/src/handler.rs:841:52: 841:62
        _327 = _235;                     // scope 38 at cita-auth/src/handler.rs:841:64: 841:71
        _324 = MsgHandler::publish_tx_success_result(move _325, move _326, move _327) -> [return: bb293, unwind: bb221]; // scope 38 at cita-auth/src/handler.rs:841:21: 841:72
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:841:26: 841:51
                                         // + literal: Const { ty: for<'a> fn(&'a MsgHandler, Vec<u8>, H256) {MsgHandler::publish_tx_success_result}, val: Value(<ZST>) }
    }

    bb208: {
        _329 = &(*_1);                   // scope 38 at cita-auth/src/handler.rs:844:17: 844:48
        _369 = const false;              // scope 38 at cita-auth/src/handler.rs:844:38: 844:47
        _330 = move _3;                  // scope 38 at cita-auth/src/handler.rs:844:38: 844:47
        _328 = MsgHandler::forward_request(move _329, move _330) -> [return: bb294, unwind: bb221]; // scope 38 at cita-auth/src/handler.rs:844:17: 844:48
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:844:22: 844:37
                                         // + literal: Const { ty: for<'a> fn(&'a MsgHandler, libproto::Request) {MsgHandler::forward_request}, val: Value(<ZST>) }
    }

    bb209: {
        switchInt(_2) -> [0: bb211, otherwise: bb210]; // scope 38 at cita-auth/src/handler.rs:845:23: 845:31
    }

    bb210: {
        _332 = &(*_1);                   // scope 38 at cita-auth/src/handler.rs:847:17: 847:71
        _368 = const false;              // scope 38 at cita-auth/src/handler.rs:847:47: 847:57
        _333 = move _194;                // scope 38 at cita-auth/src/handler.rs:847:47: 847:57
        _334 = const _;                  // scope 38 at cita-auth/src/handler.rs:847:59: 847:70
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:847:59: 847:70
                                         // + literal: Const { ty: &transaction_verify::Error, val: Unevaluated(MsgHandler::deal_request, [], Some(promoted[0])) }
        _331 = MsgHandler::publish_tx_failed_result(move _332, move _333, _334) -> [return: bb295, unwind: bb221]; // scope 38 at cita-auth/src/handler.rs:847:17: 847:71
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:847:22: 847:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a MsgHandler, Vec<u8>, &'b transaction_verify::Error) {MsgHandler::publish_tx_failed_result}, val: Value(<ZST>) }
    }

    bb211: {
        drop(_302) -> [return: bb212, unwind: bb222]; // scope 31 at cita-auth/src/handler.rs:849:9: 849:10
    }

    bb212: {
        drop(_231) -> [return: bb213, unwind: bb256]; // scope 27 at cita-auth/src/handler.rs:849:9: 849:10
    }

    bb213: {
        switchInt(_368) -> [0: bb214, otherwise: bb239]; // scope 0 at cita-auth/src/handler.rs:849:9: 849:10
    }

    bb214: {
        _368 = const false;              // scope 0 at cita-auth/src/handler.rs:849:9: 849:10
        goto -> bb215;                   // scope 0 at cita-auth/src/handler.rs:765:16: 849:10
    }

    bb215: {
        switchInt(_369) -> [0: bb220, otherwise: bb240]; // scope 0 at cita-auth/src/handler.rs:850:5: 850:6
    }

    bb216: {
        _371 = const false;              // scope 31 at cita-auth/src/handler.rs:791:13: 791:14
        goto -> bb244;                   // scope 31 at no-location
    }

    bb217: {
        drop(_231) -> [return: bb246, unwind: bb256]; // scope 27 at cita-auth/src/handler.rs:849:9: 849:10
    }

    bb218: {
        _368 = const false;              // scope 0 at cita-auth/src/handler.rs:849:9: 849:10
        goto -> bb219;                   // scope 0 at no-location
    }

    bb219: {
        drop(_3) -> bb220;               // scope 0 at cita-auth/src/handler.rs:850:5: 850:6
    }

    bb220: {
        return;                          // scope 0 at cita-auth/src/handler.rs:850:6: 850:6
    }

    bb221 (cleanup): {
        drop(_302) -> bb222;             // scope 31 at cita-auth/src/handler.rs:849:9: 849:10
    }

    bb222 (cleanup): {
        drop(_231) -> bb256;             // scope 27 at cita-auth/src/handler.rs:849:9: 849:10
    }

    bb223 (cleanup): {
        drop(_132) -> bb272;             // scope 19 at cita-auth/src/handler.rs:709:13: 709:14
    }

    bb224 (cleanup): {
        drop(_85) -> bb272;              // scope 13 at cita-auth/src/handler.rs:679:13: 679:14
    }

    bb225 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/handler.rs:630:5: 850:6
    }

    bb226: {
        drop(_85) -> [return: bb83, unwind: bb270]; // scope 13 at cita-auth/src/handler.rs:679:13: 679:14
    }

    bb227: {
        _364 = const false;              // scope 13 at cita-auth/src/handler.rs:679:13: 679:14
        goto -> bb54;                    // scope 12 at cita-auth/src/handler.rs:661:13: 679:14
    }

    bb228: {
        switchInt(_364) -> [0: bb227, otherwise: bb229]; // scope 13 at cita-auth/src/handler.rs:679:13: 679:14
    }

    bb229: {
        drop(((_92 as Some).0: std::option::Option<std::vec::Vec<u8>>)) -> [return: bb227, unwind: bb272]; // scope 13 at cita-auth/src/handler.rs:679:13: 679:14
    }

    bb230: {
        drop(_142) -> [return: bb102, unwind: bb261]; // scope 21 at cita-auth/src/handler.rs:702:17: 702:18
    }

    bb231: {
        _366 = const false;              // scope 20 at cita-auth/src/handler.rs:709:13: 709:14
        goto -> bb90;                    // scope 20 at cita-auth/src/handler.rs:696:13: 709:14
    }

    bb232: {
        switchInt(_366) -> [0: bb231, otherwise: bb233]; // scope 20 at cita-auth/src/handler.rs:709:13: 709:14
    }

    bb233: {
        drop(((_137 as Some).0: std::vec::Vec<u8>)) -> [return: bb231, unwind: bb223]; // scope 20 at cita-auth/src/handler.rs:709:13: 709:14
    }

    bb234: {
        _377 = discriminant(_137);       // scope 20 at cita-auth/src/handler.rs:709:13: 709:14
        switchInt(move _377) -> [1: bb232, otherwise: bb231]; // scope 20 at cita-auth/src/handler.rs:709:13: 709:14
    }

    bb235: {
        _367 = const false;              // scope 31 at cita-auth/src/handler.rs:809:13: 809:14
        _276 = &(*_1);                   // scope 35 at cita-auth/src/handler.rs:812:29: 812:57
        _277 = &_231;                    // scope 35 at cita-auth/src/handler.rs:812:52: 812:56
        _275 = MsgHandler::verify_black_list(move _276, _277) -> [return: bb183, unwind: bb222]; // scope 35 at cita-auth/src/handler.rs:812:29: 812:57
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:812:34: 812:51
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a MsgHandler, &'b VerifyTxReq) -> Result<(), transaction_verify::Error> {MsgHandler::verify_black_list}, val: Value(<ZST>) }
    }

    bb236: {
        switchInt(_367) -> [0: bb235, otherwise: bb237]; // scope 31 at cita-auth/src/handler.rs:809:13: 809:14
    }

    bb237: {
        drop(((_239 as Some).0: std::option::Option<std::vec::Vec<u8>>)) -> [return: bb235, unwind: bb222]; // scope 31 at cita-auth/src/handler.rs:809:13: 809:14
    }

    bb238: {
        _378 = discriminant(_239);       // scope 31 at cita-auth/src/handler.rs:809:13: 809:14
        switchInt(move _378) -> [1: bb236, otherwise: bb235]; // scope 31 at cita-auth/src/handler.rs:809:13: 809:14
    }

    bb239: {
        drop(_194) -> [return: bb214, unwind: bb276]; // scope 0 at cita-auth/src/handler.rs:849:9: 849:10
    }

    bb240: {
        drop(_3) -> bb220;               // scope 0 at cita-auth/src/handler.rs:850:5: 850:6
    }

    bb241: {
        _367 = const false;              // scope 31 at cita-auth/src/handler.rs:809:13: 809:14
        goto -> bb217;                   // scope 31 at no-location
    }

    bb242: {
        switchInt(_367) -> [0: bb241, otherwise: bb243]; // scope 31 at cita-auth/src/handler.rs:809:13: 809:14
    }

    bb243: {
        drop(((_239 as Some).0: std::option::Option<std::vec::Vec<u8>>)) -> [return: bb241, unwind: bb222]; // scope 31 at cita-auth/src/handler.rs:809:13: 809:14
    }

    bb244: {
        _379 = discriminant(_239);       // scope 31 at cita-auth/src/handler.rs:809:13: 809:14
        switchInt(move _379) -> [1: bb242, otherwise: bb241]; // scope 31 at cita-auth/src/handler.rs:809:13: 809:14
    }

    bb245: {
        drop(_194) -> [return: bb218, unwind: bb276]; // scope 0 at cita-auth/src/handler.rs:849:9: 849:10
    }

    bb246: {
        switchInt(_368) -> [0: bb218, otherwise: bb245]; // scope 0 at cita-auth/src/handler.rs:849:9: 849:10
    }

    bb247 (cleanup): {
        switchInt(_370) -> [0: bb254, otherwise: bb248]; // scope 31 at cita-auth/src/handler.rs:809:13: 809:14
    }

    bb248 (cleanup): {
        drop(((_253 as Ok).0: std::vec::Vec<u8>)) -> bb254; // scope 31 at cita-auth/src/handler.rs:809:13: 809:14
    }

    bb249 (cleanup): {
        _380 = discriminant(_253);       // scope 31 at cita-auth/src/handler.rs:809:13: 809:14
        switchInt(move _380) -> [0: bb247, otherwise: bb254]; // scope 31 at cita-auth/src/handler.rs:809:13: 809:14
    }

    bb250 (cleanup): {
        drop(_243) -> bb254;             // scope 31 at cita-auth/src/handler.rs:791:13: 791:14
    }

    bb251 (cleanup): {
        switchInt(_371) -> [0: bb254, otherwise: bb250]; // scope 31 at cita-auth/src/handler.rs:791:13: 791:14
    }

    bb252 (cleanup): {
        switchInt(_367) -> [0: bb222, otherwise: bb253]; // scope 31 at cita-auth/src/handler.rs:809:13: 809:14
    }

    bb253 (cleanup): {
        drop(((_239 as Some).0: std::option::Option<std::vec::Vec<u8>>)) -> bb222; // scope 31 at cita-auth/src/handler.rs:809:13: 809:14
    }

    bb254 (cleanup): {
        _381 = discriminant(_239);       // scope 31 at cita-auth/src/handler.rs:809:13: 809:14
        switchInt(move _381) -> [1: bb252, otherwise: bb222]; // scope 31 at cita-auth/src/handler.rs:809:13: 809:14
    }

    bb255 (cleanup): {
        drop(_194) -> bb276;             // scope 0 at cita-auth/src/handler.rs:849:9: 849:10
    }

    bb256 (cleanup): {
        switchInt(_368) -> [0: bb276, otherwise: bb255]; // scope 0 at cita-auth/src/handler.rs:849:9: 849:10
    }

    bb257 (cleanup): {
        drop(_142) -> bb261;             // scope 21 at cita-auth/src/handler.rs:702:17: 702:18
    }

    bb258 (cleanup): {
        switchInt(_365) -> [0: bb261, otherwise: bb257]; // scope 21 at cita-auth/src/handler.rs:702:17: 702:18
    }

    bb259 (cleanup): {
        switchInt(_366) -> [0: bb223, otherwise: bb260]; // scope 20 at cita-auth/src/handler.rs:709:13: 709:14
    }

    bb260 (cleanup): {
        drop(((_137 as Some).0: std::vec::Vec<u8>)) -> bb223; // scope 20 at cita-auth/src/handler.rs:709:13: 709:14
    }

    bb261 (cleanup): {
        _382 = discriminant(_137);       // scope 20 at cita-auth/src/handler.rs:709:13: 709:14
        switchInt(move _382) -> [1: bb259, otherwise: bb223]; // scope 20 at cita-auth/src/handler.rs:709:13: 709:14
    }

    bb262 (cleanup): {
        drop(_105) -> bb265;             // scope 16 at cita-auth/src/handler.rs:675:17: 675:18
    }

    bb263 (cleanup): {
        switchInt(_372) -> [0: bb265, otherwise: bb262]; // scope 16 at cita-auth/src/handler.rs:675:17: 675:18
    }

    bb264 (cleanup): {
        drop(_96) -> bb267;              // scope 15 at cita-auth/src/handler.rs:675:17: 675:18
    }

    bb265 (cleanup): {
        switchInt(_373) -> [0: bb267, otherwise: bb264]; // scope 15 at cita-auth/src/handler.rs:675:17: 675:18
    }

    bb266 (cleanup): {
        drop(_85) -> bb270;              // scope 13 at cita-auth/src/handler.rs:679:13: 679:14
    }

    bb267 (cleanup): {
        switchInt(_363) -> [0: bb270, otherwise: bb266]; // scope 13 at cita-auth/src/handler.rs:679:13: 679:14
    }

    bb268 (cleanup): {
        switchInt(_364) -> [0: bb272, otherwise: bb269]; // scope 13 at cita-auth/src/handler.rs:679:13: 679:14
    }

    bb269 (cleanup): {
        drop(((_92 as Some).0: std::option::Option<std::vec::Vec<u8>>)) -> bb272; // scope 13 at cita-auth/src/handler.rs:679:13: 679:14
    }

    bb270 (cleanup): {
        _383 = discriminant(_92);        // scope 13 at cita-auth/src/handler.rs:679:13: 679:14
        switchInt(move _383) -> [1: bb268, otherwise: bb272]; // scope 13 at cita-auth/src/handler.rs:679:13: 679:14
    }

    bb271 (cleanup): {
        drop(_77) -> bb274;              // scope 10 at cita-auth/src/handler.rs:765:9: 765:10
    }

    bb272 (cleanup): {
        switchInt(_374) -> [0: bb274, otherwise: bb271]; // scope 10 at cita-auth/src/handler.rs:765:9: 765:10
    }

    bb273 (cleanup): {
        drop(_76) -> bb276;              // scope 1 at cita-auth/src/handler.rs:765:9: 765:10
    }

    bb274 (cleanup): {
        switchInt(_375) -> [0: bb276, otherwise: bb273]; // scope 1 at cita-auth/src/handler.rs:765:9: 765:10
    }

    bb275 (cleanup): {
        drop(_3) -> bb225;               // scope 0 at cita-auth/src/handler.rs:850:5: 850:6
    }

    bb276 (cleanup): {
        switchInt(_369) -> [0: bb225, otherwise: bb275]; // scope 0 at cita-auth/src/handler.rs:850:5: 850:6
    }

    bb277: {
        goto -> bb16;                    // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb278: {
        goto -> bb22;                    // scope 5 at cita-auth/src/handler.rs:642:25: 642:84
    }

    bb279: {
        goto -> bb40;                    // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb280: {
        goto -> bb44;                    // scope 9 at cita-auth/src/handler.rs:653:25: 653:80
    }

    bb281: {
        goto -> bb70;                    // scope 17 at cita-auth/src/handler.rs:668:29: 668:86
    }

    bb282: {
        goto -> bb100;                   // scope 23 at cita-auth/src/handler.rs:700:25: 700:47
    }

    bb283: {
        goto -> bb108;                   // scope 25 at cita-auth/src/handler.rs:705:25: 705:82
    }

    bb284: {
        goto -> bb127;                   // scope 26 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb285: {
        goto -> bb140;                   // scope 28 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb286: {
        goto -> bb246;                   // scope 27 at cita-auth/src/handler.rs:771:21: 771:80
    }

    bb287: {
        goto -> bb153;                   // scope 29 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb288: {
        goto -> bb246;                   // scope 27 at cita-auth/src/handler.rs:778:21: 778:76
    }

    bb289: {
        goto -> bb182;                   // scope 33 at cita-auth/src/handler.rs:804:29: 804:86
    }

    bb290: {
        goto -> bb217;                   // scope 35 at cita-auth/src/handler.rs:814:21: 814:66
    }

    bb291: {
        goto -> bb217;                   // scope 36 at cita-auth/src/handler.rs:821:21: 821:66
    }

    bb292: {
        goto -> bb217;                   // scope 37 at cita-auth/src/handler.rs:829:21: 829:66
    }

    bb293: {
        goto -> bb208;                   // scope 38 at cita-auth/src/handler.rs:841:21: 841:72
    }

    bb294: {
        goto -> bb211;                   // scope 38 at cita-auth/src/handler.rs:844:17: 844:48
    }

    bb295: {
        goto -> bb211;                   // scope 38 at cita-auth/src/handler.rs:847:17: 847:71
    }
}

promoted[0] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_request: &transaction_verify::Error = {
    let mut _0: &transaction_verify::Error; // return place in scope 0 at cita-auth/src/handler.rs:847:59: 847:70
    let mut _1: transaction_verify::Error; // in scope 0 at cita-auth/src/handler.rs:847:60: 847:70

    bb0: {
        _1 = transaction_verify::Error::Dup; // scope 0 at cita-auth/src/handler.rs:847:60: 847:70
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:847:59: 847:70
        return;                          // scope 0 at cita-auth/src/handler.rs:847:59: 847:70
    }
}

promoted[1] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_request: &transaction_verify::Error = {
    let mut _0: &transaction_verify::Error; // return place in scope 0 at cita-auth/src/handler.rs:787:63: 787:77
    let mut _1: transaction_verify::Error; // in scope 0 at cita-auth/src/handler.rs:787:64: 787:77

    bb0: {
        _1 = transaction_verify::Error::BadSig; // scope 0 at cita-auth/src/handler.rs:787:64: 787:77
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:787:63: 787:77
        return;                          // scope 0 at cita-auth/src/handler.rs:787:63: 787:77
    }
}

promoted[2] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_request: &transaction_verify::Error = {
    let mut _0: &transaction_verify::Error; // return place in scope 0 at cita-auth/src/handler.rs:804:71: 804:85
    let mut _1: transaction_verify::Error; // in scope 0 at cita-auth/src/handler.rs:804:72: 804:85

    bb0: {
        _1 = transaction_verify::Error::BadSig; // scope 0 at cita-auth/src/handler.rs:804:72: 804:85
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:804:71: 804:85
        return;                          // scope 0 at cita-auth/src/handler.rs:804:71: 804:85
    }
}

promoted[3] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_request: &transaction_verify::Error = {
    let mut _0: &transaction_verify::Error; // return place in scope 0 at cita-auth/src/handler.rs:778:63: 778:75
    let mut _1: transaction_verify::Error; // in scope 0 at cita-auth/src/handler.rs:778:64: 778:75

    bb0: {
        _1 = transaction_verify::Error::Busy; // scope 0 at cita-auth/src/handler.rs:778:64: 778:75
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:778:63: 778:75
        return;                          // scope 0 at cita-auth/src/handler.rs:778:63: 778:75
    }
}

promoted[4] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_request: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:776:17: 776:43
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:776:17: 776:43

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:776:17: 776:43
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:776:17: 776:43
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:776:17: 776:43
        _1 = (move _2, move _4, move _6, const 776_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[5] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_request: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/handler.rs:776:24: 776:42
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/handler.rs:776:24: 776:42

    bb0: {
        _1 = [const "flow control ..."]; // scope 0 at cita-auth/src/handler.rs:776:24: 776:42
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:776:24: 776:42
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:776:24: 776:42
        return;                          // scope 0 at cita-auth/src/handler.rs:776:24: 776:42
    }
}

promoted[6] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_request: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[7] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_request: &transaction_verify::Error = {
    let mut _0: &transaction_verify::Error; // return place in scope 0 at cita-auth/src/handler.rs:771:63: 771:79
    let mut _1: transaction_verify::Error; // in scope 0 at cita-auth/src/handler.rs:771:64: 771:79

    bb0: {
        _1 = transaction_verify::Error::NotReady; // scope 0 at cita-auth/src/handler.rs:771:64: 771:79
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:771:63: 771:79
        return;                          // scope 0 at cita-auth/src/handler.rs:771:63: 771:79
    }
}

promoted[8] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_request: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:769:17: 769:60
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:769:17: 769:60

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:769:17: 769:60
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:769:17: 769:60
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:769:17: 769:60
        _1 = (move _2, move _4, move _6, const 769_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[9] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_request: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/handler.rs:769:24: 769:59
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/handler.rs:769:24: 769:59

    bb0: {
        _1 = [const "net || jsonrpc: auth is not ready"]; // scope 0 at cita-auth/src/handler.rs:769:24: 769:59
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:769:24: 769:59
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:769:24: 769:59
        return;                          // scope 0 at cita-auth/src/handler.rs:769:24: 769:59
    }
}

promoted[10] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_request: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[11] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_request: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:766:13: 766:61
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:766:13: 766:61

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:766:13: 766:61
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:766:13: 766:61
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:766:13: 766:61
        _1 = (move _2, move _4, move _6, const 766_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[12] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_request: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/handler.rs:766:20: 766:60
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/handler.rs:766:20: 766:60

    bb0: {
        _1 = [const "get single new tx request from Jsonrpc"]; // scope 0 at cita-auth/src/handler.rs:766:20: 766:60
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:766:20: 766:60
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:766:20: 766:60
        return;                          // scope 0 at cita-auth/src/handler.rs:766:20: 766:60
    }
}

promoted[13] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_request: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[14] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_request: &transaction_verify::Error = {
    let mut _0: &transaction_verify::Error; // return place in scope 0 at cita-auth/src/handler.rs:705:67: 705:81
    let mut _1: transaction_verify::Error; // in scope 0 at cita-auth/src/handler.rs:705:68: 705:81

    bb0: {
        _1 = transaction_verify::Error::BadSig; // scope 0 at cita-auth/src/handler.rs:705:68: 705:81
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:705:67: 705:81
        return;                          // scope 0 at cita-auth/src/handler.rs:705:67: 705:81
    }
}

promoted[15] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_request: &transaction_verify::Error = {
    let mut _0: &transaction_verify::Error; // return place in scope 0 at cita-auth/src/handler.rs:668:71: 668:85
    let mut _1: transaction_verify::Error; // in scope 0 at cita-auth/src/handler.rs:668:72: 668:85

    bb0: {
        _1 = transaction_verify::Error::BadSig; // scope 0 at cita-auth/src/handler.rs:668:72: 668:85
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:668:71: 668:85
        return;                          // scope 0 at cita-auth/src/handler.rs:668:71: 668:85
    }
}

promoted[16] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_request: &transaction_verify::Error = {
    let mut _0: &transaction_verify::Error; // return place in scope 0 at cita-auth/src/handler.rs:653:67: 653:79
    let mut _1: transaction_verify::Error; // in scope 0 at cita-auth/src/handler.rs:653:68: 653:79

    bb0: {
        _1 = transaction_verify::Error::Busy; // scope 0 at cita-auth/src/handler.rs:653:68: 653:79
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:653:67: 653:79
        return;                          // scope 0 at cita-auth/src/handler.rs:653:67: 653:79
    }
}

promoted[17] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_request: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:649:17: 649:43
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:649:17: 649:43

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:649:17: 649:43
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:649:17: 649:43
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:649:17: 649:43
        _1 = (move _2, move _4, move _6, const 649_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[18] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_request: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/handler.rs:649:24: 649:42
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/handler.rs:649:24: 649:42

    bb0: {
        _1 = [const "flow control ..."]; // scope 0 at cita-auth/src/handler.rs:649:24: 649:42
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:649:24: 649:42
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:649:24: 649:42
        return;                          // scope 0 at cita-auth/src/handler.rs:649:24: 649:42
    }
}

promoted[19] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_request: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[20] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_request: &transaction_verify::Error = {
    let mut _0: &transaction_verify::Error; // return place in scope 0 at cita-auth/src/handler.rs:642:67: 642:83
    let mut _1: transaction_verify::Error; // in scope 0 at cita-auth/src/handler.rs:642:68: 642:83

    bb0: {
        _1 = transaction_verify::Error::NotReady; // scope 0 at cita-auth/src/handler.rs:642:68: 642:83
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:642:67: 642:83
        return;                          // scope 0 at cita-auth/src/handler.rs:642:67: 642:83
    }
}

promoted[21] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_request: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:633:13: 637:14
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:633:13: 637:14

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:633:13: 637:14
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:633:13: 637:14
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:633:13: 637:14
        _1 = (move _2, move _4, move _6, const 633_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[22] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_request: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-auth/src/handler.rs:634:17: 634:67
    let mut _1: [&str; 2];               // in scope 0 at cita-auth/src/handler.rs:634:17: 634:67

    bb0: {
        _1 = [const "get batch new tx request has ", const " tx, is local? "]; // scope 0 at cita-auth/src/handler.rs:634:17: 634:67
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:634:17: 634:67
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:634:17: 634:67
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:634:17: 634:67
        return;                          // scope 0 at cita-auth/src/handler.rs:634:17: 634:67
    }
}

promoted[23] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_request: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_request::{closure#0}(_1: &[closure@cita-auth/src/handler.rs:683:22: 683:42], _2: (H256, VerifyTxReq)) -> (H256, std::option::Option<Vec<u8>>) {
    let mut _0: (cita_types::H256, std::option::Option<std::vec::Vec<u8>>); // return place in scope 0 at cita-auth/src/handler.rs:683:43: 683:43
    let _3: cita_types::H256;            // in scope 0 at cita-auth/src/handler.rs:683:24: 683:31
    let _4: &libproto::VerifyTxReq;      // in scope 0 at cita-auth/src/handler.rs:683:33: 683:40
    let mut _6: libproto::Crypto;        // in scope 0 at cita-auth/src/handler.rs:685:25: 685:41
    let _7: &cita_types::H256;           // in scope 0 at cita-auth/src/handler.rs:686:25: 686:52
    let _8: cita_types::H256;            // in scope 0 at cita-auth/src/handler.rs:686:26: 686:52
    let mut _9: &[u8];                   // in scope 0 at cita-auth/src/handler.rs:686:37: 686:51
    let _10: &&[u8];                     // in scope 0 at cita-auth/src/handler.rs:687:25: 687:45
    let _11: &[u8];                      // in scope 0 at cita-auth/src/handler.rs:687:26: 687:45
    let mut _12: isize;                  // in scope 0 at cita-auth/src/handler.rs:690:25: 690:35
    let mut _14: std::option::Option<std::vec::Vec<u8>>; // in scope 0 at cita-auth/src/handler.rs:690:49: 690:61
    let mut _15: std::option::Option<std::vec::Vec<u8>>; // in scope 0 at cita-auth/src/handler.rs:691:45: 691:49
    let mut _16: &[u8];                  // in scope 0 at cita-auth/src/handler.rs:687:25: 687:45
    scope 1 {
        debug tx_hash => _3;             // in scope 1 at cita-auth/src/handler.rs:683:24: 683:31
        debug req => _4;                 // in scope 1 at cita-auth/src/handler.rs:683:33: 683:40
        let _5: std::result::Result<std::vec::Vec<u8>, ()>; // in scope 1 at cita-auth/src/handler.rs:684:25: 684:31
        scope 2 {
            debug result => _5;          // in scope 2 at cita-auth/src/handler.rs:684:25: 684:31
            let _13: std::vec::Vec<u8>;  // in scope 2 at cita-auth/src/handler.rs:690:28: 690:34
            scope 3 {
                debug pubkey => _13;     // in scope 3 at cita-auth/src/handler.rs:690:28: 690:34
            }
        }
    }

    bb0: {
        _3 = (_2.0: cita_types::H256);   // scope 0 at cita-auth/src/handler.rs:683:24: 683:31
        _4 = &(_2.1: libproto::VerifyTxReq); // scope 0 at cita-auth/src/handler.rs:683:33: 683:40
        _6 = VerifyTxReq::get_crypto(_4) -> [return: bb1, unwind: bb11]; // scope 1 at cita-auth/src/handler.rs:685:25: 685:41
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:685:29: 685:39
                                         // + literal: Const { ty: for<'a> fn(&'a VerifyTxReq) -> Crypto {VerifyTxReq::get_crypto}, val: Value(<ZST>) }
    }

    bb1: {
        _9 = VerifyTxReq::get_hash(_4) -> [return: bb2, unwind: bb11]; // scope 1 at cita-auth/src/handler.rs:686:37: 686:51
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:686:41: 686:49
                                         // + literal: Const { ty: for<'a> fn(&'a VerifyTxReq) -> &'a [u8] {VerifyTxReq::get_hash}, val: Value(<ZST>) }
    }

    bb2: {
        _8 = <H256 as From<&[u8]>>::from(move _9) -> [return: bb3, unwind: bb11]; // scope 1 at cita-auth/src/handler.rs:686:26: 686:52
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:686:26: 686:36
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[u8]) -> H256 {<H256 as From<&[u8]>>::from}, val: Value(<ZST>) }
    }

    bb3: {
        _7 = &_8;                        // scope 1 at cita-auth/src/handler.rs:686:25: 686:52
        _11 = VerifyTxReq::get_signature(_4) -> [return: bb4, unwind: bb11]; // scope 1 at cita-auth/src/handler.rs:687:26: 687:45
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:687:30: 687:43
                                         // + literal: Const { ty: for<'a> fn(&'a VerifyTxReq) -> &'a [u8] {VerifyTxReq::get_signature}, val: Value(<ZST>) }
    }

    bb4: {
        _10 = &_11;                      // scope 1 at cita-auth/src/handler.rs:687:25: 687:45
        _16 = deref_copy (*_10);         // scope 1 at cita-auth/src/handler.rs:687:25: 687:45
        _5 = verify_tx_sig(move _6, _7, _16) -> [return: bb5, unwind: bb11]; // scope 1 at cita-auth/src/handler.rs:684:34: 688:22
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:684:34: 684:47
                                         // + literal: Const { ty: for<'a, 'b> fn(Crypto, &'a H256, &'b [u8]) -> Result<Vec<u8>, ()> {verify_tx_sig}, val: Value(<ZST>) }
    }

    bb5: {
        _12 = discriminant(_5);          // scope 2 at cita-auth/src/handler.rs:689:27: 689:33
        switchInt(move _12) -> [0: bb8, 1: bb6, otherwise: bb7]; // scope 2 at cita-auth/src/handler.rs:689:21: 689:33
    }

    bb6: {
        _15 = std::option::Option::<Vec<u8>>::None; // scope 2 at cita-auth/src/handler.rs:691:45: 691:49
        _0 = (_3, move _15);             // scope 2 at cita-auth/src/handler.rs:691:35: 691:50
        goto -> bb9;                     // scope 2 at cita-auth/src/handler.rs:691:49: 691:50
    }

    bb7: {
        unreachable;                     // scope 2 at cita-auth/src/handler.rs:689:27: 689:33
    }

    bb8: {
        _13 = move ((_5 as Ok).0: std::vec::Vec<u8>); // scope 2 at cita-auth/src/handler.rs:690:28: 690:34
        _14 = std::option::Option::<Vec<u8>>::Some(move _13); // scope 3 at cita-auth/src/handler.rs:690:49: 690:61
        _0 = (_3, move _14);             // scope 3 at cita-auth/src/handler.rs:690:39: 690:62
        goto -> bb9;                     // scope 2 at cita-auth/src/handler.rs:690:61: 690:62
    }

    bb9: {
        drop(_2) -> bb10;                // scope 0 at cita-auth/src/handler.rs:693:17: 693:18
    }

    bb10: {
        return;                          // scope 0 at cita-auth/src/handler.rs:693:18: 693:18
    }

    bb11 (cleanup): {
        drop(_2) -> bb12;                // scope 0 at cita-auth/src/handler.rs:693:17: 693:18
    }

    bb12 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/handler.rs:683:22: 693:18
    }
}

fn handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_request::{closure#1}(_1: &mut [closure@cita-auth/src/handler.rs:714:25: 714:60], _2: &(H256, (VerifyTxReq, &libproto::Request, bool))) -> bool {
    let mut _0: bool;                    // return place in scope 0 at cita-auth/src/handler.rs:714:61: 714:61
    let _3: &cita_types::H256;           // in scope 0 at cita-auth/src/handler.rs:714:27: 714:35
    let _4: &libproto::VerifyTxReq;      // in scope 0 at cita-auth/src/handler.rs:714:38: 714:42
    let _5: &&libproto::Request;         // in scope 0 at cita-auth/src/handler.rs:714:44: 714:51
    let _6: &bool;                       // in scope 0 at cita-auth/src/handler.rs:714:53: 714:57
    scope 1 {
        debug _tx_hash => _3;            // in scope 1 at cita-auth/src/handler.rs:714:27: 714:35
        debug _req => _4;                // in scope 1 at cita-auth/src/handler.rs:714:38: 714:42
        debug _tx_req => _5;             // in scope 1 at cita-auth/src/handler.rs:714:44: 714:51
        debug flag => _6;                // in scope 1 at cita-auth/src/handler.rs:714:53: 714:57
    }

    bb0: {
        _4 = &(((*_2).1: (libproto::VerifyTxReq, &libproto::Request, bool)).0: libproto::VerifyTxReq); // scope 0 at cita-auth/src/handler.rs:714:38: 714:42
        _5 = &(((*_2).1: (libproto::VerifyTxReq, &libproto::Request, bool)).1: &libproto::Request); // scope 0 at cita-auth/src/handler.rs:714:44: 714:51
        _6 = &(((*_2).1: (libproto::VerifyTxReq, &libproto::Request, bool)).2: bool); // scope 0 at cita-auth/src/handler.rs:714:53: 714:57
        _3 = &((*_2).0: cita_types::H256); // scope 0 at cita-auth/src/handler.rs:714:27: 714:35
        _0 = (*_6);                      // scope 1 at cita-auth/src/handler.rs:714:61: 714:66
        return;                          // scope 0 at cita-auth/src/handler.rs:714:66: 714:66
    }
}

fn handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_request::{closure#2}(_1: &mut [closure@cita-auth/src/handler.rs:715:25: 715:67], _2: &(H256, (VerifyTxReq, &libproto::Request, bool))) -> bool {
    debug self => (*((*_1).0: &&mut handler::MsgHandler)); // in scope 0 at cita-auth/src/handler.rs:630:26: 630:30
    debug is_local => (*((*_1).1: &bool)); // in scope 0 at cita-auth/src/handler.rs:630:32: 630:40
    let mut _0: bool;                    // return place in scope 0 at cita-auth/src/handler.rs:715:68: 715:68
    let _3: &cita_types::H256;           // in scope 0 at cita-auth/src/handler.rs:715:27: 715:35
    let _4: &libproto::VerifyTxReq;      // in scope 0 at cita-auth/src/handler.rs:715:38: 715:45
    let _5: &&libproto::Request;         // in scope 0 at cita-auth/src/handler.rs:715:47: 715:57
    let _6: &bool;                       // in scope 0 at cita-auth/src/handler.rs:715:59: 715:64
    let mut _7: std::result::Result<(), transaction_verify::Error>; // in scope 0 at cita-auth/src/handler.rs:716:37: 716:65
    let mut _8: &handler::MsgHandler;    // in scope 0 at cita-auth/src/handler.rs:716:37: 716:65
    let _9: &&libproto::VerifyTxReq;     // in scope 0 at cita-auth/src/handler.rs:716:60: 716:64
    let mut _10: isize;                  // in scope 0 at cita-auth/src/handler.rs:716:28: 716:34
    let mut _12: bool;                   // in scope 0 at cita-auth/src/handler.rs:717:28: 717:36
    let mut _14: &[u8];                  // in scope 0 at cita-auth/src/handler.rs:718:46: 718:78
    let _15: &[u8];                      // in scope 0 at cita-auth/src/handler.rs:718:46: 718:69
    let _16: ();                         // in scope 0 at cita-auth/src/handler.rs:719:29: 719:74
    let mut _17: &handler::MsgHandler;   // in scope 0 at cita-auth/src/handler.rs:719:29: 719:74
    let mut _18: std::vec::Vec<u8>;      // in scope 0 at cita-auth/src/handler.rs:719:59: 719:69
    let _19: &transaction_verify::Error; // in scope 0 at cita-auth/src/handler.rs:719:71: 719:73
    let mut _20: &&mut handler::MsgHandler; // in scope 0 at cita-auth/src/handler.rs:715:25: 725:18
    let mut _21: &mut handler::MsgHandler; // in scope 0 at cita-auth/src/handler.rs:715:25: 725:18
    let mut _22: &libproto::VerifyTxReq; // in scope 0 at cita-auth/src/handler.rs:716:60: 716:64
    let mut _23: &bool;                  // in scope 0 at cita-auth/src/handler.rs:715:25: 725:18
    let mut _24: &libproto::Request;     // in scope 0 at cita-auth/src/handler.rs:715:47: 715:57
    let mut _25: &&mut handler::MsgHandler; // in scope 0 at cita-auth/src/handler.rs:715:25: 725:18
    let mut _26: &mut handler::MsgHandler; // in scope 0 at cita-auth/src/handler.rs:715:25: 725:18
    scope 1 {
        debug _tx_hash => _3;            // in scope 1 at cita-auth/src/handler.rs:715:27: 715:35
        debug req => _4;                 // in scope 1 at cita-auth/src/handler.rs:715:38: 715:45
        debug tx_req => _5;              // in scope 1 at cita-auth/src/handler.rs:715:47: 715:57
        debug _flag => _6;               // in scope 1 at cita-auth/src/handler.rs:715:59: 715:64
        scope 2 {
            debug e => _11;              // in scope 2 at cita-auth/src/handler.rs:716:32: 716:33
            let _11: transaction_verify::Error; // in scope 2 at cita-auth/src/handler.rs:716:32: 716:33
            let _13: std::vec::Vec<u8>;  // in scope 2 at cita-auth/src/handler.rs:718:33: 718:43
            scope 3 {
                debug request_id => _13; // in scope 3 at cita-auth/src/handler.rs:718:33: 718:43
            }
        }
    }

    bb0: {
        _4 = &(((*_2).1: (libproto::VerifyTxReq, &libproto::Request, bool)).0: libproto::VerifyTxReq); // scope 0 at cita-auth/src/handler.rs:715:38: 715:45
        _5 = &(((*_2).1: (libproto::VerifyTxReq, &libproto::Request, bool)).1: &libproto::Request); // scope 0 at cita-auth/src/handler.rs:715:47: 715:57
        _6 = &(((*_2).1: (libproto::VerifyTxReq, &libproto::Request, bool)).2: bool); // scope 0 at cita-auth/src/handler.rs:715:59: 715:64
        _3 = &((*_2).0: cita_types::H256); // scope 0 at cita-auth/src/handler.rs:715:27: 715:35
        _20 = deref_copy ((*_1).0: &&mut handler::MsgHandler); // scope 2 at cita-auth/src/handler.rs:716:37: 716:65
        _21 = deref_copy (*_20);         // scope 2 at cita-auth/src/handler.rs:716:37: 716:65
        _8 = &(*_21);                    // scope 2 at cita-auth/src/handler.rs:716:37: 716:65
        _9 = &_4;                        // scope 2 at cita-auth/src/handler.rs:716:60: 716:64
        _22 = deref_copy (*_9);          // scope 2 at cita-auth/src/handler.rs:716:60: 716:64
        _7 = MsgHandler::verify_black_list(move _8, _22) -> bb1; // scope 2 at cita-auth/src/handler.rs:716:37: 716:65
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:716:42: 716:59
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a MsgHandler, &'b VerifyTxReq) -> Result<(), transaction_verify::Error> {MsgHandler::verify_black_list}, val: Value(<ZST>) }
    }

    bb1: {
        _10 = discriminant(_7);          // scope 2 at cita-auth/src/handler.rs:716:28: 716:34
        switchInt(move _10) -> [1: bb2, otherwise: bb7]; // scope 2 at cita-auth/src/handler.rs:716:28: 716:34
    }

    bb2: {
        _11 = move ((_7 as Err).0: transaction_verify::Error); // scope 2 at cita-auth/src/handler.rs:716:32: 716:33
        _23 = deref_copy ((*_1).1: &bool); // scope 2 at cita-auth/src/handler.rs:717:28: 717:36
        _12 = (*_23);                    // scope 2 at cita-auth/src/handler.rs:717:28: 717:36
        switchInt(move _12) -> [0: bb6, otherwise: bb3]; // scope 2 at cita-auth/src/handler.rs:717:28: 717:36
    }

    bb3: {
        _24 = deref_copy (*_5);          // scope 2 at cita-auth/src/handler.rs:718:46: 718:69
        _15 = libproto::Request::get_request_id(_24) -> bb4; // scope 2 at cita-auth/src/handler.rs:718:46: 718:69
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:718:53: 718:67
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Request) -> &'a [u8] {libproto::Request::get_request_id}, val: Value(<ZST>) }
    }

    bb4: {
        _14 = _15;                       // scope 2 at cita-auth/src/handler.rs:718:46: 718:78
        _13 = std::slice::<impl [u8]>::to_vec(move _14) -> bb5; // scope 2 at cita-auth/src/handler.rs:718:46: 718:78
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:718:70: 718:76
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> Vec<u8> {std::slice::<impl [u8]>::to_vec}, val: Value(<ZST>) }
    }

    bb5: {
        _25 = deref_copy ((*_1).0: &&mut handler::MsgHandler); // scope 3 at cita-auth/src/handler.rs:719:29: 719:74
        _26 = deref_copy (*_25);         // scope 3 at cita-auth/src/handler.rs:719:29: 719:74
        _17 = &(*_26);                   // scope 3 at cita-auth/src/handler.rs:719:29: 719:74
        _18 = move _13;                  // scope 3 at cita-auth/src/handler.rs:719:59: 719:69
        _19 = &_11;                      // scope 3 at cita-auth/src/handler.rs:719:71: 719:73
        _16 = MsgHandler::publish_tx_failed_result(move _17, move _18, _19) -> bb6; // scope 3 at cita-auth/src/handler.rs:719:29: 719:74
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:719:34: 719:58
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a MsgHandler, Vec<u8>, &'b transaction_verify::Error) {MsgHandler::publish_tx_failed_result}, val: Value(<ZST>) }
    }

    bb6: {
        _0 = const false;                // scope 2 at cita-auth/src/handler.rs:721:25: 721:30
        goto -> bb8;                     // scope 1 at cita-auth/src/handler.rs:716:21: 724:22
    }

    bb7: {
        _0 = const true;                 // scope 1 at cita-auth/src/handler.rs:723:25: 723:29
        goto -> bb8;                     // scope 1 at cita-auth/src/handler.rs:716:21: 724:22
    }

    bb8: {
        return;                          // scope 0 at cita-auth/src/handler.rs:725:18: 725:18
    }
}

fn handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_request::{closure#3}(_1: &mut [closure@cita-auth/src/handler.rs:726:25: 726:68], _2: &(H256, (VerifyTxReq, &libproto::Request, bool))) -> bool {
    debug self => (*((*_1).0: &&mut handler::MsgHandler)); // in scope 0 at cita-auth/src/handler.rs:630:26: 630:30
    debug is_local => (*((*_1).1: &bool)); // in scope 0 at cita-auth/src/handler.rs:630:32: 630:40
    let mut _0: bool;                    // return place in scope 0 at cita-auth/src/handler.rs:726:69: 726:69
    let _3: &cita_types::H256;           // in scope 0 at cita-auth/src/handler.rs:726:27: 726:35
    let _4: &libproto::VerifyTxReq;      // in scope 0 at cita-auth/src/handler.rs:726:38: 726:46
    let _5: &&libproto::Request;         // in scope 0 at cita-auth/src/handler.rs:726:48: 726:58
    let _6: &bool;                       // in scope 0 at cita-auth/src/handler.rs:726:60: 726:65
    let mut _7: std::result::Result<(), transaction_verify::Error>; // in scope 0 at cita-auth/src/handler.rs:727:37: 727:64
    let mut _8: &handler::MsgHandler;    // in scope 0 at cita-auth/src/handler.rs:727:37: 727:64
    let mut _9: isize;                   // in scope 0 at cita-auth/src/handler.rs:727:28: 727:34
    let mut _11: bool;                   // in scope 0 at cita-auth/src/handler.rs:728:28: 728:36
    let mut _13: &[u8];                  // in scope 0 at cita-auth/src/handler.rs:729:46: 729:78
    let _14: &[u8];                      // in scope 0 at cita-auth/src/handler.rs:729:46: 729:69
    let _15: ();                         // in scope 0 at cita-auth/src/handler.rs:730:29: 730:74
    let mut _16: &handler::MsgHandler;   // in scope 0 at cita-auth/src/handler.rs:730:29: 730:74
    let mut _17: std::vec::Vec<u8>;      // in scope 0 at cita-auth/src/handler.rs:730:59: 730:69
    let _18: &transaction_verify::Error; // in scope 0 at cita-auth/src/handler.rs:730:71: 730:73
    let mut _19: &&mut handler::MsgHandler; // in scope 0 at cita-auth/src/handler.rs:726:25: 736:18
    let mut _20: &mut handler::MsgHandler; // in scope 0 at cita-auth/src/handler.rs:726:25: 736:18
    let mut _21: &libproto::Request;     // in scope 0 at cita-auth/src/handler.rs:726:48: 726:58
    let mut _22: &bool;                  // in scope 0 at cita-auth/src/handler.rs:726:25: 736:18
    let mut _23: &libproto::Request;     // in scope 0 at cita-auth/src/handler.rs:726:48: 726:58
    let mut _24: &&mut handler::MsgHandler; // in scope 0 at cita-auth/src/handler.rs:726:25: 736:18
    let mut _25: &mut handler::MsgHandler; // in scope 0 at cita-auth/src/handler.rs:726:25: 736:18
    scope 1 {
        debug _tx_hash => _3;            // in scope 1 at cita-auth/src/handler.rs:726:27: 726:35
        debug _req => _4;                // in scope 1 at cita-auth/src/handler.rs:726:38: 726:46
        debug tx_req => _5;              // in scope 1 at cita-auth/src/handler.rs:726:48: 726:58
        debug _flag => _6;               // in scope 1 at cita-auth/src/handler.rs:726:60: 726:65
        scope 2 {
            debug e => _10;              // in scope 2 at cita-auth/src/handler.rs:727:32: 727:33
            let _10: transaction_verify::Error; // in scope 2 at cita-auth/src/handler.rs:727:32: 727:33
            let _12: std::vec::Vec<u8>;  // in scope 2 at cita-auth/src/handler.rs:729:33: 729:43
            scope 3 {
                debug request_id => _12; // in scope 3 at cita-auth/src/handler.rs:729:33: 729:43
            }
        }
    }

    bb0: {
        _4 = &(((*_2).1: (libproto::VerifyTxReq, &libproto::Request, bool)).0: libproto::VerifyTxReq); // scope 0 at cita-auth/src/handler.rs:726:38: 726:46
        _5 = &(((*_2).1: (libproto::VerifyTxReq, &libproto::Request, bool)).1: &libproto::Request); // scope 0 at cita-auth/src/handler.rs:726:48: 726:58
        _6 = &(((*_2).1: (libproto::VerifyTxReq, &libproto::Request, bool)).2: bool); // scope 0 at cita-auth/src/handler.rs:726:60: 726:65
        _3 = &((*_2).0: cita_types::H256); // scope 0 at cita-auth/src/handler.rs:726:27: 726:35
        _19 = deref_copy ((*_1).0: &&mut handler::MsgHandler); // scope 2 at cita-auth/src/handler.rs:727:37: 727:64
        _20 = deref_copy (*_19);         // scope 2 at cita-auth/src/handler.rs:727:37: 727:64
        _8 = &(*_20);                    // scope 2 at cita-auth/src/handler.rs:727:37: 727:64
        _21 = deref_copy (*_5);          // scope 2 at cita-auth/src/handler.rs:727:57: 727:63
        _7 = MsgHandler::verify_request(move _8, _21) -> bb1; // scope 2 at cita-auth/src/handler.rs:727:37: 727:64
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:727:42: 727:56
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a MsgHandler, &'b libproto::Request) -> Result<(), transaction_verify::Error> {MsgHandler::verify_request}, val: Value(<ZST>) }
    }

    bb1: {
        _9 = discriminant(_7);           // scope 2 at cita-auth/src/handler.rs:727:28: 727:34
        switchInt(move _9) -> [1: bb2, otherwise: bb7]; // scope 2 at cita-auth/src/handler.rs:727:28: 727:34
    }

    bb2: {
        _10 = move ((_7 as Err).0: transaction_verify::Error); // scope 2 at cita-auth/src/handler.rs:727:32: 727:33
        _22 = deref_copy ((*_1).1: &bool); // scope 2 at cita-auth/src/handler.rs:728:28: 728:36
        _11 = (*_22);                    // scope 2 at cita-auth/src/handler.rs:728:28: 728:36
        switchInt(move _11) -> [0: bb6, otherwise: bb3]; // scope 2 at cita-auth/src/handler.rs:728:28: 728:36
    }

    bb3: {
        _23 = deref_copy (*_5);          // scope 2 at cita-auth/src/handler.rs:729:46: 729:69
        _14 = libproto::Request::get_request_id(_23) -> bb4; // scope 2 at cita-auth/src/handler.rs:729:46: 729:69
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:729:53: 729:67
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Request) -> &'a [u8] {libproto::Request::get_request_id}, val: Value(<ZST>) }
    }

    bb4: {
        _13 = _14;                       // scope 2 at cita-auth/src/handler.rs:729:46: 729:78
        _12 = std::slice::<impl [u8]>::to_vec(move _13) -> bb5; // scope 2 at cita-auth/src/handler.rs:729:46: 729:78
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:729:70: 729:76
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> Vec<u8> {std::slice::<impl [u8]>::to_vec}, val: Value(<ZST>) }
    }

    bb5: {
        _24 = deref_copy ((*_1).0: &&mut handler::MsgHandler); // scope 3 at cita-auth/src/handler.rs:730:29: 730:74
        _25 = deref_copy (*_24);         // scope 3 at cita-auth/src/handler.rs:730:29: 730:74
        _16 = &(*_25);                   // scope 3 at cita-auth/src/handler.rs:730:29: 730:74
        _17 = move _12;                  // scope 3 at cita-auth/src/handler.rs:730:59: 730:69
        _18 = &_10;                      // scope 3 at cita-auth/src/handler.rs:730:71: 730:73
        _15 = MsgHandler::publish_tx_failed_result(move _16, move _17, _18) -> bb6; // scope 3 at cita-auth/src/handler.rs:730:29: 730:74
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:730:34: 730:58
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a MsgHandler, Vec<u8>, &'b transaction_verify::Error) {MsgHandler::publish_tx_failed_result}, val: Value(<ZST>) }
    }

    bb6: {
        _0 = const false;                // scope 2 at cita-auth/src/handler.rs:732:25: 732:30
        goto -> bb8;                     // scope 1 at cita-auth/src/handler.rs:727:21: 735:22
    }

    bb7: {
        _0 = const true;                 // scope 1 at cita-auth/src/handler.rs:734:25: 734:29
        goto -> bb8;                     // scope 1 at cita-auth/src/handler.rs:727:21: 735:22
    }

    bb8: {
        return;                          // scope 0 at cita-auth/src/handler.rs:736:18: 736:18
    }
}

fn handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_request::{closure#4}(_1: &mut [closure@cita-auth/src/handler.rs:737:25: 737:67], _2: &(H256, (VerifyTxReq, &libproto::Request, bool))) -> bool {
    debug self => (*((*_1).0: &&mut handler::MsgHandler)); // in scope 0 at cita-auth/src/handler.rs:630:26: 630:30
    debug is_local => (*((*_1).1: &bool)); // in scope 0 at cita-auth/src/handler.rs:630:32: 630:40
    let mut _0: bool;                    // return place in scope 0 at cita-auth/src/handler.rs:737:68: 737:68
    let _3: &cita_types::H256;           // in scope 0 at cita-auth/src/handler.rs:737:27: 737:35
    let _4: &libproto::VerifyTxReq;      // in scope 0 at cita-auth/src/handler.rs:737:38: 737:45
    let _5: &&libproto::Request;         // in scope 0 at cita-auth/src/handler.rs:737:47: 737:57
    let _6: &bool;                       // in scope 0 at cita-auth/src/handler.rs:737:59: 737:64
    let mut _7: std::result::Result<(), transaction_verify::Error>; // in scope 0 at cita-auth/src/handler.rs:738:37: 738:61
    let mut _8: &handler::MsgHandler;    // in scope 0 at cita-auth/src/handler.rs:738:37: 738:61
    let _9: &&libproto::VerifyTxReq;     // in scope 0 at cita-auth/src/handler.rs:738:56: 738:60
    let mut _10: isize;                  // in scope 0 at cita-auth/src/handler.rs:738:28: 738:34
    let mut _12: bool;                   // in scope 0 at cita-auth/src/handler.rs:739:28: 739:36
    let mut _14: &[u8];                  // in scope 0 at cita-auth/src/handler.rs:740:46: 740:78
    let _15: &[u8];                      // in scope 0 at cita-auth/src/handler.rs:740:46: 740:69
    let _16: ();                         // in scope 0 at cita-auth/src/handler.rs:741:29: 741:74
    let mut _17: &handler::MsgHandler;   // in scope 0 at cita-auth/src/handler.rs:741:29: 741:74
    let mut _18: std::vec::Vec<u8>;      // in scope 0 at cita-auth/src/handler.rs:741:59: 741:69
    let _19: &transaction_verify::Error; // in scope 0 at cita-auth/src/handler.rs:741:71: 741:73
    let mut _20: &&mut handler::MsgHandler; // in scope 0 at cita-auth/src/handler.rs:737:25: 747:18
    let mut _21: &mut handler::MsgHandler; // in scope 0 at cita-auth/src/handler.rs:737:25: 747:18
    let mut _22: &libproto::VerifyTxReq; // in scope 0 at cita-auth/src/handler.rs:738:56: 738:60
    let mut _23: &bool;                  // in scope 0 at cita-auth/src/handler.rs:737:25: 747:18
    let mut _24: &libproto::Request;     // in scope 0 at cita-auth/src/handler.rs:737:47: 737:57
    let mut _25: &&mut handler::MsgHandler; // in scope 0 at cita-auth/src/handler.rs:737:25: 747:18
    let mut _26: &mut handler::MsgHandler; // in scope 0 at cita-auth/src/handler.rs:737:25: 747:18
    scope 1 {
        debug _tx_hash => _3;            // in scope 1 at cita-auth/src/handler.rs:737:27: 737:35
        debug req => _4;                 // in scope 1 at cita-auth/src/handler.rs:737:38: 737:45
        debug tx_req => _5;              // in scope 1 at cita-auth/src/handler.rs:737:47: 737:57
        debug _flag => _6;               // in scope 1 at cita-auth/src/handler.rs:737:59: 737:64
        scope 2 {
            debug e => _11;              // in scope 2 at cita-auth/src/handler.rs:738:32: 738:33
            let _11: transaction_verify::Error; // in scope 2 at cita-auth/src/handler.rs:738:32: 738:33
            let _13: std::vec::Vec<u8>;  // in scope 2 at cita-auth/src/handler.rs:740:33: 740:43
            scope 3 {
                debug request_id => _13; // in scope 3 at cita-auth/src/handler.rs:740:33: 740:43
            }
        }
    }

    bb0: {
        _4 = &(((*_2).1: (libproto::VerifyTxReq, &libproto::Request, bool)).0: libproto::VerifyTxReq); // scope 0 at cita-auth/src/handler.rs:737:38: 737:45
        _5 = &(((*_2).1: (libproto::VerifyTxReq, &libproto::Request, bool)).1: &libproto::Request); // scope 0 at cita-auth/src/handler.rs:737:47: 737:57
        _6 = &(((*_2).1: (libproto::VerifyTxReq, &libproto::Request, bool)).2: bool); // scope 0 at cita-auth/src/handler.rs:737:59: 737:64
        _3 = &((*_2).0: cita_types::H256); // scope 0 at cita-auth/src/handler.rs:737:27: 737:35
        _20 = deref_copy ((*_1).0: &&mut handler::MsgHandler); // scope 2 at cita-auth/src/handler.rs:738:37: 738:61
        _21 = deref_copy (*_20);         // scope 2 at cita-auth/src/handler.rs:738:37: 738:61
        _8 = &(*_21);                    // scope 2 at cita-auth/src/handler.rs:738:37: 738:61
        _9 = &_4;                        // scope 2 at cita-auth/src/handler.rs:738:56: 738:60
        _22 = deref_copy (*_9);          // scope 2 at cita-auth/src/handler.rs:738:56: 738:60
        _7 = MsgHandler::verify_tx_req(move _8, _22) -> bb1; // scope 2 at cita-auth/src/handler.rs:738:37: 738:61
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:738:42: 738:55
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a MsgHandler, &'b VerifyTxReq) -> Result<(), transaction_verify::Error> {MsgHandler::verify_tx_req}, val: Value(<ZST>) }
    }

    bb1: {
        _10 = discriminant(_7);          // scope 2 at cita-auth/src/handler.rs:738:28: 738:34
        switchInt(move _10) -> [1: bb2, otherwise: bb7]; // scope 2 at cita-auth/src/handler.rs:738:28: 738:34
    }

    bb2: {
        _11 = move ((_7 as Err).0: transaction_verify::Error); // scope 2 at cita-auth/src/handler.rs:738:32: 738:33
        _23 = deref_copy ((*_1).1: &bool); // scope 2 at cita-auth/src/handler.rs:739:28: 739:36
        _12 = (*_23);                    // scope 2 at cita-auth/src/handler.rs:739:28: 739:36
        switchInt(move _12) -> [0: bb6, otherwise: bb3]; // scope 2 at cita-auth/src/handler.rs:739:28: 739:36
    }

    bb3: {
        _24 = deref_copy (*_5);          // scope 2 at cita-auth/src/handler.rs:740:46: 740:69
        _15 = libproto::Request::get_request_id(_24) -> bb4; // scope 2 at cita-auth/src/handler.rs:740:46: 740:69
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:740:53: 740:67
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Request) -> &'a [u8] {libproto::Request::get_request_id}, val: Value(<ZST>) }
    }

    bb4: {
        _14 = _15;                       // scope 2 at cita-auth/src/handler.rs:740:46: 740:78
        _13 = std::slice::<impl [u8]>::to_vec(move _14) -> bb5; // scope 2 at cita-auth/src/handler.rs:740:46: 740:78
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:740:70: 740:76
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> Vec<u8> {std::slice::<impl [u8]>::to_vec}, val: Value(<ZST>) }
    }

    bb5: {
        _25 = deref_copy ((*_1).0: &&mut handler::MsgHandler); // scope 3 at cita-auth/src/handler.rs:741:29: 741:74
        _26 = deref_copy (*_25);         // scope 3 at cita-auth/src/handler.rs:741:29: 741:74
        _17 = &(*_26);                   // scope 3 at cita-auth/src/handler.rs:741:29: 741:74
        _18 = move _13;                  // scope 3 at cita-auth/src/handler.rs:741:59: 741:69
        _19 = &_11;                      // scope 3 at cita-auth/src/handler.rs:741:71: 741:73
        _16 = MsgHandler::publish_tx_failed_result(move _17, move _18, _19) -> bb6; // scope 3 at cita-auth/src/handler.rs:741:29: 741:74
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:741:34: 741:58
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a MsgHandler, Vec<u8>, &'b transaction_verify::Error) {MsgHandler::publish_tx_failed_result}, val: Value(<ZST>) }
    }

    bb6: {
        _0 = const false;                // scope 2 at cita-auth/src/handler.rs:743:25: 743:30
        goto -> bb8;                     // scope 1 at cita-auth/src/handler.rs:738:21: 746:22
    }

    bb7: {
        _0 = const true;                 // scope 1 at cita-auth/src/handler.rs:745:25: 745:29
        goto -> bb8;                     // scope 1 at cita-auth/src/handler.rs:738:21: 746:22
    }

    bb8: {
        return;                          // scope 0 at cita-auth/src/handler.rs:747:18: 747:18
    }
}

fn handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_request::{closure#5}(_1: &mut [closure@cita-auth/src/handler.rs:748:27: 748:60], _2: (H256, (VerifyTxReq, &libproto::Request, bool))) -> () {
    debug self => (*((*_1).0: &&mut handler::MsgHandler)); // in scope 0 at cita-auth/src/handler.rs:630:26: 630:30
    debug is_local => (*((*_1).1: &bool)); // in scope 0 at cita-auth/src/handler.rs:630:32: 630:40
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/handler.rs:748:61: 748:61
    let _3: cita_types::H256;            // in scope 0 at cita-auth/src/handler.rs:748:29: 748:36
    let _4: libproto::VerifyTxReq;       // in scope 0 at cita-auth/src/handler.rs:748:39: 748:42
    let _5: &libproto::Request;          // in scope 0 at cita-auth/src/handler.rs:748:44: 748:50
    let _6: bool;                        // in scope 0 at cita-auth/src/handler.rs:748:52: 748:57
    let _8: ();                          // in scope 0 at cita-auth/src/handler.rs:750:21: 750:83
    let mut _9: &mut libproto::SignedTransaction; // in scope 0 at cita-auth/src/handler.rs:750:21: 750:83
    let mut _10: libproto::UnverifiedTransaction; // in scope 0 at cita-auth/src/handler.rs:750:56: 750:82
    let mut _11: &libproto::UnverifiedTransaction; // in scope 0 at cita-auth/src/handler.rs:750:56: 750:82
    let _12: &libproto::UnverifiedTransaction; // in scope 0 at cita-auth/src/handler.rs:750:56: 750:74
    let _13: ();                         // in scope 0 at cita-auth/src/handler.rs:751:21: 751:68
    let mut _14: &mut libproto::SignedTransaction; // in scope 0 at cita-auth/src/handler.rs:751:21: 751:68
    let mut _15: std::vec::Vec<u8>;      // in scope 0 at cita-auth/src/handler.rs:751:42: 751:67
    let mut _16: &[u8];                  // in scope 0 at cita-auth/src/handler.rs:751:42: 751:67
    let _17: &[u8];                      // in scope 0 at cita-auth/src/handler.rs:751:42: 751:58
    let mut _18: &libproto::VerifyTxReq; // in scope 0 at cita-auth/src/handler.rs:751:42: 751:58
    let _19: ();                         // in scope 0 at cita-auth/src/handler.rs:752:21: 752:60
    let mut _20: &mut libproto::SignedTransaction; // in scope 0 at cita-auth/src/handler.rs:752:21: 752:60
    let mut _21: std::vec::Vec<u8>;      // in scope 0 at cita-auth/src/handler.rs:752:43: 752:59
    let mut _22: &[u8];                  // in scope 0 at cita-auth/src/handler.rs:752:43: 752:59
    let _23: &[u8];                      // in scope 0 at cita-auth/src/handler.rs:752:43: 752:59
    let mut _24: &cita_types::H256;      // in scope 0 at cita-auth/src/handler.rs:752:43: 752:59
    let mut _26: &[u8];                  // in scope 0 at cita-auth/src/handler.rs:753:38: 753:70
    let _27: &[u8];                      // in scope 0 at cita-auth/src/handler.rs:753:38: 753:61
    let mut _28: bool;                   // in scope 0 at cita-auth/src/handler.rs:754:24: 754:66
    let mut _29: &dispatcher::Dispatcher; // in scope 0 at cita-auth/src/handler.rs:754:24: 754:66
    let _30: &libproto::SignedTransaction; // in scope 0 at cita-auth/src/handler.rs:754:55: 754:65
    let mut _31: bool;                   // in scope 0 at cita-auth/src/handler.rs:755:28: 755:36
    let _32: ();                         // in scope 0 at cita-auth/src/handler.rs:756:29: 756:80
    let mut _33: &handler::MsgHandler;   // in scope 0 at cita-auth/src/handler.rs:756:29: 756:80
    let mut _34: std::vec::Vec<u8>;      // in scope 0 at cita-auth/src/handler.rs:756:60: 756:70
    let _35: ();                         // in scope 0 at cita-auth/src/handler.rs:759:25: 759:61
    let mut _36: &handler::MsgHandler;   // in scope 0 at cita-auth/src/handler.rs:759:25: 759:61
    let mut _37: libproto::Request;      // in scope 0 at cita-auth/src/handler.rs:759:46: 759:60
    let mut _38: bool;                   // in scope 0 at cita-auth/src/handler.rs:760:31: 760:39
    let _39: ();                         // in scope 0 at cita-auth/src/handler.rs:762:25: 762:79
    let mut _40: &handler::MsgHandler;   // in scope 0 at cita-auth/src/handler.rs:762:25: 762:79
    let mut _41: std::vec::Vec<u8>;      // in scope 0 at cita-auth/src/handler.rs:762:55: 762:65
    let mut _43: &&mut handler::MsgHandler; // in scope 0 at cita-auth/src/handler.rs:748:27: 764:18
    let mut _44: &mut handler::MsgHandler; // in scope 0 at cita-auth/src/handler.rs:748:27: 764:18
    let mut _45: &bool;                  // in scope 0 at cita-auth/src/handler.rs:748:27: 764:18
    let mut _46: &&mut handler::MsgHandler; // in scope 0 at cita-auth/src/handler.rs:748:27: 764:18
    let mut _47: &mut handler::MsgHandler; // in scope 0 at cita-auth/src/handler.rs:748:27: 764:18
    let mut _48: &&mut handler::MsgHandler; // in scope 0 at cita-auth/src/handler.rs:748:27: 764:18
    let mut _49: &mut handler::MsgHandler; // in scope 0 at cita-auth/src/handler.rs:748:27: 764:18
    let mut _50: &bool;                  // in scope 0 at cita-auth/src/handler.rs:748:27: 764:18
    let mut _51: &&mut handler::MsgHandler; // in scope 0 at cita-auth/src/handler.rs:748:27: 764:18
    let mut _52: &mut handler::MsgHandler; // in scope 0 at cita-auth/src/handler.rs:748:27: 764:18
    let mut _53: bool;                   // in scope 0 at cita-auth/src/handler.rs:764:17: 764:18
    scope 1 {
        debug tx_hash => _3;             // in scope 1 at cita-auth/src/handler.rs:748:29: 748:36
        debug req => _4;                 // in scope 1 at cita-auth/src/handler.rs:748:39: 748:42
        debug tx_req => _5;              // in scope 1 at cita-auth/src/handler.rs:748:44: 748:50
        debug _flag => _6;               // in scope 1 at cita-auth/src/handler.rs:748:52: 748:57
        let mut _7: libproto::SignedTransaction; // in scope 1 at cita-auth/src/handler.rs:749:25: 749:38
        scope 2 {
            debug signed_tx => _7;       // in scope 2 at cita-auth/src/handler.rs:749:25: 749:38
            let _25: std::vec::Vec<u8>;  // in scope 2 at cita-auth/src/handler.rs:753:25: 753:35
            scope 3 {
                debug request_id => _25; // in scope 3 at cita-auth/src/handler.rs:753:25: 753:35
                let mut _42: &transaction_verify::Error; // in scope 3 at cita-auth/src/handler.rs:762:67: 762:78
            }
        }
    }

    bb0: {
        _53 = const false;               // scope 0 at cita-auth/src/handler.rs:748:39: 748:42
        _4 = move ((_2.1: (libproto::VerifyTxReq, &libproto::Request, bool)).0: libproto::VerifyTxReq); // scope 0 at cita-auth/src/handler.rs:748:39: 748:42
        _5 = ((_2.1: (libproto::VerifyTxReq, &libproto::Request, bool)).1: &libproto::Request); // scope 0 at cita-auth/src/handler.rs:748:44: 748:50
        _6 = ((_2.1: (libproto::VerifyTxReq, &libproto::Request, bool)).2: bool); // scope 0 at cita-auth/src/handler.rs:748:52: 748:57
        _3 = (_2.0: cita_types::H256);   // scope 0 at cita-auth/src/handler.rs:748:29: 748:36
        _7 = SignedTransaction::new() -> [return: bb1, unwind: bb25]; // scope 1 at cita-auth/src/handler.rs:749:41: 749:65
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:749:41: 749:63
                                         // + literal: Const { ty: fn() -> SignedTransaction {SignedTransaction::new}, val: Value(<ZST>) }
    }

    bb1: {
        _9 = &mut _7;                    // scope 2 at cita-auth/src/handler.rs:750:21: 750:83
        _12 = libproto::Request::get_un_tx(_5) -> [return: bb2, unwind: bb24]; // scope 2 at cita-auth/src/handler.rs:750:56: 750:74
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:750:63: 750:72
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Request) -> &'a UnverifiedTransaction {libproto::Request::get_un_tx}, val: Value(<ZST>) }
    }

    bb2: {
        _11 = _12;                       // scope 2 at cita-auth/src/handler.rs:750:56: 750:82
        _10 = <UnverifiedTransaction as Clone>::clone(move _11) -> [return: bb3, unwind: bb24]; // scope 2 at cita-auth/src/handler.rs:750:56: 750:82
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:750:75: 750:80
                                         // + literal: Const { ty: for<'a> fn(&'a UnverifiedTransaction) -> UnverifiedTransaction {<UnverifiedTransaction as Clone>::clone}, val: Value(<ZST>) }
    }

    bb3: {
        _8 = SignedTransaction::set_transaction_with_sig(move _9, move _10) -> [return: bb4, unwind: bb24]; // scope 2 at cita-auth/src/handler.rs:750:21: 750:83
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:750:31: 750:55
                                         // + literal: Const { ty: for<'a> fn(&'a mut SignedTransaction, UnverifiedTransaction) {SignedTransaction::set_transaction_with_sig}, val: Value(<ZST>) }
    }

    bb4: {
        _14 = &mut _7;                   // scope 2 at cita-auth/src/handler.rs:751:21: 751:68
        _18 = &_4;                       // scope 2 at cita-auth/src/handler.rs:751:42: 751:58
        _17 = VerifyTxReq::get_signer(move _18) -> [return: bb5, unwind: bb24]; // scope 2 at cita-auth/src/handler.rs:751:42: 751:58
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:751:46: 751:56
                                         // + literal: Const { ty: for<'a> fn(&'a VerifyTxReq) -> &'a [u8] {VerifyTxReq::get_signer}, val: Value(<ZST>) }
    }

    bb5: {
        _16 = _17;                       // scope 2 at cita-auth/src/handler.rs:751:42: 751:67
        _15 = std::slice::<impl [u8]>::to_vec(move _16) -> [return: bb6, unwind: bb24]; // scope 2 at cita-auth/src/handler.rs:751:42: 751:67
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:751:59: 751:65
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> Vec<u8> {std::slice::<impl [u8]>::to_vec}, val: Value(<ZST>) }
    }

    bb6: {
        _13 = SignedTransaction::set_signer(move _14, move _15) -> [return: bb7, unwind: bb24]; // scope 2 at cita-auth/src/handler.rs:751:21: 751:68
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:751:31: 751:41
                                         // + literal: Const { ty: for<'a> fn(&'a mut SignedTransaction, Vec<u8>) {SignedTransaction::set_signer}, val: Value(<ZST>) }
    }

    bb7: {
        _20 = &mut _7;                   // scope 2 at cita-auth/src/handler.rs:752:21: 752:60
        _24 = &_3;                       // scope 2 at cita-auth/src/handler.rs:752:43: 752:59
        _23 = <H256 as Deref>::deref(move _24) -> [return: bb8, unwind: bb24]; // scope 2 at cita-auth/src/handler.rs:752:43: 752:59
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:752:43: 752:59
                                         // + literal: Const { ty: for<'a> fn(&'a H256) -> &'a <H256 as Deref>::Target {<H256 as Deref>::deref}, val: Value(<ZST>) }
    }

    bb8: {
        _22 = _23;                       // scope 2 at cita-auth/src/handler.rs:752:43: 752:59
        _21 = std::slice::<impl [u8]>::to_vec(move _22) -> [return: bb9, unwind: bb24]; // scope 2 at cita-auth/src/handler.rs:752:43: 752:59
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:752:51: 752:57
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> Vec<u8> {std::slice::<impl [u8]>::to_vec}, val: Value(<ZST>) }
    }

    bb9: {
        _19 = SignedTransaction::set_tx_hash(move _20, move _21) -> [return: bb10, unwind: bb24]; // scope 2 at cita-auth/src/handler.rs:752:21: 752:60
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:752:31: 752:42
                                         // + literal: Const { ty: for<'a> fn(&'a mut SignedTransaction, Vec<u8>) {SignedTransaction::set_tx_hash}, val: Value(<ZST>) }
    }

    bb10: {
        _27 = libproto::Request::get_request_id(_5) -> [return: bb11, unwind: bb24]; // scope 2 at cita-auth/src/handler.rs:753:38: 753:61
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:753:45: 753:59
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Request) -> &'a [u8] {libproto::Request::get_request_id}, val: Value(<ZST>) }
    }

    bb11: {
        _26 = _27;                       // scope 2 at cita-auth/src/handler.rs:753:38: 753:70
        _25 = std::slice::<impl [u8]>::to_vec(move _26) -> [return: bb12, unwind: bb24]; // scope 2 at cita-auth/src/handler.rs:753:38: 753:70
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:753:62: 753:68
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> Vec<u8> {std::slice::<impl [u8]>::to_vec}, val: Value(<ZST>) }
    }

    bb12: {
        _53 = const true;                // scope 2 at cita-auth/src/handler.rs:753:69: 753:70
        _43 = deref_copy ((*_1).0: &&mut handler::MsgHandler); // scope 3 at cita-auth/src/handler.rs:754:24: 754:66
        _44 = deref_copy (*_43);         // scope 3 at cita-auth/src/handler.rs:754:24: 754:66
        _29 = &((*_44).6: dispatcher::Dispatcher); // scope 3 at cita-auth/src/handler.rs:754:24: 754:66
        _30 = &_7;                       // scope 3 at cita-auth/src/handler.rs:754:55: 754:65
        _28 = Dispatcher::add_tx_to_pool(move _29, _30) -> [return: bb13, unwind: bb29]; // scope 3 at cita-auth/src/handler.rs:754:24: 754:66
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:754:40: 754:54
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Dispatcher, &'b SignedTransaction) -> bool {Dispatcher::add_tx_to_pool}, val: Value(<ZST>) }
    }

    bb13: {
        switchInt(move _28) -> [0: bb18, otherwise: bb14]; // scope 3 at cita-auth/src/handler.rs:754:24: 754:66
    }

    bb14: {
        _45 = deref_copy ((*_1).1: &bool); // scope 3 at cita-auth/src/handler.rs:755:28: 755:36
        _31 = (*_45);                    // scope 3 at cita-auth/src/handler.rs:755:28: 755:36
        switchInt(move _31) -> [0: bb16, otherwise: bb15]; // scope 3 at cita-auth/src/handler.rs:755:28: 755:36
    }

    bb15: {
        _46 = deref_copy ((*_1).0: &&mut handler::MsgHandler); // scope 3 at cita-auth/src/handler.rs:756:29: 756:80
        _47 = deref_copy (*_46);         // scope 3 at cita-auth/src/handler.rs:756:29: 756:80
        _33 = &(*_47);                   // scope 3 at cita-auth/src/handler.rs:756:29: 756:80
        _53 = const false;               // scope 3 at cita-auth/src/handler.rs:756:60: 756:70
        _34 = move _25;                  // scope 3 at cita-auth/src/handler.rs:756:60: 756:70
        _32 = MsgHandler::publish_tx_success_result(move _33, move _34, _3) -> [return: bb30, unwind: bb29]; // scope 3 at cita-auth/src/handler.rs:756:29: 756:80
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:756:34: 756:59
                                         // + literal: Const { ty: for<'a> fn(&'a MsgHandler, Vec<u8>, H256) {MsgHandler::publish_tx_success_result}, val: Value(<ZST>) }
    }

    bb16: {
        _48 = deref_copy ((*_1).0: &&mut handler::MsgHandler); // scope 3 at cita-auth/src/handler.rs:759:25: 759:61
        _49 = deref_copy (*_48);         // scope 3 at cita-auth/src/handler.rs:759:25: 759:61
        _36 = &(*_49);                   // scope 3 at cita-auth/src/handler.rs:759:25: 759:61
        _37 = <libproto::Request as Clone>::clone(_5) -> [return: bb17, unwind: bb29]; // scope 3 at cita-auth/src/handler.rs:759:46: 759:60
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:759:53: 759:58
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Request) -> libproto::Request {<libproto::Request as Clone>::clone}, val: Value(<ZST>) }
    }

    bb17: {
        _35 = MsgHandler::forward_request(move _36, move _37) -> [return: bb31, unwind: bb29]; // scope 3 at cita-auth/src/handler.rs:759:25: 759:61
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:759:30: 759:45
                                         // + literal: Const { ty: for<'a> fn(&'a MsgHandler, libproto::Request) {MsgHandler::forward_request}, val: Value(<ZST>) }
    }

    bb18: {
        _50 = deref_copy ((*_1).1: &bool); // scope 3 at cita-auth/src/handler.rs:760:31: 760:39
        _38 = (*_50);                    // scope 3 at cita-auth/src/handler.rs:760:31: 760:39
        switchInt(move _38) -> [0: bb20, otherwise: bb19]; // scope 3 at cita-auth/src/handler.rs:760:31: 760:39
    }

    bb19: {
        _51 = deref_copy ((*_1).0: &&mut handler::MsgHandler); // scope 3 at cita-auth/src/handler.rs:762:25: 762:79
        _52 = deref_copy (*_51);         // scope 3 at cita-auth/src/handler.rs:762:25: 762:79
        _40 = &(*_52);                   // scope 3 at cita-auth/src/handler.rs:762:25: 762:79
        _53 = const false;               // scope 3 at cita-auth/src/handler.rs:762:55: 762:65
        _41 = move _25;                  // scope 3 at cita-auth/src/handler.rs:762:55: 762:65
        _42 = const _;                   // scope 3 at cita-auth/src/handler.rs:762:67: 762:78
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:762:67: 762:78
                                         // + literal: Const { ty: &transaction_verify::Error, val: Unevaluated(MsgHandler::deal_request::{closure#5}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[0])) }
        _39 = MsgHandler::publish_tx_failed_result(move _40, move _41, _42) -> [return: bb32, unwind: bb29]; // scope 3 at cita-auth/src/handler.rs:762:25: 762:79
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:762:30: 762:54
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a MsgHandler, Vec<u8>, &'b transaction_verify::Error) {MsgHandler::publish_tx_failed_result}, val: Value(<ZST>) }
    }

    bb20: {
        switchInt(_53) -> [0: bb21, otherwise: bb27]; // scope 2 at cita-auth/src/handler.rs:764:17: 764:18
    }

    bb21: {
        _53 = const false;               // scope 2 at cita-auth/src/handler.rs:764:17: 764:18
        drop(_7) -> [return: bb22, unwind: bb25]; // scope 1 at cita-auth/src/handler.rs:764:17: 764:18
    }

    bb22: {
        drop(_4) -> bb23;                // scope 0 at cita-auth/src/handler.rs:764:17: 764:18
    }

    bb23: {
        return;                          // scope 0 at cita-auth/src/handler.rs:764:18: 764:18
    }

    bb24 (cleanup): {
        drop(_7) -> bb25;                // scope 1 at cita-auth/src/handler.rs:764:17: 764:18
    }

    bb25 (cleanup): {
        drop(_4) -> bb26;                // scope 0 at cita-auth/src/handler.rs:764:17: 764:18
    }

    bb26 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/handler.rs:748:27: 764:18
    }

    bb27: {
        drop(_25) -> [return: bb21, unwind: bb24]; // scope 2 at cita-auth/src/handler.rs:764:17: 764:18
    }

    bb28 (cleanup): {
        drop(_25) -> bb24;               // scope 2 at cita-auth/src/handler.rs:764:17: 764:18
    }

    bb29 (cleanup): {
        switchInt(_53) -> [0: bb24, otherwise: bb28]; // scope 2 at cita-auth/src/handler.rs:764:17: 764:18
    }

    bb30: {
        goto -> bb16;                    // scope 3 at cita-auth/src/handler.rs:756:29: 756:80
    }

    bb31: {
        goto -> bb20;                    // scope 3 at cita-auth/src/handler.rs:759:25: 759:61
    }

    bb32: {
        goto -> bb20;                    // scope 3 at cita-auth/src/handler.rs:762:25: 762:79
    }
}

promoted[0] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_request::{closure#5}: &transaction_verify::Error = {
    let mut _0: &transaction_verify::Error; // return place in scope 0 at cita-auth/src/handler.rs:762:67: 762:78
    let mut _1: transaction_verify::Error; // in scope 0 at cita-auth/src/handler.rs:762:68: 762:78

    bb0: {
        _1 = transaction_verify::Error::Dup; // scope 0 at cita-auth/src/handler.rs:762:68: 762:78
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:762:67: 762:78
        return;                          // scope 0 at cita-auth/src/handler.rs:762:67: 762:78
    }
}

fn handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_snapshot(_1: &mut MsgHandler, _2: &libproto::SnapshotReq) -> () {
    debug self => _1;                    // in scope 0 at cita-auth/src/handler.rs:852:22: 852:31
    debug snapshot_req => _2;            // in scope 0 at cita-auth/src/handler.rs:852:33: 852:45
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/handler.rs:852:61: 852:61
    let mut _3: isize;                   // in scope 0 at cita-auth/src/handler.rs:854:13: 854:26
    let _4: log::Level;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
    let mut _5: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _6: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _7: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _8: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _9: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _10: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _11: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _12: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _13: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _14: &[&str];                // in scope 0 at cita-auth/src/handler.rs:855:23: 855:57
    let mut _15: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _16: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _17: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _18: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:855:59: 855:71
    let _19: &&libproto::SnapshotReq;    // in scope 0 at cita-auth/src/handler.rs:855:59: 855:71
    let _20: ();                         // in scope 0 at cita-auth/src/handler.rs:856:17: 856:73
    let _21: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-auth/src/handler.rs:856:35: 856:47
    let mut _22: libproto::Resp;         // in scope 0 at cita-auth/src/handler.rs:856:49: 856:66
    let _23: log::Level;                 // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
    let mut _24: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _25: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _26: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _27: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _28: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _29: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _30: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _31: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _32: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _33: &[&str];                // in scope 0 at cita-auth/src/handler.rs:859:23: 859:54
    let mut _34: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _35: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _36: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _37: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:859:56: 859:68
    let _38: &&libproto::SnapshotReq;    // in scope 0 at cita-auth/src/handler.rs:859:56: 859:68
    let _39: ();                         // in scope 0 at cita-auth/src/handler.rs:861:17: 861:70
    let _40: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-auth/src/handler.rs:861:35: 861:47
    let mut _41: libproto::Resp;         // in scope 0 at cita-auth/src/handler.rs:861:49: 861:63
    let _42: log::Level;                 // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
    let mut _43: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _44: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _45: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _46: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _47: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _48: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _49: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _50: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _51: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _52: &[&str];                // in scope 0 at cita-auth/src/handler.rs:864:23: 864:56
    let mut _53: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _54: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _55: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _56: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:864:58: 864:70
    let _57: &&libproto::SnapshotReq;    // in scope 0 at cita-auth/src/handler.rs:864:58: 864:70
    let _58: ();                         // in scope 0 at cita-auth/src/handler.rs:865:17: 865:72
    let _59: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-auth/src/handler.rs:865:35: 865:47
    let mut _60: libproto::Resp;         // in scope 0 at cita-auth/src/handler.rs:865:49: 865:65
    let _61: log::Level;                 // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
    let mut _62: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _63: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _64: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _65: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _66: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _67: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _68: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _69: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _70: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _71: &[&str];                // in scope 0 at cita-auth/src/handler.rs:868:23: 868:54
    let mut _72: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _73: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _74: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _75: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:868:56: 868:68
    let _76: &&libproto::SnapshotReq;    // in scope 0 at cita-auth/src/handler.rs:868:56: 868:68
    let _77: ();                         // in scope 0 at cita-auth/src/handler.rs:870:17: 870:50
    let mut _78: &mut dispatcher::Dispatcher; // in scope 0 at cita-auth/src/handler.rs:870:17: 870:50
    let _79: ();                         // in scope 0 at cita-auth/src/handler.rs:871:17: 871:35
    let mut _80: &mut lru::LruCache<cita_types::H256, std::option::Option<std::vec::Vec<u8>>>; // in scope 0 at cita-auth/src/handler.rs:871:17: 871:35
    let _81: ();                         // in scope 0 at cita-auth/src/handler.rs:872:17: 872:45
    let mut _82: &mut history::HistoryHeights; // in scope 0 at cita-auth/src/handler.rs:872:17: 872:45
    let _83: ();                         // in scope 0 at cita-auth/src/handler.rs:873:17: 873:44
    let mut _84: &mut std::collections::HashMap<u64, std::collections::HashSet<cita_types::H256>>; // in scope 0 at cita-auth/src/handler.rs:873:17: 873:44
    let _85: ();                         // in scope 0 at cita-auth/src/handler.rs:874:17: 874:46
    let mut _86: &mut std::collections::HashMap<cita_types::H160, i8>; // in scope 0 at cita-auth/src/handler.rs:874:17: 874:46
    let _87: ();                         // in scope 0 at cita-auth/src/handler.rs:876:17: 876:70
    let _88: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-auth/src/handler.rs:876:35: 876:47
    let mut _89: libproto::Resp;         // in scope 0 at cita-auth/src/handler.rs:876:49: 876:63
    let _90: log::Level;                 // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
    let mut _91: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _92: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _93: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _94: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _95: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _96: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _97: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _98: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _99: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _100: &[&str];               // in scope 0 at cita-auth/src/handler.rs:879:23: 879:52
    let mut _101: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _102: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _103: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _104: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:879:54: 879:66
    let _105: &&libproto::SnapshotReq;   // in scope 0 at cita-auth/src/handler.rs:879:54: 879:66
    let _106: ();                        // in scope 0 at cita-auth/src/handler.rs:880:17: 880:78
    let mut _107: u64;                   // in scope 0 at cita-auth/src/handler.rs:880:54: 880:77
    let _108: ();                        // in scope 0 at cita-auth/src/handler.rs:882:17: 882:68
    let _109: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-auth/src/handler.rs:882:35: 882:47
    let mut _110: libproto::Resp;        // in scope 0 at cita-auth/src/handler.rs:882:49: 882:61
    scope 1 {
        debug lvl => _4;                 // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _123: &(&str, &str, &str, u32); // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        let mut _124: &[&str; 1];        // in scope 1 at cita-auth/src/handler.rs:855:23: 855:57
        let mut _125: &log::LevelFilter; // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
    scope 2 {
        debug lvl => _23;                // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _111: &(&str, &str, &str, u32); // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        let mut _112: &[&str; 1];        // in scope 2 at cita-auth/src/handler.rs:859:23: 859:54
        let mut _113: &log::LevelFilter; // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
    scope 3 {
        debug lvl => _42;                // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _114: &(&str, &str, &str, u32); // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        let mut _115: &[&str; 1];        // in scope 3 at cita-auth/src/handler.rs:864:23: 864:56
        let mut _116: &log::LevelFilter; // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
    scope 4 {
        debug lvl => _61;                // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _117: &(&str, &str, &str, u32); // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        let mut _118: &[&str; 1];        // in scope 4 at cita-auth/src/handler.rs:868:23: 868:54
        let mut _119: &log::LevelFilter; // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
    scope 5 {
        debug lvl => _90;                // in scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _120: &(&str, &str, &str, u32); // in scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        let mut _121: &[&str; 1];        // in scope 5 at cita-auth/src/handler.rs:879:23: 879:52
        let mut _122: &log::LevelFilter; // in scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }

    bb0: {
        _3 = discriminant(((*_2).0: libproto::Cmd)); // scope 0 at cita-auth/src/handler.rs:853:15: 853:31
        switchInt(move _3) -> [0: bb14, 1: bb36, 2: bb3, 3: bb25, 4: bb1, otherwise: bb2]; // scope 0 at cita-auth/src/handler.rs:853:9: 853:31
    }

    bb1: {
        _90 = log::Level::Info;          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _93 = &_90;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _122 = const _;                  // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::deal_snapshot, [], Some(promoted[11])) }
        _92 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _93, _122) -> bb55; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb2: {
        unreachable;                     // scope 0 at cita-auth/src/handler.rs:853:15: 853:31
    }

    bb3: {
        _4 = log::Level::Info;           // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _7 = &_4;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _125 = const _;                  // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::deal_snapshot, [], Some(promoted[14])) }
        _6 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _7, _125) -> bb7; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb4: {
        _5 = const false;                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb6;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb5: {
        _9 = &_4;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _11 = log::max_level() -> bb8;   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb6: {
        switchInt(move _5) -> [0: bb13, otherwise: bb10]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        switchInt(move _6) -> [0: bb4, otherwise: bb5]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb8: {
        _10 = &_11;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _8 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _9, move _10) -> bb9; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb9: {
        _5 = move _8;                    // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb6;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb10: {
        _124 = const _;                  // scope 1 at cita-auth/src/handler.rs:855:23: 855:57
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:855:23: 855:57
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(MsgHandler::deal_snapshot, [], Some(promoted[13])) }
        _14 = _124 as &[&str] (Pointer(Unsize)); // scope 1 at cita-auth/src/handler.rs:855:23: 855:57
        _19 = &_2;                       // scope 1 at cita-auth/src/handler.rs:855:59: 855:71
        _18 = core::fmt::ArgumentV1::<'_>::new_debug::<&libproto::SnapshotReq>(_19) -> bb11; // scope 1 at cita-auth/src/handler.rs:855:59: 855:71
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:855:59: 855:71
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b &libproto::SnapshotReq) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<&libproto::SnapshotReq>}, val: Value(<ZST>) }
    }

    bb11: {
        _17 = [move _18];                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _16 = &_17;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _15 = _16 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _13 = Arguments::<'_>::new_v1(move _14, move _15) -> bb12; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb12: {
        _123 = const _;                  // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::deal_snapshot, [], Some(promoted[12])) }
        _12 = log::__private_api_log(move _13, _4, _123) -> bb13; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb13: {
        _21 = &((*_1).1: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 0 at cita-auth/src/handler.rs:856:35: 856:47
        _22 = const SnapshotAck;         // scope 0 at cita-auth/src/handler.rs:856:49: 856:66
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: Resp, val: Value(Scalar(0x02)) }
        _20 = snapshot_response(_21, move _22, const true) -> bb63; // scope 0 at cita-auth/src/handler.rs:856:17: 856:73
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:856:17: 856:34
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, Resp, bool) {snapshot_response}, val: Value(<ZST>) }
    }

    bb14: {
        _23 = log::Level::Info;          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _26 = &_23;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _113 = const _;                  // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::deal_snapshot, [], Some(promoted[2])) }
        _25 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _26, _113) -> bb18; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb15: {
        _24 = const false;               // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb17;                    // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb16: {
        _28 = &_23;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _30 = log::max_level() -> bb19;  // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb17: {
        switchInt(move _24) -> [0: bb24, otherwise: bb21]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb18: {
        switchInt(move _25) -> [0: bb15, otherwise: bb16]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb19: {
        _29 = &_30;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _27 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _28, move _29) -> bb20; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb20: {
        _24 = move _27;                  // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb17;                    // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb21: {
        _112 = const _;                  // scope 2 at cita-auth/src/handler.rs:859:23: 859:54
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:859:23: 859:54
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(MsgHandler::deal_snapshot, [], Some(promoted[1])) }
        _33 = _112 as &[&str] (Pointer(Unsize)); // scope 2 at cita-auth/src/handler.rs:859:23: 859:54
        _38 = &_2;                       // scope 2 at cita-auth/src/handler.rs:859:56: 859:68
        _37 = core::fmt::ArgumentV1::<'_>::new_debug::<&libproto::SnapshotReq>(_38) -> bb22; // scope 2 at cita-auth/src/handler.rs:859:56: 859:68
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:859:56: 859:68
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b &libproto::SnapshotReq) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<&libproto::SnapshotReq>}, val: Value(<ZST>) }
    }

    bb22: {
        _36 = [move _37];                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _35 = &_36;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _34 = _35 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _32 = Arguments::<'_>::new_v1(move _33, move _34) -> bb23; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb23: {
        _111 = const _;                  // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::deal_snapshot, [], Some(promoted[0])) }
        _31 = log::__private_api_log(move _32, _23, _111) -> bb24; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb24: {
        ((*_1).9: bool) = const true;    // scope 0 at cita-auth/src/handler.rs:860:17: 860:40
        _40 = &((*_1).1: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 0 at cita-auth/src/handler.rs:861:35: 861:47
        _41 = const BeginAck;            // scope 0 at cita-auth/src/handler.rs:861:49: 861:63
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: Resp, val: Value(Scalar(0x00)) }
        _39 = snapshot_response(_40, move _41, const true) -> bb63; // scope 0 at cita-auth/src/handler.rs:861:17: 861:70
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:861:17: 861:34
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, Resp, bool) {snapshot_response}, val: Value(<ZST>) }
    }

    bb25: {
        _42 = log::Level::Info;          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _45 = &_42;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _116 = const _;                  // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::deal_snapshot, [], Some(promoted[5])) }
        _44 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _45, _116) -> bb29; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb26: {
        _43 = const false;               // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb28;                    // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb27: {
        _47 = &_42;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _49 = log::max_level() -> bb30;  // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb28: {
        switchInt(move _43) -> [0: bb35, otherwise: bb32]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb29: {
        switchInt(move _44) -> [0: bb26, otherwise: bb27]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb30: {
        _48 = &_49;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _46 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _47, move _48) -> bb31; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb31: {
        _43 = move _46;                  // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb28;                    // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb32: {
        _115 = const _;                  // scope 3 at cita-auth/src/handler.rs:864:23: 864:56
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:864:23: 864:56
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(MsgHandler::deal_snapshot, [], Some(promoted[4])) }
        _52 = _115 as &[&str] (Pointer(Unsize)); // scope 3 at cita-auth/src/handler.rs:864:23: 864:56
        _57 = &_2;                       // scope 3 at cita-auth/src/handler.rs:864:58: 864:70
        _56 = core::fmt::ArgumentV1::<'_>::new_debug::<&libproto::SnapshotReq>(_57) -> bb33; // scope 3 at cita-auth/src/handler.rs:864:58: 864:70
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:864:58: 864:70
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: for<'b> fn(&'b &libproto::SnapshotReq) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<&libproto::SnapshotReq>}, val: Value(<ZST>) }
    }

    bb33: {
        _55 = [move _56];                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _54 = &_55;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _53 = _54 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _51 = Arguments::<'_>::new_v1(move _52, move _53) -> bb34; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb34: {
        _114 = const _;                  // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::deal_snapshot, [], Some(promoted[3])) }
        _50 = log::__private_api_log(move _51, _42, _114) -> bb35; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb35: {
        _59 = &((*_1).1: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 0 at cita-auth/src/handler.rs:865:35: 865:47
        _60 = const RestoreAck;          // scope 0 at cita-auth/src/handler.rs:865:49: 865:65
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: Resp, val: Value(Scalar(0x03)) }
        _58 = snapshot_response(_59, move _60, const true) -> bb63; // scope 0 at cita-auth/src/handler.rs:865:17: 865:72
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:865:17: 865:34
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, Resp, bool) {snapshot_response}, val: Value(<ZST>) }
    }

    bb36: {
        _61 = log::Level::Info;          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _64 = &_61;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _119 = const _;                  // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::deal_snapshot, [], Some(promoted[8])) }
        _63 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _64, _119) -> bb40; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb37: {
        _62 = const false;               // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb39;                    // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb38: {
        _66 = &_61;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _68 = log::max_level() -> bb41;  // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb39: {
        switchInt(move _62) -> [0: bb46, otherwise: bb43]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb40: {
        switchInt(move _63) -> [0: bb37, otherwise: bb38]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb41: {
        _67 = &_68;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _65 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _66, move _67) -> bb42; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb42: {
        _62 = move _65;                  // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb39;                    // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb43: {
        _118 = const _;                  // scope 4 at cita-auth/src/handler.rs:868:23: 868:54
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:868:23: 868:54
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(MsgHandler::deal_snapshot, [], Some(promoted[7])) }
        _71 = _118 as &[&str] (Pointer(Unsize)); // scope 4 at cita-auth/src/handler.rs:868:23: 868:54
        _76 = &_2;                       // scope 4 at cita-auth/src/handler.rs:868:56: 868:68
        _75 = core::fmt::ArgumentV1::<'_>::new_debug::<&libproto::SnapshotReq>(_76) -> bb44; // scope 4 at cita-auth/src/handler.rs:868:56: 868:68
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:868:56: 868:68
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: for<'b> fn(&'b &libproto::SnapshotReq) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<&libproto::SnapshotReq>}, val: Value(<ZST>) }
    }

    bb44: {
        _74 = [move _75];                // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _73 = &_74;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _72 = _73 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _70 = Arguments::<'_>::new_v1(move _71, move _72) -> bb45; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb45: {
        _117 = const _;                  // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::deal_snapshot, [], Some(promoted[6])) }
        _69 = log::__private_api_log(move _70, _61, _117) -> bb46; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb46: {
        _78 = &mut ((*_1).6: dispatcher::Dispatcher); // scope 0 at cita-auth/src/handler.rs:870:17: 870:50
        _77 = Dispatcher::clear_txs_pool(move _78, const 0_usize) -> bb47; // scope 0 at cita-auth/src/handler.rs:870:17: 870:50
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:870:33: 870:47
                                         // + literal: Const { ty: for<'a> fn(&'a mut Dispatcher, usize) {Dispatcher::clear_txs_pool}, val: Value(<ZST>) }
    }

    bb47: {
        _80 = &mut ((*_1).2: lru::LruCache<cita_types::H256, std::option::Option<std::vec::Vec<u8>>>); // scope 0 at cita-auth/src/handler.rs:871:17: 871:35
        _79 = LruCache::<H256, std::option::Option<Vec<u8>>>::clear(move _80) -> bb48; // scope 0 at cita-auth/src/handler.rs:871:17: 871:35
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:871:28: 871:33
                                         // + literal: Const { ty: for<'a> fn(&'a mut LruCache<H256, std::option::Option<Vec<u8>>>) {LruCache::<H256, std::option::Option<Vec<u8>>>::clear}, val: Value(<ZST>) }
    }

    bb48: {
        _82 = &mut ((*_1).4: history::HistoryHeights); // scope 0 at cita-auth/src/handler.rs:872:17: 872:45
        _81 = HistoryHeights::reset(move _82) -> bb49; // scope 0 at cita-auth/src/handler.rs:872:17: 872:45
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:872:38: 872:43
                                         // + literal: Const { ty: for<'a> fn(&'a mut HistoryHeights) {HistoryHeights::reset}, val: Value(<ZST>) }
    }

    bb49: {
        _84 = &mut ((*_1).5: std::collections::HashMap<u64, std::collections::HashSet<cita_types::H256>>); // scope 0 at cita-auth/src/handler.rs:873:17: 873:44
        _83 = HashMap::<u64, HashSet<H256>>::clear(move _84) -> bb50; // scope 0 at cita-auth/src/handler.rs:873:17: 873:44
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:873:37: 873:42
                                         // + literal: Const { ty: for<'a> fn(&'a mut HashMap<u64, HashSet<H256>>) {HashMap::<u64, HashSet<H256>>::clear}, val: Value(<ZST>) }
    }

    bb50: {
        _86 = &mut ((*_1).10: std::collections::HashMap<cita_types::H160, i8>); // scope 0 at cita-auth/src/handler.rs:874:17: 874:46
        _85 = HashMap::<H160, i8>::clear(move _86) -> bb51; // scope 0 at cita-auth/src/handler.rs:874:17: 874:46
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:874:39: 874:44
                                         // + literal: Const { ty: for<'a> fn(&'a mut HashMap<H160, i8>) {HashMap::<H160, i8>::clear}, val: Value(<ZST>) }
    }

    bb51: {
        _88 = &((*_1).1: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 0 at cita-auth/src/handler.rs:876:35: 876:47
        _89 = const ClearAck;            // scope 0 at cita-auth/src/handler.rs:876:49: 876:63
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: Resp, val: Value(Scalar(0x01)) }
        _87 = snapshot_response(_88, move _89, const true) -> bb63; // scope 0 at cita-auth/src/handler.rs:876:17: 876:70
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:876:17: 876:34
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, Resp, bool) {snapshot_response}, val: Value(<ZST>) }
    }

    bb52: {
        _91 = const false;               // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb54;                    // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb53: {
        _95 = &_90;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _97 = log::max_level() -> bb56;  // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb54: {
        switchInt(move _91) -> [0: bb61, otherwise: bb58]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb55: {
        switchInt(move _92) -> [0: bb52, otherwise: bb53]; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb56: {
        _96 = &_97;                      // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _94 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _95, move _96) -> bb57; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb57: {
        _91 = move _94;                  // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb54;                    // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb58: {
        _121 = const _;                  // scope 5 at cita-auth/src/handler.rs:879:23: 879:52
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:879:23: 879:52
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(MsgHandler::deal_snapshot, [], Some(promoted[10])) }
        _100 = _121 as &[&str] (Pointer(Unsize)); // scope 5 at cita-auth/src/handler.rs:879:23: 879:52
        _105 = &_2;                      // scope 5 at cita-auth/src/handler.rs:879:54: 879:66
        _104 = core::fmt::ArgumentV1::<'_>::new_debug::<&libproto::SnapshotReq>(_105) -> bb59; // scope 5 at cita-auth/src/handler.rs:879:54: 879:66
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:879:54: 879:66
                                         // + user_ty: UserType(9)
                                         // + literal: Const { ty: for<'b> fn(&'b &libproto::SnapshotReq) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<&libproto::SnapshotReq>}, val: Value(<ZST>) }
    }

    bb59: {
        _103 = [move _104];              // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _102 = &_103;                    // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _101 = _102 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _99 = Arguments::<'_>::new_v1(move _100, move _101) -> bb60; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(8)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb60: {
        _120 = const _;                  // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::deal_snapshot, [], Some(promoted[9])) }
        _98 = log::__private_api_log(move _99, _90, _120) -> bb61; // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb61: {
        _107 = ((*_2).2: u64);           // scope 0 at cita-auth/src/handler.rs:880:54: 880:77
        _106 = MsgHandler::send_single_block_tx_hashes_req(_1, move _107) -> bb62; // scope 0 at cita-auth/src/handler.rs:880:17: 880:78
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:880:22: 880:53
                                         // + literal: Const { ty: for<'a> fn(&'a mut MsgHandler, u64) {MsgHandler::send_single_block_tx_hashes_req}, val: Value(<ZST>) }
    }

    bb62: {
        ((*_1).9: bool) = const false;   // scope 0 at cita-auth/src/handler.rs:881:17: 881:41
        _109 = &((*_1).1: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 0 at cita-auth/src/handler.rs:882:35: 882:47
        _110 = const EndAck;             // scope 0 at cita-auth/src/handler.rs:882:49: 882:61
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: Resp, val: Value(Scalar(0x04)) }
        _108 = snapshot_response(_109, move _110, const true) -> bb63; // scope 0 at cita-auth/src/handler.rs:882:17: 882:68
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:882:17: 882:34
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, Resp, bool) {snapshot_response}, val: Value(<ZST>) }
    }

    bb63: {
        return;                          // scope 0 at cita-auth/src/handler.rs:885:6: 885:6
    }
}

promoted[0] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_snapshot: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:859:17: 859:69
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:859:17: 859:69

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:859:17: 859:69
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:859:17: 859:69
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:859:17: 859:69
        _1 = (move _2, move _4, move _6, const 859_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_snapshot: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/handler.rs:859:23: 859:54
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/handler.rs:859:23: 859:54

    bb0: {
        _1 = [const "receive Snapshot::Begin: "]; // scope 0 at cita-auth/src/handler.rs:859:23: 859:54
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:859:23: 859:54
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:859:23: 859:54
        return;                          // scope 0 at cita-auth/src/handler.rs:859:23: 859:54
    }
}

promoted[2] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_snapshot: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[3] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_snapshot: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:864:17: 864:71
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:864:17: 864:71

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:864:17: 864:71
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:864:17: 864:71
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:864:17: 864:71
        _1 = (move _2, move _4, move _6, const 864_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[4] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_snapshot: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/handler.rs:864:23: 864:56
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/handler.rs:864:23: 864:56

    bb0: {
        _1 = [const "receive Snapshot::Restore: "]; // scope 0 at cita-auth/src/handler.rs:864:23: 864:56
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:864:23: 864:56
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:864:23: 864:56
        return;                          // scope 0 at cita-auth/src/handler.rs:864:23: 864:56
    }
}

promoted[5] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_snapshot: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[6] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_snapshot: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:868:17: 868:69
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:868:17: 868:69

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:868:17: 868:69
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:868:17: 868:69
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:868:17: 868:69
        _1 = (move _2, move _4, move _6, const 868_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[7] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_snapshot: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/handler.rs:868:23: 868:54
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/handler.rs:868:23: 868:54

    bb0: {
        _1 = [const "receive Snapshot::Clear: "]; // scope 0 at cita-auth/src/handler.rs:868:23: 868:54
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:868:23: 868:54
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:868:23: 868:54
        return;                          // scope 0 at cita-auth/src/handler.rs:868:23: 868:54
    }
}

promoted[8] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_snapshot: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[9] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_snapshot: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:879:17: 879:67
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:879:17: 879:67

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:879:17: 879:67
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:879:17: 879:67
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:879:17: 879:67
        _1 = (move _2, move _4, move _6, const 879_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[10] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_snapshot: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/handler.rs:879:23: 879:52
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/handler.rs:879:23: 879:52

    bb0: {
        _1 = [const "receive Snapshot::End: "]; // scope 0 at cita-auth/src/handler.rs:879:23: 879:52
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:879:23: 879:52
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:879:23: 879:52
        return;                          // scope 0 at cita-auth/src/handler.rs:879:23: 879:52
    }
}

promoted[11] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_snapshot: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[12] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_snapshot: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:855:17: 855:72
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:855:17: 855:72

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:855:17: 855:72
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:855:17: 855:72
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:855:17: 855:72
        _1 = (move _2, move _4, move _6, const 855_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[13] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_snapshot: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/handler.rs:855:23: 855:57
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/handler.rs:855:23: 855:57

    bb0: {
        _1 = [const "receive Snapshot::Snapshot: "]; // scope 0 at cita-auth/src/handler.rs:855:23: 855:57
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:855:23: 855:57
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:855:23: 855:57
        return;                          // scope 0 at cita-auth/src/handler.rs:855:23: 855:57
    }
}

promoted[14] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_snapshot: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_miscellaneous(_1: &mut MsgHandler, _2: &libproto::Miscellaneous) -> () {
    debug self => _1;                    // in scope 0 at cita-auth/src/handler.rs:887:27: 887:36
    debug miscellaneous => _2;           // in scope 0 at cita-auth/src/handler.rs:887:38: 887:51
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/handler.rs:887:69: 887:69
    let mut _3: isize;                   // in scope 0 at cita-auth/src/handler.rs:888:16: 888:29
    let mut _5: std::option::Option<handler::ChainId>; // in scope 0 at cita-auth/src/handler.rs:889:29: 902:14
    let mut _6: handler::ChainId;        // in scope 0 at cita-auth/src/handler.rs:890:22: 890:57
    let mut _7: u32;                     // in scope 0 at cita-auth/src/handler.rs:890:34: 890:56
    let mut _8: bool;                    // in scope 0 at cita-auth/src/handler.rs:891:23: 891:34
    let mut _9: usize;                   // in scope 0 at cita-auth/src/handler.rs:892:20: 892:51
    let mut _10: &std::vec::Vec<u8>;     // in scope 0 at cita-auth/src/handler.rs:892:20: 892:51
    let mut _11: handler::ChainId;       // in scope 0 at cita-auth/src/handler.rs:893:26: 895:23
    let mut _12: cita_types::U256;       // in scope 0 at cita-auth/src/handler.rs:893:38: 895:22
    let mut _13: &[u8];                  // in scope 0 at cita-auth/src/handler.rs:894:25: 894:61
    let mut _14: &std::vec::Vec<u8>;     // in scope 0 at cita-auth/src/handler.rs:894:25: 894:61
    let mut _16: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _17: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _18: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _19: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _20: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _21: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _22: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _23: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _24: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _25: &[&str];                // in scope 0 at cita-auth/src/handler.rs:900:24: 900:48
    let mut _26: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _27: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _28: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _29: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:900:50: 900:57
    let _30: &u32;                       // in scope 0 at cita-auth/src/handler.rs:900:50: 900:57
    let mut _32: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _33: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _34: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _35: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _36: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _37: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _38: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _39: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _40: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _41: &[&str];                // in scope 0 at cita-auth/src/handler.rs:903:19: 903:53
    let mut _42: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _43: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _44: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _45: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:903:55: 903:68
    let _46: &std::option::Option<handler::ChainId>; // in scope 0 at cita-auth/src/handler.rs:903:55: 903:68
    scope 1 {
        debug version => _4;             // in scope 1 at cita-auth/src/handler.rs:888:21: 888:28
        let _4: u32;                     // in scope 1 at cita-auth/src/handler.rs:888:21: 888:28
        let _15: log::Level;             // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let _31: log::Level;             // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        scope 2 {
            debug lvl => _15;            // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _50: &(&str, &str, &str, u32); // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _51: &[&str; 2];     // in scope 2 at cita-auth/src/handler.rs:900:24: 900:48
            let mut _52: &log::LevelFilter; // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
        scope 3 {
            debug lvl => _31;            // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _47: &(&str, &str, &str, u32); // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
            let mut _48: &[&str; 2];     // in scope 3 at cita-auth/src/handler.rs:903:19: 903:53
            let mut _49: &log::LevelFilter; // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        }
    }

    bb0: {
        _3 = discriminant((((*_1).12: handler::SysConfigInfo).4: std::option::Option<u32>)); // scope 1 at cita-auth/src/handler.rs:888:16: 888:29
        switchInt(move _3) -> [1: bb1, otherwise: bb31]; // scope 1 at cita-auth/src/handler.rs:888:16: 888:29
    }

    bb1: {
        _4 = (((((*_1).12: handler::SysConfigInfo).4: std::option::Option<u32>) as Some).0: u32); // scope 1 at cita-auth/src/handler.rs:888:21: 888:28
        switchInt(move _4) -> [0: bb2, otherwise: bb3]; // scope 1 at cita-auth/src/handler.rs:889:32: 889:44
    }

    bb2: {
        _7 = ((*_2).0: u32);             // scope 1 at cita-auth/src/handler.rs:890:34: 890:56
        _6 = ChainId::V0(move _7);       // scope 1 at cita-auth/src/handler.rs:890:22: 890:57
        _5 = std::option::Option::<ChainId>::Some(move _6); // scope 1 at cita-auth/src/handler.rs:890:17: 890:58
        goto -> bb21;                    // scope 1 at cita-auth/src/handler.rs:889:29: 902:14
    }

    bb3: {
        _8 = Lt(_4, const 3_u32);        // scope 1 at cita-auth/src/handler.rs:891:23: 891:34
        switchInt(move _8) -> [0: bb10, otherwise: bb4]; // scope 1 at cita-auth/src/handler.rs:891:23: 891:34
    }

    bb4: {
        _10 = &((*_2).1: std::vec::Vec<u8>); // scope 1 at cita-auth/src/handler.rs:892:20: 892:51
        _9 = Vec::<u8>::len(move _10) -> bb5; // scope 1 at cita-auth/src/handler.rs:892:20: 892:51
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:892:46: 892:49
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<u8>) -> usize {Vec::<u8>::len}, val: Value(<ZST>) }
    }

    bb5: {
        switchInt(move _9) -> [32: bb6, otherwise: bb9]; // scope 1 at cita-auth/src/handler.rs:892:20: 892:57
    }

    bb6: {
        _14 = &((*_2).1: std::vec::Vec<u8>); // scope 1 at cita-auth/src/handler.rs:894:25: 894:61
        _13 = Vec::<u8>::as_slice(move _14) -> bb7; // scope 1 at cita-auth/src/handler.rs:894:25: 894:61
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:894:51: 894:59
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<u8>) -> &'a [u8] {Vec::<u8>::as_slice}, val: Value(<ZST>) }
    }

    bb7: {
        _12 = <U256 as From<&[u8]>>::from(move _13) -> bb8; // scope 1 at cita-auth/src/handler.rs:893:38: 895:22
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:893:38: 893:48
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[u8]) -> U256 {<U256 as From<&[u8]>>::from}, val: Value(<ZST>) }
    }

    bb8: {
        _11 = ChainId::V1(move _12);     // scope 1 at cita-auth/src/handler.rs:893:26: 895:23
        _5 = std::option::Option::<ChainId>::Some(move _11); // scope 1 at cita-auth/src/handler.rs:893:21: 895:24
        goto -> bb21;                    // scope 1 at cita-auth/src/handler.rs:892:17: 898:18
    }

    bb9: {
        _5 = std::option::Option::<ChainId>::None; // scope 1 at cita-auth/src/handler.rs:897:21: 897:25
        goto -> bb21;                    // scope 1 at cita-auth/src/handler.rs:892:17: 898:18
    }

    bb10: {
        _15 = log::Level::Error;         // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:67:14: 67:34
        _18 = &_15;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _52 = const _;                   // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::deal_miscellaneous, [], Some(promoted[5])) }
        _17 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _18, _52) -> bb14; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb11: {
        _16 = const false;               // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb13;                    // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb12: {
        _20 = &_15;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _22 = log::max_level() -> bb15;  // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb13: {
        switchInt(move _16) -> [0: bb20, otherwise: bb17]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb14: {
        switchInt(move _17) -> [0: bb11, otherwise: bb12]; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb15: {
        _21 = &_22;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _19 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _20, move _21) -> bb16; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb16: {
        _16 = move _19;                  // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb13;                    // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb17: {
        _51 = const _;                   // scope 2 at cita-auth/src/handler.rs:900:24: 900:48
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:900:24: 900:48
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(MsgHandler::deal_miscellaneous, [], Some(promoted[4])) }
        _25 = _51 as &[&str] (Pointer(Unsize)); // scope 2 at cita-auth/src/handler.rs:900:24: 900:48
        _30 = &_4;                       // scope 2 at cita-auth/src/handler.rs:900:50: 900:57
        _29 = core::fmt::ArgumentV1::<'_>::new_display::<u32>(_30) -> bb18; // scope 2 at cita-auth/src/handler.rs:900:50: 900:57
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:900:50: 900:57
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b u32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u32>}, val: Value(<ZST>) }
    }

    bb18: {
        _28 = [move _29];                // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _27 = &_28;                      // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _26 = _27 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _24 = Arguments::<'_>::new_v1(move _25, move _26) -> bb19; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb19: {
        _50 = const _;                   // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::deal_miscellaneous, [], Some(promoted[3])) }
        _23 = log::__private_api_log(move _24, _15, _50) -> bb20; // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb20: {
        _5 = std::option::Option::<ChainId>::None; // scope 1 at cita-auth/src/handler.rs:901:17: 901:21
        goto -> bb21;                    // scope 1 at cita-auth/src/handler.rs:891:20: 902:14
    }

    bb21: {
        ((*_1).3: std::option::Option<handler::ChainId>) = move _5; // scope 1 at cita-auth/src/handler.rs:889:13: 902:14
        _31 = log::Level::Info;          // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _34 = &_31;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _49 = const _;                   // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::deal_miscellaneous, [], Some(promoted[2])) }
        _33 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _34, _49) -> bb25; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb22: {
        _32 = const false;               // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb24;                    // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb23: {
        _36 = &_31;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _38 = log::max_level() -> bb26;  // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb24: {
        switchInt(move _32) -> [0: bb31, otherwise: bb28]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb25: {
        switchInt(move _33) -> [0: bb22, otherwise: bb23]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb26: {
        _37 = &_38;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _35 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _36, move _37) -> bb27; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb27: {
        _32 = move _35;                  // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb24;                    // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb28: {
        _48 = const _;                   // scope 3 at cita-auth/src/handler.rs:903:19: 903:53
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:903:19: 903:53
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(MsgHandler::deal_miscellaneous, [], Some(promoted[1])) }
        _41 = _48 as &[&str] (Pointer(Unsize)); // scope 3 at cita-auth/src/handler.rs:903:19: 903:53
        _46 = &((*_1).3: std::option::Option<handler::ChainId>); // scope 3 at cita-auth/src/handler.rs:903:55: 903:68
        _45 = core::fmt::ArgumentV1::<'_>::new_debug::<std::option::Option<ChainId>>(_46) -> bb29; // scope 3 at cita-auth/src/handler.rs:903:55: 903:68
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:903:55: 903:68
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'b> fn(&'b std::option::Option<ChainId>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<std::option::Option<ChainId>>}, val: Value(<ZST>) }
    }

    bb29: {
        _44 = [move _45];                // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _43 = &_44;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _42 = _43 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _40 = Arguments::<'_>::new_v1(move _41, move _42) -> bb30; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb30: {
        _47 = const _;                   // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::deal_miscellaneous, [], Some(promoted[0])) }
        _39 = log::__private_api_log(move _40, _31, _47) -> bb31; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb31: {
        return;                          // scope 0 at cita-auth/src/handler.rs:905:6: 905:6
    }
}

promoted[0] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_miscellaneous: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:903:13: 903:69
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:903:13: 903:69

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:903:13: 903:69
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:903:13: 903:69
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:903:13: 903:69
        _1 = (move _2, move _4, move _6, const 903_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_miscellaneous: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-auth/src/handler.rs:903:19: 903:53
    let mut _1: [&str; 2];               // in scope 0 at cita-auth/src/handler.rs:903:19: 903:53

    bb0: {
        _1 = [const "Get chain_id(", const ") from executor"]; // scope 0 at cita-auth/src/handler.rs:903:19: 903:53
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:903:19: 903:53
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:903:19: 903:53
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:903:19: 903:53
        return;                          // scope 0 at cita-auth/src/handler.rs:903:19: 903:53
    }
}

promoted[2] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_miscellaneous: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[3] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_miscellaneous: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:900:17: 900:58
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:900:17: 900:58

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:900:17: 900:58
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:900:17: 900:58
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:900:17: 900:58
        _1 = (move _2, move _4, move _6, const 900_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[4] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_miscellaneous: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-auth/src/handler.rs:900:24: 900:48
    let mut _1: [&str; 2];               // in scope 0 at cita-auth/src/handler.rs:900:24: 900:48

    bb0: {
        _1 = [const "unexpected version ", const "!"]; // scope 0 at cita-auth/src/handler.rs:900:24: 900:48
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:900:24: 900:48
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:900:24: 900:48
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:900:24: 900:48
        return;                          // scope 0 at cita-auth/src/handler.rs:900:24: 900:48
    }
}

promoted[5] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_miscellaneous: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_get_block_txn(_1: &mut MsgHandler, _2: &mut libproto::GetBlockTxn, _3: u32) -> () {
    debug self => _1;                    // in scope 0 at cita-auth/src/handler.rs:907:27: 907:36
    debug get_block_txn => _2;           // in scope 0 at cita-auth/src/handler.rs:907:38: 907:51
    debug origin => _3;                  // in scope 0 at cita-auth/src/handler.rs:907:71: 907:77
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/handler.rs:907:87: 907:87
    let _4: std::vec::Vec<cita_types::H256>; // in scope 0 at cita-auth/src/handler.rs:908:13: 908:22
    let mut _5: std::iter::Map<std::slice::Iter<'_, std::vec::Vec<u8>>, [closure@cita-auth/src/handler.rs:911:18: 911:22]>; // in scope 0 at cita-auth/src/handler.rs:908:36: 911:61
    let mut _6: std::slice::Iter<'_, std::vec::Vec<u8>>; // in scope 0 at cita-auth/src/handler.rs:908:36: 910:20
    let mut _7: &[std::vec::Vec<u8>];    // in scope 0 at cita-auth/src/handler.rs:908:36: 910:20
    let _8: &[std::vec::Vec<u8>];        // in scope 0 at cita-auth/src/handler.rs:908:36: 909:29
    let mut _9: &libproto::GetBlockTxn;  // in scope 0 at cita-auth/src/handler.rs:908:36: 909:29
    let mut _11: std::iter::Map<std::vec::IntoIter<libproto::SignedTransaction>, [closure@cita-auth/src/handler.rs:917:18: 917:26]>; // in scope 0 at cita-auth/src/handler.rs:913:47: 917:58
    let mut _12: std::vec::IntoIter<libproto::SignedTransaction>; // in scope 0 at cita-auth/src/handler.rs:913:47: 916:25
    let mut _13: std::vec::Vec<libproto::SignedTransaction>; // in scope 0 at cita-auth/src/handler.rs:913:47: 915:33
    let mut _14: &dispatcher::Dispatcher; // in scope 0 at cita-auth/src/handler.rs:913:47: 915:33
    let mut _15: &[cita_types::H256];    // in scope 0 at cita-auth/src/handler.rs:915:22: 915:32
    let _16: &[cita_types::H256];        // in scope 0 at cita-auth/src/handler.rs:915:22: 915:32
    let _17: &std::vec::Vec<cita_types::H256>; // in scope 0 at cita-auth/src/handler.rs:915:22: 915:32
    let mut _19: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _20: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _21: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _22: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _23: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _24: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _25: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _26: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _27: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _28: &[&str];                // in scope 0 at cita-auth/src/handler.rs:920:15: 920:49
    let mut _29: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _30: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _31: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _32: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:920:51: 920:60
    let _33: &usize;                     // in scope 0 at cita-auth/src/handler.rs:920:51: 920:60
    let _34: usize;                      // in scope 0 at cita-auth/src/handler.rs:920:51: 920:60
    let mut _35: &std::vec::Vec<libproto::UnverifiedTransaction>; // in scope 0 at cita-auth/src/handler.rs:920:51: 920:60
    let mut _36: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:920:62: 920:68
    let _37: &u32;                       // in scope 0 at cita-auth/src/handler.rs:920:62: 920:68
    let _39: ();                         // in scope 0 at cita-auth/src/handler.rs:923:9: 923:66
    let mut _40: &mut libproto::BlockTxn; // in scope 0 at cita-auth/src/handler.rs:923:9: 923:66
    let mut _41: std::vec::Vec<u8>;      // in scope 0 at cita-auth/src/handler.rs:923:34: 923:65
    let _42: ();                         // in scope 0 at cita-auth/src/handler.rs:924:9: 924:47
    let mut _43: &mut libproto::BlockTxn; // in scope 0 at cita-auth/src/handler.rs:924:9: 924:47
    let mut _44: protobuf::repeated::RepeatedField<libproto::UnverifiedTransaction>; // in scope 0 at cita-auth/src/handler.rs:924:36: 924:46
    let mut _45: std::vec::Vec<libproto::UnverifiedTransaction>; // in scope 0 at cita-auth/src/handler.rs:924:36: 924:39
    let mut _47: libproto::OperateType;  // in scope 0 at cita-auth/src/handler.rs:925:33: 925:52
    let mut _48: libproto::MsgClass;     // in scope 0 at cita-auth/src/handler.rs:925:62: 925:78
    let mut _49: libproto::BlockTxn;     // in scope 0 at cita-auth/src/handler.rs:925:62: 925:71
    let _50: ();                         // in scope 0 at cita-auth/src/handler.rs:927:9: 932:22
    let mut _51: std::result::Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>>; // in scope 0 at cita-auth/src/handler.rs:927:9: 931:15
    let mut _52: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-auth/src/handler.rs:927:9: 931:15
    let mut _53: (std::string::String, std::vec::Vec<u8>); // in scope 0 at cita-auth/src/handler.rs:928:19: 931:14
    let mut _54: std::string::String;    // in scope 0 at cita-auth/src/handler.rs:929:17: 929:54
    let mut _55: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _56: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _57: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _58: std::vec::Vec<u8>;      // in scope 0 at cita-auth/src/handler.rs:930:17: 930:43
    let mut _59: std::result::Result<std::vec::Vec<u8>, libproto::TryIntoConvertError>; // in scope 0 at cita-auth/src/handler.rs:930:17: 930:34
    let _60: &libproto::Message;         // in scope 0 at cita-auth/src/handler.rs:930:17: 930:23
    let mut _64: bool;                   // in scope 0 at cita-auth/src/handler.rs:933:5: 933:6
    let mut _65: bool;                   // in scope 0 at cita-auth/src/handler.rs:933:5: 933:6
    scope 1 {
        debug short_ids => _4;           // in scope 1 at cita-auth/src/handler.rs:908:13: 908:22
        let _10: std::vec::Vec<libproto::UnverifiedTransaction>; // in scope 1 at cita-auth/src/handler.rs:913:13: 913:16
        scope 2 {
            debug txs => _10;            // in scope 2 at cita-auth/src/handler.rs:913:13: 913:16
            let _18: log::Level;         // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let mut _38: libproto::BlockTxn; // in scope 2 at cita-auth/src/handler.rs:922:13: 922:26
            scope 3 {
                debug lvl => _18;        // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _61: &(&str, &str, &str, u32); // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _62: &[&str; 2]; // in scope 3 at cita-auth/src/handler.rs:920:15: 920:49
                let mut _63: &log::LevelFilter; // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
            scope 4 {
                debug block_txn => _38;  // in scope 4 at cita-auth/src/handler.rs:922:13: 922:26
                let _46: libproto::Message; // in scope 4 at cita-auth/src/handler.rs:925:13: 925:16
                scope 5 {
                    debug msg => _46;    // in scope 5 at cita-auth/src/handler.rs:925:13: 925:16
                }
            }
        }
    }

    bb0: {
        _64 = const false;               // scope 0 at cita-auth/src/handler.rs:908:13: 908:22
        _65 = const false;               // scope 0 at cita-auth/src/handler.rs:908:13: 908:22
        _9 = &(*_2);                     // scope 0 at cita-auth/src/handler.rs:908:36: 909:29
        _8 = libproto::GetBlockTxn::get_short_ids(move _9) -> bb1; // scope 0 at cita-auth/src/handler.rs:908:36: 909:29
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:909:14: 909:27
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::GetBlockTxn) -> &'a [Vec<u8>] {libproto::GetBlockTxn::get_short_ids}, val: Value(<ZST>) }
    }

    bb1: {
        _7 = _8;                         // scope 0 at cita-auth/src/handler.rs:908:36: 910:20
        _6 = core::slice::<impl [Vec<u8>]>::iter(move _7) -> bb2; // scope 0 at cita-auth/src/handler.rs:908:36: 910:20
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:910:14: 910:18
                                         // + literal: Const { ty: for<'a> fn(&'a [Vec<u8>]) -> std::slice::Iter<'a, Vec<u8>> {core::slice::<impl [Vec<u8>]>::iter}, val: Value(<ZST>) }
    }

    bb2: {
        _5 = <std::slice::Iter<'_, Vec<u8>> as Iterator>::map::<H256, [closure@cita-auth/src/handler.rs:911:18: 911:22]>(move _6, const ZeroSized: [closure@cita-auth/src/handler.rs:911:18: 911:22]) -> bb3; // scope 0 at cita-auth/src/handler.rs:908:36: 911:61
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:911:14: 911:17
                                         // + literal: Const { ty: fn(std::slice::Iter<'_, Vec<u8>>, [closure@cita-auth/src/handler.rs:911:18: 911:22]) -> std::iter::Map<std::slice::Iter<'_, Vec<u8>>, [closure@cita-auth/src/handler.rs:911:18: 911:22]> {<std::slice::Iter<'_, Vec<u8>> as Iterator>::map::<H256, [closure@cita-auth/src/handler.rs:911:18: 911:22]>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: [closure@cita-auth/src/handler.rs:911:18: 911:22], val: Value(<ZST>) }
    }

    bb3: {
        _4 = <std::iter::Map<std::slice::Iter<'_, Vec<u8>>, [closure@cita-auth/src/handler.rs:911:18: 911:22]> as Iterator>::collect::<Vec<H256>>(move _5) -> bb4; // scope 0 at cita-auth/src/handler.rs:908:36: 912:23
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:912:14: 912:21
                                         // + literal: Const { ty: fn(std::iter::Map<std::slice::Iter<'_, Vec<u8>>, [closure@cita-auth/src/handler.rs:911:18: 911:22]>) -> Vec<H256> {<std::iter::Map<std::slice::Iter<'_, Vec<u8>>, [closure@cita-auth/src/handler.rs:911:18: 911:22]> as Iterator>::collect::<Vec<H256>>}, val: Value(<ZST>) }
    }

    bb4: {
        _14 = &((*_1).6: dispatcher::Dispatcher); // scope 1 at cita-auth/src/handler.rs:913:47: 915:33
        _17 = &_4;                       // scope 1 at cita-auth/src/handler.rs:915:22: 915:32
        _16 = <Vec<H256> as Deref>::deref(_17) -> [return: bb5, unwind: bb38]; // scope 1 at cita-auth/src/handler.rs:915:22: 915:32
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:915:22: 915:32
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<H256>) -> &'a <Vec<H256> as Deref>::Target {<Vec<H256> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb5: {
        _15 = _16;                       // scope 1 at cita-auth/src/handler.rs:915:22: 915:32
        _13 = Dispatcher::get_txs(move _14, move _15) -> [return: bb6, unwind: bb38]; // scope 1 at cita-auth/src/handler.rs:913:47: 915:33
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:915:14: 915:21
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Dispatcher, &'b [H256]) -> Vec<SignedTransaction> {Dispatcher::get_txs}, val: Value(<ZST>) }
    }

    bb6: {
        _12 = <Vec<SignedTransaction> as IntoIterator>::into_iter(move _13) -> [return: bb7, unwind: bb38]; // scope 1 at cita-auth/src/handler.rs:913:47: 916:25
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:916:14: 916:23
                                         // + literal: Const { ty: fn(Vec<SignedTransaction>) -> <Vec<SignedTransaction> as IntoIterator>::IntoIter {<Vec<SignedTransaction> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb7: {
        _11 = <std::vec::IntoIter<SignedTransaction> as Iterator>::map::<UnverifiedTransaction, [closure@cita-auth/src/handler.rs:917:18: 917:26]>(move _12, const ZeroSized: [closure@cita-auth/src/handler.rs:917:18: 917:26]) -> [return: bb8, unwind: bb38]; // scope 1 at cita-auth/src/handler.rs:913:47: 917:58
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:917:14: 917:17
                                         // + literal: Const { ty: fn(std::vec::IntoIter<SignedTransaction>, [closure@cita-auth/src/handler.rs:917:18: 917:26]) -> std::iter::Map<std::vec::IntoIter<SignedTransaction>, [closure@cita-auth/src/handler.rs:917:18: 917:26]> {<std::vec::IntoIter<SignedTransaction> as Iterator>::map::<UnverifiedTransaction, [closure@cita-auth/src/handler.rs:917:18: 917:26]>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: [closure@cita-auth/src/handler.rs:917:18: 917:26], val: Value(<ZST>) }
    }

    bb8: {
        _10 = <std::iter::Map<std::vec::IntoIter<SignedTransaction>, [closure@cita-auth/src/handler.rs:917:18: 917:26]> as Iterator>::collect::<Vec<UnverifiedTransaction>>(move _11) -> [return: bb9, unwind: bb38]; // scope 1 at cita-auth/src/handler.rs:913:47: 918:23
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:918:14: 918:21
                                         // + literal: Const { ty: fn(std::iter::Map<std::vec::IntoIter<SignedTransaction>, [closure@cita-auth/src/handler.rs:917:18: 917:26]>) -> Vec<UnverifiedTransaction> {<std::iter::Map<std::vec::IntoIter<SignedTransaction>, [closure@cita-auth/src/handler.rs:917:18: 917:26]> as Iterator>::collect::<Vec<UnverifiedTransaction>>}, val: Value(<ZST>) }
    }

    bb9: {
        _65 = const true;                // scope 1 at cita-auth/src/handler.rs:918:22: 918:23
        _18 = log::Level::Info;          // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _21 = &_18;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _63 = const _;                   // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::deal_get_block_txn, [], Some(promoted[2])) }
        _20 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _21, _63) -> [return: bb13, unwind: bb43]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb10: {
        _19 = const false;               // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb12;                    // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb11: {
        _23 = &_18;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _25 = log::max_level() -> [return: bb14, unwind: bb43]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb12: {
        switchInt(move _19) -> [0: bb21, otherwise: bb16]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb13: {
        switchInt(move _20) -> [0: bb10, otherwise: bb11]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb14: {
        _24 = &_25;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _22 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _23, move _24) -> [return: bb15, unwind: bb43]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb15: {
        _19 = move _22;                  // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb12;                    // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb16: {
        _62 = const _;                   // scope 3 at cita-auth/src/handler.rs:920:15: 920:49
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:920:15: 920:49
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(MsgHandler::deal_get_block_txn, [], Some(promoted[1])) }
        _28 = _62 as &[&str] (Pointer(Unsize)); // scope 3 at cita-auth/src/handler.rs:920:15: 920:49
        _35 = &_10;                      // scope 3 at cita-auth/src/handler.rs:920:51: 920:60
        _34 = Vec::<UnverifiedTransaction>::len(move _35) -> [return: bb17, unwind: bb43]; // scope 3 at cita-auth/src/handler.rs:920:51: 920:60
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:920:55: 920:58
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<UnverifiedTransaction>) -> usize {Vec::<UnverifiedTransaction>::len}, val: Value(<ZST>) }
    }

    bb17: {
        _33 = &_34;                      // scope 3 at cita-auth/src/handler.rs:920:51: 920:60
        _32 = core::fmt::ArgumentV1::<'_>::new_display::<usize>(_33) -> [return: bb18, unwind: bb43]; // scope 3 at cita-auth/src/handler.rs:920:51: 920:60
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:920:51: 920:60
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: for<'b> fn(&'b usize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<usize>}, val: Value(<ZST>) }
    }

    bb18: {
        _37 = &_3;                       // scope 3 at cita-auth/src/handler.rs:920:62: 920:68
        _36 = core::fmt::ArgumentV1::<'_>::new_display::<u32>(_37) -> [return: bb19, unwind: bb43]; // scope 3 at cita-auth/src/handler.rs:920:62: 920:68
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:920:62: 920:68
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: for<'b> fn(&'b u32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u32>}, val: Value(<ZST>) }
    }

    bb19: {
        _31 = [move _32, move _36];      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _30 = &_31;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _29 = _30 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _27 = Arguments::<'_>::new_v1(move _28, move _29) -> [return: bb20, unwind: bb43]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb20: {
        _61 = const _;                   // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::deal_get_block_txn, [], Some(promoted[0])) }
        _26 = log::__private_api_log(move _27, _18, _61) -> [return: bb44, unwind: bb43]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb21: {
        _38 = libproto::BlockTxn::new() -> [return: bb22, unwind: bb43]; // scope 2 at cita-auth/src/handler.rs:922:29: 922:44
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:922:29: 922:42
                                         // + literal: Const { ty: fn() -> libproto::BlockTxn {libproto::BlockTxn::new}, val: Value(<ZST>) }
    }

    bb22: {
        _64 = const true;                // scope 4 at cita-auth/src/handler.rs:923:9: 923:66
        _40 = &mut _38;                  // scope 4 at cita-auth/src/handler.rs:923:9: 923:66
        _41 = libproto::GetBlockTxn::take_block_hash(_2) -> [return: bb23, unwind: bb41]; // scope 4 at cita-auth/src/handler.rs:923:34: 923:65
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:923:48: 923:63
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::GetBlockTxn) -> Vec<u8> {libproto::GetBlockTxn::take_block_hash}, val: Value(<ZST>) }
    }

    bb23: {
        _39 = libproto::BlockTxn::set_block_hash(move _40, move _41) -> [return: bb24, unwind: bb41]; // scope 4 at cita-auth/src/handler.rs:923:9: 923:66
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:923:19: 923:33
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::BlockTxn, Vec<u8>) {libproto::BlockTxn::set_block_hash}, val: Value(<ZST>) }
    }

    bb24: {
        _43 = &mut _38;                  // scope 4 at cita-auth/src/handler.rs:924:9: 924:47
        _65 = const false;               // scope 4 at cita-auth/src/handler.rs:924:36: 924:39
        _45 = move _10;                  // scope 4 at cita-auth/src/handler.rs:924:36: 924:39
        _44 = <Vec<UnverifiedTransaction> as Into<protobuf::repeated::RepeatedField<UnverifiedTransaction>>>::into(move _45) -> [return: bb25, unwind: bb41]; // scope 4 at cita-auth/src/handler.rs:924:36: 924:46
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:924:40: 924:44
                                         // + literal: Const { ty: fn(Vec<UnverifiedTransaction>) -> protobuf::repeated::RepeatedField<UnverifiedTransaction> {<Vec<UnverifiedTransaction> as Into<protobuf::repeated::RepeatedField<UnverifiedTransaction>>>::into}, val: Value(<ZST>) }
    }

    bb25: {
        _42 = libproto::BlockTxn::set_transactions(move _43, move _44) -> [return: bb26, unwind: bb41]; // scope 4 at cita-auth/src/handler.rs:924:9: 924:47
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:924:19: 924:35
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::BlockTxn, protobuf::repeated::RepeatedField<UnverifiedTransaction>) {libproto::BlockTxn::set_transactions}, val: Value(<ZST>) }
    }

    bb26: {
        _47 = const libproto::OperateType::Single; // scope 4 at cita-auth/src/handler.rs:925:33: 925:52
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: OperateType, val: Value(Scalar(0x01)) }
        _64 = const false;               // scope 4 at cita-auth/src/handler.rs:925:62: 925:71
        _49 = move _38;                  // scope 4 at cita-auth/src/handler.rs:925:62: 925:71
        _48 = <libproto::BlockTxn as Into<InnerMessage_oneof_content>>::into(move _49) -> [return: bb27, unwind: bb41]; // scope 4 at cita-auth/src/handler.rs:925:62: 925:78
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:925:72: 925:76
                                         // + literal: Const { ty: fn(libproto::BlockTxn) -> InnerMessage_oneof_content {<libproto::BlockTxn as Into<InnerMessage_oneof_content>>::into}, val: Value(<ZST>) }
    }

    bb27: {
        _46 = libproto::Message::init(move _47, _3, move _48) -> [return: bb28, unwind: bb41]; // scope 4 at cita-auth/src/handler.rs:925:19: 925:79
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:925:19: 925:32
                                         // + literal: Const { ty: fn(OperateType, u32, InnerMessage_oneof_content) -> libproto::Message {libproto::Message::init}, val: Value(<ZST>) }
    }

    bb28: {
        _52 = &((*_1).1: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 5 at cita-auth/src/handler.rs:927:9: 931:15
        _56 = const Auth;                // scope 5 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x04)) }
        _57 = const libproto::router::MsgType::BlockTxn; // scope 5 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x18)) }
        _55 = RoutingKey(move _56, move _57); // scope 5 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _54 = <RoutingKey as Into<std::string::String>>::into(move _55) -> [return: bb29, unwind: bb37]; // scope 5 at cita-auth/src/handler.rs:929:17: 929:54
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:929:48: 929:52
                                         // + literal: Const { ty: fn(RoutingKey) -> std::string::String {<RoutingKey as Into<std::string::String>>::into}, val: Value(<ZST>) }
    }

    bb29: {
        _60 = &_46;                      // scope 5 at cita-auth/src/handler.rs:930:17: 930:23
        _59 = <&libproto::Message as libproto::TryInto<Vec<u8>>>::try_into(_60) -> [return: bb30, unwind: bb36]; // scope 5 at cita-auth/src/handler.rs:930:17: 930:34
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:930:24: 930:32
                                         // + literal: Const { ty: fn(&libproto::Message) -> Result<Vec<u8>, <&libproto::Message as libproto::TryInto<Vec<u8>>>::Error> {<&libproto::Message as libproto::TryInto<Vec<u8>>>::try_into}, val: Value(<ZST>) }
    }

    bb30: {
        _58 = Result::<Vec<u8>, TryIntoConvertError>::unwrap(move _59) -> [return: bb31, unwind: bb36]; // scope 5 at cita-auth/src/handler.rs:930:17: 930:43
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:930:35: 930:41
                                         // + literal: Const { ty: fn(Result<Vec<u8>, TryIntoConvertError>) -> Vec<u8> {Result::<Vec<u8>, TryIntoConvertError>::unwrap}, val: Value(<ZST>) }
    }

    bb31: {
        _53 = (move _54, move _58);      // scope 5 at cita-auth/src/handler.rs:928:19: 931:14
        _51 = pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send(move _52, move _53) -> [return: bb32, unwind: bb37]; // scope 5 at cita-auth/src/handler.rs:927:9: 931:15
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:928:14: 928:18
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, (std::string::String, Vec<u8>)) -> Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>> {pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send}, val: Value(<ZST>) }
    }

    bb32: {
        _50 = Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap(move _51) -> [return: bb33, unwind: bb37]; // scope 5 at cita-auth/src/handler.rs:927:9: 932:22
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:932:14: 932:20
                                         // + literal: Const { ty: fn(Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>) {Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap}, val: Value(<ZST>) }
    }

    bb33: {
        drop(_46) -> [return: bb34, unwind: bb41]; // scope 4 at cita-auth/src/handler.rs:933:5: 933:6
    }

    bb34: {
        _64 = const false;               // scope 2 at cita-auth/src/handler.rs:933:5: 933:6
        _65 = const false;               // scope 1 at cita-auth/src/handler.rs:933:5: 933:6
        drop(_4) -> bb35;                // scope 0 at cita-auth/src/handler.rs:933:5: 933:6
    }

    bb35: {
        return;                          // scope 0 at cita-auth/src/handler.rs:933:6: 933:6
    }

    bb36 (cleanup): {
        drop(_54) -> bb37;               // scope 5 at cita-auth/src/handler.rs:931:13: 931:14
    }

    bb37 (cleanup): {
        drop(_46) -> bb41;               // scope 4 at cita-auth/src/handler.rs:933:5: 933:6
    }

    bb38 (cleanup): {
        drop(_4) -> bb39;                // scope 0 at cita-auth/src/handler.rs:933:5: 933:6
    }

    bb39 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/handler.rs:907:5: 933:6
    }

    bb40 (cleanup): {
        drop(_38) -> bb43;               // scope 2 at cita-auth/src/handler.rs:933:5: 933:6
    }

    bb41 (cleanup): {
        switchInt(_64) -> [0: bb43, otherwise: bb40]; // scope 2 at cita-auth/src/handler.rs:933:5: 933:6
    }

    bb42 (cleanup): {
        drop(_10) -> bb38;               // scope 1 at cita-auth/src/handler.rs:933:5: 933:6
    }

    bb43 (cleanup): {
        switchInt(_65) -> [0: bb38, otherwise: bb42]; // scope 1 at cita-auth/src/handler.rs:933:5: 933:6
    }

    bb44: {
        goto -> bb21;                    // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_get_block_txn: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:920:9: 920:69
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:920:9: 920:69

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:920:9: 920:69
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:920:9: 920:69
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:920:9: 920:69
        _1 = (move _2, move _4, move _6, const 920_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_get_block_txn: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-auth/src/handler.rs:920:15: 920:49
    let mut _1: [&str; 2];               // in scope 0 at cita-auth/src/handler.rs:920:15: 920:49

    bb0: {
        _1 = [const "GetBlockTxn size: ", const ", origin: "]; // scope 0 at cita-auth/src/handler.rs:920:15: 920:49
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:920:15: 920:49
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:920:15: 920:49
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:920:15: 920:49
        return;                          // scope 0 at cita-auth/src/handler.rs:920:15: 920:49
    }
}

promoted[2] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_get_block_txn: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_get_block_txn::{closure#0}(_1: &mut [closure@cita-auth/src/handler.rs:911:18: 911:22], _2: &Vec<u8>) -> H256 {
    debug id => _2;                      // in scope 0 at cita-auth/src/handler.rs:911:19: 911:21
    let mut _0: cita_types::H256;        // return place in scope 0 at cita-auth/src/handler.rs:911:23: 911:23
    let mut _3: cita_types::U256;        // in scope 0 at cita-auth/src/handler.rs:911:34: 911:59
    let mut _4: &[u8];                   // in scope 0 at cita-auth/src/handler.rs:911:45: 911:58

    bb0: {
        _4 = Vec::<u8>::as_slice(_2) -> bb1; // scope 0 at cita-auth/src/handler.rs:911:45: 911:58
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:911:48: 911:56
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<u8>) -> &'a [u8] {Vec::<u8>::as_slice}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = <U256 as From<&[u8]>>::from(move _4) -> bb2; // scope 0 at cita-auth/src/handler.rs:911:34: 911:59
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:911:34: 911:44
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&[u8]) -> U256 {<U256 as From<&[u8]>>::from}, val: Value(<ZST>) }
    }

    bb2: {
        _0 = <H256 as From<U256>>::from(move _3) -> bb3; // scope 0 at cita-auth/src/handler.rs:911:23: 911:60
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:911:23: 911:33
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(U256) -> H256 {<H256 as From<U256>>::from}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at cita-auth/src/handler.rs:911:60: 911:60
    }
}

fn handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_get_block_txn::{closure#1}(_1: &mut [closure@cita-auth/src/handler.rs:917:18: 917:26], _2: SignedTransaction) -> UnverifiedTransaction {
    debug tx => _2;                      // in scope 0 at cita-auth/src/handler.rs:917:19: 917:25
    let mut _0: libproto::UnverifiedTransaction; // return place in scope 0 at cita-auth/src/handler.rs:917:27: 917:27
    let mut _3: &mut libproto::SignedTransaction; // in scope 0 at cita-auth/src/handler.rs:917:27: 917:57

    bb0: {
        _3 = &mut _2;                    // scope 0 at cita-auth/src/handler.rs:917:27: 917:57
        _0 = SignedTransaction::take_transaction_with_sig(move _3) -> [return: bb1, unwind: bb3]; // scope 0 at cita-auth/src/handler.rs:917:27: 917:57
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:917:30: 917:55
                                         // + literal: Const { ty: for<'a> fn(&'a mut SignedTransaction) -> UnverifiedTransaction {SignedTransaction::take_transaction_with_sig}, val: Value(<ZST>) }
    }

    bb1: {
        drop(_2) -> bb2;                 // scope 0 at cita-auth/src/handler.rs:917:56: 917:57
    }

    bb2: {
        return;                          // scope 0 at cita-auth/src/handler.rs:917:57: 917:57
    }

    bb3 (cleanup): {
        drop(_2) -> bb4;                 // scope 0 at cita-auth/src/handler.rs:917:56: 917:57
    }

    bb4 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/handler.rs:917:18: 917:57
    }
}

fn handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_signed_proposal(_1: &mut MsgHandler, _2: libproto::Message) -> () {
    debug self => _1;                    // in scope 0 at cita-auth/src/handler.rs:935:29: 935:38
    debug msg => _2;                     // in scope 0 at cita-auth/src/handler.rs:935:40: 935:47
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/handler.rs:935:58: 935:58
    let _3: libproto::VerifyBlockReq;    // in scope 0 at cita-auth/src/handler.rs:936:13: 936:29
    let mut _4: std::option::Option<libproto::VerifyBlockReq>; // in scope 0 at cita-auth/src/handler.rs:936:32: 936:59
    let mut _5: &mut libproto::Message;  // in scope 0 at cita-auth/src/handler.rs:936:32: 936:59
    let mut _7: &libproto::CompactBlock; // in scope 0 at cita-auth/src/handler.rs:937:26: 937:67
    let _8: &libproto::CompactBlock;     // in scope 0 at cita-auth/src/handler.rs:937:26: 937:54
    let mut _9: &libproto::VerifyBlockReq; // in scope 0 at cita-auth/src/handler.rs:937:26: 937:54
    let mut _11: &libproto::CompactBlockBody; // in scope 0 at cita-auth/src/handler.rs:938:25: 938:85
    let _12: &libproto::CompactBlockBody; // in scope 0 at cita-auth/src/handler.rs:938:25: 938:64
    let mut _13: &libproto::CompactBlock; // in scope 0 at cita-auth/src/handler.rs:938:25: 938:64
    let _14: &libproto::CompactBlock;    // in scope 0 at cita-auth/src/handler.rs:938:25: 938:53
    let mut _15: &libproto::VerifyBlockReq; // in scope 0 at cita-auth/src/handler.rs:938:25: 938:53
    let mut _17: &libproto::Message;     // in scope 0 at cita-auth/src/handler.rs:939:22: 939:38
    let mut _18: bool;                   // in scope 0 at cita-auth/src/handler.rs:942:16: 942:36
    let mut _19: &std::vec::Vec<cita_types::H256>; // in scope 0 at cita-auth/src/handler.rs:942:16: 942:36
    let mut _20: std::vec::IntoIter<cita_types::H256>; // in scope 0 at cita-auth/src/handler.rs:947:28: 947:45
    let mut _21: std::vec::Vec<cita_types::H256>; // in scope 0 at cita-auth/src/handler.rs:947:28: 947:45
    let mut _22: &std::vec::Vec<cita_types::H256>; // in scope 0 at cita-auth/src/handler.rs:947:28: 947:45
    let mut _24: std::option::Option<cita_types::H256>; // in scope 0 at cita-auth/src/handler.rs:947:28: 947:45
    let mut _25: &mut std::vec::IntoIter<cita_types::H256>; // in scope 0 at cita-auth/src/handler.rs:947:28: 947:45
    let mut _26: isize;                  // in scope 0 at cita-auth/src/handler.rs:947:13: 962:14
    let mut _28: std::option::Option<std::option::Option<std::vec::Vec<u8>>>; // in scope 0 at cita-auth/src/handler.rs:948:46: 948:79
    let mut _29: &handler::MsgHandler;   // in scope 0 at cita-auth/src/handler.rs:948:46: 948:79
    let _30: &cita_types::H256;          // in scope 0 at cita-auth/src/handler.rs:948:70: 948:78
    let mut _31: isize;                  // in scope 0 at cita-auth/src/handler.rs:948:24: 948:43
    let mut _33: bool;                   // in scope 0 at cita-auth/src/handler.rs:950:24: 950:47
    let mut _34: &std::option::Option<std::vec::Vec<u8>>; // in scope 0 at cita-auth/src/handler.rs:950:24: 950:47
    let mut _36: libproto::VerifyBlockReq; // in scope 0 at cita-auth/src/handler.rs:951:36: 951:52
    let mut _37: std::result::Result<std::vec::Vec<libproto::SignedTransaction>, ()>; // in scope 0 at cita-auth/src/handler.rs:951:59: 951:66
    let mut _39: libproto::OperateType;  // in scope 0 at cita-auth/src/handler.rs:952:49: 952:68
    let mut _40: u32;                    // in scope 0 at cita-auth/src/handler.rs:952:70: 952:76
    let mut _41: libproto::MsgClass;     // in scope 0 at cita-auth/src/handler.rs:952:78: 952:89
    let mut _42: libproto::VerifyBlockResp; // in scope 0 at cita-auth/src/handler.rs:952:78: 952:82
    let _43: ();                         // in scope 0 at cita-auth/src/handler.rs:953:25: 958:38
    let mut _44: std::result::Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>>; // in scope 0 at cita-auth/src/handler.rs:953:25: 957:31
    let mut _45: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-auth/src/handler.rs:953:25: 957:31
    let mut _46: (std::string::String, std::vec::Vec<u8>); // in scope 0 at cita-auth/src/handler.rs:954:35: 957:30
    let mut _47: std::string::String;    // in scope 0 at cita-auth/src/handler.rs:955:33: 955:77
    let mut _48: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _49: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _50: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _51: std::vec::Vec<u8>;      // in scope 0 at cita-auth/src/handler.rs:956:33: 956:59
    let mut _52: std::result::Result<std::vec::Vec<u8>, libproto::TryIntoConvertError>; // in scope 0 at cita-auth/src/handler.rs:956:33: 956:50
    let _53: &libproto::Message;         // in scope 0 at cita-auth/src/handler.rs:956:33: 956:39
    let mut _55: &dispatcher::Dispatcher; // in scope 0 at cita-auth/src/handler.rs:966:30: 966:78
    let mut _56: std::vec::Vec<cita_types::H256>; // in scope 0 at cita-auth/src/handler.rs:966:60: 966:77
    let mut _57: &std::vec::Vec<cita_types::H256>; // in scope 0 at cita-auth/src/handler.rs:966:60: 966:77
    let mut _58: bool;                   // in scope 0 at cita-auth/src/handler.rs:968:12: 968:37
    let mut _59: &std::vec::Vec<cita_types::H256>; // in scope 0 at cita-auth/src/handler.rs:968:12: 968:37
    let mut _61: &dispatcher::Dispatcher; // in scope 0 at cita-auth/src/handler.rs:970:32: 970:67
    let mut _62: &[cita_types::H256];    // in scope 0 at cita-auth/src/handler.rs:970:56: 970:66
    let _63: &[cita_types::H256];        // in scope 0 at cita-auth/src/handler.rs:970:56: 970:66
    let _64: &std::vec::Vec<cita_types::H256>; // in scope 0 at cita-auth/src/handler.rs:970:56: 970:66
    let mut _65: std::result::Result<(), std::option::Option<usize>>; // in scope 0 at cita-auth/src/handler.rs:972:31: 972:76
    let mut _66: &libproto::VerifyBlockReq; // in scope 0 at cita-auth/src/handler.rs:972:31: 972:76
    let _67: &[libproto::SignedTransaction]; // in scope 0 at cita-auth/src/handler.rs:972:58: 972:75
    let _68: &[libproto::SignedTransaction]; // in scope 0 at cita-auth/src/handler.rs:972:59: 972:75
    let mut _69: &std::vec::Vec<libproto::SignedTransaction>; // in scope 0 at cita-auth/src/handler.rs:972:59: 972:71
    let mut _70: isize;                  // in scope 0 at cita-auth/src/handler.rs:972:20: 972:28
    let mut _73: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _74: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _75: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _76: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _77: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _78: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _79: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _80: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _81: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _82: &[&str];                // in scope 0 at cita-auth/src/handler.rs:973:24: 973:64
    let mut _83: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _84: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _85: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _86: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:973:66: 973:69
    let _87: &std::option::Option<usize>; // in scope 0 at cita-auth/src/handler.rs:973:66: 973:69
    let mut _89: libproto::VerifyBlockReq; // in scope 0 at cita-auth/src/handler.rs:975:24: 975:40
    let mut _90: std::result::Result<std::vec::Vec<libproto::SignedTransaction>, ()>; // in scope 0 at cita-auth/src/handler.rs:975:47: 975:63
    let mut _91: std::vec::Vec<libproto::SignedTransaction>; // in scope 0 at cita-auth/src/handler.rs:975:50: 975:62
    let mut _93: libproto::OperateType;  // in scope 0 at cita-auth/src/handler.rs:977:37: 977:56
    let mut _94: libproto::MsgClass;     // in scope 0 at cita-auth/src/handler.rs:977:61: 977:72
    let mut _95: libproto::VerifyBlockResp; // in scope 0 at cita-auth/src/handler.rs:977:61: 977:65
    let _96: ();                         // in scope 0 at cita-auth/src/handler.rs:978:13: 983:26
    let mut _97: std::result::Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>>; // in scope 0 at cita-auth/src/handler.rs:978:13: 982:19
    let mut _98: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-auth/src/handler.rs:978:13: 982:19
    let mut _99: (std::string::String, std::vec::Vec<u8>); // in scope 0 at cita-auth/src/handler.rs:979:23: 982:18
    let mut _100: std::string::String;   // in scope 0 at cita-auth/src/handler.rs:980:21: 980:65
    let mut _101: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _102: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _103: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _104: std::vec::Vec<u8>;     // in scope 0 at cita-auth/src/handler.rs:981:21: 981:47
    let mut _105: std::result::Result<std::vec::Vec<u8>, libproto::TryIntoConvertError>; // in scope 0 at cita-auth/src/handler.rs:981:21: 981:38
    let _106: &libproto::Message;        // in scope 0 at cita-auth/src/handler.rs:981:21: 981:27
    let mut _108: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _109: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _110: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _111: bool;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _112: &log::Level;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _113: &log::LevelFilter;     // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _114: log::LevelFilter;          // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _115: ();                        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _116: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _117: &[&str];               // in scope 0 at cita-auth/src/handler.rs:985:19: 985:44
    let mut _118: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _119: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _120: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _121: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:985:46: 985:66
    let _122: &usize;                    // in scope 0 at cita-auth/src/handler.rs:985:46: 985:66
    let _123: usize;                     // in scope 0 at cita-auth/src/handler.rs:985:46: 985:66
    let mut _124: &std::vec::Vec<cita_types::H256>; // in scope 0 at cita-auth/src/handler.rs:985:46: 985:66
    let mut _125: std::option::Option<libproto::VerifyBlockReq>; // in scope 0 at cita-auth/src/handler.rs:986:37: 986:59
    let mut _126: libproto::VerifyBlockReq; // in scope 0 at cita-auth/src/handler.rs:986:42: 986:58
    let _128: ();                        // in scope 0 at cita-auth/src/handler.rs:989:13: 989:62
    let mut _129: &mut libproto::GetBlockTxn; // in scope 0 at cita-auth/src/handler.rs:989:13: 989:62
    let mut _130: std::vec::Vec<u8>;     // in scope 0 at cita-auth/src/handler.rs:989:42: 989:61
    let mut _131: &[u8];                 // in scope 0 at cita-auth/src/handler.rs:989:42: 989:61
    let _132: &[u8];                     // in scope 0 at cita-auth/src/handler.rs:989:42: 989:61
    let mut _133: &cita_types::H256;     // in scope 0 at cita-auth/src/handler.rs:989:42: 989:61
    let mut _135: std::iter::Map<std::vec::IntoIter<cita_types::H256>, [closure@cita-auth/src/handler.rs:992:22: 992:28]>; // in scope 0 at cita-auth/src/handler.rs:990:34: 992:43
    let mut _136: std::vec::IntoIter<cita_types::H256>; // in scope 0 at cita-auth/src/handler.rs:990:34: 991:29
    let mut _137: std::vec::Vec<cita_types::H256>; // in scope 0 at cita-auth/src/handler.rs:990:34: 990:48
    let _138: ();                        // in scope 0 at cita-auth/src/handler.rs:994:13: 994:56
    let mut _139: &mut libproto::GetBlockTxn; // in scope 0 at cita-auth/src/handler.rs:994:13: 994:56
    let mut _140: protobuf::repeated::RepeatedField<std::vec::Vec<u8>>; // in scope 0 at cita-auth/src/handler.rs:994:41: 994:55
    let mut _141: std::option::Option<(u32, libproto::GetBlockTxn)>; // in scope 0 at cita-auth/src/handler.rs:996:34: 996:71
    let mut _142: (u32, libproto::GetBlockTxn); // in scope 0 at cita-auth/src/handler.rs:996:39: 996:70
    let mut _143: u32;                   // in scope 0 at cita-auth/src/handler.rs:996:40: 996:46
    let mut _144: libproto::GetBlockTxn; // in scope 0 at cita-auth/src/handler.rs:996:48: 996:69
    let mut _145: &libproto::GetBlockTxn; // in scope 0 at cita-auth/src/handler.rs:996:48: 996:69
    let mut _147: libproto::OperateType; // in scope 0 at cita-auth/src/handler.rs:998:37: 998:56
    let mut _148: u32;                   // in scope 0 at cita-auth/src/handler.rs:998:58: 998:64
    let mut _149: libproto::MsgClass;    // in scope 0 at cita-auth/src/handler.rs:998:66: 998:86
    let mut _150: libproto::GetBlockTxn; // in scope 0 at cita-auth/src/handler.rs:998:66: 998:79
    let _151: ();                        // in scope 0 at cita-auth/src/handler.rs:999:13: 1004:26
    let mut _152: std::result::Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>>; // in scope 0 at cita-auth/src/handler.rs:999:13: 1003:19
    let mut _153: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-auth/src/handler.rs:999:13: 1003:19
    let mut _154: (std::string::String, std::vec::Vec<u8>); // in scope 0 at cita-auth/src/handler.rs:1000:23: 1003:18
    let mut _155: std::string::String;   // in scope 0 at cita-auth/src/handler.rs:1001:21: 1001:61
    let mut _156: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _157: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _158: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _159: std::vec::Vec<u8>;     // in scope 0 at cita-auth/src/handler.rs:1002:21: 1002:47
    let mut _160: std::result::Result<std::vec::Vec<u8>, libproto::TryIntoConvertError>; // in scope 0 at cita-auth/src/handler.rs:1002:21: 1002:38
    let _161: &libproto::Message;        // in scope 0 at cita-auth/src/handler.rs:1002:21: 1002:27
    let mut _168: bool;                  // in scope 0 at cita-auth/src/handler.rs:962:13: 962:14
    let mut _169: bool;                  // in scope 0 at cita-auth/src/handler.rs:1006:5: 1006:6
    let mut _170: bool;                  // in scope 0 at cita-auth/src/handler.rs:1006:5: 1006:6
    let mut _171: bool;                  // in scope 0 at cita-auth/src/handler.rs:1005:9: 1005:10
    let mut _172: bool;                  // in scope 0 at cita-auth/src/handler.rs:984:9: 984:10
    let mut _173: isize;                 // in scope 0 at cita-auth/src/handler.rs:962:13: 962:14
    scope 1 {
        debug verify_block_req => _3;    // in scope 1 at cita-auth/src/handler.rs:936:13: 936:29
        let _6: cita_types::H256;        // in scope 1 at cita-auth/src/handler.rs:937:13: 937:23
        scope 2 {
            debug block_hash => _6;      // in scope 2 at cita-auth/src/handler.rs:937:13: 937:23
            let _10: std::vec::Vec<cita_types::H256>; // in scope 2 at cita-auth/src/handler.rs:938:13: 938:22
            scope 3 {
                debug tx_hashes => _10;  // in scope 3 at cita-auth/src/handler.rs:938:13: 938:22
                let _16: u32;            // in scope 3 at cita-auth/src/handler.rs:939:13: 939:19
                scope 4 {
                    debug origin => _16; // in scope 4 at cita-auth/src/handler.rs:939:13: 939:19
                    let mut _23: std::vec::IntoIter<cita_types::H256>; // in scope 4 at cita-auth/src/handler.rs:947:28: 947:45
                    let _54: std::vec::Vec<cita_types::H256>; // in scope 4 at cita-auth/src/handler.rs:966:13: 966:27
                    scope 5 {
                        debug iter => _23; // in scope 5 at cita-auth/src/handler.rs:947:28: 947:45
                        let _27: cita_types::H256; // in scope 5 at cita-auth/src/handler.rs:947:17: 947:24
                        scope 6 {
                            debug tx_hash => _27; // in scope 6 at cita-auth/src/handler.rs:947:17: 947:24
                            scope 7 {
                                debug option_pubkey => _32; // in scope 7 at cita-auth/src/handler.rs:948:29: 948:42
                                let _32: std::option::Option<std::vec::Vec<u8>>; // in scope 7 at cita-auth/src/handler.rs:948:29: 948:42
                                let _35: libproto::VerifyBlockResp; // in scope 7 at cita-auth/src/handler.rs:951:29: 951:33
                                scope 8 {
                                    debug resp => _35; // in scope 8 at cita-auth/src/handler.rs:951:29: 951:33
                                    let _38: libproto::Message; // in scope 8 at cita-auth/src/handler.rs:952:29: 952:32
                                    scope 9 {
                                        debug msg => _38; // in scope 9 at cita-auth/src/handler.rs:952:29: 952:32
                                    }
                                }
                            }
                        }
                    }
                    scope 10 {
                        debug missing_hashes => _54; // in scope 10 at cita-auth/src/handler.rs:966:13: 966:27
                        let _60: std::vec::Vec<libproto::SignedTransaction>; // in scope 10 at cita-auth/src/handler.rs:970:17: 970:29
                        let _107: log::Level; // in scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                        let mut _127: libproto::GetBlockTxn; // in scope 10 at cita-auth/src/handler.rs:988:17: 988:34
                        scope 11 {
                            debug transactions => _60; // in scope 11 at cita-auth/src/handler.rs:970:17: 970:29
                            let _88: libproto::VerifyBlockResp; // in scope 11 at cita-auth/src/handler.rs:975:17: 975:21
                            scope 12 {
                                debug err => _71; // in scope 12 at cita-auth/src/handler.rs:972:24: 972:27
                                let _71: std::option::Option<usize>; // in scope 12 at cita-auth/src/handler.rs:972:24: 972:27
                                let _72: log::Level; // in scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                                scope 13 {
                                    debug lvl => _72; // in scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                                    let mut _165: &(&str, &str, &str, u32); // in scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                    let mut _166: &[&str; 1]; // in scope 13 at cita-auth/src/handler.rs:973:24: 973:64
                                    let mut _167: &log::LevelFilter; // in scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                }
                            }
                            scope 14 {
                                debug resp => _88; // in scope 14 at cita-auth/src/handler.rs:975:17: 975:21
                                let _92: libproto::Message; // in scope 14 at cita-auth/src/handler.rs:977:17: 977:20
                                scope 15 {
                                    debug msg => _92; // in scope 15 at cita-auth/src/handler.rs:977:17: 977:20
                                }
                            }
                        }
                        scope 16 {
                            debug lvl => _107; // in scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                            let mut _162: &(&str, &str, &str, u32); // in scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                            let mut _163: &[&str; 1]; // in scope 16 at cita-auth/src/handler.rs:985:19: 985:44
                            let mut _164: &log::LevelFilter; // in scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                        }
                        scope 17 {
                            debug get_block_txn => _127; // in scope 17 at cita-auth/src/handler.rs:988:17: 988:34
                            let _134: protobuf::repeated::RepeatedField<std::vec::Vec<u8>>; // in scope 17 at cita-auth/src/handler.rs:990:17: 990:31
                            scope 18 {
                                debug missing_hashes => _134; // in scope 18 at cita-auth/src/handler.rs:990:17: 990:31
                                let _146: libproto::Message; // in scope 18 at cita-auth/src/handler.rs:998:17: 998:20
                                scope 19 {
                                    debug msg => _146; // in scope 19 at cita-auth/src/handler.rs:998:17: 998:20
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _171 = const false;              // scope 0 at cita-auth/src/handler.rs:936:13: 936:29
        _168 = const false;              // scope 0 at cita-auth/src/handler.rs:936:13: 936:29
        _172 = const false;              // scope 0 at cita-auth/src/handler.rs:936:13: 936:29
        _169 = const false;              // scope 0 at cita-auth/src/handler.rs:936:13: 936:29
        _170 = const false;              // scope 0 at cita-auth/src/handler.rs:936:13: 936:29
        _5 = &mut _2;                    // scope 0 at cita-auth/src/handler.rs:936:32: 936:59
        _4 = libproto::Message::take_verify_block_req(move _5) -> [return: bb1, unwind: bb111]; // scope 0 at cita-auth/src/handler.rs:936:32: 936:59
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:936:36: 936:57
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Message) -> std::option::Option<libproto::VerifyBlockReq> {libproto::Message::take_verify_block_req}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = std::option::Option::<libproto::VerifyBlockReq>::unwrap(move _4) -> [return: bb2, unwind: bb111]; // scope 0 at cita-auth/src/handler.rs:936:32: 936:68
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:936:60: 936:66
                                         // + literal: Const { ty: fn(std::option::Option<libproto::VerifyBlockReq>) -> libproto::VerifyBlockReq {std::option::Option::<libproto::VerifyBlockReq>::unwrap}, val: Value(<ZST>) }
    }

    bb2: {
        _170 = const true;               // scope 0 at cita-auth/src/handler.rs:936:67: 936:68
        _9 = &_3;                        // scope 1 at cita-auth/src/handler.rs:937:26: 937:54
        _8 = libproto::VerifyBlockReq::get_block(move _9) -> [return: bb3, unwind: bb126]; // scope 1 at cita-auth/src/handler.rs:937:26: 937:54
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:937:43: 937:52
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::VerifyBlockReq) -> &'a CompactBlock {libproto::VerifyBlockReq::get_block}, val: Value(<ZST>) }
    }

    bb3: {
        _7 = _8;                         // scope 1 at cita-auth/src/handler.rs:937:26: 937:67
        _6 = libproto::<impl CompactBlock>::crypt_hash(move _7) -> [return: bb4, unwind: bb126]; // scope 1 at cita-auth/src/handler.rs:937:26: 937:67
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:937:55: 937:65
                                         // + literal: Const { ty: for<'a> fn(&'a CompactBlock) -> H256 {libproto::<impl CompactBlock>::crypt_hash}, val: Value(<ZST>) }
    }

    bb4: {
        _15 = &_3;                       // scope 2 at cita-auth/src/handler.rs:938:25: 938:53
        _14 = libproto::VerifyBlockReq::get_block(move _15) -> [return: bb5, unwind: bb126]; // scope 2 at cita-auth/src/handler.rs:938:25: 938:53
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:938:42: 938:51
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::VerifyBlockReq) -> &'a CompactBlock {libproto::VerifyBlockReq::get_block}, val: Value(<ZST>) }
    }

    bb5: {
        _13 = _14;                       // scope 2 at cita-auth/src/handler.rs:938:25: 938:64
        _12 = CompactBlock::get_body(move _13) -> [return: bb6, unwind: bb126]; // scope 2 at cita-auth/src/handler.rs:938:25: 938:64
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:938:54: 938:62
                                         // + literal: Const { ty: for<'a> fn(&'a CompactBlock) -> &'a CompactBlockBody {CompactBlock::get_body}, val: Value(<ZST>) }
    }

    bb6: {
        _11 = _12;                       // scope 2 at cita-auth/src/handler.rs:938:25: 938:85
        _10 = libproto::<impl CompactBlockBody>::transaction_hashes(move _11) -> [return: bb7, unwind: bb126]; // scope 2 at cita-auth/src/handler.rs:938:25: 938:85
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:938:65: 938:83
                                         // + literal: Const { ty: for<'a> fn(&'a CompactBlockBody) -> Vec<H256> {libproto::<impl CompactBlockBody>::transaction_hashes}, val: Value(<ZST>) }
    }

    bb7: {
        _17 = &_2;                       // scope 3 at cita-auth/src/handler.rs:939:22: 939:38
        _16 = libproto::Message::get_origin(move _17) -> [return: bb8, unwind: bb110]; // scope 3 at cita-auth/src/handler.rs:939:22: 939:38
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:939:26: 939:36
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Message) -> u32 {libproto::Message::get_origin}, val: Value(<ZST>) }
    }

    bb8: {
        _19 = &_10;                      // scope 4 at cita-auth/src/handler.rs:942:16: 942:36
        _18 = Vec::<H256>::is_empty(move _19) -> [return: bb9, unwind: bb110]; // scope 4 at cita-auth/src/handler.rs:942:16: 942:36
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:942:26: 942:34
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<H256>) -> bool {Vec::<H256>::is_empty}, val: Value(<ZST>) }
    }

    bb9: {
        switchInt(move _18) -> [0: bb10, otherwise: bb98]; // scope 4 at cita-auth/src/handler.rs:942:16: 942:36
    }

    bb10: {
        _22 = &_10;                      // scope 4 at cita-auth/src/handler.rs:947:28: 947:45
        _21 = <Vec<H256> as Clone>::clone(move _22) -> [return: bb11, unwind: bb110]; // scope 4 at cita-auth/src/handler.rs:947:28: 947:45
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:947:38: 947:43
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<H256>) -> Vec<H256> {<Vec<H256> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb11: {
        _20 = <Vec<H256> as IntoIterator>::into_iter(move _21) -> [return: bb12, unwind: bb110]; // scope 4 at cita-auth/src/handler.rs:947:28: 947:45
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:947:28: 947:45
                                         // + literal: Const { ty: fn(Vec<H256>) -> <Vec<H256> as IntoIterator>::IntoIter {<Vec<H256> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb12: {
        _23 = move _20;                  // scope 4 at cita-auth/src/handler.rs:947:28: 947:45
        goto -> bb13;                    // scope 5 at cita-auth/src/handler.rs:947:13: 962:14
    }

    bb13: {
        _25 = &mut _23;                  // scope 5 at cita-auth/src/handler.rs:947:28: 947:45
        _24 = <std::vec::IntoIter<H256> as Iterator>::next(_25) -> [return: bb14, unwind: bb109]; // scope 5 at cita-auth/src/handler.rs:947:28: 947:45
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:947:28: 947:45
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::vec::IntoIter<H256>) -> std::option::Option<<std::vec::IntoIter<H256> as Iterator>::Item> {<std::vec::IntoIter<H256> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb14: {
        _26 = discriminant(_24);         // scope 5 at cita-auth/src/handler.rs:947:28: 947:45
        switchInt(move _26) -> [0: bb17, 1: bb15, otherwise: bb16]; // scope 5 at cita-auth/src/handler.rs:947:28: 947:45
    }

    bb15: {
        _27 = ((_24 as Some).0: cita_types::H256); // scope 5 at cita-auth/src/handler.rs:947:17: 947:24
        _29 = &(*_1);                    // scope 7 at cita-auth/src/handler.rs:948:46: 948:79
        _30 = &_27;                      // scope 7 at cita-auth/src/handler.rs:948:70: 948:78
        _28 = MsgHandler::get_ret_from_cache(move _29, _30) -> [return: bb18, unwind: bb109]; // scope 7 at cita-auth/src/handler.rs:948:46: 948:79
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:948:51: 948:69
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a MsgHandler, &'b H256) -> std::option::Option<std::option::Option<Vec<u8>>> {MsgHandler::get_ret_from_cache}, val: Value(<ZST>) }
    }

    bb16: {
        unreachable;                     // scope 5 at cita-auth/src/handler.rs:947:28: 947:45
    }

    bb17: {
        drop(_23) -> [return: bb31, unwind: bb110]; // scope 4 at cita-auth/src/handler.rs:962:13: 962:14
    }

    bb18: {
        _168 = const true;               // scope 7 at cita-auth/src/handler.rs:948:78: 948:79
        _31 = discriminant(_28);         // scope 7 at cita-auth/src/handler.rs:948:24: 948:43
        switchInt(move _31) -> [1: bb19, otherwise: bb116]; // scope 7 at cita-auth/src/handler.rs:948:24: 948:43
    }

    bb19: {
        _168 = const false;              // scope 7 at cita-auth/src/handler.rs:948:29: 948:42
        _32 = move ((_28 as Some).0: std::option::Option<std::vec::Vec<u8>>); // scope 7 at cita-auth/src/handler.rs:948:29: 948:42
        _34 = &_32;                      // scope 7 at cita-auth/src/handler.rs:950:24: 950:47
        _33 = std::option::Option::<Vec<u8>>::is_none(move _34) -> [return: bb20, unwind: bb108]; // scope 7 at cita-auth/src/handler.rs:950:24: 950:47
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:950:38: 950:45
                                         // + literal: Const { ty: for<'a> fn(&'a std::option::Option<Vec<u8>>) -> bool {std::option::Option::<Vec<u8>>::is_none}, val: Value(<ZST>) }
    }

    bb20: {
        switchInt(move _33) -> [0: bb30, otherwise: bb21]; // scope 7 at cita-auth/src/handler.rs:950:24: 950:47
    }

    bb21: {
        _170 = const false;              // scope 7 at cita-auth/src/handler.rs:951:36: 951:52
        _36 = move _3;                   // scope 7 at cita-auth/src/handler.rs:951:36: 951:52
        _37 = Result::<Vec<SignedTransaction>, ()>::Err(const ()); // scope 7 at cita-auth/src/handler.rs:951:59: 951:66
        _35 = libproto::<impl libproto::VerifyBlockReq>::reply(move _36, move _37) -> [return: bb22, unwind: bb108]; // scope 7 at cita-auth/src/handler.rs:951:36: 951:67
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:951:53: 951:58
                                         // + literal: Const { ty: fn(libproto::VerifyBlockReq, Result<Vec<SignedTransaction>, ()>) -> libproto::VerifyBlockResp {libproto::<impl libproto::VerifyBlockReq>::reply}, val: Value(<ZST>) }
    }

    bb22: {
        _39 = const libproto::OperateType::Single; // scope 8 at cita-auth/src/handler.rs:952:49: 952:68
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: OperateType, val: Value(Scalar(0x01)) }
        _40 = _16;                       // scope 8 at cita-auth/src/handler.rs:952:70: 952:76
        _42 = move _35;                  // scope 8 at cita-auth/src/handler.rs:952:78: 952:82
        _41 = <libproto::VerifyBlockResp as Into<InnerMessage_oneof_content>>::into(move _42) -> [return: bb23, unwind: bb108]; // scope 8 at cita-auth/src/handler.rs:952:78: 952:89
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:952:83: 952:87
                                         // + literal: Const { ty: fn(libproto::VerifyBlockResp) -> InnerMessage_oneof_content {<libproto::VerifyBlockResp as Into<InnerMessage_oneof_content>>::into}, val: Value(<ZST>) }
    }

    bb23: {
        _38 = libproto::Message::init(move _39, move _40, move _41) -> [return: bb24, unwind: bb108]; // scope 8 at cita-auth/src/handler.rs:952:35: 952:90
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:952:35: 952:48
                                         // + literal: Const { ty: fn(OperateType, u32, InnerMessage_oneof_content) -> libproto::Message {libproto::Message::init}, val: Value(<ZST>) }
    }

    bb24: {
        _45 = &((*_1).1: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 9 at cita-auth/src/handler.rs:953:25: 957:31
        _49 = const Auth;                // scope 9 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x04)) }
        _50 = const libproto::router::MsgType::VerifyBlockResp; // scope 9 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x0f)) }
        _48 = RoutingKey(move _49, move _50); // scope 9 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _47 = <RoutingKey as Into<std::string::String>>::into(move _48) -> [return: bb25, unwind: bb107]; // scope 9 at cita-auth/src/handler.rs:955:33: 955:77
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:955:71: 955:75
                                         // + literal: Const { ty: fn(RoutingKey) -> std::string::String {<RoutingKey as Into<std::string::String>>::into}, val: Value(<ZST>) }
    }

    bb25: {
        _53 = &_38;                      // scope 9 at cita-auth/src/handler.rs:956:33: 956:39
        _52 = <&libproto::Message as libproto::TryInto<Vec<u8>>>::try_into(_53) -> [return: bb26, unwind: bb106]; // scope 9 at cita-auth/src/handler.rs:956:33: 956:50
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:956:40: 956:48
                                         // + literal: Const { ty: fn(&libproto::Message) -> Result<Vec<u8>, <&libproto::Message as libproto::TryInto<Vec<u8>>>::Error> {<&libproto::Message as libproto::TryInto<Vec<u8>>>::try_into}, val: Value(<ZST>) }
    }

    bb26: {
        _51 = Result::<Vec<u8>, TryIntoConvertError>::unwrap(move _52) -> [return: bb27, unwind: bb106]; // scope 9 at cita-auth/src/handler.rs:956:33: 956:59
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:956:51: 956:57
                                         // + literal: Const { ty: fn(Result<Vec<u8>, TryIntoConvertError>) -> Vec<u8> {Result::<Vec<u8>, TryIntoConvertError>::unwrap}, val: Value(<ZST>) }
    }

    bb27: {
        _46 = (move _47, move _51);      // scope 9 at cita-auth/src/handler.rs:954:35: 957:30
        _44 = pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send(move _45, move _46) -> [return: bb28, unwind: bb107]; // scope 9 at cita-auth/src/handler.rs:953:25: 957:31
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:954:30: 954:34
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, (std::string::String, Vec<u8>)) -> Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>> {pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send}, val: Value(<ZST>) }
    }

    bb28: {
        _43 = Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap(move _44) -> [return: bb29, unwind: bb107]; // scope 9 at cita-auth/src/handler.rs:953:25: 958:38
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:958:30: 958:36
                                         // + literal: Const { ty: fn(Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>) {Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap}, val: Value(<ZST>) }
    }

    bb29: {
        drop(_38) -> [return: bb96, unwind: bb108]; // scope 8 at cita-auth/src/handler.rs:960:21: 960:22
    }

    bb30: {
        drop(_32) -> [return: bb116, unwind: bb109]; // scope 6 at cita-auth/src/handler.rs:961:17: 961:18
    }

    bb31: {
        _55 = &((*_1).6: dispatcher::Dispatcher); // scope 4 at cita-auth/src/handler.rs:966:30: 966:78
        _57 = &_10;                      // scope 4 at cita-auth/src/handler.rs:966:60: 966:77
        _56 = <Vec<H256> as Clone>::clone(move _57) -> [return: bb32, unwind: bb110]; // scope 4 at cita-auth/src/handler.rs:966:60: 966:77
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:966:70: 966:75
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<H256>) -> Vec<H256> {<Vec<H256> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb32: {
        _54 = Dispatcher::check_missing(move _55, move _56) -> [return: bb33, unwind: bb110]; // scope 4 at cita-auth/src/handler.rs:966:30: 966:78
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:966:46: 966:59
                                         // + literal: Const { ty: for<'a> fn(&'a Dispatcher, Vec<H256>) -> Vec<H256> {Dispatcher::check_missing}, val: Value(<ZST>) }
    }

    bb33: {
        _169 = const true;               // scope 4 at cita-auth/src/handler.rs:966:77: 966:78
        _59 = &_54;                      // scope 10 at cita-auth/src/handler.rs:968:12: 968:37
        _58 = Vec::<H256>::is_empty(move _59) -> [return: bb34, unwind: bb124]; // scope 10 at cita-auth/src/handler.rs:968:12: 968:37
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:968:27: 968:35
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<H256>) -> bool {Vec::<H256>::is_empty}, val: Value(<ZST>) }
    }

    bb34: {
        switchInt(move _58) -> [0: bb60, otherwise: bb35]; // scope 10 at cita-auth/src/handler.rs:968:12: 968:37
    }

    bb35: {
        _61 = &((*_1).6: dispatcher::Dispatcher); // scope 10 at cita-auth/src/handler.rs:970:32: 970:67
        _64 = &_10;                      // scope 10 at cita-auth/src/handler.rs:970:56: 970:66
        _63 = <Vec<H256> as Deref>::deref(_64) -> [return: bb36, unwind: bb124]; // scope 10 at cita-auth/src/handler.rs:970:56: 970:66
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:970:56: 970:66
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<H256>) -> &'a <Vec<H256> as Deref>::Target {<Vec<H256> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb36: {
        _62 = _63;                       // scope 10 at cita-auth/src/handler.rs:970:56: 970:66
        _60 = Dispatcher::get_txs(move _61, move _62) -> [return: bb37, unwind: bb124]; // scope 10 at cita-auth/src/handler.rs:970:32: 970:67
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:970:48: 970:55
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Dispatcher, &'b [H256]) -> Vec<SignedTransaction> {Dispatcher::get_txs}, val: Value(<ZST>) }
    }

    bb37: {
        _172 = const true;               // scope 10 at cita-auth/src/handler.rs:970:66: 970:67
        _66 = &_3;                       // scope 12 at cita-auth/src/handler.rs:972:31: 972:76
        _69 = &_60;                      // scope 12 at cita-auth/src/handler.rs:972:59: 972:71
        _68 = <Vec<SignedTransaction> as std::ops::Index<RangeFull>>::index(move _69, const RangeFull) -> [return: bb38, unwind: bb122]; // scope 12 at cita-auth/src/handler.rs:972:59: 972:75
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:972:59: 972:75
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<SignedTransaction>, RangeFull) -> &'a <Vec<SignedTransaction> as std::ops::Index<RangeFull>>::Output {<Vec<SignedTransaction> as std::ops::Index<RangeFull>>::index}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: RangeFull, val: Value(<ZST>) }
    }

    bb38: {
        _67 = _68;                       // scope 12 at cita-auth/src/handler.rs:972:58: 972:75
        _65 = libproto::<impl libproto::VerifyBlockReq>::check_txs(move _66, _67) -> [return: bb39, unwind: bb122]; // scope 12 at cita-auth/src/handler.rs:972:31: 972:76
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:972:48: 972:57
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a libproto::VerifyBlockReq, &'b [SignedTransaction]) -> Result<(), std::option::Option<usize>> {libproto::<impl libproto::VerifyBlockReq>::check_txs}, val: Value(<ZST>) }
    }

    bb39: {
        _70 = discriminant(_65);         // scope 12 at cita-auth/src/handler.rs:972:20: 972:28
        switchInt(move _70) -> [1: bb40, otherwise: bb50]; // scope 12 at cita-auth/src/handler.rs:972:20: 972:28
    }

    bb40: {
        _71 = ((_65 as Err).0: std::option::Option<usize>); // scope 12 at cita-auth/src/handler.rs:972:24: 972:27
        _72 = log::Level::Error;         // scope 12 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:67:14: 67:34
        _75 = &_72;                      // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _167 = const _;                  // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::deal_signed_proposal, [], Some(promoted[5])) }
        _74 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _75, _167) -> [return: bb44, unwind: bb122]; // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb41: {
        _73 = const false;               // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb43;                    // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb42: {
        _77 = &_72;                      // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _79 = log::max_level() -> [return: bb45, unwind: bb122]; // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb43: {
        switchInt(move _73) -> [0: bb50, otherwise: bb47]; // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb44: {
        switchInt(move _74) -> [0: bb41, otherwise: bb42]; // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb45: {
        _78 = &_79;                      // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _76 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _77, move _78) -> [return: bb46, unwind: bb122]; // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb46: {
        _73 = move _76;                  // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb43;                    // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb47: {
        _166 = const _;                  // scope 13 at cita-auth/src/handler.rs:973:24: 973:64
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:973:24: 973:64
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(MsgHandler::deal_signed_proposal, [], Some(promoted[4])) }
        _82 = _166 as &[&str] (Pointer(Unsize)); // scope 13 at cita-auth/src/handler.rs:973:24: 973:64
        _87 = &_71;                      // scope 13 at cita-auth/src/handler.rs:973:66: 973:69
        _86 = core::fmt::ArgumentV1::<'_>::new_debug::<std::option::Option<usize>>(_87) -> [return: bb48, unwind: bb122]; // scope 13 at cita-auth/src/handler.rs:973:66: 973:69
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:973:66: 973:69
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b std::option::Option<usize>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<std::option::Option<usize>>}, val: Value(<ZST>) }
    }

    bb48: {
        _85 = [move _86];                // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _84 = &_85;                      // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _83 = _84 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _81 = Arguments::<'_>::new_v1(move _82, move _83) -> [return: bb49, unwind: bb122]; // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb49: {
        _165 = const _;                  // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::deal_signed_proposal, [], Some(promoted[3])) }
        _80 = log::__private_api_log(move _81, _72, _165) -> [return: bb127, unwind: bb122]; // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb50: {
        _170 = const false;              // scope 11 at cita-auth/src/handler.rs:975:24: 975:40
        _89 = move _3;                   // scope 11 at cita-auth/src/handler.rs:975:24: 975:40
        _172 = const false;              // scope 11 at cita-auth/src/handler.rs:975:50: 975:62
        _91 = move _60;                  // scope 11 at cita-auth/src/handler.rs:975:50: 975:62
        _90 = Result::<Vec<SignedTransaction>, ()>::Ok(move _91); // scope 11 at cita-auth/src/handler.rs:975:47: 975:63
        _88 = libproto::<impl libproto::VerifyBlockReq>::reply(move _89, move _90) -> [return: bb51, unwind: bb122]; // scope 11 at cita-auth/src/handler.rs:975:24: 975:64
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:975:41: 975:46
                                         // + literal: Const { ty: fn(libproto::VerifyBlockReq, Result<Vec<SignedTransaction>, ()>) -> libproto::VerifyBlockResp {libproto::<impl libproto::VerifyBlockReq>::reply}, val: Value(<ZST>) }
    }

    bb51: {
        _93 = const libproto::OperateType::Single; // scope 14 at cita-auth/src/handler.rs:977:37: 977:56
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: OperateType, val: Value(Scalar(0x01)) }
        _95 = move _88;                  // scope 14 at cita-auth/src/handler.rs:977:61: 977:65
        _94 = <libproto::VerifyBlockResp as Into<InnerMessage_oneof_content>>::into(move _95) -> [return: bb52, unwind: bb122]; // scope 14 at cita-auth/src/handler.rs:977:61: 977:72
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:977:66: 977:70
                                         // + literal: Const { ty: fn(libproto::VerifyBlockResp) -> InnerMessage_oneof_content {<libproto::VerifyBlockResp as Into<InnerMessage_oneof_content>>::into}, val: Value(<ZST>) }
    }

    bb52: {
        _92 = libproto::Message::init(move _93, const 0_u32, move _94) -> [return: bb53, unwind: bb122]; // scope 14 at cita-auth/src/handler.rs:977:23: 977:73
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:977:23: 977:36
                                         // + literal: Const { ty: fn(OperateType, u32, InnerMessage_oneof_content) -> libproto::Message {libproto::Message::init}, val: Value(<ZST>) }
    }

    bb53: {
        _98 = &((*_1).1: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 15 at cita-auth/src/handler.rs:978:13: 982:19
        _102 = const Auth;               // scope 15 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x04)) }
        _103 = const libproto::router::MsgType::VerifyBlockResp; // scope 15 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x0f)) }
        _101 = RoutingKey(move _102, move _103); // scope 15 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _100 = <RoutingKey as Into<std::string::String>>::into(move _101) -> [return: bb54, unwind: bb105]; // scope 15 at cita-auth/src/handler.rs:980:21: 980:65
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:980:59: 980:63
                                         // + literal: Const { ty: fn(RoutingKey) -> std::string::String {<RoutingKey as Into<std::string::String>>::into}, val: Value(<ZST>) }
    }

    bb54: {
        _106 = &_92;                     // scope 15 at cita-auth/src/handler.rs:981:21: 981:27
        _105 = <&libproto::Message as libproto::TryInto<Vec<u8>>>::try_into(_106) -> [return: bb55, unwind: bb104]; // scope 15 at cita-auth/src/handler.rs:981:21: 981:38
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:981:28: 981:36
                                         // + literal: Const { ty: fn(&libproto::Message) -> Result<Vec<u8>, <&libproto::Message as libproto::TryInto<Vec<u8>>>::Error> {<&libproto::Message as libproto::TryInto<Vec<u8>>>::try_into}, val: Value(<ZST>) }
    }

    bb55: {
        _104 = Result::<Vec<u8>, TryIntoConvertError>::unwrap(move _105) -> [return: bb56, unwind: bb104]; // scope 15 at cita-auth/src/handler.rs:981:21: 981:47
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:981:39: 981:45
                                         // + literal: Const { ty: fn(Result<Vec<u8>, TryIntoConvertError>) -> Vec<u8> {Result::<Vec<u8>, TryIntoConvertError>::unwrap}, val: Value(<ZST>) }
    }

    bb56: {
        _99 = (move _100, move _104);    // scope 15 at cita-auth/src/handler.rs:979:23: 982:18
        _97 = pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send(move _98, move _99) -> [return: bb57, unwind: bb105]; // scope 15 at cita-auth/src/handler.rs:978:13: 982:19
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:979:18: 979:22
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, (std::string::String, Vec<u8>)) -> Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>> {pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send}, val: Value(<ZST>) }
    }

    bb57: {
        _96 = Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap(move _97) -> [return: bb58, unwind: bb105]; // scope 15 at cita-auth/src/handler.rs:978:13: 983:26
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:983:18: 983:24
                                         // + literal: Const { ty: fn(Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>) {Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap}, val: Value(<ZST>) }
    }

    bb58: {
        drop(_92) -> [return: bb59, unwind: bb122]; // scope 14 at cita-auth/src/handler.rs:984:9: 984:10
    }

    bb59: {
        _172 = const false;              // scope 10 at cita-auth/src/handler.rs:984:9: 984:10
        goto -> bb93;                    // scope 10 at cita-auth/src/handler.rs:968:9: 1005:10
    }

    bb60: {
        _107 = log::Level::Info;         // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _110 = &_107;                    // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _164 = const _;                  // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::deal_signed_proposal, [], Some(promoted[2])) }
        _109 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _110, _164) -> [return: bb64, unwind: bb124]; // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb61: {
        _108 = const false;              // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb63;                    // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb62: {
        _112 = &_107;                    // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _114 = log::max_level() -> [return: bb65, unwind: bb124]; // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb63: {
        switchInt(move _108) -> [0: bb71, otherwise: bb67]; // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb64: {
        switchInt(move _109) -> [0: bb61, otherwise: bb62]; // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb65: {
        _113 = &_114;                    // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _111 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _112, move _113) -> [return: bb66, unwind: bb124]; // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb66: {
        _108 = move _111;                // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb63;                    // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb67: {
        _163 = const _;                  // scope 16 at cita-auth/src/handler.rs:985:19: 985:44
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:985:19: 985:44
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(MsgHandler::deal_signed_proposal, [], Some(promoted[1])) }
        _117 = _163 as &[&str] (Pointer(Unsize)); // scope 16 at cita-auth/src/handler.rs:985:19: 985:44
        _124 = &_54;                     // scope 16 at cita-auth/src/handler.rs:985:46: 985:66
        _123 = Vec::<H256>::len(move _124) -> [return: bb68, unwind: bb124]; // scope 16 at cita-auth/src/handler.rs:985:46: 985:66
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:985:61: 985:64
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<H256>) -> usize {Vec::<H256>::len}, val: Value(<ZST>) }
    }

    bb68: {
        _122 = &_123;                    // scope 16 at cita-auth/src/handler.rs:985:46: 985:66
        _121 = core::fmt::ArgumentV1::<'_>::new_display::<usize>(_122) -> [return: bb69, unwind: bb124]; // scope 16 at cita-auth/src/handler.rs:985:46: 985:66
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:985:46: 985:66
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b usize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<usize>}, val: Value(<ZST>) }
    }

    bb69: {
        _120 = [move _121];              // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _119 = &_120;                    // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _118 = _119 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _116 = Arguments::<'_>::new_v1(move _117, move _118) -> [return: bb70, unwind: bb124]; // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb70: {
        _162 = const _;                  // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::deal_signed_proposal, [], Some(promoted[0])) }
        _115 = log::__private_api_log(move _116, _107, _162) -> [return: bb128, unwind: bb124]; // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb71: {
        _170 = const false;              // scope 10 at cita-auth/src/handler.rs:986:42: 986:58
        _126 = move _3;                  // scope 10 at cita-auth/src/handler.rs:986:42: 986:58
        _125 = std::option::Option::<libproto::VerifyBlockReq>::Some(move _126); // scope 10 at cita-auth/src/handler.rs:986:37: 986:59
        drop(((*_1).14: std::option::Option<libproto::VerifyBlockReq>)) -> [return: bb72, unwind: bb73]; // scope 10 at cita-auth/src/handler.rs:986:13: 986:34
    }

    bb72: {
        ((*_1).14: std::option::Option<libproto::VerifyBlockReq>) = move _125; // scope 10 at cita-auth/src/handler.rs:986:13: 986:34
        _127 = libproto::GetBlockTxn::new() -> [return: bb74, unwind: bb124]; // scope 10 at cita-auth/src/handler.rs:988:37: 988:55
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:988:37: 988:53
                                         // + literal: Const { ty: fn() -> libproto::GetBlockTxn {libproto::GetBlockTxn::new}, val: Value(<ZST>) }
    }

    bb73 (cleanup): {
        ((*_1).14: std::option::Option<libproto::VerifyBlockReq>) = move _125; // scope 10 at cita-auth/src/handler.rs:986:13: 986:34
        goto -> bb124;                   // scope 10 at cita-auth/src/handler.rs:986:13: 986:34
    }

    bb74: {
        _171 = const true;               // scope 17 at cita-auth/src/handler.rs:989:13: 989:62
        _129 = &mut _127;                // scope 17 at cita-auth/src/handler.rs:989:13: 989:62
        _133 = &_6;                      // scope 17 at cita-auth/src/handler.rs:989:42: 989:61
        _132 = <H256 as Deref>::deref(move _133) -> [return: bb75, unwind: bb120]; // scope 17 at cita-auth/src/handler.rs:989:42: 989:61
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:989:42: 989:61
                                         // + literal: Const { ty: for<'a> fn(&'a H256) -> &'a <H256 as Deref>::Target {<H256 as Deref>::deref}, val: Value(<ZST>) }
    }

    bb75: {
        _131 = _132;                     // scope 17 at cita-auth/src/handler.rs:989:42: 989:61
        _130 = std::slice::<impl [u8]>::to_vec(move _131) -> [return: bb76, unwind: bb120]; // scope 17 at cita-auth/src/handler.rs:989:42: 989:61
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:989:53: 989:59
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> Vec<u8> {std::slice::<impl [u8]>::to_vec}, val: Value(<ZST>) }
    }

    bb76: {
        _128 = libproto::GetBlockTxn::set_block_hash(move _129, move _130) -> [return: bb77, unwind: bb120]; // scope 17 at cita-auth/src/handler.rs:989:13: 989:62
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:989:27: 989:41
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::GetBlockTxn, Vec<u8>) {libproto::GetBlockTxn::set_block_hash}, val: Value(<ZST>) }
    }

    bb77: {
        _169 = const false;              // scope 17 at cita-auth/src/handler.rs:990:34: 990:48
        _137 = move _54;                 // scope 17 at cita-auth/src/handler.rs:990:34: 990:48
        _136 = <Vec<H256> as IntoIterator>::into_iter(move _137) -> [return: bb78, unwind: bb120]; // scope 17 at cita-auth/src/handler.rs:990:34: 991:29
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:991:18: 991:27
                                         // + literal: Const { ty: fn(Vec<H256>) -> <Vec<H256> as IntoIterator>::IntoIter {<Vec<H256> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb78: {
        _135 = <std::vec::IntoIter<H256> as Iterator>::map::<Vec<u8>, [closure@cita-auth/src/handler.rs:992:22: 992:28]>(move _136, const ZeroSized: [closure@cita-auth/src/handler.rs:992:22: 992:28]) -> [return: bb79, unwind: bb120]; // scope 17 at cita-auth/src/handler.rs:990:34: 992:43
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:992:18: 992:21
                                         // + literal: Const { ty: fn(std::vec::IntoIter<H256>, [closure@cita-auth/src/handler.rs:992:22: 992:28]) -> std::iter::Map<std::vec::IntoIter<H256>, [closure@cita-auth/src/handler.rs:992:22: 992:28]> {<std::vec::IntoIter<H256> as Iterator>::map::<Vec<u8>, [closure@cita-auth/src/handler.rs:992:22: 992:28]>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: [closure@cita-auth/src/handler.rs:992:22: 992:28], val: Value(<ZST>) }
    }

    bb79: {
        _134 = <std::iter::Map<std::vec::IntoIter<H256>, [closure@cita-auth/src/handler.rs:992:22: 992:28]> as Iterator>::collect::<protobuf::repeated::RepeatedField<Vec<u8>>>(move _135) -> [return: bb80, unwind: bb120]; // scope 17 at cita-auth/src/handler.rs:990:34: 993:27
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:993:18: 993:25
                                         // + literal: Const { ty: fn(std::iter::Map<std::vec::IntoIter<H256>, [closure@cita-auth/src/handler.rs:992:22: 992:28]>) -> protobuf::repeated::RepeatedField<Vec<u8>> {<std::iter::Map<std::vec::IntoIter<H256>, [closure@cita-auth/src/handler.rs:992:22: 992:28]> as Iterator>::collect::<protobuf::repeated::RepeatedField<Vec<u8>>>}, val: Value(<ZST>) }
    }

    bb80: {
        _139 = &mut _127;                // scope 18 at cita-auth/src/handler.rs:994:13: 994:56
        _140 = move _134;                // scope 18 at cita-auth/src/handler.rs:994:41: 994:55
        _138 = libproto::GetBlockTxn::set_short_ids(move _139, move _140) -> [return: bb81, unwind: bb120]; // scope 18 at cita-auth/src/handler.rs:994:13: 994:56
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:994:27: 994:40
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::GetBlockTxn, protobuf::repeated::RepeatedField<Vec<u8>>) {libproto::GetBlockTxn::set_short_ids}, val: Value(<ZST>) }
    }

    bb81: {
        _143 = _16;                      // scope 18 at cita-auth/src/handler.rs:996:40: 996:46
        _145 = &_127;                    // scope 18 at cita-auth/src/handler.rs:996:48: 996:69
        _144 = <libproto::GetBlockTxn as Clone>::clone(move _145) -> [return: bb82, unwind: bb120]; // scope 18 at cita-auth/src/handler.rs:996:48: 996:69
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:996:62: 996:67
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::GetBlockTxn) -> libproto::GetBlockTxn {<libproto::GetBlockTxn as Clone>::clone}, val: Value(<ZST>) }
    }

    bb82: {
        _142 = (move _143, move _144);   // scope 18 at cita-auth/src/handler.rs:996:39: 996:70
        _141 = std::option::Option::<(u32, libproto::GetBlockTxn)>::Some(move _142); // scope 18 at cita-auth/src/handler.rs:996:34: 996:71
        drop(((*_1).13: std::option::Option<(u32, libproto::GetBlockTxn)>)) -> [return: bb83, unwind: bb84]; // scope 18 at cita-auth/src/handler.rs:996:13: 996:31
    }

    bb83: {
        ((*_1).13: std::option::Option<(u32, libproto::GetBlockTxn)>) = move _141; // scope 18 at cita-auth/src/handler.rs:996:13: 996:31
        _147 = const libproto::OperateType::Single; // scope 18 at cita-auth/src/handler.rs:998:37: 998:56
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: OperateType, val: Value(Scalar(0x01)) }
        _148 = _16;                      // scope 18 at cita-auth/src/handler.rs:998:58: 998:64
        _171 = const false;              // scope 18 at cita-auth/src/handler.rs:998:66: 998:79
        _150 = move _127;                // scope 18 at cita-auth/src/handler.rs:998:66: 998:79
        _149 = <libproto::GetBlockTxn as Into<InnerMessage_oneof_content>>::into(move _150) -> [return: bb85, unwind: bb120]; // scope 18 at cita-auth/src/handler.rs:998:66: 998:86
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:998:80: 998:84
                                         // + literal: Const { ty: fn(libproto::GetBlockTxn) -> InnerMessage_oneof_content {<libproto::GetBlockTxn as Into<InnerMessage_oneof_content>>::into}, val: Value(<ZST>) }
    }

    bb84 (cleanup): {
        ((*_1).13: std::option::Option<(u32, libproto::GetBlockTxn)>) = move _141; // scope 18 at cita-auth/src/handler.rs:996:13: 996:31
        goto -> bb120;                   // scope 18 at cita-auth/src/handler.rs:996:13: 996:31
    }

    bb85: {
        _146 = libproto::Message::init(move _147, move _148, move _149) -> [return: bb86, unwind: bb120]; // scope 18 at cita-auth/src/handler.rs:998:23: 998:87
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:998:23: 998:36
                                         // + literal: Const { ty: fn(OperateType, u32, InnerMessage_oneof_content) -> libproto::Message {libproto::Message::init}, val: Value(<ZST>) }
    }

    bb86: {
        _153 = &((*_1).1: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 19 at cita-auth/src/handler.rs:999:13: 1003:19
        _157 = const Auth;               // scope 19 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x04)) }
        _158 = const libproto::router::MsgType::GetBlockTxn; // scope 19 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x17)) }
        _156 = RoutingKey(move _157, move _158); // scope 19 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _155 = <RoutingKey as Into<std::string::String>>::into(move _156) -> [return: bb87, unwind: bb103]; // scope 19 at cita-auth/src/handler.rs:1001:21: 1001:61
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1001:55: 1001:59
                                         // + literal: Const { ty: fn(RoutingKey) -> std::string::String {<RoutingKey as Into<std::string::String>>::into}, val: Value(<ZST>) }
    }

    bb87: {
        _161 = &_146;                    // scope 19 at cita-auth/src/handler.rs:1002:21: 1002:27
        _160 = <&libproto::Message as libproto::TryInto<Vec<u8>>>::try_into(_161) -> [return: bb88, unwind: bb102]; // scope 19 at cita-auth/src/handler.rs:1002:21: 1002:38
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1002:28: 1002:36
                                         // + literal: Const { ty: fn(&libproto::Message) -> Result<Vec<u8>, <&libproto::Message as libproto::TryInto<Vec<u8>>>::Error> {<&libproto::Message as libproto::TryInto<Vec<u8>>>::try_into}, val: Value(<ZST>) }
    }

    bb88: {
        _159 = Result::<Vec<u8>, TryIntoConvertError>::unwrap(move _160) -> [return: bb89, unwind: bb102]; // scope 19 at cita-auth/src/handler.rs:1002:21: 1002:47
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1002:39: 1002:45
                                         // + literal: Const { ty: fn(Result<Vec<u8>, TryIntoConvertError>) -> Vec<u8> {Result::<Vec<u8>, TryIntoConvertError>::unwrap}, val: Value(<ZST>) }
    }

    bb89: {
        _154 = (move _155, move _159);   // scope 19 at cita-auth/src/handler.rs:1000:23: 1003:18
        _152 = pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send(move _153, move _154) -> [return: bb90, unwind: bb103]; // scope 19 at cita-auth/src/handler.rs:999:13: 1003:19
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1000:18: 1000:22
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, (std::string::String, Vec<u8>)) -> Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>> {pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send}, val: Value(<ZST>) }
    }

    bb90: {
        _151 = Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap(move _152) -> [return: bb91, unwind: bb103]; // scope 19 at cita-auth/src/handler.rs:999:13: 1004:26
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1004:18: 1004:24
                                         // + literal: Const { ty: fn(Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>) {Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap}, val: Value(<ZST>) }
    }

    bb91: {
        drop(_146) -> [return: bb92, unwind: bb120]; // scope 18 at cita-auth/src/handler.rs:1005:9: 1005:10
    }

    bb92: {
        _171 = const false;              // scope 10 at cita-auth/src/handler.rs:1005:9: 1005:10
        goto -> bb93;                    // scope 10 at cita-auth/src/handler.rs:968:9: 1005:10
    }

    bb93: {
        switchInt(_169) -> [0: bb94, otherwise: bb117]; // scope 4 at cita-auth/src/handler.rs:1006:5: 1006:6
    }

    bb94: {
        _169 = const false;              // scope 4 at cita-auth/src/handler.rs:1006:5: 1006:6
        drop(_10) -> [return: bb95, unwind: bb126]; // scope 2 at cita-auth/src/handler.rs:1006:5: 1006:6
    }

    bb95: {
        _170 = const false;              // scope 0 at cita-auth/src/handler.rs:1006:5: 1006:6
        drop(_2) -> bb101;               // scope 0 at cita-auth/src/handler.rs:1006:5: 1006:6
    }

    bb96: {
        drop(_32) -> [return: bb97, unwind: bb109]; // scope 6 at cita-auth/src/handler.rs:961:17: 961:18
    }

    bb97: {
        _168 = const false;              // scope 6 at cita-auth/src/handler.rs:962:13: 962:14
        drop(_23) -> [return: bb98, unwind: bb110]; // scope 4 at cita-auth/src/handler.rs:962:13: 962:14
    }

    bb98: {
        drop(_10) -> [return: bb99, unwind: bb126]; // scope 2 at cita-auth/src/handler.rs:1006:5: 1006:6
    }

    bb99: {
        switchInt(_170) -> [0: bb100, otherwise: bb118]; // scope 0 at cita-auth/src/handler.rs:1006:5: 1006:6
    }

    bb100: {
        _170 = const false;              // scope 0 at cita-auth/src/handler.rs:1006:5: 1006:6
        drop(_2) -> bb101;               // scope 0 at cita-auth/src/handler.rs:1006:5: 1006:6
    }

    bb101: {
        return;                          // scope 0 at cita-auth/src/handler.rs:1006:6: 1006:6
    }

    bb102 (cleanup): {
        drop(_155) -> bb103;             // scope 19 at cita-auth/src/handler.rs:1003:17: 1003:18
    }

    bb103 (cleanup): {
        drop(_146) -> bb120;             // scope 18 at cita-auth/src/handler.rs:1005:9: 1005:10
    }

    bb104 (cleanup): {
        drop(_100) -> bb105;             // scope 15 at cita-auth/src/handler.rs:982:17: 982:18
    }

    bb105 (cleanup): {
        drop(_92) -> bb122;              // scope 14 at cita-auth/src/handler.rs:984:9: 984:10
    }

    bb106 (cleanup): {
        drop(_47) -> bb107;              // scope 9 at cita-auth/src/handler.rs:957:29: 957:30
    }

    bb107 (cleanup): {
        drop(_38) -> bb108;              // scope 8 at cita-auth/src/handler.rs:960:21: 960:22
    }

    bb108 (cleanup): {
        drop(_32) -> bb109;              // scope 6 at cita-auth/src/handler.rs:961:17: 961:18
    }

    bb109 (cleanup): {
        drop(_23) -> bb110;              // scope 4 at cita-auth/src/handler.rs:962:13: 962:14
    }

    bb110 (cleanup): {
        drop(_10) -> bb126;              // scope 2 at cita-auth/src/handler.rs:1006:5: 1006:6
    }

    bb111 (cleanup): {
        drop(_2) -> bb112;               // scope 0 at cita-auth/src/handler.rs:1006:5: 1006:6
    }

    bb112 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/handler.rs:935:5: 1006:6
    }

    bb113: {
        _168 = const false;              // scope 6 at cita-auth/src/handler.rs:962:13: 962:14
        goto -> bb13;                    // scope 5 at cita-auth/src/handler.rs:947:13: 962:14
    }

    bb114: {
        switchInt(_168) -> [0: bb113, otherwise: bb115]; // scope 6 at cita-auth/src/handler.rs:962:13: 962:14
    }

    bb115: {
        drop(((_28 as Some).0: std::option::Option<std::vec::Vec<u8>>)) -> [return: bb113, unwind: bb109]; // scope 6 at cita-auth/src/handler.rs:962:13: 962:14
    }

    bb116: {
        _173 = discriminant(_28);        // scope 6 at cita-auth/src/handler.rs:962:13: 962:14
        switchInt(move _173) -> [1: bb114, otherwise: bb113]; // scope 6 at cita-auth/src/handler.rs:962:13: 962:14
    }

    bb117: {
        drop(_54) -> [return: bb94, unwind: bb110]; // scope 4 at cita-auth/src/handler.rs:1006:5: 1006:6
    }

    bb118: {
        drop(_3) -> [return: bb100, unwind: bb111]; // scope 0 at cita-auth/src/handler.rs:1006:5: 1006:6
    }

    bb119 (cleanup): {
        drop(_127) -> bb124;             // scope 10 at cita-auth/src/handler.rs:1005:9: 1005:10
    }

    bb120 (cleanup): {
        switchInt(_171) -> [0: bb124, otherwise: bb119]; // scope 10 at cita-auth/src/handler.rs:1005:9: 1005:10
    }

    bb121 (cleanup): {
        drop(_60) -> bb124;              // scope 10 at cita-auth/src/handler.rs:984:9: 984:10
    }

    bb122 (cleanup): {
        switchInt(_172) -> [0: bb124, otherwise: bb121]; // scope 10 at cita-auth/src/handler.rs:984:9: 984:10
    }

    bb123 (cleanup): {
        drop(_54) -> bb110;              // scope 4 at cita-auth/src/handler.rs:1006:5: 1006:6
    }

    bb124 (cleanup): {
        switchInt(_169) -> [0: bb110, otherwise: bb123]; // scope 4 at cita-auth/src/handler.rs:1006:5: 1006:6
    }

    bb125 (cleanup): {
        drop(_3) -> bb111;               // scope 0 at cita-auth/src/handler.rs:1006:5: 1006:6
    }

    bb126 (cleanup): {
        switchInt(_170) -> [0: bb111, otherwise: bb125]; // scope 0 at cita-auth/src/handler.rs:1006:5: 1006:6
    }

    bb127: {
        goto -> bb50;                    // scope 13 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb128: {
        goto -> bb71;                    // scope 16 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_signed_proposal: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:985:13: 985:67
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:985:13: 985:67

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:985:13: 985:67
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:985:13: 985:67
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:985:13: 985:67
        _1 = (move _2, move _4, move _6, const 985_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_signed_proposal: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/handler.rs:985:19: 985:44
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/handler.rs:985:19: 985:44

    bb0: {
        _1 = [const "missing_hashes len : "]; // scope 0 at cita-auth/src/handler.rs:985:19: 985:44
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:985:19: 985:44
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:985:19: 985:44
        return;                          // scope 0 at cita-auth/src/handler.rs:985:19: 985:44
    }
}

promoted[2] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_signed_proposal: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[3] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_signed_proposal: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:973:17: 973:70
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:973:17: 973:70

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:973:17: 973:70
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:973:17: 973:70
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:973:17: 973:70
        _1 = (move _2, move _4, move _6, const 973_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[4] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_signed_proposal: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/handler.rs:973:24: 973:64
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/handler.rs:973:24: 973:64

    bb0: {
        _1 = [const "verify_block_req check txs failed "]; // scope 0 at cita-auth/src/handler.rs:973:24: 973:64
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:973:24: 973:64
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:973:24: 973:64
        return;                          // scope 0 at cita-auth/src/handler.rs:973:24: 973:64
    }
}

promoted[5] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_signed_proposal: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_signed_proposal::{closure#0}(_1: &mut [closure@cita-auth/src/handler.rs:992:22: 992:28], _2: H256) -> Vec<u8> {
    debug hash => _2;                    // in scope 0 at cita-auth/src/handler.rs:992:23: 992:27
    let mut _0: std::vec::Vec<u8>;       // return place in scope 0 at cita-auth/src/handler.rs:992:29: 992:29
    let mut _3: &[u8];                   // in scope 0 at cita-auth/src/handler.rs:992:29: 992:42
    let _4: &[u8];                       // in scope 0 at cita-auth/src/handler.rs:992:29: 992:42
    let mut _5: &cita_types::H256;       // in scope 0 at cita-auth/src/handler.rs:992:29: 992:42

    bb0: {
        _5 = &_2;                        // scope 0 at cita-auth/src/handler.rs:992:29: 992:42
        _4 = <H256 as Deref>::deref(move _5) -> bb1; // scope 0 at cita-auth/src/handler.rs:992:29: 992:42
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:992:29: 992:42
                                         // + literal: Const { ty: for<'a> fn(&'a H256) -> &'a <H256 as Deref>::Target {<H256 as Deref>::deref}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = _4;                         // scope 0 at cita-auth/src/handler.rs:992:29: 992:42
        _0 = std::slice::<impl [u8]>::to_vec(move _3) -> bb2; // scope 0 at cita-auth/src/handler.rs:992:29: 992:42
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:992:34: 992:40
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> Vec<u8> {std::slice::<impl [u8]>::to_vec}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at cita-auth/src/handler.rs:992:42: 992:42
    }
}

fn handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_block_txn(_1: &mut MsgHandler, _2: libproto::Message, _3: libproto::VerifyBlockReq) -> () {
    debug self => _1;                    // in scope 0 at cita-auth/src/handler.rs:1009:23: 1009:32
    debug msg => _2;                     // in scope 0 at cita-auth/src/handler.rs:1009:34: 1009:41
    debug verify_block_req => _3;        // in scope 0 at cita-auth/src/handler.rs:1009:52: 1009:68
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/handler.rs:1009:86: 1009:86
    let _4: libproto::BlockTxn;          // in scope 0 at cita-auth/src/handler.rs:1010:13: 1010:22
    let mut _5: std::option::Option<libproto::BlockTxn>; // in scope 0 at cita-auth/src/handler.rs:1010:25: 1010:45
    let mut _6: &mut libproto::Message;  // in scope 0 at cita-auth/src/handler.rs:1010:25: 1010:45
    let mut _8: &libproto::Message;      // in scope 0 at cita-auth/src/handler.rs:1011:22: 1011:38
    let mut _10: u32;                    // in scope 0 at cita-auth/src/handler.rs:1013:51: 1013:57
    let mut _11: libproto::BlockTxn;     // in scope 0 at cita-auth/src/handler.rs:1013:59: 1013:68
    let mut _12: bool;                   // in scope 0 at cita-auth/src/handler.rs:1015:12: 1015:54
    let mut _14: &libproto::CompactBlockBody; // in scope 0 at cita-auth/src/handler.rs:1016:29: 1016:89
    let _15: &libproto::CompactBlockBody; // in scope 0 at cita-auth/src/handler.rs:1016:29: 1016:68
    let mut _16: &libproto::CompactBlock; // in scope 0 at cita-auth/src/handler.rs:1016:29: 1016:68
    let _17: &libproto::CompactBlock;    // in scope 0 at cita-auth/src/handler.rs:1016:29: 1016:57
    let mut _18: &libproto::VerifyBlockReq; // in scope 0 at cita-auth/src/handler.rs:1016:29: 1016:57
    let mut _20: &dispatcher::Dispatcher; // in scope 0 at cita-auth/src/handler.rs:1018:32: 1018:67
    let mut _21: &[cita_types::H256];    // in scope 0 at cita-auth/src/handler.rs:1018:56: 1018:66
    let _22: &[cita_types::H256];        // in scope 0 at cita-auth/src/handler.rs:1018:56: 1018:66
    let _23: &std::vec::Vec<cita_types::H256>; // in scope 0 at cita-auth/src/handler.rs:1018:56: 1018:66
    let mut _24: bool;                   // in scope 0 at cita-auth/src/handler.rs:1020:16: 1020:53
    let mut _25: usize;                  // in scope 0 at cita-auth/src/handler.rs:1020:16: 1020:34
    let mut _26: &std::vec::Vec<libproto::SignedTransaction>; // in scope 0 at cita-auth/src/handler.rs:1020:16: 1020:34
    let mut _27: usize;                  // in scope 0 at cita-auth/src/handler.rs:1020:38: 1020:53
    let mut _28: &std::vec::Vec<cita_types::H256>; // in scope 0 at cita-auth/src/handler.rs:1020:38: 1020:53
    let mut _30: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _31: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _32: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _33: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _34: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _35: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _36: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _37: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _38: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _39: &[&str];                // in scope 0 at cita-auth/src/handler.rs:1022:21: 1022:88
    let mut _40: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _41: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _42: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _43: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:1023:21: 1023:36
    let _44: &usize;                     // in scope 0 at cita-auth/src/handler.rs:1023:21: 1023:36
    let _45: usize;                      // in scope 0 at cita-auth/src/handler.rs:1023:21: 1023:36
    let mut _46: &std::vec::Vec<cita_types::H256>; // in scope 0 at cita-auth/src/handler.rs:1023:21: 1023:36
    let mut _47: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:1024:21: 1024:39
    let _48: &usize;                     // in scope 0 at cita-auth/src/handler.rs:1024:21: 1024:39
    let _49: usize;                      // in scope 0 at cita-auth/src/handler.rs:1024:21: 1024:39
    let mut _50: &std::vec::Vec<libproto::SignedTransaction>; // in scope 0 at cita-auth/src/handler.rs:1024:21: 1024:39
    let _53: &std::vec::Vec<libproto::SignedTransaction>; // in scope 0 at cita-auth/src/handler.rs:1031:35: 1031:48
    let mut _54: &block_verify::BlockVerify<'_>; // in scope 0 at cita-auth/src/handler.rs:1034:17: 1038:18
    let mut _55: u64;                    // in scope 0 at cita-auth/src/handler.rs:1035:21: 1035:55
    let _56: &libproto::AccountGasLimit; // in scope 0 at cita-auth/src/handler.rs:1036:21: 1036:58
    let mut _57: bool;                   // in scope 0 at cita-auth/src/handler.rs:1037:21: 1037:49
    let mut _59: bool;                   // in scope 0 at cita-auth/src/handler.rs:1042:27: 1042:33
    let mut _60: std::result::Result<(), std::option::Option<usize>>; // in scope 0 at cita-auth/src/handler.rs:1043:35: 1043:80
    let mut _61: &libproto::VerifyBlockReq; // in scope 0 at cita-auth/src/handler.rs:1043:35: 1043:80
    let _62: &[libproto::SignedTransaction]; // in scope 0 at cita-auth/src/handler.rs:1043:62: 1043:79
    let _63: &[libproto::SignedTransaction]; // in scope 0 at cita-auth/src/handler.rs:1043:63: 1043:79
    let mut _64: &std::vec::Vec<libproto::SignedTransaction>; // in scope 0 at cita-auth/src/handler.rs:1043:63: 1043:75
    let mut _65: isize;                  // in scope 0 at cita-auth/src/handler.rs:1043:24: 1043:32
    let mut _68: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _69: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _70: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _71: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _72: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _73: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _74: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _75: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _76: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _77: &[&str];                // in scope 0 at cita-auth/src/handler.rs:1044:28: 1044:68
    let mut _78: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _79: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _80: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _81: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:1044:70: 1044:73
    let _82: &std::option::Option<usize>; // in scope 0 at cita-auth/src/handler.rs:1044:70: 1044:73
    let mut _83: libproto::VerifyBlockReq; // in scope 0 at cita-auth/src/handler.rs:1046:17: 1046:33
    let mut _84: std::result::Result<std::vec::Vec<libproto::SignedTransaction>, ()>; // in scope 0 at cita-auth/src/handler.rs:1046:40: 1046:56
    let mut _85: std::vec::Vec<libproto::SignedTransaction>; // in scope 0 at cita-auth/src/handler.rs:1046:43: 1046:55
    let mut _86: libproto::VerifyBlockReq; // in scope 0 at cita-auth/src/handler.rs:1048:17: 1048:33
    let mut _87: std::result::Result<std::vec::Vec<libproto::SignedTransaction>, ()>; // in scope 0 at cita-auth/src/handler.rs:1048:40: 1048:47
    let mut _89: libproto::OperateType;  // in scope 0 at cita-auth/src/handler.rs:1050:37: 1050:56
    let mut _90: libproto::MsgClass;     // in scope 0 at cita-auth/src/handler.rs:1050:61: 1050:72
    let mut _91: libproto::VerifyBlockResp; // in scope 0 at cita-auth/src/handler.rs:1050:61: 1050:65
    let _92: ();                         // in scope 0 at cita-auth/src/handler.rs:1051:13: 1056:26
    let mut _93: std::result::Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>>; // in scope 0 at cita-auth/src/handler.rs:1051:13: 1055:19
    let mut _94: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-auth/src/handler.rs:1051:13: 1055:19
    let mut _95: (std::string::String, std::vec::Vec<u8>); // in scope 0 at cita-auth/src/handler.rs:1052:23: 1055:18
    let mut _96: std::string::String;    // in scope 0 at cita-auth/src/handler.rs:1053:21: 1053:65
    let mut _97: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _98: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _99: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _100: std::vec::Vec<u8>;     // in scope 0 at cita-auth/src/handler.rs:1054:21: 1054:47
    let mut _101: std::result::Result<std::vec::Vec<u8>, libproto::TryIntoConvertError>; // in scope 0 at cita-auth/src/handler.rs:1054:21: 1054:38
    let _102: &libproto::Message;        // in scope 0 at cita-auth/src/handler.rs:1054:21: 1054:27
    let mut _109: bool;                  // in scope 0 at cita-auth/src/handler.rs:1057:9: 1057:10
    let mut _110: bool;                  // in scope 0 at cita-auth/src/handler.rs:1058:5: 1058:6
    let mut _111: bool;                  // in scope 0 at cita-auth/src/handler.rs:1058:5: 1058:6
    scope 1 {
        debug block_txn => _4;           // in scope 1 at cita-auth/src/handler.rs:1010:13: 1010:22
        let _7: u32;                     // in scope 1 at cita-auth/src/handler.rs:1011:13: 1011:19
        scope 2 {
            debug origin => _7;          // in scope 2 at cita-auth/src/handler.rs:1011:13: 1011:19
            let _9: block_txn::BlockTxnMessage; // in scope 2 at cita-auth/src/handler.rs:1013:13: 1013:30
            scope 3 {
                debug block_txn_message => _9; // in scope 3 at cita-auth/src/handler.rs:1013:13: 1013:30
                let _13: std::vec::Vec<cita_types::H256>; // in scope 3 at cita-auth/src/handler.rs:1016:17: 1016:26
                scope 4 {
                    debug tx_hashes => _13; // in scope 4 at cita-auth/src/handler.rs:1016:17: 1016:26
                    let _19: std::vec::Vec<libproto::SignedTransaction>; // in scope 4 at cita-auth/src/handler.rs:1018:17: 1018:29
                    scope 5 {
                        debug transactions => _19; // in scope 5 at cita-auth/src/handler.rs:1018:17: 1018:29
                        let _29: log::Level; // in scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                        let _51: bool;   // in scope 5 at cita-auth/src/handler.rs:1029:17: 1029:23
                        let _52: block_verify::BlockVerify<'_>; // in scope 5 at cita-auth/src/handler.rs:1030:21: 1030:26
                        scope 6 {
                            debug lvl => _29; // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                            let mut _106: &(&str, &str, &str, u32); // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                            let mut _107: &[&str; 2]; // in scope 6 at cita-auth/src/handler.rs:1022:21: 1022:88
                            let mut _108: &log::LevelFilter; // in scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                        }
                        scope 7 {
                            debug result => _51; // in scope 7 at cita-auth/src/handler.rs:1029:17: 1029:23
                            let _58: libproto::VerifyBlockResp; // in scope 7 at cita-auth/src/handler.rs:1042:17: 1042:21
                            scope 9 {
                                debug resp => _58; // in scope 9 at cita-auth/src/handler.rs:1042:17: 1042:21
                                let _88: libproto::Message; // in scope 9 at cita-auth/src/handler.rs:1050:17: 1050:20
                                scope 12 {
                                    debug msg => _88; // in scope 12 at cita-auth/src/handler.rs:1050:17: 1050:20
                                }
                            }
                            scope 10 {
                                debug err => _66; // in scope 10 at cita-auth/src/handler.rs:1043:28: 1043:31
                                let _66: std::option::Option<usize>; // in scope 10 at cita-auth/src/handler.rs:1043:28: 1043:31
                                let _67: log::Level; // in scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                                scope 11 {
                                    debug lvl => _67; // in scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                                    let mut _103: &(&str, &str, &str, u32); // in scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                    let mut _104: &[&str; 1]; // in scope 11 at cita-auth/src/handler.rs:1044:28: 1044:68
                                    let mut _105: &log::LevelFilter; // in scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                }
                            }
                        }
                        scope 8 {
                            debug block => _52; // in scope 8 at cita-auth/src/handler.rs:1030:21: 1030:26
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _111 = const false;              // scope 0 at cita-auth/src/handler.rs:1010:13: 1010:22
        _109 = const false;              // scope 0 at cita-auth/src/handler.rs:1010:13: 1010:22
        _110 = const false;              // scope 0 at cita-auth/src/handler.rs:1010:13: 1010:22
        _110 = const true;               // scope 0 at cita-auth/src/handler.rs:1010:13: 1010:22
        _6 = &mut _2;                    // scope 0 at cita-auth/src/handler.rs:1010:25: 1010:45
        _5 = libproto::Message::take_block_txn(move _6) -> [return: bb1, unwind: bb72]; // scope 0 at cita-auth/src/handler.rs:1010:25: 1010:45
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1010:29: 1010:43
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::Message) -> std::option::Option<libproto::BlockTxn> {libproto::Message::take_block_txn}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = std::option::Option::<libproto::BlockTxn>::unwrap(move _5) -> [return: bb2, unwind: bb72]; // scope 0 at cita-auth/src/handler.rs:1010:25: 1010:54
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1010:46: 1010:52
                                         // + literal: Const { ty: fn(std::option::Option<libproto::BlockTxn>) -> libproto::BlockTxn {std::option::Option::<libproto::BlockTxn>::unwrap}, val: Value(<ZST>) }
    }

    bb2: {
        _111 = const true;               // scope 0 at cita-auth/src/handler.rs:1010:53: 1010:54
        _8 = &_2;                        // scope 1 at cita-auth/src/handler.rs:1011:22: 1011:38
        _7 = libproto::Message::get_origin(move _8) -> [return: bb3, unwind: bb70]; // scope 1 at cita-auth/src/handler.rs:1011:22: 1011:38
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1011:26: 1011:36
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::Message) -> u32 {libproto::Message::get_origin}, val: Value(<ZST>) }
    }

    bb3: {
        _10 = _7;                        // scope 2 at cita-auth/src/handler.rs:1013:51: 1013:57
        _111 = const false;              // scope 2 at cita-auth/src/handler.rs:1013:59: 1013:68
        _11 = move _4;                   // scope 2 at cita-auth/src/handler.rs:1013:59: 1013:68
        _9 = BlockTxnMessage { origin: move _10, block_txn: move _11 }; // scope 2 at cita-auth/src/handler.rs:1013:33: 1013:70
        _12 = MsgHandler::validate_block_txn(_1, move _9) -> [return: bb4, unwind: bb70]; // scope 3 at cita-auth/src/handler.rs:1015:12: 1015:54
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1015:17: 1015:35
                                         // + literal: Const { ty: for<'a> fn(&'a mut MsgHandler, BlockTxnMessage) -> bool {MsgHandler::validate_block_txn}, val: Value(<ZST>) }
    }

    bb4: {
        switchInt(move _12) -> [0: bb54, otherwise: bb5]; // scope 3 at cita-auth/src/handler.rs:1015:12: 1015:54
    }

    bb5: {
        _18 = &_3;                       // scope 3 at cita-auth/src/handler.rs:1016:29: 1016:57
        _17 = libproto::VerifyBlockReq::get_block(move _18) -> [return: bb6, unwind: bb70]; // scope 3 at cita-auth/src/handler.rs:1016:29: 1016:57
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1016:46: 1016:55
                                         // + literal: Const { ty: for<'a> fn(&'a libproto::VerifyBlockReq) -> &'a CompactBlock {libproto::VerifyBlockReq::get_block}, val: Value(<ZST>) }
    }

    bb6: {
        _16 = _17;                       // scope 3 at cita-auth/src/handler.rs:1016:29: 1016:68
        _15 = CompactBlock::get_body(move _16) -> [return: bb7, unwind: bb70]; // scope 3 at cita-auth/src/handler.rs:1016:29: 1016:68
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1016:58: 1016:66
                                         // + literal: Const { ty: for<'a> fn(&'a CompactBlock) -> &'a CompactBlockBody {CompactBlock::get_body}, val: Value(<ZST>) }
    }

    bb7: {
        _14 = _15;                       // scope 3 at cita-auth/src/handler.rs:1016:29: 1016:89
        _13 = libproto::<impl CompactBlockBody>::transaction_hashes(move _14) -> [return: bb8, unwind: bb70]; // scope 3 at cita-auth/src/handler.rs:1016:29: 1016:89
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1016:69: 1016:87
                                         // + literal: Const { ty: for<'a> fn(&'a CompactBlockBody) -> Vec<H256> {libproto::<impl CompactBlockBody>::transaction_hashes}, val: Value(<ZST>) }
    }

    bb8: {
        _20 = &((*_1).6: dispatcher::Dispatcher); // scope 4 at cita-auth/src/handler.rs:1018:32: 1018:67
        _23 = &_13;                      // scope 4 at cita-auth/src/handler.rs:1018:56: 1018:66
        _22 = <Vec<H256> as Deref>::deref(_23) -> [return: bb9, unwind: bb62]; // scope 4 at cita-auth/src/handler.rs:1018:56: 1018:66
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1018:56: 1018:66
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<H256>) -> &'a <Vec<H256> as Deref>::Target {<Vec<H256> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb9: {
        _21 = _22;                       // scope 4 at cita-auth/src/handler.rs:1018:56: 1018:66
        _19 = Dispatcher::get_txs(move _20, move _21) -> [return: bb10, unwind: bb62]; // scope 4 at cita-auth/src/handler.rs:1018:32: 1018:67
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1018:48: 1018:55
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Dispatcher, &'b [H256]) -> Vec<SignedTransaction> {Dispatcher::get_txs}, val: Value(<ZST>) }
    }

    bb10: {
        _109 = const true;               // scope 4 at cita-auth/src/handler.rs:1018:66: 1018:67
        _26 = &_19;                      // scope 5 at cita-auth/src/handler.rs:1020:16: 1020:34
        _25 = Vec::<SignedTransaction>::len(move _26) -> [return: bb11, unwind: bb68]; // scope 5 at cita-auth/src/handler.rs:1020:16: 1020:34
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1020:29: 1020:32
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<SignedTransaction>) -> usize {Vec::<SignedTransaction>::len}, val: Value(<ZST>) }
    }

    bb11: {
        _28 = &_13;                      // scope 5 at cita-auth/src/handler.rs:1020:38: 1020:53
        _27 = Vec::<H256>::len(move _28) -> [return: bb12, unwind: bb68]; // scope 5 at cita-auth/src/handler.rs:1020:38: 1020:53
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1020:48: 1020:51
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<H256>) -> usize {Vec::<H256>::len}, val: Value(<ZST>) }
    }

    bb12: {
        _24 = Ne(move _25, move _27);    // scope 5 at cita-auth/src/handler.rs:1020:16: 1020:53
        switchInt(move _24) -> [0: bb27, otherwise: bb13]; // scope 5 at cita-auth/src/handler.rs:1020:16: 1020:53
    }

    bb13: {
        _29 = log::Level::Info;          // scope 5 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _32 = &_29;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _108 = const _;                  // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::deal_block_txn, [], Some(promoted[5])) }
        _31 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _32, _108) -> [return: bb17, unwind: bb68]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb14: {
        _30 = const false;               // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb16;                    // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb15: {
        _34 = &_29;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _36 = log::max_level() -> [return: bb18, unwind: bb68]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb16: {
        switchInt(move _30) -> [0: bb26, otherwise: bb20]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb17: {
        switchInt(move _31) -> [0: bb14, otherwise: bb15]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb18: {
        _35 = &_36;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _33 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _34, move _35) -> [return: bb19, unwind: bb68]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb19: {
        _30 = move _33;                  // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb16;                    // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb20: {
        _107 = const _;                  // scope 6 at cita-auth/src/handler.rs:1022:21: 1022:88
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1022:21: 1022:88
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(MsgHandler::deal_block_txn, [], Some(promoted[4])) }
        _39 = _107 as &[&str] (Pointer(Unsize)); // scope 6 at cita-auth/src/handler.rs:1022:21: 1022:88
        _46 = &_13;                      // scope 6 at cita-auth/src/handler.rs:1023:21: 1023:36
        _45 = Vec::<H256>::len(move _46) -> [return: bb21, unwind: bb68]; // scope 6 at cita-auth/src/handler.rs:1023:21: 1023:36
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1023:31: 1023:34
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<H256>) -> usize {Vec::<H256>::len}, val: Value(<ZST>) }
    }

    bb21: {
        _44 = &_45;                      // scope 6 at cita-auth/src/handler.rs:1023:21: 1023:36
        _43 = core::fmt::ArgumentV1::<'_>::new_display::<usize>(_44) -> [return: bb22, unwind: bb68]; // scope 6 at cita-auth/src/handler.rs:1023:21: 1023:36
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1023:21: 1023:36
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b usize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<usize>}, val: Value(<ZST>) }
    }

    bb22: {
        _50 = &_19;                      // scope 6 at cita-auth/src/handler.rs:1024:21: 1024:39
        _49 = Vec::<SignedTransaction>::len(move _50) -> [return: bb23, unwind: bb68]; // scope 6 at cita-auth/src/handler.rs:1024:21: 1024:39
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1024:34: 1024:37
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<SignedTransaction>) -> usize {Vec::<SignedTransaction>::len}, val: Value(<ZST>) }
    }

    bb23: {
        _48 = &_49;                      // scope 6 at cita-auth/src/handler.rs:1024:21: 1024:39
        _47 = core::fmt::ArgumentV1::<'_>::new_display::<usize>(_48) -> [return: bb24, unwind: bb68]; // scope 6 at cita-auth/src/handler.rs:1024:21: 1024:39
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1024:21: 1024:39
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b usize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<usize>}, val: Value(<ZST>) }
    }

    bb24: {
        _42 = [move _43, move _47];      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _41 = &_42;                      // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _40 = _41 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _38 = Arguments::<'_>::new_v1(move _39, move _40) -> [return: bb25, unwind: bb68]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb25: {
        _106 = const _;                  // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::deal_block_txn, [], Some(promoted[3])) }
        _37 = log::__private_api_log(move _38, _29, _106) -> [return: bb73, unwind: bb68]; // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb26: {
        drop(_19) -> [return: bb56, unwind: bb62]; // scope 4 at cita-auth/src/handler.rs:1057:9: 1057:10
    }

    bb27: {
        _53 = &_19;                      // scope 5 at cita-auth/src/handler.rs:1031:35: 1031:48
        _52 = BlockVerify::<'_> { transactions: _53 }; // scope 5 at cita-auth/src/handler.rs:1030:29: 1032:18
        _54 = &_52;                      // scope 8 at cita-auth/src/handler.rs:1034:17: 1038:18
        _55 = (((*_1).12: handler::SysConfigInfo).0: u64); // scope 8 at cita-auth/src/handler.rs:1035:21: 1035:55
        _56 = &(((*_1).12: handler::SysConfigInfo).1: libproto::AccountGasLimit); // scope 8 at cita-auth/src/handler.rs:1036:21: 1036:58
        _57 = (((*_1).12: handler::SysConfigInfo).2: bool); // scope 8 at cita-auth/src/handler.rs:1037:21: 1037:49
        _51 = BlockVerify::<'_>::verify_quota(move _54, move _55, _56, move _57) -> [return: bb28, unwind: bb68]; // scope 8 at cita-auth/src/handler.rs:1034:17: 1038:18
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1034:23: 1034:35
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a BlockVerify<'_>, u64, &'b AccountGasLimit, bool) -> bool {BlockVerify::<'_>::verify_quota}, val: Value(<ZST>) }
    }

    bb28: {
        _59 = _51;                       // scope 7 at cita-auth/src/handler.rs:1042:27: 1042:33
        switchInt(move _59) -> [0: bb43, otherwise: bb29]; // scope 7 at cita-auth/src/handler.rs:1042:27: 1042:33
    }

    bb29: {
        _61 = &_3;                       // scope 10 at cita-auth/src/handler.rs:1043:35: 1043:80
        _64 = &_19;                      // scope 10 at cita-auth/src/handler.rs:1043:63: 1043:75
        _63 = <Vec<SignedTransaction> as std::ops::Index<RangeFull>>::index(move _64, const RangeFull) -> [return: bb30, unwind: bb68]; // scope 10 at cita-auth/src/handler.rs:1043:63: 1043:79
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1043:63: 1043:79
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<SignedTransaction>, RangeFull) -> &'a <Vec<SignedTransaction> as std::ops::Index<RangeFull>>::Output {<Vec<SignedTransaction> as std::ops::Index<RangeFull>>::index}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: RangeFull, val: Value(<ZST>) }
    }

    bb30: {
        _62 = _63;                       // scope 10 at cita-auth/src/handler.rs:1043:62: 1043:79
        _60 = libproto::<impl libproto::VerifyBlockReq>::check_txs(move _61, _62) -> [return: bb31, unwind: bb68]; // scope 10 at cita-auth/src/handler.rs:1043:35: 1043:80
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1043:52: 1043:61
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a libproto::VerifyBlockReq, &'b [SignedTransaction]) -> Result<(), std::option::Option<usize>> {libproto::<impl libproto::VerifyBlockReq>::check_txs}, val: Value(<ZST>) }
    }

    bb31: {
        _65 = discriminant(_60);         // scope 10 at cita-auth/src/handler.rs:1043:24: 1043:32
        switchInt(move _65) -> [1: bb32, otherwise: bb42]; // scope 10 at cita-auth/src/handler.rs:1043:24: 1043:32
    }

    bb32: {
        _66 = ((_60 as Err).0: std::option::Option<usize>); // scope 10 at cita-auth/src/handler.rs:1043:28: 1043:31
        _67 = log::Level::Error;         // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:67:14: 67:34
        _70 = &_67;                      // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _105 = const _;                  // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::deal_block_txn, [], Some(promoted[2])) }
        _69 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _70, _105) -> [return: bb36, unwind: bb68]; // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb33: {
        _68 = const false;               // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb35;                    // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb34: {
        _72 = &_67;                      // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _74 = log::max_level() -> [return: bb37, unwind: bb68]; // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb35: {
        switchInt(move _68) -> [0: bb42, otherwise: bb39]; // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb36: {
        switchInt(move _69) -> [0: bb33, otherwise: bb34]; // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb37: {
        _73 = &_74;                      // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _71 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _72, move _73) -> [return: bb38, unwind: bb68]; // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb38: {
        _68 = move _71;                  // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb35;                    // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb39: {
        _104 = const _;                  // scope 11 at cita-auth/src/handler.rs:1044:28: 1044:68
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1044:28: 1044:68
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(MsgHandler::deal_block_txn, [], Some(promoted[1])) }
        _77 = _104 as &[&str] (Pointer(Unsize)); // scope 11 at cita-auth/src/handler.rs:1044:28: 1044:68
        _82 = &_66;                      // scope 11 at cita-auth/src/handler.rs:1044:70: 1044:73
        _81 = core::fmt::ArgumentV1::<'_>::new_debug::<std::option::Option<usize>>(_82) -> [return: bb40, unwind: bb68]; // scope 11 at cita-auth/src/handler.rs:1044:70: 1044:73
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1044:70: 1044:73
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'b> fn(&'b std::option::Option<usize>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<std::option::Option<usize>>}, val: Value(<ZST>) }
    }

    bb40: {
        _80 = [move _81];                // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _79 = &_80;                      // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _78 = _79 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _76 = Arguments::<'_>::new_v1(move _77, move _78) -> [return: bb41, unwind: bb68]; // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb41: {
        _103 = const _;                  // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::deal_block_txn, [], Some(promoted[0])) }
        _75 = log::__private_api_log(move _76, _67, _103) -> [return: bb74, unwind: bb68]; // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb42: {
        _110 = const false;              // scope 7 at cita-auth/src/handler.rs:1046:17: 1046:33
        _83 = move _3;                   // scope 7 at cita-auth/src/handler.rs:1046:17: 1046:33
        _109 = const false;              // scope 7 at cita-auth/src/handler.rs:1046:43: 1046:55
        _85 = move _19;                  // scope 7 at cita-auth/src/handler.rs:1046:43: 1046:55
        _84 = Result::<Vec<SignedTransaction>, ()>::Ok(move _85); // scope 7 at cita-auth/src/handler.rs:1046:40: 1046:56
        _58 = libproto::<impl libproto::VerifyBlockReq>::reply(move _83, move _84) -> [return: bb75, unwind: bb68]; // scope 7 at cita-auth/src/handler.rs:1046:17: 1046:57
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1046:34: 1046:39
                                         // + literal: Const { ty: fn(libproto::VerifyBlockReq, Result<Vec<SignedTransaction>, ()>) -> libproto::VerifyBlockResp {libproto::<impl libproto::VerifyBlockReq>::reply}, val: Value(<ZST>) }
    }

    bb43: {
        _110 = const false;              // scope 7 at cita-auth/src/handler.rs:1048:17: 1048:33
        _86 = move _3;                   // scope 7 at cita-auth/src/handler.rs:1048:17: 1048:33
        _87 = Result::<Vec<SignedTransaction>, ()>::Err(const ()); // scope 7 at cita-auth/src/handler.rs:1048:40: 1048:47
        _58 = libproto::<impl libproto::VerifyBlockReq>::reply(move _86, move _87) -> [return: bb76, unwind: bb68]; // scope 7 at cita-auth/src/handler.rs:1048:17: 1048:48
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1048:34: 1048:39
                                         // + literal: Const { ty: fn(libproto::VerifyBlockReq, Result<Vec<SignedTransaction>, ()>) -> libproto::VerifyBlockResp {libproto::<impl libproto::VerifyBlockReq>::reply}, val: Value(<ZST>) }
    }

    bb44: {
        _89 = const libproto::OperateType::Single; // scope 9 at cita-auth/src/handler.rs:1050:37: 1050:56
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: OperateType, val: Value(Scalar(0x01)) }
        _91 = move _58;                  // scope 9 at cita-auth/src/handler.rs:1050:61: 1050:65
        _90 = <libproto::VerifyBlockResp as Into<InnerMessage_oneof_content>>::into(move _91) -> [return: bb45, unwind: bb68]; // scope 9 at cita-auth/src/handler.rs:1050:61: 1050:72
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1050:66: 1050:70
                                         // + literal: Const { ty: fn(libproto::VerifyBlockResp) -> InnerMessage_oneof_content {<libproto::VerifyBlockResp as Into<InnerMessage_oneof_content>>::into}, val: Value(<ZST>) }
    }

    bb45: {
        _88 = libproto::Message::init(move _89, const 0_u32, move _90) -> [return: bb46, unwind: bb68]; // scope 9 at cita-auth/src/handler.rs:1050:23: 1050:73
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1050:23: 1050:36
                                         // + literal: Const { ty: fn(OperateType, u32, InnerMessage_oneof_content) -> libproto::Message {libproto::Message::init}, val: Value(<ZST>) }
    }

    bb46: {
        _94 = &((*_1).1: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 12 at cita-auth/src/handler.rs:1051:13: 1055:19
        _98 = const Auth;                // scope 12 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x04)) }
        _99 = const libproto::router::MsgType::VerifyBlockResp; // scope 12 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x0f)) }
        _97 = RoutingKey(move _98, move _99); // scope 12 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _96 = <RoutingKey as Into<std::string::String>>::into(move _97) -> [return: bb47, unwind: bb61]; // scope 12 at cita-auth/src/handler.rs:1053:21: 1053:65
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1053:59: 1053:63
                                         // + literal: Const { ty: fn(RoutingKey) -> std::string::String {<RoutingKey as Into<std::string::String>>::into}, val: Value(<ZST>) }
    }

    bb47: {
        _102 = &_88;                     // scope 12 at cita-auth/src/handler.rs:1054:21: 1054:27
        _101 = <&libproto::Message as libproto::TryInto<Vec<u8>>>::try_into(_102) -> [return: bb48, unwind: bb60]; // scope 12 at cita-auth/src/handler.rs:1054:21: 1054:38
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1054:28: 1054:36
                                         // + literal: Const { ty: fn(&libproto::Message) -> Result<Vec<u8>, <&libproto::Message as libproto::TryInto<Vec<u8>>>::Error> {<&libproto::Message as libproto::TryInto<Vec<u8>>>::try_into}, val: Value(<ZST>) }
    }

    bb48: {
        _100 = Result::<Vec<u8>, TryIntoConvertError>::unwrap(move _101) -> [return: bb49, unwind: bb60]; // scope 12 at cita-auth/src/handler.rs:1054:21: 1054:47
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1054:39: 1054:45
                                         // + literal: Const { ty: fn(Result<Vec<u8>, TryIntoConvertError>) -> Vec<u8> {Result::<Vec<u8>, TryIntoConvertError>::unwrap}, val: Value(<ZST>) }
    }

    bb49: {
        _95 = (move _96, move _100);     // scope 12 at cita-auth/src/handler.rs:1052:23: 1055:18
        _93 = pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send(move _94, move _95) -> [return: bb50, unwind: bb61]; // scope 12 at cita-auth/src/handler.rs:1051:13: 1055:19
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1052:18: 1052:22
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, (std::string::String, Vec<u8>)) -> Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>> {pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send}, val: Value(<ZST>) }
    }

    bb50: {
        _92 = Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap(move _93) -> [return: bb51, unwind: bb61]; // scope 12 at cita-auth/src/handler.rs:1051:13: 1056:26
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1056:18: 1056:24
                                         // + literal: Const { ty: fn(Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>) {Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap}, val: Value(<ZST>) }
    }

    bb51: {
        drop(_88) -> [return: bb52, unwind: bb68]; // scope 9 at cita-auth/src/handler.rs:1057:9: 1057:10
    }

    bb52: {
        switchInt(_109) -> [0: bb53, otherwise: bb65]; // scope 4 at cita-auth/src/handler.rs:1057:9: 1057:10
    }

    bb53: {
        _109 = const false;              // scope 4 at cita-auth/src/handler.rs:1057:9: 1057:10
        drop(_13) -> [return: bb54, unwind: bb70]; // scope 3 at cita-auth/src/handler.rs:1057:9: 1057:10
    }

    bb54: {
        _111 = const false;              // scope 0 at cita-auth/src/handler.rs:1058:5: 1058:6
        switchInt(_110) -> [0: bb55, otherwise: bb66]; // scope 0 at cita-auth/src/handler.rs:1058:5: 1058:6
    }

    bb55: {
        drop(_2) -> bb59;                // scope 0 at cita-auth/src/handler.rs:1058:5: 1058:6
    }

    bb56: {
        _109 = const false;              // scope 4 at cita-auth/src/handler.rs:1057:9: 1057:10
        drop(_13) -> [return: bb57, unwind: bb70]; // scope 3 at cita-auth/src/handler.rs:1057:9: 1057:10
    }

    bb57: {
        _111 = const false;              // scope 0 at cita-auth/src/handler.rs:1058:5: 1058:6
        drop(_3) -> [return: bb58, unwind: bb63]; // scope 0 at cita-auth/src/handler.rs:1058:5: 1058:6
    }

    bb58: {
        drop(_2) -> bb59;                // scope 0 at cita-auth/src/handler.rs:1058:5: 1058:6
    }

    bb59: {
        return;                          // scope 0 at cita-auth/src/handler.rs:1058:6: 1058:6
    }

    bb60 (cleanup): {
        drop(_96) -> bb61;               // scope 12 at cita-auth/src/handler.rs:1055:17: 1055:18
    }

    bb61 (cleanup): {
        drop(_88) -> bb68;               // scope 9 at cita-auth/src/handler.rs:1057:9: 1057:10
    }

    bb62 (cleanup): {
        drop(_13) -> bb70;               // scope 3 at cita-auth/src/handler.rs:1057:9: 1057:10
    }

    bb63 (cleanup): {
        drop(_2) -> bb64;                // scope 0 at cita-auth/src/handler.rs:1058:5: 1058:6
    }

    bb64 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/handler.rs:1009:5: 1058:6
    }

    bb65: {
        drop(_19) -> [return: bb53, unwind: bb62]; // scope 4 at cita-auth/src/handler.rs:1057:9: 1057:10
    }

    bb66: {
        drop(_3) -> [return: bb55, unwind: bb63]; // scope 0 at cita-auth/src/handler.rs:1058:5: 1058:6
    }

    bb67 (cleanup): {
        drop(_19) -> bb62;               // scope 4 at cita-auth/src/handler.rs:1057:9: 1057:10
    }

    bb68 (cleanup): {
        switchInt(_109) -> [0: bb62, otherwise: bb67]; // scope 4 at cita-auth/src/handler.rs:1057:9: 1057:10
    }

    bb69 (cleanup): {
        drop(_4) -> bb72;                // scope 0 at cita-auth/src/handler.rs:1058:5: 1058:6
    }

    bb70 (cleanup): {
        switchInt(_111) -> [0: bb72, otherwise: bb69]; // scope 0 at cita-auth/src/handler.rs:1058:5: 1058:6
    }

    bb71 (cleanup): {
        drop(_3) -> bb63;                // scope 0 at cita-auth/src/handler.rs:1058:5: 1058:6
    }

    bb72 (cleanup): {
        switchInt(_110) -> [0: bb63, otherwise: bb71]; // scope 0 at cita-auth/src/handler.rs:1058:5: 1058:6
    }

    bb73: {
        goto -> bb26;                    // scope 6 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb74: {
        goto -> bb42;                    // scope 11 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb75: {
        goto -> bb44;                    // scope 7 at cita-auth/src/handler.rs:1046:17: 1046:57
    }

    bb76: {
        goto -> bb44;                    // scope 7 at cita-auth/src/handler.rs:1048:17: 1048:48
    }
}

promoted[0] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_block_txn: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:1044:21: 1044:74
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:1044:21: 1044:74

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:1044:21: 1044:74
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1044:21: 1044:74
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:1044:21: 1044:74
        _1 = (move _2, move _4, move _6, const 1044_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_block_txn: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/handler.rs:1044:28: 1044:68
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/handler.rs:1044:28: 1044:68

    bb0: {
        _1 = [const "verify_block_req check txs failed "]; // scope 0 at cita-auth/src/handler.rs:1044:28: 1044:68
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1044:28: 1044:68
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:1044:28: 1044:68
        return;                          // scope 0 at cita-auth/src/handler.rs:1044:28: 1044:68
    }
}

promoted[2] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_block_txn: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[3] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_block_txn: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:1021:17: 1025:18
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:1021:17: 1025:18

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:1021:17: 1025:18
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1021:17: 1025:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:1021:17: 1025:18
        _1 = (move _2, move _4, move _6, const 1021_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[4] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_block_txn: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-auth/src/handler.rs:1022:21: 1022:88
    let mut _1: [&str; 2];               // in scope 0 at cita-auth/src/handler.rs:1022:21: 1022:88

    bb0: {
        _1 = [const "block txn transactions number is not matched, expect: ", const ", got: "]; // scope 0 at cita-auth/src/handler.rs:1022:21: 1022:88
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1022:21: 1022:88
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1022:21: 1022:88
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:1022:21: 1022:88
        return;                          // scope 0 at cita-auth/src/handler.rs:1022:21: 1022:88
    }
}

promoted[5] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::deal_block_txn: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::validate_block_txn(_1: &mut MsgHandler, _2: BlockTxnMessage) -> bool {
    debug self => _1;                    // in scope 0 at cita-auth/src/handler.rs:1061:27: 1061:36
    debug block_txn => _2;               // in scope 0 at cita-auth/src/handler.rs:1061:38: 1061:51
    let mut _0: bool;                    // return place in scope 0 at cita-auth/src/handler.rs:1061:73: 1061:77
    let mut _3: std::option::Option<(u32, libproto::GetBlockTxn)>; // in scope 0 at cita-auth/src/handler.rs:1063:42: 1063:68
    let mut _4: &std::option::Option<(u32, libproto::GetBlockTxn)>; // in scope 0 at cita-auth/src/handler.rs:1063:42: 1063:68
    let mut _5: isize;                   // in scope 0 at cita-auth/src/handler.rs:1063:16: 1063:39
    let mut _8: &mut block_txn::BlockTxnMessage; // in scope 0 at cita-auth/src/handler.rs:1064:26: 1064:59
    let mut _9: isize;                   // in scope 0 at cita-auth/src/handler.rs:1066:17: 1066:31
    let mut _11: std::slice::Iter<'_, libproto::SignedTransaction>; // in scope 0 at cita-auth/src/handler.rs:1067:31: 1067:48
    let mut _12: std::slice::Iter<'_, libproto::SignedTransaction>; // in scope 0 at cita-auth/src/handler.rs:1067:31: 1067:48
    let mut _13: &[libproto::SignedTransaction]; // in scope 0 at cita-auth/src/handler.rs:1067:31: 1067:48
    let _14: &[libproto::SignedTransaction]; // in scope 0 at cita-auth/src/handler.rs:1067:31: 1067:48
    let mut _15: &std::vec::Vec<libproto::SignedTransaction>; // in scope 0 at cita-auth/src/handler.rs:1067:31: 1067:48
    let mut _17: std::option::Option<&libproto::SignedTransaction>; // in scope 0 at cita-auth/src/handler.rs:1067:31: 1067:48
    let mut _18: &mut std::slice::Iter<'_, libproto::SignedTransaction>; // in scope 0 at cita-auth/src/handler.rs:1067:31: 1067:48
    let mut _19: isize;                  // in scope 0 at cita-auth/src/handler.rs:1067:21: 1078:22
    let _22: ();                         // in scope 0 at cita-auth/src/handler.rs:1069:25: 1072:26
    let mut _23: cita_types::H256;       // in scope 0 at cita-auth/src/handler.rs:1070:29: 1070:63
    let mut _24: &[u8];                  // in scope 0 at cita-auth/src/handler.rs:1070:46: 1070:62
    let _25: &[u8];                      // in scope 0 at cita-auth/src/handler.rs:1070:46: 1070:62
    let mut _26: std::option::Option<std::vec::Vec<u8>>; // in scope 0 at cita-auth/src/handler.rs:1071:29: 1071:73
    let mut _27: std::vec::Vec<u8>;      // in scope 0 at cita-auth/src/handler.rs:1071:34: 1071:72
    let mut _28: &[u8];                  // in scope 0 at cita-auth/src/handler.rs:1071:34: 1071:72
    let _29: &[u8];                      // in scope 0 at cita-auth/src/handler.rs:1071:34: 1071:63
    let mut _30: &libproto::UnverifiedTransaction; // in scope 0 at cita-auth/src/handler.rs:1071:34: 1071:63
    let _31: libproto::UnverifiedTransaction; // in scope 0 at cita-auth/src/handler.rs:1071:34: 1071:47
    let mut _32: &libproto::UnverifiedTransaction; // in scope 0 at cita-auth/src/handler.rs:1071:34: 1071:47
    let mut _34: &libproto::UnverifiedTransaction; // in scope 0 at cita-auth/src/handler.rs:1074:35: 1074:60
    let mut _35: bool;                   // in scope 0 at cita-auth/src/handler.rs:1075:28: 1075:60
    let mut _36: &std::result::Result<(), transaction_verify::Error>; // in scope 0 at cita-auth/src/handler.rs:1075:28: 1075:60
    let _37: std::result::Result<(), transaction_verify::Error>; // in scope 0 at cita-auth/src/handler.rs:1075:28: 1075:52
    let mut _38: &handler::MsgHandler;   // in scope 0 at cita-auth/src/handler.rs:1075:28: 1075:52
    let _39: &libproto::VerifyTxReq;     // in scope 0 at cita-auth/src/handler.rs:1075:47: 1075:51
    let _40: bool;                       // in scope 0 at cita-auth/src/handler.rs:1076:29: 1076:63
    let mut _41: &dispatcher::Dispatcher; // in scope 0 at cita-auth/src/handler.rs:1076:29: 1076:63
    let mut _44: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _45: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _46: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _47: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _48: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _49: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _50: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _51: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _52: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _53: &[&str];                // in scope 0 at cita-auth/src/handler.rs:1082:27: 1082:56
    let mut _54: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _55: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _56: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _57: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:1082:58: 1082:63
    let _58: &block_txn::Error;          // in scope 0 at cita-auth/src/handler.rs:1082:58: 1082:63
    let _59: log::Level;                 // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
    let mut _60: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _61: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _62: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _63: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _64: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _65: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _66: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _67: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _68: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _69: &[&str];                // in scope 0 at cita-auth/src/handler.rs:1087:19: 1087:56
    scope 1 {
        debug block_txn_req => _6;       // in scope 1 at cita-auth/src/handler.rs:1063:21: 1063:38
        let _6: &(u32, libproto::GetBlockTxn); // in scope 1 at cita-auth/src/handler.rs:1063:21: 1063:38
        let _7: std::result::Result<std::vec::Vec<libproto::SignedTransaction>, block_txn::Error>; // in scope 1 at cita-auth/src/handler.rs:1064:17: 1064:23
        scope 2 {
            debug result => _7;          // in scope 2 at cita-auth/src/handler.rs:1064:17: 1064:23
            let _10: std::vec::Vec<libproto::SignedTransaction>; // in scope 2 at cita-auth/src/handler.rs:1066:20: 1066:30
            let _42: block_txn::Error;   // in scope 2 at cita-auth/src/handler.rs:1081:21: 1081:26
            scope 3 {
                debug signed_txn => _10; // in scope 3 at cita-auth/src/handler.rs:1066:20: 1066:30
                let mut _16: std::slice::Iter<'_, libproto::SignedTransaction>; // in scope 3 at cita-auth/src/handler.rs:1067:31: 1067:48
                scope 4 {
                    debug iter => _16;   // in scope 4 at cita-auth/src/handler.rs:1067:31: 1067:48
                    let _20: &libproto::SignedTransaction; // in scope 4 at cita-auth/src/handler.rs:1067:25: 1067:27
                    scope 5 {
                        debug tx => _20; // in scope 5 at cita-auth/src/handler.rs:1067:25: 1067:27
                        let _21: &libproto::UnverifiedTransaction; // in scope 5 at cita-auth/src/handler.rs:1068:29: 1068:34
                        scope 6 {
                            debug un_tx => _21; // in scope 6 at cita-auth/src/handler.rs:1068:29: 1068:34
                            let _33: libproto::VerifyTxReq; // in scope 6 at cita-auth/src/handler.rs:1074:29: 1074:32
                            scope 7 {
                                debug req => _33; // in scope 7 at cita-auth/src/handler.rs:1074:29: 1074:32
                            }
                        }
                    }
                }
            }
            scope 8 {
                debug error => _42;      // in scope 8 at cita-auth/src/handler.rs:1081:21: 1081:26
                let _43: log::Level;     // in scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                scope 9 {
                    debug lvl => _43;    // in scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                    let mut _70: &(&str, &str, &str, u32); // in scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                    let mut _71: &[&str; 1]; // in scope 9 at cita-auth/src/handler.rs:1082:27: 1082:56
                    let mut _72: &log::LevelFilter; // in scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                }
            }
        }
    }
    scope 10 {
        debug lvl => _59;                // in scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _73: &(&str, &str, &str, u32); // in scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        let mut _74: &[&str; 1];         // in scope 10 at cita-auth/src/handler.rs:1087:19: 1087:56
        let mut _75: &log::LevelFilter;  // in scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }

    bb0: {
        _4 = &((*_1).13: std::option::Option<(u32, libproto::GetBlockTxn)>); // scope 1 at cita-auth/src/handler.rs:1063:42: 1063:68
        _3 = <std::option::Option<(u32, libproto::GetBlockTxn)> as Clone>::clone(move _4) -> [return: bb1, unwind: bb55]; // scope 1 at cita-auth/src/handler.rs:1063:42: 1063:68
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1063:61: 1063:66
                                         // + literal: Const { ty: for<'a> fn(&'a std::option::Option<(u32, libproto::GetBlockTxn)>) -> std::option::Option<(u32, libproto::GetBlockTxn)> {<std::option::Option<(u32, libproto::GetBlockTxn)> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = discriminant(_3);           // scope 1 at cita-auth/src/handler.rs:1063:16: 1063:39
        switchInt(move _5) -> [1: bb2, otherwise: bb38]; // scope 1 at cita-auth/src/handler.rs:1063:16: 1063:39
    }

    bb2: {
        _6 = &((_3 as Some).0: (u32, libproto::GetBlockTxn)); // scope 1 at cita-auth/src/handler.rs:1063:21: 1063:38
        _8 = &mut _2;                    // scope 1 at cita-auth/src/handler.rs:1064:26: 1064:59
        _7 = BlockTxnMessage::validate(move _8, _6) -> [return: bb3, unwind: bb54]; // scope 1 at cita-auth/src/handler.rs:1064:26: 1064:59
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1064:36: 1064:44
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut BlockTxnMessage, &'b (u32, libproto::GetBlockTxn)) -> Result<Vec<SignedTransaction>, block_txn::Error> {BlockTxnMessage::validate}, val: Value(<ZST>) }
    }

    bb3: {
        _9 = discriminant(_7);           // scope 2 at cita-auth/src/handler.rs:1065:19: 1065:25
        switchInt(move _9) -> [0: bb6, 1: bb4, otherwise: bb5]; // scope 2 at cita-auth/src/handler.rs:1065:13: 1065:25
    }

    bb4: {
        _42 = move ((_7 as Err).0: block_txn::Error); // scope 2 at cita-auth/src/handler.rs:1081:21: 1081:26
        _43 = log::Level::Info;          // scope 8 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _46 = &_43;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _72 = const _;                   // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::validate_block_txn, [], Some(promoted[2])) }
        _45 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _46, _72) -> [return: bb31, unwind: bb54]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb5: {
        unreachable;                     // scope 2 at cita-auth/src/handler.rs:1065:19: 1065:25
    }

    bb6: {
        _10 = move ((_7 as Ok).0: std::vec::Vec<libproto::SignedTransaction>); // scope 2 at cita-auth/src/handler.rs:1066:20: 1066:30
        _15 = &_10;                      // scope 3 at cita-auth/src/handler.rs:1067:31: 1067:48
        _14 = <Vec<SignedTransaction> as Deref>::deref(move _15) -> [return: bb7, unwind: bb53]; // scope 3 at cita-auth/src/handler.rs:1067:31: 1067:48
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1067:31: 1067:48
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<SignedTransaction>) -> &'a <Vec<SignedTransaction> as Deref>::Target {<Vec<SignedTransaction> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb7: {
        _13 = _14;                       // scope 3 at cita-auth/src/handler.rs:1067:31: 1067:48
        _12 = core::slice::<impl [SignedTransaction]>::iter(move _13) -> [return: bb8, unwind: bb53]; // scope 3 at cita-auth/src/handler.rs:1067:31: 1067:48
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1067:42: 1067:46
                                         // + literal: Const { ty: for<'a> fn(&'a [SignedTransaction]) -> std::slice::Iter<'a, SignedTransaction> {core::slice::<impl [SignedTransaction]>::iter}, val: Value(<ZST>) }
    }

    bb8: {
        _11 = <std::slice::Iter<'_, SignedTransaction> as IntoIterator>::into_iter(move _12) -> [return: bb9, unwind: bb53]; // scope 3 at cita-auth/src/handler.rs:1067:31: 1067:48
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1067:31: 1067:48
                                         // + literal: Const { ty: fn(std::slice::Iter<'_, SignedTransaction>) -> <std::slice::Iter<'_, SignedTransaction> as IntoIterator>::IntoIter {<std::slice::Iter<'_, SignedTransaction> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb9: {
        _16 = move _11;                  // scope 3 at cita-auth/src/handler.rs:1067:31: 1067:48
        goto -> bb10;                    // scope 4 at cita-auth/src/handler.rs:1067:21: 1078:22
    }

    bb10: {
        _18 = &mut _16;                  // scope 4 at cita-auth/src/handler.rs:1067:31: 1067:48
        _17 = <std::slice::Iter<'_, SignedTransaction> as Iterator>::next(_18) -> [return: bb11, unwind: bb53]; // scope 4 at cita-auth/src/handler.rs:1067:31: 1067:48
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1067:31: 1067:48
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::slice::Iter<'_, SignedTransaction>) -> std::option::Option<<std::slice::Iter<'_, SignedTransaction> as Iterator>::Item> {<std::slice::Iter<'_, SignedTransaction> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb11: {
        _19 = discriminant(_17);         // scope 4 at cita-auth/src/handler.rs:1067:31: 1067:48
        switchInt(move _19) -> [0: bb14, 1: bb12, otherwise: bb13]; // scope 4 at cita-auth/src/handler.rs:1067:31: 1067:48
    }

    bb12: {
        _20 = ((_17 as Some).0: &libproto::SignedTransaction); // scope 4 at cita-auth/src/handler.rs:1067:25: 1067:27
        _21 = SignedTransaction::get_transaction_with_sig(_20) -> [return: bb15, unwind: bb53]; // scope 5 at cita-auth/src/handler.rs:1068:37: 1068:66
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1068:40: 1068:64
                                         // + literal: Const { ty: for<'a> fn(&'a SignedTransaction) -> &'a UnverifiedTransaction {SignedTransaction::get_transaction_with_sig}, val: Value(<ZST>) }
    }

    bb13: {
        unreachable;                     // scope 4 at cita-auth/src/handler.rs:1067:31: 1067:48
    }

    bb14: {
        _0 = const true;                 // scope 3 at cita-auth/src/handler.rs:1079:21: 1079:25
        drop(_10) -> [return: bb48, unwind: bb54]; // scope 2 at cita-auth/src/handler.rs:1080:17: 1080:18
    }

    bb15: {
        _25 = SignedTransaction::get_tx_hash(_20) -> [return: bb16, unwind: bb53]; // scope 6 at cita-auth/src/handler.rs:1070:46: 1070:62
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1070:49: 1070:60
                                         // + literal: Const { ty: for<'a> fn(&'a SignedTransaction) -> &'a [u8] {SignedTransaction::get_tx_hash}, val: Value(<ZST>) }
    }

    bb16: {
        _24 = _25;                       // scope 6 at cita-auth/src/handler.rs:1070:46: 1070:62
        _23 = H256::from_slice(move _24) -> [return: bb17, unwind: bb53]; // scope 6 at cita-auth/src/handler.rs:1070:29: 1070:63
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1070:29: 1070:45
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> H256 {H256::from_slice}, val: Value(<ZST>) }
    }

    bb17: {
        _32 = _21;                       // scope 6 at cita-auth/src/handler.rs:1071:34: 1071:47
        _31 = <UnverifiedTransaction as Clone>::clone(move _32) -> [return: bb18, unwind: bb53]; // scope 6 at cita-auth/src/handler.rs:1071:34: 1071:47
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1071:40: 1071:45
                                         // + literal: Const { ty: for<'a> fn(&'a UnverifiedTransaction) -> UnverifiedTransaction {<UnverifiedTransaction as Clone>::clone}, val: Value(<ZST>) }
    }

    bb18: {
        _30 = &_31;                      // scope 6 at cita-auth/src/handler.rs:1071:34: 1071:63
        _29 = UnverifiedTransaction::get_signature(move _30) -> [return: bb19, unwind: bb52]; // scope 6 at cita-auth/src/handler.rs:1071:34: 1071:63
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1071:48: 1071:61
                                         // + literal: Const { ty: for<'a> fn(&'a UnverifiedTransaction) -> &'a [u8] {UnverifiedTransaction::get_signature}, val: Value(<ZST>) }
    }

    bb19: {
        _28 = _29;                       // scope 6 at cita-auth/src/handler.rs:1071:34: 1071:72
        _27 = std::slice::<impl [u8]>::to_vec(move _28) -> [return: bb20, unwind: bb52]; // scope 6 at cita-auth/src/handler.rs:1071:34: 1071:72
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1071:64: 1071:70
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> Vec<u8> {std::slice::<impl [u8]>::to_vec}, val: Value(<ZST>) }
    }

    bb20: {
        _26 = std::option::Option::<Vec<u8>>::Some(move _27); // scope 6 at cita-auth/src/handler.rs:1071:29: 1071:73
        _22 = MsgHandler::save_ret_to_cache(_1, move _23, move _26) -> [return: bb21, unwind: bb52]; // scope 6 at cita-auth/src/handler.rs:1069:25: 1072:26
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1069:30: 1069:47
                                         // + literal: Const { ty: for<'a> fn(&'a mut MsgHandler, H256, std::option::Option<Vec<u8>>) {MsgHandler::save_ret_to_cache}, val: Value(<ZST>) }
    }

    bb21: {
        drop(_31) -> [return: bb22, unwind: bb53]; // scope 6 at cita-auth/src/handler.rs:1072:26: 1072:27
    }

    bb22: {
        _34 = _21;                       // scope 6 at cita-auth/src/handler.rs:1074:35: 1074:60
        _33 = libproto::<impl UnverifiedTransaction>::tx_verify_req_msg(move _34) -> [return: bb23, unwind: bb53]; // scope 6 at cita-auth/src/handler.rs:1074:35: 1074:60
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1074:41: 1074:58
                                         // + literal: Const { ty: for<'a> fn(&'a UnverifiedTransaction) -> VerifyTxReq {libproto::<impl UnverifiedTransaction>::tx_verify_req_msg}, val: Value(<ZST>) }
    }

    bb23: {
        _38 = &(*_1);                    // scope 7 at cita-auth/src/handler.rs:1075:28: 1075:52
        _39 = &_33;                      // scope 7 at cita-auth/src/handler.rs:1075:47: 1075:51
        _37 = MsgHandler::verify_tx_req(move _38, _39) -> [return: bb24, unwind: bb51]; // scope 7 at cita-auth/src/handler.rs:1075:28: 1075:52
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1075:33: 1075:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a MsgHandler, &'b VerifyTxReq) -> Result<(), transaction_verify::Error> {MsgHandler::verify_tx_req}, val: Value(<ZST>) }
    }

    bb24: {
        _36 = &_37;                      // scope 7 at cita-auth/src/handler.rs:1075:28: 1075:60
        _35 = Result::<(), transaction_verify::Error>::is_ok(move _36) -> [return: bb25, unwind: bb51]; // scope 7 at cita-auth/src/handler.rs:1075:28: 1075:60
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1075:53: 1075:58
                                         // + literal: Const { ty: for<'a> fn(&'a Result<(), transaction_verify::Error>) -> bool {Result::<(), transaction_verify::Error>::is_ok}, val: Value(<ZST>) }
    }

    bb25: {
        switchInt(move _35) -> [0: bb27, otherwise: bb26]; // scope 7 at cita-auth/src/handler.rs:1075:28: 1075:60
    }

    bb26: {
        _41 = &((*_1).6: dispatcher::Dispatcher); // scope 7 at cita-auth/src/handler.rs:1076:29: 1076:63
        _40 = Dispatcher::add_tx_to_pool(move _41, _20) -> [return: bb57, unwind: bb51]; // scope 7 at cita-auth/src/handler.rs:1076:29: 1076:63
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1076:45: 1076:59
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Dispatcher, &'b SignedTransaction) -> bool {Dispatcher::add_tx_to_pool}, val: Value(<ZST>) }
    }

    bb27: {
        drop(_33) -> [return: bb10, unwind: bb53]; // scope 6 at cita-auth/src/handler.rs:1078:21: 1078:22
    }

    bb28: {
        _44 = const false;               // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb30;                    // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb29: {
        _48 = &_43;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _50 = log::max_level() -> [return: bb32, unwind: bb54]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb30: {
        switchInt(move _44) -> [0: bb37, otherwise: bb34]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb31: {
        switchInt(move _45) -> [0: bb28, otherwise: bb29]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb32: {
        _49 = &_50;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _47 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _48, move _49) -> [return: bb33, unwind: bb54]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb33: {
        _44 = move _47;                  // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb30;                    // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb34: {
        _71 = const _;                   // scope 9 at cita-auth/src/handler.rs:1082:27: 1082:56
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1082:27: 1082:56
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(MsgHandler::validate_block_txn, [], Some(promoted[1])) }
        _53 = _71 as &[&str] (Pointer(Unsize)); // scope 9 at cita-auth/src/handler.rs:1082:27: 1082:56
        _58 = &_42;                      // scope 9 at cita-auth/src/handler.rs:1082:58: 1082:63
        _57 = core::fmt::ArgumentV1::<'_>::new_display::<block_txn::Error>(_58) -> [return: bb35, unwind: bb54]; // scope 9 at cita-auth/src/handler.rs:1082:58: 1082:63
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1082:58: 1082:63
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b block_txn::Error) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<block_txn::Error>}, val: Value(<ZST>) }
    }

    bb35: {
        _56 = [move _57];                // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _55 = &_56;                      // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _54 = _55 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _52 = Arguments::<'_>::new_v1(move _53, move _54) -> [return: bb36, unwind: bb54]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb36: {
        _70 = const _;                   // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::validate_block_txn, [], Some(promoted[0])) }
        _51 = log::__private_api_log(move _52, _43, _70) -> [return: bb58, unwind: bb54]; // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb37: {
        _0 = const false;                // scope 8 at cita-auth/src/handler.rs:1083:21: 1083:26
        goto -> bb48;                    // scope 2 at cita-auth/src/handler.rs:1084:17: 1084:18
    }

    bb38: {
        _59 = log::Level::Info;          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _62 = &_59;                      // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _75 = const _;                   // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(MsgHandler::validate_block_txn, [], Some(promoted[5])) }
        _61 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _62, _75) -> [return: bb42, unwind: bb54]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb39: {
        _60 = const false;               // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb41;                    // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb40: {
        _64 = &_59;                      // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _66 = log::max_level() -> [return: bb43, unwind: bb54]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb41: {
        switchInt(move _60) -> [0: bb47, otherwise: bb45]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb42: {
        switchInt(move _61) -> [0: bb39, otherwise: bb40]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb43: {
        _65 = &_66;                      // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _63 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _64, move _65) -> [return: bb44, unwind: bb54]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb44: {
        _60 = move _63;                  // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb41;                    // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb45: {
        _74 = const _;                   // scope 10 at cita-auth/src/handler.rs:1087:19: 1087:56
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1087:19: 1087:56
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(MsgHandler::validate_block_txn, [], Some(promoted[4])) }
        _69 = _74 as &[&str] (Pointer(Unsize)); // scope 10 at cita-auth/src/handler.rs:1087:19: 1087:56
        _68 = Arguments::<'_>::new_const(move _69) -> [return: bb46, unwind: bb54]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb46: {
        _73 = const _;                   // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(MsgHandler::validate_block_txn, [], Some(promoted[3])) }
        _67 = log::__private_api_log(move _68, _59, _73) -> [return: bb59, unwind: bb54]; // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb47: {
        _0 = const false;                // scope 0 at cita-auth/src/handler.rs:1088:13: 1088:18
        goto -> bb48;                    // scope 0 at cita-auth/src/handler.rs:1063:9: 1089:10
    }

    bb48: {
        drop(_3) -> [return: bb49, unwind: bb55]; // scope 0 at cita-auth/src/handler.rs:1090:5: 1090:6
    }

    bb49: {
        drop(_2) -> bb50;                // scope 0 at cita-auth/src/handler.rs:1090:5: 1090:6
    }

    bb50: {
        return;                          // scope 0 at cita-auth/src/handler.rs:1090:6: 1090:6
    }

    bb51 (cleanup): {
        drop(_33) -> bb53;               // scope 6 at cita-auth/src/handler.rs:1078:21: 1078:22
    }

    bb52 (cleanup): {
        drop(_31) -> bb53;               // scope 6 at cita-auth/src/handler.rs:1072:26: 1072:27
    }

    bb53 (cleanup): {
        drop(_10) -> bb54;               // scope 2 at cita-auth/src/handler.rs:1080:17: 1080:18
    }

    bb54 (cleanup): {
        drop(_3) -> bb55;                // scope 0 at cita-auth/src/handler.rs:1090:5: 1090:6
    }

    bb55 (cleanup): {
        drop(_2) -> bb56;                // scope 0 at cita-auth/src/handler.rs:1090:5: 1090:6
    }

    bb56 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/handler.rs:1061:5: 1090:6
    }

    bb57: {
        goto -> bb27;                    // scope 7 at cita-auth/src/handler.rs:1076:29: 1076:63
    }

    bb58: {
        goto -> bb37;                    // scope 9 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb59: {
        goto -> bb47;                    // scope 10 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::validate_block_txn: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:1082:21: 1082:64
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:1082:21: 1082:64

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:1082:21: 1082:64
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1082:21: 1082:64
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:1082:21: 1082:64
        _1 = (move _2, move _4, move _6, const 1082_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::validate_block_txn: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/handler.rs:1082:27: 1082:56
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/handler.rs:1082:27: 1082:56

    bb0: {
        _1 = [const "Validate BlockTxn error: "]; // scope 0 at cita-auth/src/handler.rs:1082:27: 1082:56
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1082:27: 1082:56
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:1082:27: 1082:56
        return;                          // scope 0 at cita-auth/src/handler.rs:1082:27: 1082:56
    }
}

promoted[2] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::validate_block_txn: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[3] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::validate_block_txn: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:1087:13: 1087:57
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:1087:13: 1087:57

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:1087:13: 1087:57
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1087:13: 1087:57
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:1087:13: 1087:57
        _1 = (move _2, move _4, move _6, const 1087_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[4] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::validate_block_txn: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/handler.rs:1087:19: 1087:56
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/handler.rs:1087:19: 1087:56

    bb0: {
        _1 = [const "Could not find cached block_txn_req"]; // scope 0 at cita-auth/src/handler.rs:1087:19: 1087:56
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1087:19: 1087:56
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:1087:19: 1087:56
        return;                          // scope 0 at cita-auth/src/handler.rs:1087:19: 1087:56
    }
}

promoted[5] in handler::<impl at cita-auth/src/handler.rs:105:1: 105:16>::validate_block_txn: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn snapshot_response(_1: &pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, _2: Resp, _3: bool) -> () {
    debug sender => _1;                  // in scope 0 at cita-auth/src/handler.rs:1093:22: 1093:28
    debug ack => _2;                     // in scope 0 at cita-auth/src/handler.rs:1093:58: 1093:61
    debug flag => _3;                    // in scope 0 at cita-auth/src/handler.rs:1093:69: 1093:73
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/handler.rs:1093:81: 1093:81
    let _4: log::Level;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
    let mut _5: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _6: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _7: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _8: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _9: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _10: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _11: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _12: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _13: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _14: &[&str];                // in scope 0 at cita-auth/src/handler.rs:1094:11: 1094:50
    let mut _15: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _16: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _17: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _18: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:1094:52: 1094:55
    let _19: &libproto::Resp;            // in scope 0 at cita-auth/src/handler.rs:1094:52: 1094:55
    let mut _20: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/handler.rs:1094:57: 1094:61
    let _21: &bool;                      // in scope 0 at cita-auth/src/handler.rs:1094:57: 1094:61
    let mut _22: libproto::SnapshotResp; // in scope 0 at cita-auth/src/handler.rs:1096:9: 1096:17
    let _23: ();                         // in scope 0 at cita-auth/src/handler.rs:1097:5: 1097:23
    let mut _24: &mut libproto::SnapshotResp; // in scope 0 at cita-auth/src/handler.rs:1097:5: 1097:23
    let _25: ();                         // in scope 0 at cita-auth/src/handler.rs:1098:5: 1098:24
    let mut _26: &mut libproto::SnapshotResp; // in scope 0 at cita-auth/src/handler.rs:1098:5: 1098:24
    let mut _28: libproto::SnapshotResp; // in scope 0 at cita-auth/src/handler.rs:1099:24: 1099:28
    let _29: ();                         // in scope 0 at cita-auth/src/handler.rs:1100:5: 1105:18
    let mut _30: std::result::Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, std::vec::Vec<u8>)>>; // in scope 0 at cita-auth/src/handler.rs:1100:5: 1104:11
    let mut _31: (std::string::String, std::vec::Vec<u8>); // in scope 0 at cita-auth/src/handler.rs:1101:15: 1104:10
    let mut _32: std::string::String;    // in scope 0 at cita-auth/src/handler.rs:1102:13: 1102:54
    let mut _33: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _34: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _35: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _36: std::vec::Vec<u8>;      // in scope 0 at cita-auth/src/handler.rs:1103:13: 1103:39
    let mut _37: std::result::Result<std::vec::Vec<u8>, libproto::TryIntoConvertError>; // in scope 0 at cita-auth/src/handler.rs:1103:13: 1103:30
    let _38: &libproto::Message;         // in scope 0 at cita-auth/src/handler.rs:1103:13: 1103:19
    let mut _42: bool;                   // in scope 0 at cita-auth/src/handler.rs:1106:1: 1106:2
    scope 1 {
        debug lvl => _4;                 // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _39: &(&str, &str, &str, u32); // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        let mut _40: &[&str; 2];         // in scope 1 at cita-auth/src/handler.rs:1094:11: 1094:50
        let mut _41: &log::LevelFilter;  // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
    scope 2 {
        debug resp => _22;               // in scope 2 at cita-auth/src/handler.rs:1096:9: 1096:17
        let _27: libproto::Message;      // in scope 2 at cita-auth/src/handler.rs:1099:9: 1099:12
        scope 3 {
            debug msg => _27;            // in scope 3 at cita-auth/src/handler.rs:1099:9: 1099:12
        }
    }

    bb0: {
        _42 = const false;               // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:34:56: 43:6
        _4 = log::Level::Info;           // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _7 = &_4;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _41 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(snapshot_response, [], Some(promoted[2])) }
        _6 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _7, _41) -> bb4; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = const false;                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb3;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb2: {
        _9 = &_4;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _11 = log::max_level() -> bb5;   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb3: {
        switchInt(move _5) -> [0: bb11, otherwise: bb7]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb4: {
        switchInt(move _6) -> [0: bb1, otherwise: bb2]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb5: {
        _10 = &_11;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _8 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _9, move _10) -> bb6; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb6: {
        _5 = move _8;                    // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb3;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb7: {
        _40 = const _;                   // scope 1 at cita-auth/src/handler.rs:1094:11: 1094:50
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1094:11: 1094:50
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(snapshot_response, [], Some(promoted[1])) }
        _14 = _40 as &[&str] (Pointer(Unsize)); // scope 1 at cita-auth/src/handler.rs:1094:11: 1094:50
        _19 = &_2;                       // scope 1 at cita-auth/src/handler.rs:1094:52: 1094:55
        _18 = core::fmt::ArgumentV1::<'_>::new_debug::<Resp>(_19) -> bb8; // scope 1 at cita-auth/src/handler.rs:1094:52: 1094:55
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1094:52: 1094:55
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b Resp) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<Resp>}, val: Value(<ZST>) }
    }

    bb8: {
        _21 = &_3;                       // scope 1 at cita-auth/src/handler.rs:1094:57: 1094:61
        _20 = core::fmt::ArgumentV1::<'_>::new_display::<bool>(_21) -> bb9; // scope 1 at cita-auth/src/handler.rs:1094:57: 1094:61
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1094:57: 1094:61
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b bool) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<bool>}, val: Value(<ZST>) }
    }

    bb9: {
        _17 = [move _18, move _20];      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _16 = &_17;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _15 = _16 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _13 = Arguments::<'_>::new_v1(move _14, move _15) -> bb10; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb10: {
        _39 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(snapshot_response, [], Some(promoted[0])) }
        _12 = log::__private_api_log(move _13, _4, _39) -> bb11; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb11: {
        _42 = const true;                // scope 0 at cita-auth/src/handler.rs:1096:20: 1096:39
        _22 = libproto::SnapshotResp::new() -> bb12; // scope 0 at cita-auth/src/handler.rs:1096:20: 1096:39
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1096:20: 1096:37
                                         // + literal: Const { ty: fn() -> libproto::SnapshotResp {libproto::SnapshotResp::new}, val: Value(<ZST>) }
    }

    bb12: {
        _24 = &mut _22;                  // scope 2 at cita-auth/src/handler.rs:1097:5: 1097:23
        _23 = libproto::SnapshotResp::set_resp(move _24, _2) -> [return: bb13, unwind: bb26]; // scope 2 at cita-auth/src/handler.rs:1097:5: 1097:23
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1097:10: 1097:18
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::SnapshotResp, Resp) {libproto::SnapshotResp::set_resp}, val: Value(<ZST>) }
    }

    bb13: {
        _26 = &mut _22;                  // scope 2 at cita-auth/src/handler.rs:1098:5: 1098:24
        _25 = libproto::SnapshotResp::set_flag(move _26, _3) -> [return: bb14, unwind: bb26]; // scope 2 at cita-auth/src/handler.rs:1098:5: 1098:24
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1098:10: 1098:18
                                         // + literal: Const { ty: for<'a> fn(&'a mut libproto::SnapshotResp, bool) {libproto::SnapshotResp::set_flag}, val: Value(<ZST>) }
    }

    bb14: {
        _42 = const false;               // scope 2 at cita-auth/src/handler.rs:1099:24: 1099:28
        _28 = move _22;                  // scope 2 at cita-auth/src/handler.rs:1099:24: 1099:28
        _27 = <libproto::SnapshotResp as Into<libproto::Message>>::into(move _28) -> [return: bb15, unwind: bb26]; // scope 2 at cita-auth/src/handler.rs:1099:24: 1099:35
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1099:29: 1099:33
                                         // + literal: Const { ty: fn(libproto::SnapshotResp) -> libproto::Message {<libproto::SnapshotResp as Into<libproto::Message>>::into}, val: Value(<ZST>) }
    }

    bb15: {
        _34 = const Auth;                // scope 3 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x04)) }
        _35 = const libproto::router::MsgType::SnapshotResp; // scope 3 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x12)) }
        _33 = RoutingKey(move _34, move _35); // scope 3 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _32 = <RoutingKey as Into<std::string::String>>::into(move _33) -> [return: bb16, unwind: bb23]; // scope 3 at cita-auth/src/handler.rs:1102:13: 1102:54
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1102:48: 1102:52
                                         // + literal: Const { ty: fn(RoutingKey) -> std::string::String {<RoutingKey as Into<std::string::String>>::into}, val: Value(<ZST>) }
    }

    bb16: {
        _38 = &_27;                      // scope 3 at cita-auth/src/handler.rs:1103:13: 1103:19
        _37 = <&libproto::Message as libproto::TryInto<Vec<u8>>>::try_into(_38) -> [return: bb17, unwind: bb22]; // scope 3 at cita-auth/src/handler.rs:1103:13: 1103:30
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1103:20: 1103:28
                                         // + literal: Const { ty: fn(&libproto::Message) -> Result<Vec<u8>, <&libproto::Message as libproto::TryInto<Vec<u8>>>::Error> {<&libproto::Message as libproto::TryInto<Vec<u8>>>::try_into}, val: Value(<ZST>) }
    }

    bb17: {
        _36 = Result::<Vec<u8>, TryIntoConvertError>::unwrap(move _37) -> [return: bb18, unwind: bb22]; // scope 3 at cita-auth/src/handler.rs:1103:13: 1103:39
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1103:31: 1103:37
                                         // + literal: Const { ty: fn(Result<Vec<u8>, TryIntoConvertError>) -> Vec<u8> {Result::<Vec<u8>, TryIntoConvertError>::unwrap}, val: Value(<ZST>) }
    }

    bb18: {
        _31 = (move _32, move _36);      // scope 3 at cita-auth/src/handler.rs:1101:15: 1104:10
        _30 = pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send(_1, move _31) -> [return: bb19, unwind: bb23]; // scope 3 at cita-auth/src/handler.rs:1100:5: 1104:11
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1101:10: 1101:14
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, (std::string::String, Vec<u8>)) -> Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>> {pubsub::crossbeam_channel::Sender::<(std::string::String, Vec<u8>)>::send}, val: Value(<ZST>) }
    }

    bb19: {
        _29 = Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap(move _30) -> [return: bb20, unwind: bb23]; // scope 3 at cita-auth/src/handler.rs:1100:5: 1105:18
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1105:10: 1105:16
                                         // + literal: Const { ty: fn(Result<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>) {Result::<(), pubsub::crossbeam_channel::SendError<(std::string::String, Vec<u8>)>>::unwrap}, val: Value(<ZST>) }
    }

    bb20: {
        drop(_27) -> [return: bb21, unwind: bb26]; // scope 2 at cita-auth/src/handler.rs:1106:1: 1106:2
    }

    bb21: {
        _42 = const false;               // scope 0 at cita-auth/src/handler.rs:1106:1: 1106:2
        return;                          // scope 0 at cita-auth/src/handler.rs:1106:2: 1106:2
    }

    bb22 (cleanup): {
        drop(_32) -> bb23;               // scope 3 at cita-auth/src/handler.rs:1104:9: 1104:10
    }

    bb23 (cleanup): {
        drop(_27) -> bb26;               // scope 2 at cita-auth/src/handler.rs:1106:1: 1106:2
    }

    bb24 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/handler.rs:1093:1: 1106:2
    }

    bb25 (cleanup): {
        drop(_22) -> bb24;               // scope 0 at cita-auth/src/handler.rs:1106:1: 1106:2
    }

    bb26 (cleanup): {
        switchInt(_42) -> [0: bb24, otherwise: bb25]; // scope 0 at cita-auth/src/handler.rs:1106:1: 1106:2
    }
}

promoted[0] in snapshot_response: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/handler.rs:1094:5: 1094:62
    let mut _7: &str;                    // in scope 0 at cita-auth/src/handler.rs:1094:5: 1094:62

    bb0: {
        _3 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::handler"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/handler.rs"; // scope 0 at cita-auth/src/handler.rs:1094:5: 1094:62
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1094:5: 1094:62
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/handler.rs:1094:5: 1094:62
        _1 = (move _2, move _4, move _6, const 1094_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in snapshot_response: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-auth/src/handler.rs:1094:11: 1094:50
    let mut _1: [&str; 2];               // in scope 0 at cita-auth/src/handler.rs:1094:11: 1094:50

    bb0: {
        _1 = [const "snapshot_response ack: ", const ", flag: "]; // scope 0 at cita-auth/src/handler.rs:1094:11: 1094:50
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1094:11: 1094:50
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1094:11: 1094:50
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/handler.rs:1094:11: 1094:50
        return;                          // scope 0 at cita-auth/src/handler.rs:1094:11: 1094:50
    }
}

promoted[2] in snapshot_response: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn verify_base_quota_required(_1: &Transaction) -> bool {
    debug tx => _1;                      // in scope 0 at cita-auth/src/handler.rs:1109:35: 1109:37
    let mut _0: bool;                    // return place in scope 0 at cita-auth/src/handler.rs:1109:56: 1109:60
    let mut _2: u32;                     // in scope 0 at cita-auth/src/handler.rs:1110:11: 1110:27
    let mut _3: bool;                    // in scope 0 at cita-auth/src/handler.rs:1111:9: 1111:14
    let mut _4: bool;                    // in scope 0 at cita-auth/src/handler.rs:1111:9: 1111:14
    let _5: &[u8];                       // in scope 0 at cita-auth/src/handler.rs:1113:17: 1113:19
    let mut _6: bool;                    // in scope 0 at cita-auth/src/handler.rs:1114:16: 1114:69
    let mut _7: bool;                    // in scope 0 at cita-auth/src/handler.rs:1114:16: 1114:29
    let mut _8: &[u8];                   // in scope 0 at cita-auth/src/handler.rs:1114:16: 1114:29
    let mut _9: bool;                    // in scope 0 at cita-auth/src/handler.rs:1114:33: 1114:69
    let mut _10: &cita_types::H160;      // in scope 0 at cita-auth/src/handler.rs:1114:33: 1114:50
    let _11: cita_types::H160;           // in scope 0 at cita-auth/src/handler.rs:1114:33: 1114:50
    let mut _12: &[u8];                  // in scope 0 at cita-auth/src/handler.rs:1114:47: 1114:49
    let mut _13: &cita_types::H160;      // in scope 0 at cita-auth/src/handler.rs:1114:54: 1114:69
    let _14: cita_types::H160;           // in scope 0 at cita-auth/src/handler.rs:1114:54: 1114:69
    let mut _15: usize;                  // in scope 0 at cita-auth/src/handler.rs:1115:17: 1115:40
    let mut _16: u64;                    // in scope 0 at cita-auth/src/handler.rs:1115:17: 1115:31
    let mut _17: usize;                  // in scope 0 at cita-auth/src/handler.rs:1116:24: 1116:85
    let mut _18: usize;                  // in scope 0 at cita-auth/src/handler.rs:1116:24: 1116:74
    let mut _19: usize;                  // in scope 0 at cita-auth/src/handler.rs:1116:24: 1116:58
    let mut _20: usize;                  // in scope 0 at cita-auth/src/handler.rs:1116:24: 1116:37
    let mut _21: &std::vec::Vec<u8>;     // in scope 0 at cita-auth/src/handler.rs:1116:24: 1116:37
    let mut _22: (usize, bool);          // in scope 0 at cita-auth/src/handler.rs:1116:24: 1116:58
    let mut _23: (usize, bool);          // in scope 0 at cita-auth/src/handler.rs:1116:24: 1116:74
    let mut _24: (usize, bool);          // in scope 0 at cita-auth/src/handler.rs:1116:24: 1116:85
    let mut _25: usize;                  // in scope 0 at cita-auth/src/handler.rs:1118:17: 1118:40
    let mut _26: u64;                    // in scope 0 at cita-auth/src/handler.rs:1118:17: 1118:31
    let mut _27: usize;                  // in scope 0 at cita-auth/src/handler.rs:1118:44: 1118:94
    let mut _28: usize;                  // in scope 0 at cita-auth/src/handler.rs:1118:44: 1118:78
    let mut _29: usize;                  // in scope 0 at cita-auth/src/handler.rs:1118:44: 1118:57
    let mut _30: &std::vec::Vec<u8>;     // in scope 0 at cita-auth/src/handler.rs:1118:44: 1118:57
    let mut _31: (usize, bool);          // in scope 0 at cita-auth/src/handler.rs:1118:44: 1118:78
    let mut _32: (usize, bool);          // in scope 0 at cita-auth/src/handler.rs:1118:44: 1118:94
    scope 1 {
        debug to => _5;                  // in scope 1 at cita-auth/src/handler.rs:1113:17: 1113:19
    }

    bb0: {
        _2 = Transaction::get_version(_1) -> bb1; // scope 0 at cita-auth/src/handler.rs:1110:11: 1110:27
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1110:14: 1110:25
                                         // + literal: Const { ty: for<'a> fn(&'a Transaction) -> u32 {Transaction::get_version}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = Le(const 0_u32, _2);        // scope 0 at cita-auth/src/handler.rs:1111:9: 1111:14
        switchInt(move _3) -> [0: bb3, otherwise: bb2]; // scope 0 at cita-auth/src/handler.rs:1111:9: 1111:14
    }

    bb2: {
        _4 = Le(_2, const 2_u32);        // scope 0 at cita-auth/src/handler.rs:1111:9: 1111:14
        switchInt(move _4) -> [0: bb3, otherwise: bb4]; // scope 0 at cita-auth/src/handler.rs:1111:9: 1111:14
    }

    bb3: {
        _5 = Transaction::get_to_v1(_1) -> bb5; // scope 0 at cita-auth/src/handler.rs:1113:22: 1113:36
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1113:25: 1113:34
                                         // + literal: Const { ty: for<'a> fn(&'a Transaction) -> &'a [u8] {Transaction::get_to_v1}, val: Value(<ZST>) }
    }

    bb4: {
        _0 = const true;                 // scope 0 at cita-auth/src/handler.rs:1111:18: 1111:22
        goto -> bb24;                    // scope 0 at cita-auth/src/handler.rs:1111:18: 1111:22
    }

    bb5: {
        _8 = _5;                         // scope 1 at cita-auth/src/handler.rs:1114:16: 1114:29
        _7 = core::slice::<impl [u8]>::is_empty(move _8) -> bb9; // scope 1 at cita-auth/src/handler.rs:1114:16: 1114:29
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1114:19: 1114:27
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> bool {core::slice::<impl [u8]>::is_empty}, val: Value(<ZST>) }
    }

    bb6: {
        _6 = const true;                 // scope 1 at cita-auth/src/handler.rs:1114:16: 1114:69
        goto -> bb8;                     // scope 1 at cita-auth/src/handler.rs:1114:16: 1114:69
    }

    bb7: {
        _12 = _5;                        // scope 1 at cita-auth/src/handler.rs:1114:47: 1114:49
        _11 = <H160 as From<&[u8]>>::from(move _12) -> bb10; // scope 1 at cita-auth/src/handler.rs:1114:33: 1114:50
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1114:33: 1114:46
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[u8]) -> H160 {<H160 as From<&[u8]>>::from}, val: Value(<ZST>) }
    }

    bb8: {
        switchInt(move _6) -> [0: bb19, otherwise: bb13]; // scope 1 at cita-auth/src/handler.rs:1114:16: 1114:69
    }

    bb9: {
        switchInt(move _7) -> [0: bb7, otherwise: bb6]; // scope 1 at cita-auth/src/handler.rs:1114:16: 1114:69
    }

    bb10: {
        _10 = &_11;                      // scope 1 at cita-auth/src/handler.rs:1114:33: 1114:50
        _14 = H160::zero() -> bb11;      // scope 1 at cita-auth/src/handler.rs:1114:54: 1114:69
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1114:54: 1114:67
                                         // + literal: Const { ty: fn() -> H160 {H160::zero}, val: Value(<ZST>) }
    }

    bb11: {
        _13 = &_14;                      // scope 1 at cita-auth/src/handler.rs:1114:54: 1114:69
        _9 = <H160 as PartialEq>::eq(move _10, move _13) -> bb12; // scope 1 at cita-auth/src/handler.rs:1114:33: 1114:69
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1114:33: 1114:69
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a H160, &'b H160) -> bool {<H160 as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb12: {
        _6 = move _9;                    // scope 1 at cita-auth/src/handler.rs:1114:16: 1114:69
        goto -> bb8;                     // scope 1 at cita-auth/src/handler.rs:1114:16: 1114:69
    }

    bb13: {
        _16 = Transaction::get_quota(_1) -> bb14; // scope 1 at cita-auth/src/handler.rs:1115:17: 1115:31
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1115:20: 1115:29
                                         // + literal: Const { ty: for<'a> fn(&'a Transaction) -> u64 {Transaction::get_quota}, val: Value(<ZST>) }
    }

    bb14: {
        _15 = move _16 as usize (IntToInt); // scope 1 at cita-auth/src/handler.rs:1115:17: 1115:40
        _21 = &((*_1).4: std::vec::Vec<u8>); // scope 1 at cita-auth/src/handler.rs:1116:24: 1116:37
        _20 = Vec::<u8>::len(move _21) -> bb15; // scope 1 at cita-auth/src/handler.rs:1116:24: 1116:37
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1116:32: 1116:35
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<u8>) -> usize {Vec::<u8>::len}, val: Value(<ZST>) }
    }

    bb15: {
        _22 = CheckedMul(_20, const _);  // scope 1 at cita-auth/src/handler.rs:1116:24: 1116:58
        assert(!move (_22.1: bool), "attempt to compute `{} * {}`, which would overflow", move _20, const _) -> bb16; // scope 1 at cita-auth/src/handler.rs:1116:24: 1116:58
    }

    bb16: {
        _19 = move (_22.0: usize);       // scope 1 at cita-auth/src/handler.rs:1116:24: 1116:58
        _23 = CheckedAdd(_19, const _);  // scope 1 at cita-auth/src/handler.rs:1116:24: 1116:74
        assert(!move (_23.1: bool), "attempt to compute `{} + {}`, which would overflow", move _19, const _) -> bb17; // scope 1 at cita-auth/src/handler.rs:1116:24: 1116:74
    }

    bb17: {
        _18 = move (_23.0: usize);       // scope 1 at cita-auth/src/handler.rs:1116:24: 1116:74
        _24 = CheckedAdd(_18, const _);  // scope 1 at cita-auth/src/handler.rs:1116:24: 1116:85
        assert(!move (_24.1: bool), "attempt to compute `{} + {}`, which would overflow", move _18, const _) -> bb18; // scope 1 at cita-auth/src/handler.rs:1116:24: 1116:85
    }

    bb18: {
        _17 = move (_24.0: usize);       // scope 1 at cita-auth/src/handler.rs:1116:24: 1116:85
        _0 = Ge(move _15, move _17);     // scope 1 at cita-auth/src/handler.rs:1115:17: 1116:85
        goto -> bb24;                    // scope 1 at cita-auth/src/handler.rs:1114:13: 1119:14
    }

    bb19: {
        _26 = Transaction::get_quota(_1) -> bb20; // scope 1 at cita-auth/src/handler.rs:1118:17: 1118:31
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1118:20: 1118:29
                                         // + literal: Const { ty: for<'a> fn(&'a Transaction) -> u64 {Transaction::get_quota}, val: Value(<ZST>) }
    }

    bb20: {
        _25 = move _26 as usize (IntToInt); // scope 1 at cita-auth/src/handler.rs:1118:17: 1118:40
        _30 = &((*_1).4: std::vec::Vec<u8>); // scope 1 at cita-auth/src/handler.rs:1118:44: 1118:57
        _29 = Vec::<u8>::len(move _30) -> bb21; // scope 1 at cita-auth/src/handler.rs:1118:44: 1118:57
                                         // mir::Constant
                                         // + span: cita-auth/src/handler.rs:1118:52: 1118:55
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<u8>) -> usize {Vec::<u8>::len}, val: Value(<ZST>) }
    }

    bb21: {
        _31 = CheckedMul(_29, const _);  // scope 1 at cita-auth/src/handler.rs:1118:44: 1118:78
        assert(!move (_31.1: bool), "attempt to compute `{} * {}`, which would overflow", move _29, const _) -> bb22; // scope 1 at cita-auth/src/handler.rs:1118:44: 1118:78
    }

    bb22: {
        _28 = move (_31.0: usize);       // scope 1 at cita-auth/src/handler.rs:1118:44: 1118:78
        _32 = CheckedAdd(_28, const _);  // scope 1 at cita-auth/src/handler.rs:1118:44: 1118:94
        assert(!move (_32.1: bool), "attempt to compute `{} + {}`, which would overflow", move _28, const _) -> bb23; // scope 1 at cita-auth/src/handler.rs:1118:44: 1118:94
    }

    bb23: {
        _27 = move (_32.0: usize);       // scope 1 at cita-auth/src/handler.rs:1118:44: 1118:94
        _0 = Ge(move _25, move _27);     // scope 1 at cita-auth/src/handler.rs:1118:17: 1118:94
        goto -> bb24;                    // scope 1 at cita-auth/src/handler.rs:1114:13: 1119:14
    }

    bb24: {
        return;                          // scope 0 at cita-auth/src/handler.rs:1122:2: 1122:2
    }
}

fn history::<impl at cita-auth/src/history.rs:19:10: 19:15>::fmt(_1: &HistoryHeights, _2: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at cita-auth/src/history.rs:19:10: 19:15
    debug f => _2;                       // in scope 0 at cita-auth/src/history.rs:19:10: 19:15
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at cita-auth/src/history.rs:19:10: 19:15
    let _3: &str;                        // in scope 0 at cita-auth/src/history.rs:19:10: 19:15
    let _4: &str;                        // in scope 0 at cita-auth/src/history.rs:21:5: 21:26
    let mut _5: &dyn std::fmt::Debug;    // in scope 0 at cita-auth/src/history.rs:21:5: 21:26
    let _6: &std::collections::HashSet<u64>; // in scope 0 at cita-auth/src/history.rs:21:5: 21:26
    let _7: &str;                        // in scope 0 at cita-auth/src/history.rs:22:5: 22:20
    let mut _8: &dyn std::fmt::Debug;    // in scope 0 at cita-auth/src/history.rs:22:5: 22:20
    let _9: &u64;                        // in scope 0 at cita-auth/src/history.rs:22:5: 22:20
    let _10: &str;                       // in scope 0 at cita-auth/src/history.rs:23:5: 23:20
    let mut _11: &dyn std::fmt::Debug;   // in scope 0 at cita-auth/src/history.rs:23:5: 23:20
    let _12: &u64;                       // in scope 0 at cita-auth/src/history.rs:23:5: 23:20
    let _13: &str;                       // in scope 0 at cita-auth/src/history.rs:24:5: 24:18
    let mut _14: &dyn std::fmt::Debug;   // in scope 0 at cita-auth/src/history.rs:24:5: 24:18
    let _15: &bool;                      // in scope 0 at cita-auth/src/history.rs:24:5: 24:18
    let _16: &str;                       // in scope 0 at cita-auth/src/history.rs:25:5: 25:24
    let mut _17: &dyn std::fmt::Debug;   // in scope 0 at cita-auth/src/history.rs:25:5: 25:24
    let _18: &&u64;                      // in scope 0 at cita-auth/src/history.rs:25:5: 25:24
    let _19: &u64;                       // in scope 0 at cita-auth/src/history.rs:25:5: 25:24

    bb0: {
        _3 = const "HistoryHeights";     // scope 0 at cita-auth/src/history.rs:19:10: 19:15
                                         // mir::Constant
                                         // + span: cita-auth/src/history.rs:19:10: 19:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = const "heights";            // scope 0 at cita-auth/src/history.rs:21:5: 21:26
                                         // mir::Constant
                                         // + span: cita-auth/src/history.rs:21:5: 21:26
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &((*_1).0: std::collections::HashSet<u64>); // scope 0 at cita-auth/src/history.rs:21:5: 21:26
        _5 = _6 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at cita-auth/src/history.rs:21:5: 21:26
        _7 = const "max_height";         // scope 0 at cita-auth/src/history.rs:22:5: 22:20
                                         // mir::Constant
                                         // + span: cita-auth/src/history.rs:22:5: 22:20
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _9 = &((*_1).1: u64);            // scope 0 at cita-auth/src/history.rs:22:5: 22:20
        _8 = _9 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at cita-auth/src/history.rs:22:5: 22:20
        _10 = const "min_height";        // scope 0 at cita-auth/src/history.rs:23:5: 23:20
                                         // mir::Constant
                                         // + span: cita-auth/src/history.rs:23:5: 23:20
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _12 = &((*_1).2: u64);           // scope 0 at cita-auth/src/history.rs:23:5: 23:20
        _11 = _12 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at cita-auth/src/history.rs:23:5: 23:20
        _13 = const "is_init";           // scope 0 at cita-auth/src/history.rs:24:5: 24:18
                                         // mir::Constant
                                         // + span: cita-auth/src/history.rs:24:5: 24:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _15 = &((*_1).3: bool);          // scope 0 at cita-auth/src/history.rs:24:5: 24:18
        _14 = _15 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at cita-auth/src/history.rs:24:5: 24:18
        _16 = const "last_timestamp";    // scope 0 at cita-auth/src/history.rs:25:5: 25:24
                                         // mir::Constant
                                         // + span: cita-auth/src/history.rs:25:5: 25:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _19 = &((*_1).4: u64);           // scope 0 at cita-auth/src/history.rs:25:5: 25:24
        _18 = &_19;                      // scope 0 at cita-auth/src/history.rs:25:5: 25:24
        _17 = _18 as &dyn std::fmt::Debug (Pointer(Unsize)); // scope 0 at cita-auth/src/history.rs:25:5: 25:24
        _0 = std::fmt::Formatter::<'_>::debug_struct_field5_finish(_2, _3, _4, move _5, _7, move _8, _10, move _11, _13, move _14, _16, move _17) -> bb1; // scope 0 at cita-auth/src/history.rs:19:10: 19:15
                                         // mir::Constant
                                         // + span: cita-auth/src/history.rs:19:10: 19:15
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'b, 'a, 'c, 'd, 'e, 'f, 'g, 'h, 'i, 'j, 'k, 'l> fn(&'b mut std::fmt::Formatter<'_>, &'a str, &'c str, &'d (dyn Debug + 'd), &'e str, &'f (dyn Debug + 'f), &'g str, &'h (dyn Debug + 'h), &'i str, &'j (dyn Debug + 'j), &'k str, &'l (dyn Debug + 'l)) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::debug_struct_field5_finish}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at cita-auth/src/history.rs:19:15: 19:15
    }
}

fn history::<impl at cita-auth/src/history.rs:19:17: 19:24>::default() -> HistoryHeights {
    let mut _0: history::HistoryHeights; // return place in scope 0 at cita-auth/src/history.rs:19:17: 19:24
    let mut _1: std::collections::HashSet<u64>; // in scope 0 at cita-auth/src/history.rs:21:5: 21:26
    let mut _2: u64;                     // in scope 0 at cita-auth/src/history.rs:22:5: 22:20
    let mut _3: u64;                     // in scope 0 at cita-auth/src/history.rs:23:5: 23:20
    let mut _4: bool;                    // in scope 0 at cita-auth/src/history.rs:24:5: 24:18
    let mut _5: u64;                     // in scope 0 at cita-auth/src/history.rs:25:5: 25:24

    bb0: {
        _1 = <HashSet<u64> as Default>::default() -> bb1; // scope 0 at cita-auth/src/history.rs:21:5: 21:26
                                         // mir::Constant
                                         // + span: cita-auth/src/history.rs:21:5: 21:26
                                         // + literal: Const { ty: fn() -> HashSet<u64> {<HashSet<u64> as Default>::default}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = <u64 as Default>::default() -> [return: bb2, unwind: bb6]; // scope 0 at cita-auth/src/history.rs:22:5: 22:20
                                         // mir::Constant
                                         // + span: cita-auth/src/history.rs:22:5: 22:20
                                         // + literal: Const { ty: fn() -> u64 {<u64 as Default>::default}, val: Value(<ZST>) }
    }

    bb2: {
        _3 = <u64 as Default>::default() -> [return: bb3, unwind: bb6]; // scope 0 at cita-auth/src/history.rs:23:5: 23:20
                                         // mir::Constant
                                         // + span: cita-auth/src/history.rs:23:5: 23:20
                                         // + literal: Const { ty: fn() -> u64 {<u64 as Default>::default}, val: Value(<ZST>) }
    }

    bb3: {
        _4 = <bool as Default>::default() -> [return: bb4, unwind: bb6]; // scope 0 at cita-auth/src/history.rs:24:5: 24:18
                                         // mir::Constant
                                         // + span: cita-auth/src/history.rs:24:5: 24:18
                                         // + literal: Const { ty: fn() -> bool {<bool as Default>::default}, val: Value(<ZST>) }
    }

    bb4: {
        _5 = <u64 as Default>::default() -> [return: bb5, unwind: bb6]; // scope 0 at cita-auth/src/history.rs:25:5: 25:24
                                         // mir::Constant
                                         // + span: cita-auth/src/history.rs:25:5: 25:24
                                         // + literal: Const { ty: fn() -> u64 {<u64 as Default>::default}, val: Value(<ZST>) }
    }

    bb5: {
        _0 = HistoryHeights { heights: move _1, max_height: move _2, min_height: move _3, is_init: move _4, last_timestamp: move _5 }; // scope 0 at cita-auth/src/history.rs:19:17: 19:24
        return;                          // scope 0 at cita-auth/src/history.rs:19:24: 19:24
    }

    bb6 (cleanup): {
        drop(_1) -> bb7;                 // scope 0 at cita-auth/src/history.rs:19:23: 19:24
    }

    bb7 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/history.rs:19:17: 19:24
    }
}

fn history::<impl at cita-auth/src/history.rs:28:1: 28:20>::new() -> HistoryHeights {
    let mut _0: history::HistoryHeights; // return place in scope 0 at cita-auth/src/history.rs:29:21: 29:25
    let mut _1: std::collections::HashSet<u64>; // in scope 0 at cita-auth/src/history.rs:31:22: 31:36

    bb0: {
        _1 = HashSet::<u64>::new() -> bb1; // scope 0 at cita-auth/src/history.rs:31:22: 31:36
                                         // mir::Constant
                                         // + span: cita-auth/src/history.rs:31:22: 31:34
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn() -> HashSet<u64> {HashSet::<u64>::new}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = HistoryHeights { heights: move _1, max_height: const 0_u64, min_height: const 0_u64, is_init: const false, last_timestamp: const 0_u64 }; // scope 0 at cita-auth/src/history.rs:30:9: 37:10
        return;                          // scope 0 at cita-auth/src/history.rs:38:6: 38:6
    }
}

fn history::<impl at cita-auth/src/history.rs:28:1: 28:20>::reset(_1: &mut HistoryHeights) -> () {
    debug self => _1;                    // in scope 0 at cita-auth/src/history.rs:40:18: 40:27
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/history.rs:40:29: 40:29
    let _2: ();                          // in scope 0 at cita-auth/src/history.rs:41:9: 41:29
    let mut _3: &mut std::collections::HashSet<u64>; // in scope 0 at cita-auth/src/history.rs:41:9: 41:29

    bb0: {
        _3 = &mut ((*_1).0: std::collections::HashSet<u64>); // scope 0 at cita-auth/src/history.rs:41:9: 41:29
        _2 = HashSet::<u64>::clear(move _3) -> bb1; // scope 0 at cita-auth/src/history.rs:41:9: 41:29
                                         // mir::Constant
                                         // + span: cita-auth/src/history.rs:41:22: 41:27
                                         // + literal: Const { ty: for<'a> fn(&'a mut HashSet<u64>) {HashSet::<u64>::clear}, val: Value(<ZST>) }
    }

    bb1: {
        ((*_1).1: u64) = const 0_u64;    // scope 0 at cita-auth/src/history.rs:42:9: 42:28
        ((*_1).2: u64) = const 0_u64;    // scope 0 at cita-auth/src/history.rs:43:9: 43:28
        ((*_1).3: bool) = const false;   // scope 0 at cita-auth/src/history.rs:44:9: 44:29
        ((*_1).4: u64) = const 0_u64;    // scope 0 at cita-auth/src/history.rs:45:9: 45:32
        return;                          // scope 0 at cita-auth/src/history.rs:46:6: 46:6
    }
}

fn history::<impl at cita-auth/src/history.rs:28:1: 28:20>::update_height(_1: &mut HistoryHeights, _2: u64) -> () {
    debug self => _1;                    // in scope 0 at cita-auth/src/history.rs:48:26: 48:35
    debug height => _2;                  // in scope 0 at cita-auth/src/history.rs:48:37: 48:43
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/history.rs:48:50: 48:50
    let mut _3: bool;                    // in scope 0 at cita-auth/src/history.rs:50:12: 50:36
    let mut _4: u64;                     // in scope 0 at cita-auth/src/history.rs:50:21: 50:36
    let _5: log::Level;                  // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
    let mut _6: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _7: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _8: &log::Level;             // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _9: bool;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _10: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _11: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _12: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _13: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _14: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _15: &[&str];                // in scope 0 at cita-auth/src/history.rs:52:17: 52:59
    let mut _16: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _17: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _18: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _19: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/history.rs:53:17: 53:23
    let _20: &u64;                       // in scope 0 at cita-auth/src/history.rs:53:17: 53:23
    let mut _21: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/history.rs:54:17: 54:32
    let _22: &u64;                       // in scope 0 at cita-auth/src/history.rs:54:17: 54:32
    let mut _23: bool;                   // in scope 0 at cita-auth/src/history.rs:57:19: 57:43
    let mut _24: u64;                    // in scope 0 at cita-auth/src/history.rs:57:28: 57:43
    let _25: u64;                        // in scope 0 at cita-auth/src/history.rs:60:17: 60:31
    let mut _26: u64;                    // in scope 0 at cita-auth/src/history.rs:61:31: 65:14
    let mut _27: bool;                   // in scope 0 at cita-auth/src/history.rs:61:34: 61:53
    let mut _28: u64;                    // in scope 0 at cita-auth/src/history.rs:62:17: 62:36
    let mut _29: (u64, bool);            // in scope 0 at cita-auth/src/history.rs:62:17: 62:36
    let mut _30: (u64, bool);            // in scope 0 at cita-auth/src/history.rs:62:17: 62:40
    let _31: bool;                       // in scope 0 at cita-auth/src/history.rs:67:13: 67:40
    let mut _32: &mut std::collections::HashSet<u64>; // in scope 0 at cita-auth/src/history.rs:67:13: 67:40
    let mut _33: std::ops::Range<u64>;   // in scope 0 at cita-auth/src/history.rs:68:22: 68:53
    let mut _34: std::ops::Range<u64>;   // in scope 0 at cita-auth/src/history.rs:68:22: 68:53
    let mut _35: u64;                    // in scope 0 at cita-auth/src/history.rs:68:38: 68:53
    let mut _37: std::option::Option<u64>; // in scope 0 at cita-auth/src/history.rs:68:22: 68:53
    let mut _38: &mut std::ops::Range<u64>; // in scope 0 at cita-auth/src/history.rs:68:22: 68:53
    let mut _39: isize;                  // in scope 0 at cita-auth/src/history.rs:68:13: 70:14
    let _41: bool;                       // in scope 0 at cita-auth/src/history.rs:69:17: 69:40
    let mut _42: &mut std::collections::HashSet<u64>; // in scope 0 at cita-auth/src/history.rs:69:17: 69:40
    let _43: &u64;                       // in scope 0 at cita-auth/src/history.rs:69:37: 69:39
    let _44: bool;                       // in scope 0 at cita-auth/src/history.rs:72:13: 72:40
    let mut _45: &mut std::collections::HashSet<u64>; // in scope 0 at cita-auth/src/history.rs:72:13: 72:40
    let mut _46: bool;                   // in scope 0 at cita-auth/src/history.rs:76:13: 76:24
    let mut _47: std::ops::Range<u64>;   // in scope 0 at cita-auth/src/history.rs:77:18: 77:50
    let mut _48: std::ops::Range<u64>;   // in scope 0 at cita-auth/src/history.rs:77:18: 77:50
    let mut _49: u64;                    // in scope 0 at cita-auth/src/history.rs:77:18: 77:33
    let mut _50: u64;                    // in scope 0 at cita-auth/src/history.rs:77:35: 77:50
    let mut _52: std::option::Option<u64>; // in scope 0 at cita-auth/src/history.rs:77:18: 77:50
    let mut _53: &mut std::ops::Range<u64>; // in scope 0 at cita-auth/src/history.rs:77:18: 77:50
    let mut _54: isize;                  // in scope 0 at cita-auth/src/history.rs:77:9: 82:10
    let mut _56: bool;                   // in scope 0 at cita-auth/src/history.rs:78:16: 78:42
    let mut _57: bool;                   // in scope 0 at cita-auth/src/history.rs:78:17: 78:42
    let mut _58: &std::collections::HashSet<u64>; // in scope 0 at cita-auth/src/history.rs:78:17: 78:42
    let _59: &u64;                       // in scope 0 at cita-auth/src/history.rs:78:39: 78:41
    let mut _60: bool;                   // in scope 0 at cita-auth/src/history.rs:83:24: 83:31
    scope 1 {
        debug lvl => _5;                 // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
        let mut _61: &(&str, &str, &str, u32); // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        let mut _62: &[&str; 2];         // in scope 1 at cita-auth/src/history.rs:52:17: 52:59
        let mut _63: &log::LevelFilter;  // in scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
    scope 2 {
        debug old_min_height => _25;     // in scope 2 at cita-auth/src/history.rs:60:17: 60:31
        let mut _36: std::ops::Range<u64>; // in scope 2 at cita-auth/src/history.rs:68:22: 68:53
        scope 3 {
            debug iter => _36;           // in scope 3 at cita-auth/src/history.rs:68:22: 68:53
            let _40: u64;                // in scope 3 at cita-auth/src/history.rs:68:17: 68:18
            scope 4 {
                debug i => _40;          // in scope 4 at cita-auth/src/history.rs:68:17: 68:18
            }
        }
    }
    scope 5 {
        debug is_init => _46;            // in scope 5 at cita-auth/src/history.rs:76:13: 76:24
        let mut _51: std::ops::Range<u64>; // in scope 5 at cita-auth/src/history.rs:77:18: 77:50
        scope 6 {
            debug iter => _51;           // in scope 6 at cita-auth/src/history.rs:77:18: 77:50
            let _55: u64;                // in scope 6 at cita-auth/src/history.rs:77:13: 77:14
            scope 7 {
                debug i => _55;          // in scope 7 at cita-auth/src/history.rs:77:13: 77:14
            }
        }
    }

    bb0: {
        _4 = ((*_1).2: u64);             // scope 0 at cita-auth/src/history.rs:50:21: 50:36
        _3 = Lt(_2, move _4);            // scope 0 at cita-auth/src/history.rs:50:12: 50:36
        switchInt(move _3) -> [0: bb12, otherwise: bb1]; // scope 0 at cita-auth/src/history.rs:50:12: 50:36
    }

    bb1: {
        _5 = log::Level::Trace;          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:169:14: 169:34
        _8 = &_5;                        // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _63 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(HistoryHeights::update_height, [], Some(promoted[2])) }
        _7 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _8, _63) -> bb5; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb2: {
        _6 = const false;                // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb4;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb3: {
        _10 = &_5;                       // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _12 = log::max_level() -> bb6;   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb4: {
        switchInt(move _6) -> [0: bb35, otherwise: bb8]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb5: {
        switchInt(move _7) -> [0: bb2, otherwise: bb3]; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb6: {
        _11 = &_12;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _9 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _10, move _11) -> bb7; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb7: {
        _6 = move _9;                    // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb4;                     // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb8: {
        _62 = const _;                   // scope 1 at cita-auth/src/history.rs:52:17: 52:59
                                         // mir::Constant
                                         // + span: cita-auth/src/history.rs:52:17: 52:59
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(HistoryHeights::update_height, [], Some(promoted[1])) }
        _15 = _62 as &[&str] (Pointer(Unsize)); // scope 1 at cita-auth/src/history.rs:52:17: 52:59
        _20 = &_2;                       // scope 1 at cita-auth/src/history.rs:53:17: 53:23
        _19 = core::fmt::ArgumentV1::<'_>::new_display::<u64>(_20) -> bb9; // scope 1 at cita-auth/src/history.rs:53:17: 53:23
                                         // mir::Constant
                                         // + span: cita-auth/src/history.rs:53:17: 53:23
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u64>}, val: Value(<ZST>) }
    }

    bb9: {
        _22 = &((*_1).2: u64);           // scope 1 at cita-auth/src/history.rs:54:17: 54:32
        _21 = core::fmt::ArgumentV1::<'_>::new_display::<u64>(_22) -> bb10; // scope 1 at cita-auth/src/history.rs:54:17: 54:32
                                         // mir::Constant
                                         // + span: cita-auth/src/history.rs:54:17: 54:32
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b u64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<u64>}, val: Value(<ZST>) }
    }

    bb10: {
        _18 = [move _19, move _21];      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _17 = &_18;                      // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _16 = _17 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _14 = Arguments::<'_>::new_v1(move _15, move _16) -> bb11; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb11: {
        _61 = const _;                   // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(HistoryHeights::update_height, [], Some(promoted[0])) }
        _13 = log::__private_api_log(move _14, _5, _61) -> bb35; // scope 1 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb12: {
        _24 = ((*_1).1: u64);            // scope 0 at cita-auth/src/history.rs:57:28: 57:43
        _23 = Gt(_2, move _24);          // scope 0 at cita-auth/src/history.rs:57:19: 57:43
        switchInt(move _23) -> [0: bb25, otherwise: bb13]; // scope 0 at cita-auth/src/history.rs:57:19: 57:43
    }

    bb13: {
        ((*_1).1: u64) = _2;             // scope 0 at cita-auth/src/history.rs:58:13: 58:37
        _25 = ((*_1).2: u64);            // scope 0 at cita-auth/src/history.rs:60:34: 60:49
        _27 = Gt(_2, const _);           // scope 2 at cita-auth/src/history.rs:61:34: 61:53
        switchInt(move _27) -> [0: bb17, otherwise: bb14]; // scope 2 at cita-auth/src/history.rs:61:34: 61:53
    }

    bb14: {
        _29 = CheckedSub(_2, const _);   // scope 2 at cita-auth/src/history.rs:62:17: 62:36
        assert(!move (_29.1: bool), "attempt to compute `{} - {}`, which would overflow", _2, const _) -> bb15; // scope 2 at cita-auth/src/history.rs:62:17: 62:36
    }

    bb15: {
        _28 = move (_29.0: u64);         // scope 2 at cita-auth/src/history.rs:62:17: 62:36
        _30 = CheckedAdd(_28, const 1_u64); // scope 2 at cita-auth/src/history.rs:62:17: 62:40
        assert(!move (_30.1: bool), "attempt to compute `{} + {}`, which would overflow", move _28, const 1_u64) -> bb16; // scope 2 at cita-auth/src/history.rs:62:17: 62:40
    }

    bb16: {
        _26 = move (_30.0: u64);         // scope 2 at cita-auth/src/history.rs:62:17: 62:40
        goto -> bb18;                    // scope 2 at cita-auth/src/history.rs:61:31: 65:14
    }

    bb17: {
        _26 = const 0_u64;               // scope 2 at cita-auth/src/history.rs:64:17: 64:18
        goto -> bb18;                    // scope 2 at cita-auth/src/history.rs:61:31: 65:14
    }

    bb18: {
        ((*_1).2: u64) = move _26;       // scope 2 at cita-auth/src/history.rs:61:13: 65:14
        _32 = &mut ((*_1).0: std::collections::HashSet<u64>); // scope 2 at cita-auth/src/history.rs:67:13: 67:40
        _31 = HashSet::<u64>::insert(move _32, _2) -> bb19; // scope 2 at cita-auth/src/history.rs:67:13: 67:40
                                         // mir::Constant
                                         // + span: cita-auth/src/history.rs:67:26: 67:32
                                         // + literal: Const { ty: for<'a> fn(&'a mut HashSet<u64>, u64) -> bool {HashSet::<u64>::insert}, val: Value(<ZST>) }
    }

    bb19: {
        _35 = ((*_1).2: u64);            // scope 2 at cita-auth/src/history.rs:68:38: 68:53
        _34 = std::ops::Range::<u64> { start: _25, end: move _35 }; // scope 2 at cita-auth/src/history.rs:68:22: 68:53
        _33 = <std::ops::Range<u64> as IntoIterator>::into_iter(move _34) -> bb20; // scope 2 at cita-auth/src/history.rs:68:22: 68:53
                                         // mir::Constant
                                         // + span: cita-auth/src/history.rs:68:22: 68:53
                                         // + literal: Const { ty: fn(std::ops::Range<u64>) -> <std::ops::Range<u64> as IntoIterator>::IntoIter {<std::ops::Range<u64> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb20: {
        _36 = move _33;                  // scope 2 at cita-auth/src/history.rs:68:22: 68:53
        goto -> bb21;                    // scope 3 at cita-auth/src/history.rs:68:13: 70:14
    }

    bb21: {
        _38 = &mut _36;                  // scope 3 at cita-auth/src/history.rs:68:22: 68:53
        _37 = <std::ops::Range<u64> as Iterator>::next(_38) -> bb22; // scope 3 at cita-auth/src/history.rs:68:22: 68:53
                                         // mir::Constant
                                         // + span: cita-auth/src/history.rs:68:22: 68:53
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::ops::Range<u64>) -> std::option::Option<<std::ops::Range<u64> as Iterator>::Item> {<std::ops::Range<u64> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb22: {
        _39 = discriminant(_37);         // scope 3 at cita-auth/src/history.rs:68:22: 68:53
        switchInt(move _39) -> [0: bb26, 1: bb23, otherwise: bb24]; // scope 3 at cita-auth/src/history.rs:68:22: 68:53
    }

    bb23: {
        _40 = ((_37 as Some).0: u64);    // scope 3 at cita-auth/src/history.rs:68:17: 68:18
        _42 = &mut ((*_1).0: std::collections::HashSet<u64>); // scope 4 at cita-auth/src/history.rs:69:17: 69:40
        _43 = &_40;                      // scope 4 at cita-auth/src/history.rs:69:37: 69:39
        _41 = HashSet::<u64>::remove::<u64>(move _42, _43) -> bb21; // scope 4 at cita-auth/src/history.rs:69:17: 69:40
                                         // mir::Constant
                                         // + span: cita-auth/src/history.rs:69:30: 69:36
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut HashSet<u64>, &'b u64) -> bool {HashSet::<u64>::remove::<u64>}, val: Value(<ZST>) }
    }

    bb24: {
        unreachable;                     // scope 3 at cita-auth/src/history.rs:68:22: 68:53
    }

    bb25: {
        _45 = &mut ((*_1).0: std::collections::HashSet<u64>); // scope 0 at cita-auth/src/history.rs:72:13: 72:40
        _44 = HashSet::<u64>::insert(move _45, _2) -> bb26; // scope 0 at cita-auth/src/history.rs:72:13: 72:40
                                         // mir::Constant
                                         // + span: cita-auth/src/history.rs:72:26: 72:32
                                         // + literal: Const { ty: for<'a> fn(&'a mut HashSet<u64>, u64) -> bool {HashSet::<u64>::insert}, val: Value(<ZST>) }
    }

    bb26: {
        _46 = const true;                // scope 0 at cita-auth/src/history.rs:76:27: 76:31
        _49 = ((*_1).2: u64);            // scope 5 at cita-auth/src/history.rs:77:18: 77:33
        _50 = ((*_1).1: u64);            // scope 5 at cita-auth/src/history.rs:77:35: 77:50
        _48 = std::ops::Range::<u64> { start: move _49, end: move _50 }; // scope 5 at cita-auth/src/history.rs:77:18: 77:50
        _47 = <std::ops::Range<u64> as IntoIterator>::into_iter(move _48) -> bb27; // scope 5 at cita-auth/src/history.rs:77:18: 77:50
                                         // mir::Constant
                                         // + span: cita-auth/src/history.rs:77:18: 77:50
                                         // + literal: Const { ty: fn(std::ops::Range<u64>) -> <std::ops::Range<u64> as IntoIterator>::IntoIter {<std::ops::Range<u64> as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb27: {
        _51 = move _47;                  // scope 5 at cita-auth/src/history.rs:77:18: 77:50
        goto -> bb28;                    // scope 6 at cita-auth/src/history.rs:77:9: 82:10
    }

    bb28: {
        _53 = &mut _51;                  // scope 6 at cita-auth/src/history.rs:77:18: 77:50
        _52 = <std::ops::Range<u64> as Iterator>::next(_53) -> bb29; // scope 6 at cita-auth/src/history.rs:77:18: 77:50
                                         // mir::Constant
                                         // + span: cita-auth/src/history.rs:77:18: 77:50
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::ops::Range<u64>) -> std::option::Option<<std::ops::Range<u64> as Iterator>::Item> {<std::ops::Range<u64> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb29: {
        _54 = discriminant(_52);         // scope 6 at cita-auth/src/history.rs:77:18: 77:50
        switchInt(move _54) -> [0: bb34, 1: bb30, otherwise: bb31]; // scope 6 at cita-auth/src/history.rs:77:18: 77:50
    }

    bb30: {
        _55 = ((_52 as Some).0: u64);    // scope 6 at cita-auth/src/history.rs:77:13: 77:14
        _58 = &((*_1).0: std::collections::HashSet<u64>); // scope 7 at cita-auth/src/history.rs:78:17: 78:42
        _59 = &_55;                      // scope 7 at cita-auth/src/history.rs:78:39: 78:41
        _57 = HashSet::<u64>::contains::<u64>(move _58, _59) -> bb32; // scope 7 at cita-auth/src/history.rs:78:17: 78:42
                                         // mir::Constant
                                         // + span: cita-auth/src/history.rs:78:30: 78:38
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a HashSet<u64>, &'b u64) -> bool {HashSet::<u64>::contains::<u64>}, val: Value(<ZST>) }
    }

    bb31: {
        unreachable;                     // scope 6 at cita-auth/src/history.rs:77:18: 77:50
    }

    bb32: {
        _56 = Not(move _57);             // scope 7 at cita-auth/src/history.rs:78:16: 78:42
        switchInt(move _56) -> [0: bb28, otherwise: bb33]; // scope 7 at cita-auth/src/history.rs:78:16: 78:42
    }

    bb33: {
        _46 = const false;               // scope 7 at cita-auth/src/history.rs:79:17: 79:32
        goto -> bb34;                    // scope 6 at no-location
    }

    bb34: {
        _60 = _46;                       // scope 5 at cita-auth/src/history.rs:83:24: 83:31
        ((*_1).3: bool) = move _60;      // scope 5 at cita-auth/src/history.rs:83:9: 83:31
        goto -> bb35;                    // scope 0 at cita-auth/src/history.rs:84:6: 84:6
    }

    bb35: {
        return;                          // scope 0 at cita-auth/src/history.rs:84:6: 84:6
    }
}

promoted[0] in history::<impl at cita-auth/src/history.rs:28:1: 28:20>::update_height: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/history.rs:51:13: 55:14
    let mut _7: &str;                    // in scope 0 at cita-auth/src/history.rs:51:13: 55:14

    bb0: {
        _3 = const "cita_auth::history"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth::history"; // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/history.rs"; // scope 0 at cita-auth/src/history.rs:51:13: 55:14
                                         // mir::Constant
                                         // + span: cita-auth/src/history.rs:51:13: 55:14
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/history.rs:51:13: 55:14
        _1 = (move _2, move _4, move _6, const 51_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in history::<impl at cita-auth/src/history.rs:28:1: 28:20>::update_height: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at cita-auth/src/history.rs:52:17: 52:59
    let mut _1: [&str; 2];               // in scope 0 at cita-auth/src/history.rs:52:17: 52:59

    bb0: {
        _1 = [const "height is small than min_height: ", const " < "]; // scope 0 at cita-auth/src/history.rs:52:17: 52:59
                                         // mir::Constant
                                         // + span: cita-auth/src/history.rs:52:17: 52:59
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: cita-auth/src/history.rs:52:17: 52:59
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/history.rs:52:17: 52:59
        return;                          // scope 0 at cita-auth/src/history.rs:52:17: 52:59
    }
}

promoted[2] in history::<impl at cita-auth/src/history.rs:28:1: 28:20>::update_height: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

fn history::<impl at cita-auth/src/history.rs:28:1: 28:20>::next_height(_1: &HistoryHeights) -> u64 {
    debug self => _1;                    // in scope 0 at cita-auth/src/history.rs:86:24: 86:29
    let mut _0: u64;                     // return place in scope 0 at cita-auth/src/history.rs:86:34: 86:37
    let mut _2: u64;                     // in scope 0 at cita-auth/src/history.rs:87:9: 87:24
    let mut _3: (u64, bool);             // in scope 0 at cita-auth/src/history.rs:87:9: 87:28

    bb0: {
        _2 = ((*_1).1: u64);             // scope 0 at cita-auth/src/history.rs:87:9: 87:24
        _3 = CheckedAdd(_2, const 1_u64); // scope 0 at cita-auth/src/history.rs:87:9: 87:28
        assert(!move (_3.1: bool), "attempt to compute `{} + {}`, which would overflow", move _2, const 1_u64) -> bb1; // scope 0 at cita-auth/src/history.rs:87:9: 87:28
    }

    bb1: {
        _0 = move (_3.0: u64);           // scope 0 at cita-auth/src/history.rs:87:9: 87:28
        return;                          // scope 0 at cita-auth/src/history.rs:88:6: 88:6
    }
}

fn history::<impl at cita-auth/src/history.rs:28:1: 28:20>::is_init(_1: &HistoryHeights) -> bool {
    debug self => _1;                    // in scope 0 at cita-auth/src/history.rs:90:20: 90:25
    let mut _0: bool;                    // return place in scope 0 at cita-auth/src/history.rs:90:30: 90:34

    bb0: {
        _0 = ((*_1).3: bool);            // scope 0 at cita-auth/src/history.rs:91:9: 91:21
        return;                          // scope 0 at cita-auth/src/history.rs:92:6: 92:6
    }
}

fn history::<impl at cita-auth/src/history.rs:28:1: 28:20>::max_height(_1: &HistoryHeights) -> u64 {
    debug self => _1;                    // in scope 0 at cita-auth/src/history.rs:94:23: 94:28
    let mut _0: u64;                     // return place in scope 0 at cita-auth/src/history.rs:94:33: 94:36

    bb0: {
        _0 = ((*_1).1: u64);             // scope 0 at cita-auth/src/history.rs:95:9: 95:24
        return;                          // scope 0 at cita-auth/src/history.rs:96:6: 96:6
    }
}

fn history::<impl at cita-auth/src/history.rs:28:1: 28:20>::min_height(_1: &HistoryHeights) -> u64 {
    debug self => _1;                    // in scope 0 at cita-auth/src/history.rs:98:23: 98:28
    let mut _0: u64;                     // return place in scope 0 at cita-auth/src/history.rs:98:33: 98:36

    bb0: {
        _0 = ((*_1).2: u64);             // scope 0 at cita-auth/src/history.rs:99:9: 99:24
        return;                          // scope 0 at cita-auth/src/history.rs:100:6: 100:6
    }
}

fn history::<impl at cita-auth/src/history.rs:28:1: 28:20>::is_too_frequent(_1: &HistoryHeights) -> bool {
    debug self => _1;                    // in scope 0 at cita-auth/src/history.rs:103:28: 103:33
    let mut _0: bool;                    // return place in scope 0 at cita-auth/src/history.rs:103:38: 103:42
    let mut _2: u64;                     // in scope 0 at cita-auth/src/history.rs:104:9: 104:41
    let _3: &std::time::Duration;        // in scope 0 at cita-auth/src/history.rs:104:29: 104:40
    let _4: std::time::Duration;         // in scope 0 at cita-auth/src/history.rs:104:30: 104:40
    let mut _5: u64;                     // in scope 0 at cita-auth/src/history.rs:104:44: 104:70
    let mut _6: u64;                     // in scope 0 at cita-auth/src/history.rs:104:44: 104:63
    let mut _7: (u64, bool);             // in scope 0 at cita-auth/src/history.rs:104:44: 104:70

    bb0: {
        _4 = unix_now() -> bb1;          // scope 0 at cita-auth/src/history.rs:104:30: 104:40
                                         // mir::Constant
                                         // + span: cita-auth/src/history.rs:104:30: 104:38
                                         // + literal: Const { ty: fn() -> Duration {unix_now}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = &_4;                        // scope 0 at cita-auth/src/history.rs:104:29: 104:40
        _2 = <Duration as AsMillis>::as_millis(_3) -> bb2; // scope 0 at cita-auth/src/history.rs:104:9: 104:41
                                         // mir::Constant
                                         // + span: cita-auth/src/history.rs:104:9: 104:28
                                         // + literal: Const { ty: for<'a> fn(&'a Duration) -> u64 {<Duration as AsMillis>::as_millis}, val: Value(<ZST>) }
    }

    bb2: {
        _6 = ((*_1).4: u64);             // scope 0 at cita-auth/src/history.rs:104:44: 104:63
        _7 = CheckedAdd(_6, const 3000_u64); // scope 0 at cita-auth/src/history.rs:104:44: 104:70
        assert(!move (_7.1: bool), "attempt to compute `{} + {}`, which would overflow", move _6, const 3000_u64) -> bb3; // scope 0 at cita-auth/src/history.rs:104:44: 104:70
    }

    bb3: {
        _5 = move (_7.0: u64);           // scope 0 at cita-auth/src/history.rs:104:44: 104:70
        _0 = Lt(move _2, move _5);       // scope 0 at cita-auth/src/history.rs:104:9: 104:70
        return;                          // scope 0 at cita-auth/src/history.rs:105:6: 105:6
    }
}

fn history::<impl at cita-auth/src/history.rs:28:1: 28:20>::update_time_stamp(_1: &mut HistoryHeights) -> () {
    debug self => _1;                    // in scope 0 at cita-auth/src/history.rs:107:30: 107:39
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/history.rs:107:41: 107:41
    let mut _2: u64;                     // in scope 0 at cita-auth/src/history.rs:109:31: 109:63
    let _3: &std::time::Duration;        // in scope 0 at cita-auth/src/history.rs:109:51: 109:62
    let _4: std::time::Duration;         // in scope 0 at cita-auth/src/history.rs:109:52: 109:62

    bb0: {
        _4 = unix_now() -> bb1;          // scope 0 at cita-auth/src/history.rs:109:52: 109:62
                                         // mir::Constant
                                         // + span: cita-auth/src/history.rs:109:52: 109:60
                                         // + literal: Const { ty: fn() -> Duration {unix_now}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = &_4;                        // scope 0 at cita-auth/src/history.rs:109:51: 109:62
        _2 = <Duration as AsMillis>::as_millis(_3) -> bb2; // scope 0 at cita-auth/src/history.rs:109:31: 109:63
                                         // mir::Constant
                                         // + span: cita-auth/src/history.rs:109:31: 109:50
                                         // + literal: Const { ty: for<'a> fn(&'a Duration) -> u64 {<Duration as AsMillis>::as_millis}, val: Value(<ZST>) }
    }

    bb2: {
        ((*_1).4: u64) = move _2;        // scope 0 at cita-auth/src/history.rs:109:9: 109:63
        return;                          // scope 0 at cita-auth/src/history.rs:110:6: 110:6
    }
}

fn transaction_verify::<impl at cita-auth/src/transaction_verify.rs:17:10: 17:15>::fmt(_1: &transaction_verify::Error, _2: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at cita-auth/src/transaction_verify.rs:17:10: 17:15
    debug f => _2;                       // in scope 0 at cita-auth/src/transaction_verify.rs:17:10: 17:15
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at cita-auth/src/transaction_verify.rs:17:10: 17:15
    let mut _3: &str;                    // in scope 0 at cita-auth/src/transaction_verify.rs:17:10: 17:15
    let mut _4: isize;                   // in scope 0 at cita-auth/src/transaction_verify.rs:17:10: 17:15
    let _5: &str;                        // in scope 0 at cita-auth/src/transaction_verify.rs:17:10: 17:15
    let _6: &str;                        // in scope 0 at cita-auth/src/transaction_verify.rs:17:10: 17:15
    let _7: &str;                        // in scope 0 at cita-auth/src/transaction_verify.rs:17:10: 17:15
    let _8: &str;                        // in scope 0 at cita-auth/src/transaction_verify.rs:17:10: 17:15
    let _9: &str;                        // in scope 0 at cita-auth/src/transaction_verify.rs:17:10: 17:15
    let _10: &str;                       // in scope 0 at cita-auth/src/transaction_verify.rs:17:10: 17:15
    let _11: &str;                       // in scope 0 at cita-auth/src/transaction_verify.rs:17:10: 17:15
    let _12: &str;                       // in scope 0 at cita-auth/src/transaction_verify.rs:17:10: 17:15
    let _13: &str;                       // in scope 0 at cita-auth/src/transaction_verify.rs:17:10: 17:15
    let _14: &str;                       // in scope 0 at cita-auth/src/transaction_verify.rs:17:10: 17:15
    let _15: &str;                       // in scope 0 at cita-auth/src/transaction_verify.rs:17:10: 17:15

    bb0: {
        _4 = discriminant((*_1));        // scope 0 at cita-auth/src/transaction_verify.rs:17:10: 17:15
        switchInt(move _4) -> [0: bb3, 1: bb4, 2: bb5, 3: bb6, 4: bb7, 5: bb8, 6: bb9, 7: bb10, 8: bb11, 9: bb12, 10: bb1, otherwise: bb2]; // scope 0 at cita-auth/src/transaction_verify.rs:17:10: 17:15
    }

    bb1: {
        _15 = const "InvalidVersion";    // scope 0 at cita-auth/src/transaction_verify.rs:17:10: 17:15
                                         // mir::Constant
                                         // + span: cita-auth/src/transaction_verify.rs:17:10: 17:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _3 = _15;                        // scope 0 at cita-auth/src/transaction_verify.rs:17:10: 17:15
        goto -> bb13;                    // scope 0 at cita-auth/src/transaction_verify.rs:17:14: 17:15
    }

    bb2: {
        unreachable;                     // scope 0 at cita-auth/src/transaction_verify.rs:17:10: 17:15
    }

    bb3: {
        _5 = const "InvalidNonce";       // scope 0 at cita-auth/src/transaction_verify.rs:17:10: 17:15
                                         // mir::Constant
                                         // + span: cita-auth/src/transaction_verify.rs:17:10: 17:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _3 = _5;                         // scope 0 at cita-auth/src/transaction_verify.rs:17:10: 17:15
        goto -> bb13;                    // scope 0 at cita-auth/src/transaction_verify.rs:17:14: 17:15
    }

    bb4: {
        _6 = const "Dup";                // scope 0 at cita-auth/src/transaction_verify.rs:17:10: 17:15
                                         // mir::Constant
                                         // + span: cita-auth/src/transaction_verify.rs:17:10: 17:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _3 = _6;                         // scope 0 at cita-auth/src/transaction_verify.rs:17:10: 17:15
        goto -> bb13;                    // scope 0 at cita-auth/src/transaction_verify.rs:17:14: 17:15
    }

    bb5: {
        _7 = const "InvalidUntilBlock";  // scope 0 at cita-auth/src/transaction_verify.rs:17:10: 17:15
                                         // mir::Constant
                                         // + span: cita-auth/src/transaction_verify.rs:17:10: 17:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _3 = _7;                         // scope 0 at cita-auth/src/transaction_verify.rs:17:10: 17:15
        goto -> bb13;                    // scope 0 at cita-auth/src/transaction_verify.rs:17:14: 17:15
    }

    bb6: {
        _8 = const "BadSig";             // scope 0 at cita-auth/src/transaction_verify.rs:17:10: 17:15
                                         // mir::Constant
                                         // + span: cita-auth/src/transaction_verify.rs:17:10: 17:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _3 = _8;                         // scope 0 at cita-auth/src/transaction_verify.rs:17:10: 17:15
        goto -> bb13;                    // scope 0 at cita-auth/src/transaction_verify.rs:17:14: 17:15
    }

    bb7: {
        _9 = const "NotReady";           // scope 0 at cita-auth/src/transaction_verify.rs:17:10: 17:15
                                         // mir::Constant
                                         // + span: cita-auth/src/transaction_verify.rs:17:10: 17:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _3 = _9;                         // scope 0 at cita-auth/src/transaction_verify.rs:17:10: 17:15
        goto -> bb13;                    // scope 0 at cita-auth/src/transaction_verify.rs:17:14: 17:15
    }

    bb8: {
        _10 = const "Busy";              // scope 0 at cita-auth/src/transaction_verify.rs:17:10: 17:15
                                         // mir::Constant
                                         // + span: cita-auth/src/transaction_verify.rs:17:10: 17:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _3 = _10;                        // scope 0 at cita-auth/src/transaction_verify.rs:17:10: 17:15
        goto -> bb13;                    // scope 0 at cita-auth/src/transaction_verify.rs:17:14: 17:15
    }

    bb9: {
        _11 = const "BadChainId";        // scope 0 at cita-auth/src/transaction_verify.rs:17:10: 17:15
                                         // mir::Constant
                                         // + span: cita-auth/src/transaction_verify.rs:17:10: 17:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _3 = _11;                        // scope 0 at cita-auth/src/transaction_verify.rs:17:10: 17:15
        goto -> bb13;                    // scope 0 at cita-auth/src/transaction_verify.rs:17:14: 17:15
    }

    bb10: {
        _12 = const "QuotaNotEnough";    // scope 0 at cita-auth/src/transaction_verify.rs:17:10: 17:15
                                         // mir::Constant
                                         // + span: cita-auth/src/transaction_verify.rs:17:10: 17:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _3 = _12;                        // scope 0 at cita-auth/src/transaction_verify.rs:17:10: 17:15
        goto -> bb13;                    // scope 0 at cita-auth/src/transaction_verify.rs:17:14: 17:15
    }

    bb11: {
        _13 = const "Forbidden";         // scope 0 at cita-auth/src/transaction_verify.rs:17:10: 17:15
                                         // mir::Constant
                                         // + span: cita-auth/src/transaction_verify.rs:17:10: 17:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _3 = _13;                        // scope 0 at cita-auth/src/transaction_verify.rs:17:10: 17:15
        goto -> bb13;                    // scope 0 at cita-auth/src/transaction_verify.rs:17:14: 17:15
    }

    bb12: {
        _14 = const "InvalidValue";      // scope 0 at cita-auth/src/transaction_verify.rs:17:10: 17:15
                                         // mir::Constant
                                         // + span: cita-auth/src/transaction_verify.rs:17:10: 17:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _3 = _14;                        // scope 0 at cita-auth/src/transaction_verify.rs:17:10: 17:15
        goto -> bb13;                    // scope 0 at cita-auth/src/transaction_verify.rs:17:14: 17:15
    }

    bb13: {
        _0 = std::fmt::Formatter::<'_>::write_str(_2, move _3) -> bb14; // scope 0 at cita-auth/src/transaction_verify.rs:17:10: 17:15
                                         // mir::Constant
                                         // + span: cita-auth/src/transaction_verify.rs:17:10: 17:15
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut std::fmt::Formatter<'_>, &'b str) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::write_str}, val: Value(<ZST>) }
    }

    bb14: {
        return;                          // scope 0 at cita-auth/src/transaction_verify.rs:17:15: 17:15
    }
}

fn transaction_verify::<impl at cita-auth/src/transaction_verify.rs:17:17: 17:26>::eq(_1: &transaction_verify::Error, _2: &transaction_verify::Error) -> bool {
    debug self => _1;                    // in scope 0 at cita-auth/src/transaction_verify.rs:17:17: 17:26
    debug other => _2;                   // in scope 0 at cita-auth/src/transaction_verify.rs:17:17: 17:26
    let mut _0: bool;                    // return place in scope 0 at cita-auth/src/transaction_verify.rs:17:17: 17:26
    let _3: isize;                       // in scope 0 at cita-auth/src/transaction_verify.rs:17:17: 17:26
    scope 1 {
        debug __self_tag => _3;          // in scope 1 at cita-auth/src/transaction_verify.rs:17:17: 17:26
        let _4: isize;                   // in scope 1 at cita-auth/src/transaction_verify.rs:17:17: 17:26
        scope 2 {
            debug __arg1_tag => _4;      // in scope 2 at cita-auth/src/transaction_verify.rs:17:17: 17:26
        }
    }

    bb0: {
        _3 = discriminant((*_1));        // scope 0 at cita-auth/src/transaction_verify.rs:17:17: 17:26
        _4 = discriminant((*_2));        // scope 1 at cita-auth/src/transaction_verify.rs:17:17: 17:26
        _0 = Eq(_3, _4);                 // scope 2 at cita-auth/src/transaction_verify.rs:17:17: 17:26
        return;                          // scope 0 at cita-auth/src/transaction_verify.rs:17:26: 17:26
    }
}

fn transaction_verify::<impl at cita-auth/src/transaction_verify.rs:33:1: 33:28>::fmt(_1: &transaction_verify::Error, _2: &mut std::fmt::Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;                    // in scope 0 at cita-auth/src/transaction_verify.rs:34:12: 34:17
    debug f => _2;                       // in scope 0 at cita-auth/src/transaction_verify.rs:34:19: 34:20
    let mut _0: std::result::Result<(), std::fmt::Error>; // return place in scope 0 at cita-auth/src/transaction_verify.rs:34:46: 34:57
    let mut _3: isize;                   // in scope 0 at cita-auth/src/transaction_verify.rs:37:13: 37:25
    let mut _4: std::fmt::Arguments<'_>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
    let mut _5: &[&str];                 // in scope 0 at cita-auth/src/transaction_verify.rs:37:39: 37:53
    let mut _6: std::fmt::Arguments<'_>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
    let mut _7: &[&str];                 // in scope 0 at cita-auth/src/transaction_verify.rs:38:30: 38:35
    let mut _8: std::fmt::Arguments<'_>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
    let mut _9: &[&str];                 // in scope 0 at cita-auth/src/transaction_verify.rs:39:44: 39:63
    let mut _10: std::fmt::Arguments<'_>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
    let mut _11: &[&str];                // in scope 0 at cita-auth/src/transaction_verify.rs:40:33: 40:41
    let mut _12: std::fmt::Arguments<'_>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
    let mut _13: &[&str];                // in scope 0 at cita-auth/src/transaction_verify.rs:41:35: 41:45
    let mut _14: std::fmt::Arguments<'_>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
    let mut _15: &[&str];                // in scope 0 at cita-auth/src/transaction_verify.rs:42:31: 42:37
    let mut _16: std::fmt::Arguments<'_>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
    let mut _17: &[&str];                // in scope 0 at cita-auth/src/transaction_verify.rs:43:37: 43:49
    let mut _18: std::fmt::Arguments<'_>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
    let mut _19: &[&str];                // in scope 0 at cita-auth/src/transaction_verify.rs:44:41: 44:57
    let mut _20: std::fmt::Arguments<'_>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
    let mut _21: &[&str];                // in scope 0 at cita-auth/src/transaction_verify.rs:45:36: 45:47
    let mut _22: std::fmt::Arguments<'_>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
    let mut _23: &[&str];                // in scope 0 at cita-auth/src/transaction_verify.rs:46:39: 46:53
    let mut _24: std::fmt::Arguments<'_>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
    let mut _25: &[&str];                // in scope 0 at cita-auth/src/transaction_verify.rs:47:41: 47:57
    let mut _26: &[&str; 1];             // in scope 0 at cita-auth/src/transaction_verify.rs:37:39: 37:53
    let mut _27: &[&str; 1];             // in scope 0 at cita-auth/src/transaction_verify.rs:38:30: 38:35
    let mut _28: &[&str; 1];             // in scope 0 at cita-auth/src/transaction_verify.rs:39:44: 39:63
    let mut _29: &[&str; 1];             // in scope 0 at cita-auth/src/transaction_verify.rs:40:33: 40:41
    let mut _30: &[&str; 1];             // in scope 0 at cita-auth/src/transaction_verify.rs:41:35: 41:45
    let mut _31: &[&str; 1];             // in scope 0 at cita-auth/src/transaction_verify.rs:42:31: 42:37
    let mut _32: &[&str; 1];             // in scope 0 at cita-auth/src/transaction_verify.rs:43:37: 43:49
    let mut _33: &[&str; 1];             // in scope 0 at cita-auth/src/transaction_verify.rs:44:41: 44:57
    let mut _34: &[&str; 1];             // in scope 0 at cita-auth/src/transaction_verify.rs:45:36: 45:47
    let mut _35: &[&str; 1];             // in scope 0 at cita-auth/src/transaction_verify.rs:46:39: 46:53
    let mut _36: &[&str; 1];             // in scope 0 at cita-auth/src/transaction_verify.rs:47:41: 47:57

    bb0: {
        _3 = discriminant((*_1));        // scope 0 at cita-auth/src/transaction_verify.rs:36:15: 36:20
        switchInt(move _3) -> [0: bb3, 1: bb5, 2: bb7, 3: bb9, 4: bb11, 5: bb13, 6: bb15, 7: bb17, 8: bb19, 9: bb21, 10: bb1, otherwise: bb2]; // scope 0 at cita-auth/src/transaction_verify.rs:36:9: 36:20
    }

    bb1: {
        _36 = const _;                   // scope 0 at cita-auth/src/transaction_verify.rs:47:41: 47:57
                                         // mir::Constant
                                         // + span: cita-auth/src/transaction_verify.rs:47:41: 47:57
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(<transaction_verify::Error as std::fmt::Display>::fmt, [], Some(promoted[10])) }
        _25 = _36 as &[&str] (Pointer(Unsize)); // scope 0 at cita-auth/src/transaction_verify.rs:47:41: 47:57
        _24 = Arguments::<'_>::new_const(move _25) -> bb23; // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
                                         // + user_ty: UserType(10)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb2: {
        unreachable;                     // scope 0 at cita-auth/src/transaction_verify.rs:36:15: 36:20
    }

    bb3: {
        _26 = const _;                   // scope 0 at cita-auth/src/transaction_verify.rs:37:39: 37:53
                                         // mir::Constant
                                         // + span: cita-auth/src/transaction_verify.rs:37:39: 37:53
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(<transaction_verify::Error as std::fmt::Display>::fmt, [], Some(promoted[0])) }
        _5 = _26 as &[&str] (Pointer(Unsize)); // scope 0 at cita-auth/src/transaction_verify.rs:37:39: 37:53
        _4 = Arguments::<'_>::new_const(move _5) -> bb4; // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb4: {
        _0 = std::fmt::Formatter::<'_>::write_fmt(_2, move _4) -> bb24; // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:9: 520:55
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:14: 520:23
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut std::fmt::Formatter<'_>, Arguments<'b>) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::write_fmt}, val: Value(<ZST>) }
    }

    bb5: {
        _27 = const _;                   // scope 0 at cita-auth/src/transaction_verify.rs:38:30: 38:35
                                         // mir::Constant
                                         // + span: cita-auth/src/transaction_verify.rs:38:30: 38:35
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(<transaction_verify::Error as std::fmt::Display>::fmt, [], Some(promoted[1])) }
        _7 = _27 as &[&str] (Pointer(Unsize)); // scope 0 at cita-auth/src/transaction_verify.rs:38:30: 38:35
        _6 = Arguments::<'_>::new_const(move _7) -> bb6; // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb6: {
        _0 = std::fmt::Formatter::<'_>::write_fmt(_2, move _6) -> bb24; // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:9: 520:55
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:14: 520:23
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut std::fmt::Formatter<'_>, Arguments<'b>) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::write_fmt}, val: Value(<ZST>) }
    }

    bb7: {
        _28 = const _;                   // scope 0 at cita-auth/src/transaction_verify.rs:39:44: 39:63
                                         // mir::Constant
                                         // + span: cita-auth/src/transaction_verify.rs:39:44: 39:63
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(<transaction_verify::Error as std::fmt::Display>::fmt, [], Some(promoted[2])) }
        _9 = _28 as &[&str] (Pointer(Unsize)); // scope 0 at cita-auth/src/transaction_verify.rs:39:44: 39:63
        _8 = Arguments::<'_>::new_const(move _9) -> bb8; // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb8: {
        _0 = std::fmt::Formatter::<'_>::write_fmt(_2, move _8) -> bb24; // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:9: 520:55
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:14: 520:23
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut std::fmt::Formatter<'_>, Arguments<'b>) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::write_fmt}, val: Value(<ZST>) }
    }

    bb9: {
        _29 = const _;                   // scope 0 at cita-auth/src/transaction_verify.rs:40:33: 40:41
                                         // mir::Constant
                                         // + span: cita-auth/src/transaction_verify.rs:40:33: 40:41
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(<transaction_verify::Error as std::fmt::Display>::fmt, [], Some(promoted[3])) }
        _11 = _29 as &[&str] (Pointer(Unsize)); // scope 0 at cita-auth/src/transaction_verify.rs:40:33: 40:41
        _10 = Arguments::<'_>::new_const(move _11) -> bb10; // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb10: {
        _0 = std::fmt::Formatter::<'_>::write_fmt(_2, move _10) -> bb24; // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:9: 520:55
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:14: 520:23
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut std::fmt::Formatter<'_>, Arguments<'b>) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::write_fmt}, val: Value(<ZST>) }
    }

    bb11: {
        _30 = const _;                   // scope 0 at cita-auth/src/transaction_verify.rs:41:35: 41:45
                                         // mir::Constant
                                         // + span: cita-auth/src/transaction_verify.rs:41:35: 41:45
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(<transaction_verify::Error as std::fmt::Display>::fmt, [], Some(promoted[4])) }
        _13 = _30 as &[&str] (Pointer(Unsize)); // scope 0 at cita-auth/src/transaction_verify.rs:41:35: 41:45
        _12 = Arguments::<'_>::new_const(move _13) -> bb12; // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb12: {
        _0 = std::fmt::Formatter::<'_>::write_fmt(_2, move _12) -> bb24; // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:9: 520:55
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:14: 520:23
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut std::fmt::Formatter<'_>, Arguments<'b>) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::write_fmt}, val: Value(<ZST>) }
    }

    bb13: {
        _31 = const _;                   // scope 0 at cita-auth/src/transaction_verify.rs:42:31: 42:37
                                         // mir::Constant
                                         // + span: cita-auth/src/transaction_verify.rs:42:31: 42:37
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(<transaction_verify::Error as std::fmt::Display>::fmt, [], Some(promoted[5])) }
        _15 = _31 as &[&str] (Pointer(Unsize)); // scope 0 at cita-auth/src/transaction_verify.rs:42:31: 42:37
        _14 = Arguments::<'_>::new_const(move _15) -> bb14; // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb14: {
        _0 = std::fmt::Formatter::<'_>::write_fmt(_2, move _14) -> bb24; // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:9: 520:55
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:14: 520:23
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut std::fmt::Formatter<'_>, Arguments<'b>) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::write_fmt}, val: Value(<ZST>) }
    }

    bb15: {
        _32 = const _;                   // scope 0 at cita-auth/src/transaction_verify.rs:43:37: 43:49
                                         // mir::Constant
                                         // + span: cita-auth/src/transaction_verify.rs:43:37: 43:49
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(<transaction_verify::Error as std::fmt::Display>::fmt, [], Some(promoted[6])) }
        _17 = _32 as &[&str] (Pointer(Unsize)); // scope 0 at cita-auth/src/transaction_verify.rs:43:37: 43:49
        _16 = Arguments::<'_>::new_const(move _17) -> bb16; // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb16: {
        _0 = std::fmt::Formatter::<'_>::write_fmt(_2, move _16) -> bb24; // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:9: 520:55
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:14: 520:23
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut std::fmt::Formatter<'_>, Arguments<'b>) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::write_fmt}, val: Value(<ZST>) }
    }

    bb17: {
        _33 = const _;                   // scope 0 at cita-auth/src/transaction_verify.rs:44:41: 44:57
                                         // mir::Constant
                                         // + span: cita-auth/src/transaction_verify.rs:44:41: 44:57
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(<transaction_verify::Error as std::fmt::Display>::fmt, [], Some(promoted[7])) }
        _19 = _33 as &[&str] (Pointer(Unsize)); // scope 0 at cita-auth/src/transaction_verify.rs:44:41: 44:57
        _18 = Arguments::<'_>::new_const(move _19) -> bb18; // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb18: {
        _0 = std::fmt::Formatter::<'_>::write_fmt(_2, move _18) -> bb24; // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:9: 520:55
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:14: 520:23
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut std::fmt::Formatter<'_>, Arguments<'b>) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::write_fmt}, val: Value(<ZST>) }
    }

    bb19: {
        _34 = const _;                   // scope 0 at cita-auth/src/transaction_verify.rs:45:36: 45:47
                                         // mir::Constant
                                         // + span: cita-auth/src/transaction_verify.rs:45:36: 45:47
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(<transaction_verify::Error as std::fmt::Display>::fmt, [], Some(promoted[8])) }
        _21 = _34 as &[&str] (Pointer(Unsize)); // scope 0 at cita-auth/src/transaction_verify.rs:45:36: 45:47
        _20 = Arguments::<'_>::new_const(move _21) -> bb20; // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
                                         // + user_ty: UserType(8)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb20: {
        _0 = std::fmt::Formatter::<'_>::write_fmt(_2, move _20) -> bb24; // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:9: 520:55
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:14: 520:23
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut std::fmt::Formatter<'_>, Arguments<'b>) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::write_fmt}, val: Value(<ZST>) }
    }

    bb21: {
        _35 = const _;                   // scope 0 at cita-auth/src/transaction_verify.rs:46:39: 46:53
                                         // mir::Constant
                                         // + span: cita-auth/src/transaction_verify.rs:46:39: 46:53
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(<transaction_verify::Error as std::fmt::Display>::fmt, [], Some(promoted[9])) }
        _23 = _35 as &[&str] (Pointer(Unsize)); // scope 0 at cita-auth/src/transaction_verify.rs:46:39: 46:53
        _22 = Arguments::<'_>::new_const(move _23) -> bb22; // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:24: 520:54
                                         // + user_ty: UserType(9)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb22: {
        _0 = std::fmt::Formatter::<'_>::write_fmt(_2, move _22) -> bb24; // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:9: 520:55
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:14: 520:23
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut std::fmt::Formatter<'_>, Arguments<'b>) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::write_fmt}, val: Value(<ZST>) }
    }

    bb23: {
        _0 = std::fmt::Formatter::<'_>::write_fmt(_2, move _24) -> bb24; // scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:9: 520:55
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/core/src/macros/mod.rs:520:14: 520:23
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut std::fmt::Formatter<'_>, Arguments<'b>) -> Result<(), std::fmt::Error> {std::fmt::Formatter::<'_>::write_fmt}, val: Value(<ZST>) }
    }

    bb24: {
        return;                          // scope 0 at cita-auth/src/transaction_verify.rs:49:6: 49:6
    }
}

promoted[0] in transaction_verify::<impl at cita-auth/src/transaction_verify.rs:33:1: 33:28>::fmt: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/transaction_verify.rs:37:39: 37:53
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/transaction_verify.rs:37:39: 37:53

    bb0: {
        _1 = [const "InvalidNonce"];     // scope 0 at cita-auth/src/transaction_verify.rs:37:39: 37:53
                                         // mir::Constant
                                         // + span: cita-auth/src/transaction_verify.rs:37:39: 37:53
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/transaction_verify.rs:37:39: 37:53
        return;                          // scope 0 at cita-auth/src/transaction_verify.rs:37:39: 37:53
    }
}

promoted[1] in transaction_verify::<impl at cita-auth/src/transaction_verify.rs:33:1: 33:28>::fmt: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/transaction_verify.rs:38:30: 38:35
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/transaction_verify.rs:38:30: 38:35

    bb0: {
        _1 = [const "Dup"];              // scope 0 at cita-auth/src/transaction_verify.rs:38:30: 38:35
                                         // mir::Constant
                                         // + span: cita-auth/src/transaction_verify.rs:38:30: 38:35
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/transaction_verify.rs:38:30: 38:35
        return;                          // scope 0 at cita-auth/src/transaction_verify.rs:38:30: 38:35
    }
}

promoted[2] in transaction_verify::<impl at cita-auth/src/transaction_verify.rs:33:1: 33:28>::fmt: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/transaction_verify.rs:39:44: 39:63
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/transaction_verify.rs:39:44: 39:63

    bb0: {
        _1 = [const "InvalidUntilBlock"]; // scope 0 at cita-auth/src/transaction_verify.rs:39:44: 39:63
                                         // mir::Constant
                                         // + span: cita-auth/src/transaction_verify.rs:39:44: 39:63
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/transaction_verify.rs:39:44: 39:63
        return;                          // scope 0 at cita-auth/src/transaction_verify.rs:39:44: 39:63
    }
}

promoted[3] in transaction_verify::<impl at cita-auth/src/transaction_verify.rs:33:1: 33:28>::fmt: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/transaction_verify.rs:40:33: 40:41
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/transaction_verify.rs:40:33: 40:41

    bb0: {
        _1 = [const "BadSig"];           // scope 0 at cita-auth/src/transaction_verify.rs:40:33: 40:41
                                         // mir::Constant
                                         // + span: cita-auth/src/transaction_verify.rs:40:33: 40:41
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/transaction_verify.rs:40:33: 40:41
        return;                          // scope 0 at cita-auth/src/transaction_verify.rs:40:33: 40:41
    }
}

promoted[4] in transaction_verify::<impl at cita-auth/src/transaction_verify.rs:33:1: 33:28>::fmt: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/transaction_verify.rs:41:35: 41:45
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/transaction_verify.rs:41:35: 41:45

    bb0: {
        _1 = [const "NotReady"];         // scope 0 at cita-auth/src/transaction_verify.rs:41:35: 41:45
                                         // mir::Constant
                                         // + span: cita-auth/src/transaction_verify.rs:41:35: 41:45
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/transaction_verify.rs:41:35: 41:45
        return;                          // scope 0 at cita-auth/src/transaction_verify.rs:41:35: 41:45
    }
}

promoted[5] in transaction_verify::<impl at cita-auth/src/transaction_verify.rs:33:1: 33:28>::fmt: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/transaction_verify.rs:42:31: 42:37
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/transaction_verify.rs:42:31: 42:37

    bb0: {
        _1 = [const "Busy"];             // scope 0 at cita-auth/src/transaction_verify.rs:42:31: 42:37
                                         // mir::Constant
                                         // + span: cita-auth/src/transaction_verify.rs:42:31: 42:37
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/transaction_verify.rs:42:31: 42:37
        return;                          // scope 0 at cita-auth/src/transaction_verify.rs:42:31: 42:37
    }
}

promoted[6] in transaction_verify::<impl at cita-auth/src/transaction_verify.rs:33:1: 33:28>::fmt: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/transaction_verify.rs:43:37: 43:49
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/transaction_verify.rs:43:37: 43:49

    bb0: {
        _1 = [const "BadChainId"];       // scope 0 at cita-auth/src/transaction_verify.rs:43:37: 43:49
                                         // mir::Constant
                                         // + span: cita-auth/src/transaction_verify.rs:43:37: 43:49
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/transaction_verify.rs:43:37: 43:49
        return;                          // scope 0 at cita-auth/src/transaction_verify.rs:43:37: 43:49
    }
}

promoted[7] in transaction_verify::<impl at cita-auth/src/transaction_verify.rs:33:1: 33:28>::fmt: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/transaction_verify.rs:44:41: 44:57
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/transaction_verify.rs:44:41: 44:57

    bb0: {
        _1 = [const "QuotaNotEnough"];   // scope 0 at cita-auth/src/transaction_verify.rs:44:41: 44:57
                                         // mir::Constant
                                         // + span: cita-auth/src/transaction_verify.rs:44:41: 44:57
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/transaction_verify.rs:44:41: 44:57
        return;                          // scope 0 at cita-auth/src/transaction_verify.rs:44:41: 44:57
    }
}

promoted[8] in transaction_verify::<impl at cita-auth/src/transaction_verify.rs:33:1: 33:28>::fmt: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/transaction_verify.rs:45:36: 45:47
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/transaction_verify.rs:45:36: 45:47

    bb0: {
        _1 = [const "Forbidden"];        // scope 0 at cita-auth/src/transaction_verify.rs:45:36: 45:47
                                         // mir::Constant
                                         // + span: cita-auth/src/transaction_verify.rs:45:36: 45:47
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/transaction_verify.rs:45:36: 45:47
        return;                          // scope 0 at cita-auth/src/transaction_verify.rs:45:36: 45:47
    }
}

promoted[9] in transaction_verify::<impl at cita-auth/src/transaction_verify.rs:33:1: 33:28>::fmt: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/transaction_verify.rs:46:39: 46:53
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/transaction_verify.rs:46:39: 46:53

    bb0: {
        _1 = [const "InvalidValue"];     // scope 0 at cita-auth/src/transaction_verify.rs:46:39: 46:53
                                         // mir::Constant
                                         // + span: cita-auth/src/transaction_verify.rs:46:39: 46:53
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/transaction_verify.rs:46:39: 46:53
        return;                          // scope 0 at cita-auth/src/transaction_verify.rs:46:39: 46:53
    }
}

promoted[10] in transaction_verify::<impl at cita-auth/src/transaction_verify.rs:33:1: 33:28>::fmt: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/transaction_verify.rs:47:41: 47:57
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/transaction_verify.rs:47:41: 47:57

    bb0: {
        _1 = [const "InvalidVersion"];   // scope 0 at cita-auth/src/transaction_verify.rs:47:41: 47:57
                                         // mir::Constant
                                         // + span: cita-auth/src/transaction_verify.rs:47:41: 47:57
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/transaction_verify.rs:47:41: 47:57
        return;                          // scope 0 at cita-auth/src/transaction_verify.rs:47:41: 47:57
    }
}

fn txwal::<impl at cita-auth/src/txwal.rs:24:10: 24:15>::clone(_1: &TxWal) -> TxWal {
    debug self => _1;                    // in scope 0 at cita-auth/src/txwal.rs:24:10: 24:15
    let mut _0: txwal::TxWal;            // return place in scope 0 at cita-auth/src/txwal.rs:24:10: 24:15
    let mut _2: std::sync::Arc<dyn cita_database::Database>; // in scope 0 at cita-auth/src/txwal.rs:26:5: 26:26
    let mut _3: std::sync::Arc<dyn cita_database::Database>; // in scope 0 at cita-auth/src/txwal.rs:26:5: 26:26
    let _4: &std::sync::Arc<dyn cita_database::Database>; // in scope 0 at cita-auth/src/txwal.rs:26:5: 26:26

    bb0: {
        _4 = &((*_1).0: std::sync::Arc<dyn cita_database::Database>); // scope 0 at cita-auth/src/txwal.rs:26:5: 26:26
        _3 = <Arc<dyn Database> as Clone>::clone(_4) -> bb1; // scope 0 at cita-auth/src/txwal.rs:26:5: 26:26
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:26:5: 26:26
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<dyn Database>) -> Arc<dyn Database> {<Arc<dyn Database> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = move _3;                    // scope 0 at cita-auth/src/txwal.rs:26:5: 26:26
        _0 = TxWal { db: move _2 };      // scope 0 at cita-auth/src/txwal.rs:24:10: 24:15
        return;                          // scope 0 at cita-auth/src/txwal.rs:24:15: 24:15
    }
}

fn txwal::<impl at cita-auth/src/txwal.rs:29:1: 29:11>::new(_1: &str) -> TxWal {
    debug path => _1;                    // in scope 0 at cita-auth/src/txwal.rs:30:16: 30:20
    let mut _0: txwal::TxWal;            // return place in scope 0 at cita-auth/src/txwal.rs:30:31: 30:35
    let _2: std::string::String;         // in scope 0 at cita-auth/src/txwal.rs:31:13: 31:23
    let mut _3: std::string::String;     // in scope 0 at cita-auth/src/txwal.rs:31:26: 31:52
    let mut _6: std::result::Result<cita_database::RocksDB, cita_database::DatabaseError>; // in scope 0 at cita-auth/src/txwal.rs:34:18: 34:53
    let mut _7: &str;                    // in scope 0 at cita-auth/src/txwal.rs:34:32: 34:43
    let _8: &str;                        // in scope 0 at cita-auth/src/txwal.rs:34:32: 34:43
    let _9: &std::string::String;        // in scope 0 at cita-auth/src/txwal.rs:34:32: 34:43
    let _10: &cita_database::Config;     // in scope 0 at cita-auth/src/txwal.rs:34:45: 34:52
    let mut _11: std::sync::Arc<dyn cita_database::Database>; // in scope 0 at cita-auth/src/txwal.rs:35:21: 35:33
    let mut _12: std::sync::Arc<cita_database::RocksDB>; // in scope 0 at cita-auth/src/txwal.rs:35:21: 35:33
    let mut _13: cita_database::RocksDB; // in scope 0 at cita-auth/src/txwal.rs:35:30: 35:32
    scope 1 {
        debug nosql_path => _2;          // in scope 1 at cita-auth/src/txwal.rs:31:13: 31:23
        let _4: cita_database::Config;   // in scope 1 at cita-auth/src/txwal.rs:33:13: 33:19
        scope 2 {
            debug config => _4;          // in scope 2 at cita-auth/src/txwal.rs:33:13: 33:19
            let _5: cita_database::RocksDB; // in scope 2 at cita-auth/src/txwal.rs:34:13: 34:15
            scope 3 {
                debug db => _5;          // in scope 3 at cita-auth/src/txwal.rs:34:13: 34:15
            }
        }
    }

    bb0: {
        _3 = DataPath::root_node_path() -> bb1; // scope 0 at cita-auth/src/txwal.rs:31:26: 31:52
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:31:26: 31:50
                                         // + literal: Const { ty: fn() -> std::string::String {DataPath::root_node_path}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = <std::string::String as Add<&str>>::add(move _3, _1) -> bb2; // scope 0 at cita-auth/src/txwal.rs:31:26: 31:59
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:31:26: 31:59
                                         // + literal: Const { ty: fn(std::string::String, &str) -> <std::string::String as Add<&str>>::Output {<std::string::String as Add<&str>>::add}, val: Value(<ZST>) }
    }

    bb2: {
        _4 = cita_database::Config::with_category_num(const _) -> [return: bb3, unwind: bb9]; // scope 1 at cita-auth/src/txwal.rs:33:22: 33:60
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:33:22: 33:47
                                         // + literal: Const { ty: fn(std::option::Option<u32>) -> cita_database::Config {cita_database::Config::with_category_num}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:33:48: 33:59
                                         // + literal: Const { ty: std::option::Option<u32>, val: Unevaluated(NUM_COLUMNS, [], None) }
    }

    bb3: {
        _9 = &_2;                        // scope 2 at cita-auth/src/txwal.rs:34:32: 34:43
        _8 = <std::string::String as Deref>::deref(_9) -> [return: bb4, unwind: bb9]; // scope 2 at cita-auth/src/txwal.rs:34:32: 34:43
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:34:32: 34:43
                                         // + literal: Const { ty: for<'a> fn(&'a std::string::String) -> &'a <std::string::String as Deref>::Target {<std::string::String as Deref>::deref}, val: Value(<ZST>) }
    }

    bb4: {
        _7 = _8;                         // scope 2 at cita-auth/src/txwal.rs:34:32: 34:43
        _10 = &_4;                       // scope 2 at cita-auth/src/txwal.rs:34:45: 34:52
        _6 = RocksDB::open(move _7, _10) -> [return: bb5, unwind: bb9]; // scope 2 at cita-auth/src/txwal.rs:34:18: 34:53
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:34:18: 34:31
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a str, &'b cita_database::Config) -> Result<RocksDB, DatabaseError> {RocksDB::open}, val: Value(<ZST>) }
    }

    bb5: {
        _5 = Result::<RocksDB, DatabaseError>::unwrap(move _6) -> [return: bb6, unwind: bb9]; // scope 2 at cita-auth/src/txwal.rs:34:18: 34:62
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:34:54: 34:60
                                         // + literal: Const { ty: fn(Result<RocksDB, DatabaseError>) -> RocksDB {Result::<RocksDB, DatabaseError>::unwrap}, val: Value(<ZST>) }
    }

    bb6: {
        _13 = move _5;                   // scope 3 at cita-auth/src/txwal.rs:35:30: 35:32
        _12 = Arc::<RocksDB>::new(move _13) -> [return: bb7, unwind: bb9]; // scope 3 at cita-auth/src/txwal.rs:35:21: 35:33
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:35:21: 35:29
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(RocksDB) -> Arc<RocksDB> {Arc::<RocksDB>::new}, val: Value(<ZST>) }
    }

    bb7: {
        _11 = move _12 as std::sync::Arc<dyn cita_database::Database> (Pointer(Unsize)); // scope 3 at cita-auth/src/txwal.rs:35:21: 35:33
        _0 = TxWal { db: move _11 };     // scope 3 at cita-auth/src/txwal.rs:35:9: 35:35
        drop(_2) -> bb8;                 // scope 0 at cita-auth/src/txwal.rs:36:5: 36:6
    }

    bb8: {
        return;                          // scope 0 at cita-auth/src/txwal.rs:36:6: 36:6
    }

    bb9 (cleanup): {
        drop(_2) -> bb10;                // scope 0 at cita-auth/src/txwal.rs:36:5: 36:6
    }

    bb10 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/txwal.rs:30:5: 36:6
    }
}

fn txwal::<impl at cita-auth/src/txwal.rs:29:1: 29:11>::regenerate(_1: &mut TxWal, _2: &str) -> () {
    debug self => _1;                    // in scope 0 at cita-auth/src/txwal.rs:38:23: 38:32
    debug path => _2;                    // in scope 0 at cita-auth/src/txwal.rs:38:34: 38:38
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/txwal.rs:38:46: 38:46
    let _3: std::string::String;         // in scope 0 at cita-auth/src/txwal.rs:39:13: 39:23
    let mut _4: std::string::String;     // in scope 0 at cita-auth/src/txwal.rs:39:26: 39:52
    let mut _5: std::result::Result<(), cita_database::DatabaseError>; // in scope 0 at cita-auth/src/txwal.rs:40:17: 40:73
    let mut _6: &mut dyn cita_database::Database; // in scope 0 at cita-auth/src/txwal.rs:40:17: 40:73
    let mut _7: &mut dyn cita_database::Database; // in scope 0 at cita-auth/src/txwal.rs:40:17: 40:52
    let mut _8: std::option::Option<&mut dyn cita_database::Database>; // in scope 0 at cita-auth/src/txwal.rs:40:17: 40:43
    let mut _9: &mut std::sync::Arc<dyn cita_database::Database>; // in scope 0 at cita-auth/src/txwal.rs:40:30: 40:42
    let mut _10: &str;                   // in scope 0 at cita-auth/src/txwal.rs:40:61: 40:72
    let _11: &str;                       // in scope 0 at cita-auth/src/txwal.rs:40:61: 40:72
    let _12: &std::string::String;       // in scope 0 at cita-auth/src/txwal.rs:40:61: 40:72
    scope 1 {
        debug nosql_path => _3;          // in scope 1 at cita-auth/src/txwal.rs:39:13: 39:23
        scope 2 {
        }
    }

    bb0: {
        _4 = DataPath::root_node_path() -> bb1; // scope 0 at cita-auth/src/txwal.rs:39:26: 39:52
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:39:26: 39:50
                                         // + literal: Const { ty: fn() -> std::string::String {DataPath::root_node_path}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = <std::string::String as Add<&str>>::add(move _4, _2) -> bb2; // scope 0 at cita-auth/src/txwal.rs:39:26: 39:59
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:39:26: 39:59
                                         // + literal: Const { ty: fn(std::string::String, &str) -> <std::string::String as Add<&str>>::Output {<std::string::String as Add<&str>>::add}, val: Value(<ZST>) }
    }

    bb2: {
        _9 = &mut ((*_1).0: std::sync::Arc<dyn cita_database::Database>); // scope 1 at cita-auth/src/txwal.rs:40:30: 40:42
        _8 = Arc::<dyn Database>::get_mut(_9) -> [return: bb3, unwind: bb9]; // scope 1 at cita-auth/src/txwal.rs:40:17: 40:43
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:40:17: 40:29
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: for<'a> fn(&'a mut Arc<dyn Database>) -> std::option::Option<&'a mut dyn Database> {Arc::<dyn Database>::get_mut}, val: Value(<ZST>) }
    }

    bb3: {
        _7 = std::option::Option::<&mut dyn Database>::unwrap(move _8) -> [return: bb4, unwind: bb9]; // scope 1 at cita-auth/src/txwal.rs:40:17: 40:52
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:40:44: 40:50
                                         // + literal: Const { ty: fn(std::option::Option<&mut dyn Database>) -> &mut dyn Database {std::option::Option::<&mut dyn Database>::unwrap}, val: Value(<ZST>) }
    }

    bb4: {
        _6 = _7;                         // scope 1 at cita-auth/src/txwal.rs:40:17: 40:73
        _12 = &_3;                       // scope 1 at cita-auth/src/txwal.rs:40:61: 40:72
        _11 = <std::string::String as Deref>::deref(_12) -> [return: bb5, unwind: bb9]; // scope 1 at cita-auth/src/txwal.rs:40:61: 40:72
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:40:61: 40:72
                                         // + literal: Const { ty: for<'a> fn(&'a std::string::String) -> &'a <std::string::String as Deref>::Target {<std::string::String as Deref>::deref}, val: Value(<ZST>) }
    }

    bb5: {
        _10 = _11;                       // scope 1 at cita-auth/src/txwal.rs:40:61: 40:72
        _5 = <dyn Database as Database>::restore(move _6, move _10) -> [return: bb6, unwind: bb9]; // scope 1 at cita-auth/src/txwal.rs:40:17: 40:73
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:40:53: 40:60
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut dyn Database, &'b str) -> Result<(), DatabaseError> {<dyn Database as Database>::restore}, val: Value(<ZST>) }
    }

    bb6: {
        drop(_5) -> [return: bb7, unwind: bb9]; // scope 1 at cita-auth/src/txwal.rs:40:73: 40:74
    }

    bb7: {
        drop(_3) -> bb8;                 // scope 0 at cita-auth/src/txwal.rs:41:5: 41:6
    }

    bb8: {
        return;                          // scope 0 at cita-auth/src/txwal.rs:41:6: 41:6
    }

    bb9 (cleanup): {
        drop(_3) -> bb10;                // scope 0 at cita-auth/src/txwal.rs:41:5: 41:6
    }

    bb10 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/txwal.rs:38:5: 41:6
    }
}

fn txwal::<impl at cita-auth/src/txwal.rs:29:1: 29:11>::write(_1: &TxWal, _2: &SignedTransaction) -> () {
    debug self => _1;                    // in scope 0 at cita-auth/src/txwal.rs:43:18: 43:23
    debug tx => _2;                      // in scope 0 at cita-auth/src/txwal.rs:43:25: 43:27
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/txwal.rs:43:49: 43:49
    let _3: std::vec::Vec<u8>;           // in scope 0 at cita-auth/src/txwal.rs:45:13: 45:25
    let mut _4: std::result::Result<std::vec::Vec<u8>, libproto::TryIntoConvertError>; // in scope 0 at cita-auth/src/txwal.rs:45:37: 45:50
    let _5: ();                          // in scope 0 at cita-auth/src/txwal.rs:46:9: 48:33
    let mut _6: std::result::Result<(), cita_database::DatabaseError>; // in scope 0 at cita-auth/src/txwal.rs:46:9: 47:67
    let mut _7: &dyn cita_database::Database; // in scope 0 at cita-auth/src/txwal.rs:46:9: 47:67
    let _8: &dyn cita_database::Database; // in scope 0 at cita-auth/src/txwal.rs:46:9: 47:67
    let mut _9: &std::sync::Arc<dyn cita_database::Database>; // in scope 0 at cita-auth/src/txwal.rs:46:9: 47:67
    let mut _10: std::option::Option<cita_database::DataCategory>; // in scope 0 at cita-auth/src/txwal.rs:47:21: 47:25
    let mut _11: std::vec::Vec<u8>;      // in scope 0 at cita-auth/src/txwal.rs:47:27: 47:52
    let mut _12: &[u8];                  // in scope 0 at cita-auth/src/txwal.rs:47:27: 47:52
    let _13: &[u8];                      // in scope 0 at cita-auth/src/txwal.rs:47:27: 47:43
    let mut _14: std::vec::Vec<u8>;      // in scope 0 at cita-auth/src/txwal.rs:47:54: 47:66
    let _15: &str;                       // in scope 0 at cita-auth/src/txwal.rs:48:21: 48:32
    let mut _16: bool;                   // in scope 0 at cita-auth/src/txwal.rs:49:5: 49:6
    scope 1 {
        debug block_binary => _3;        // in scope 1 at cita-auth/src/txwal.rs:45:13: 45:25
    }

    bb0: {
        _16 = const false;               // scope 0 at cita-auth/src/txwal.rs:45:13: 45:25
        _4 = <&SignedTransaction as libproto::TryInto<Vec<u8>>>::try_into(_2) -> bb1; // scope 0 at cita-auth/src/txwal.rs:45:37: 45:50
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:45:40: 45:48
                                         // + literal: Const { ty: fn(&SignedTransaction) -> Result<Vec<u8>, <&SignedTransaction as libproto::TryInto<Vec<u8>>>::Error> {<&SignedTransaction as libproto::TryInto<Vec<u8>>>::try_into}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = Result::<Vec<u8>, TryIntoConvertError>::unwrap(move _4) -> bb2; // scope 0 at cita-auth/src/txwal.rs:45:37: 45:59
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:45:51: 45:57
                                         // + literal: Const { ty: fn(Result<Vec<u8>, TryIntoConvertError>) -> Vec<u8> {Result::<Vec<u8>, TryIntoConvertError>::unwrap}, val: Value(<ZST>) }
    }

    bb2: {
        _16 = const true;                // scope 0 at cita-auth/src/txwal.rs:45:58: 45:59
        _9 = &((*_1).0: std::sync::Arc<dyn cita_database::Database>); // scope 1 at cita-auth/src/txwal.rs:46:9: 47:67
        _8 = <Arc<dyn Database> as Deref>::deref(move _9) -> [return: bb3, unwind: bb10]; // scope 1 at cita-auth/src/txwal.rs:46:9: 47:67
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:46:9: 47:67
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<dyn Database>) -> &'a <Arc<dyn Database> as Deref>::Target {<Arc<dyn Database> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb3: {
        _7 = _8;                         // scope 1 at cita-auth/src/txwal.rs:46:9: 47:67
        _10 = const std::option::Option::<DataCategory>::None; // scope 1 at cita-auth/src/txwal.rs:47:21: 47:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: std::option::Option<DataCategory>, val: Value(Scalar(0x07)) }
        _13 = SignedTransaction::get_tx_hash(_2) -> [return: bb4, unwind: bb10]; // scope 1 at cita-auth/src/txwal.rs:47:27: 47:43
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:47:30: 47:41
                                         // + literal: Const { ty: for<'a> fn(&'a SignedTransaction) -> &'a [u8] {SignedTransaction::get_tx_hash}, val: Value(<ZST>) }
    }

    bb4: {
        _12 = _13;                       // scope 1 at cita-auth/src/txwal.rs:47:27: 47:52
        _11 = std::slice::<impl [u8]>::to_vec(move _12) -> [return: bb5, unwind: bb10]; // scope 1 at cita-auth/src/txwal.rs:47:27: 47:52
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:47:44: 47:50
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> Vec<u8> {std::slice::<impl [u8]>::to_vec}, val: Value(<ZST>) }
    }

    bb5: {
        _16 = const false;               // scope 1 at cita-auth/src/txwal.rs:47:54: 47:66
        _14 = move _3;                   // scope 1 at cita-auth/src/txwal.rs:47:54: 47:66
        _6 = <dyn Database as Database>::insert(move _7, move _10, move _11, move _14) -> [return: bb6, unwind: bb10]; // scope 1 at cita-auth/src/txwal.rs:46:9: 47:67
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:47:14: 47:20
                                         // + literal: Const { ty: for<'a> fn(&'a dyn Database, std::option::Option<DataCategory>, Vec<u8>, Vec<u8>) -> Result<(), DatabaseError> {<dyn Database as Database>::insert}, val: Value(<ZST>) }
    }

    bb6: {
        _15 = const "insert tx";         // scope 1 at cita-auth/src/txwal.rs:48:21: 48:32
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:48:21: 48:32
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _5 = Result::<(), DatabaseError>::expect(move _6, _15) -> [return: bb7, unwind: bb10]; // scope 1 at cita-auth/src/txwal.rs:46:9: 48:33
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:48:14: 48:20
                                         // + literal: Const { ty: for<'a> fn(Result<(), DatabaseError>, &'a str) {Result::<(), DatabaseError>::expect}, val: Value(<ZST>) }
    }

    bb7: {
        _16 = const false;               // scope 0 at cita-auth/src/txwal.rs:49:5: 49:6
        return;                          // scope 0 at cita-auth/src/txwal.rs:49:6: 49:6
    }

    bb8 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/txwal.rs:43:5: 49:6
    }

    bb9 (cleanup): {
        drop(_3) -> bb8;                 // scope 0 at cita-auth/src/txwal.rs:49:5: 49:6
    }

    bb10 (cleanup): {
        switchInt(_16) -> [0: bb8, otherwise: bb9]; // scope 0 at cita-auth/src/txwal.rs:49:5: 49:6
    }
}

fn txwal::<impl at cita-auth/src/txwal.rs:29:1: 29:11>::write_batch(_1: &TxWal, _2: &[SignedTransaction]) -> () {
    debug self => _1;                    // in scope 0 at cita-auth/src/txwal.rs:51:24: 51:29
    debug txs => _2;                     // in scope 0 at cita-auth/src/txwal.rs:51:31: 51:34
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/txwal.rs:51:58: 51:58
    let mut _3: std::vec::Vec<std::vec::Vec<u8>>; // in scope 0 at cita-auth/src/txwal.rs:52:13: 52:23
    let mut _5: std::slice::Iter<'_, libproto::SignedTransaction>; // in scope 0 at cita-auth/src/txwal.rs:54:19: 54:22
    let mut _7: std::option::Option<&libproto::SignedTransaction>; // in scope 0 at cita-auth/src/txwal.rs:54:19: 54:22
    let mut _8: &mut std::slice::Iter<'_, libproto::SignedTransaction>; // in scope 0 at cita-auth/src/txwal.rs:54:19: 54:22
    let mut _9: isize;                   // in scope 0 at cita-auth/src/txwal.rs:54:9: 58:10
    let mut _12: std::result::Result<std::vec::Vec<u8>, libproto::TryIntoConvertError>; // in scope 0 at cita-auth/src/txwal.rs:55:41: 55:54
    let _13: ();                         // in scope 0 at cita-auth/src/txwal.rs:56:13: 56:38
    let mut _14: &mut std::vec::Vec<std::vec::Vec<u8>>; // in scope 0 at cita-auth/src/txwal.rs:56:13: 56:38
    let mut _15: std::vec::Vec<u8>;      // in scope 0 at cita-auth/src/txwal.rs:56:25: 56:37
    let _16: ();                         // in scope 0 at cita-auth/src/txwal.rs:57:13: 57:49
    let mut _17: &mut std::vec::Vec<std::vec::Vec<u8>>; // in scope 0 at cita-auth/src/txwal.rs:57:13: 57:49
    let mut _18: std::vec::Vec<u8>;      // in scope 0 at cita-auth/src/txwal.rs:57:23: 57:48
    let mut _19: &[u8];                  // in scope 0 at cita-auth/src/txwal.rs:57:23: 57:48
    let _20: &[u8];                      // in scope 0 at cita-auth/src/txwal.rs:57:23: 57:39
    let _21: ();                         // in scope 0 at cita-auth/src/txwal.rs:59:9: 61:40
    let mut _22: std::result::Result<(), cita_database::DatabaseError>; // in scope 0 at cita-auth/src/txwal.rs:59:9: 60:46
    let mut _23: &dyn cita_database::Database; // in scope 0 at cita-auth/src/txwal.rs:59:9: 60:46
    let _24: &dyn cita_database::Database; // in scope 0 at cita-auth/src/txwal.rs:59:9: 60:46
    let mut _25: &std::sync::Arc<dyn cita_database::Database>; // in scope 0 at cita-auth/src/txwal.rs:59:9: 60:46
    let mut _26: std::option::Option<cita_database::DataCategory>; // in scope 0 at cita-auth/src/txwal.rs:60:27: 60:31
    let mut _27: std::vec::Vec<std::vec::Vec<u8>>; // in scope 0 at cita-auth/src/txwal.rs:60:33: 60:37
    let mut _28: std::vec::Vec<std::vec::Vec<u8>>; // in scope 0 at cita-auth/src/txwal.rs:60:39: 60:45
    let _29: &str;                       // in scope 0 at cita-auth/src/txwal.rs:61:21: 61:39
    let mut _30: bool;                   // in scope 0 at cita-auth/src/txwal.rs:62:5: 62:6
    let mut _31: bool;                   // in scope 0 at cita-auth/src/txwal.rs:62:5: 62:6
    scope 1 {
        debug values => _3;              // in scope 1 at cita-auth/src/txwal.rs:52:13: 52:23
        let mut _4: std::vec::Vec<std::vec::Vec<u8>>; // in scope 1 at cita-auth/src/txwal.rs:53:13: 53:21
        scope 2 {
            debug keys => _4;            // in scope 2 at cita-auth/src/txwal.rs:53:13: 53:21
            let mut _6: std::slice::Iter<'_, libproto::SignedTransaction>; // in scope 2 at cita-auth/src/txwal.rs:54:19: 54:22
            scope 3 {
                debug iter => _6;        // in scope 3 at cita-auth/src/txwal.rs:54:19: 54:22
                let _10: &libproto::SignedTransaction; // in scope 3 at cita-auth/src/txwal.rs:54:13: 54:15
                scope 4 {
                    debug tx => _10;     // in scope 4 at cita-auth/src/txwal.rs:54:13: 54:15
                    let _11: std::vec::Vec<u8>; // in scope 4 at cita-auth/src/txwal.rs:55:17: 55:29
                    scope 5 {
                        debug block_binary => _11; // in scope 5 at cita-auth/src/txwal.rs:55:17: 55:29
                    }
                }
            }
        }
    }

    bb0: {
        _30 = const false;               // scope 0 at cita-auth/src/txwal.rs:52:13: 52:23
        _31 = const false;               // scope 0 at cita-auth/src/txwal.rs:52:13: 52:23
        _31 = const true;                // scope 0 at cita-auth/src/txwal.rs:52:40: 52:50
        _3 = Vec::<Vec<u8>>::new() -> bb1; // scope 0 at cita-auth/src/txwal.rs:52:40: 52:50
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:52:40: 52:48
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn() -> Vec<Vec<u8>> {Vec::<Vec<u8>>::new}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = Vec::<Vec<u8>>::new() -> [return: bb2, unwind: bb21]; // scope 1 at cita-auth/src/txwal.rs:53:38: 53:48
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:53:38: 53:46
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn() -> Vec<Vec<u8>> {Vec::<Vec<u8>>::new}, val: Value(<ZST>) }
    }

    bb2: {
        _30 = const true;                // scope 2 at cita-auth/src/txwal.rs:54:9: 58:10
        _5 = <&[SignedTransaction] as IntoIterator>::into_iter(_2) -> [return: bb3, unwind: bb19]; // scope 2 at cita-auth/src/txwal.rs:54:19: 54:22
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:54:19: 54:22
                                         // + literal: Const { ty: fn(&[SignedTransaction]) -> <&[SignedTransaction] as IntoIterator>::IntoIter {<&[SignedTransaction] as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb3: {
        _6 = move _5;                    // scope 2 at cita-auth/src/txwal.rs:54:19: 54:22
        goto -> bb4;                     // scope 3 at cita-auth/src/txwal.rs:54:9: 58:10
    }

    bb4: {
        _8 = &mut _6;                    // scope 3 at cita-auth/src/txwal.rs:54:19: 54:22
        _7 = <std::slice::Iter<'_, SignedTransaction> as Iterator>::next(_8) -> [return: bb5, unwind: bb19]; // scope 3 at cita-auth/src/txwal.rs:54:19: 54:22
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:54:19: 54:22
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::slice::Iter<'_, SignedTransaction>) -> std::option::Option<<std::slice::Iter<'_, SignedTransaction> as Iterator>::Item> {<std::slice::Iter<'_, SignedTransaction> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb5: {
        _9 = discriminant(_7);           // scope 3 at cita-auth/src/txwal.rs:54:19: 54:22
        switchInt(move _9) -> [0: bb8, 1: bb6, otherwise: bb7]; // scope 3 at cita-auth/src/txwal.rs:54:19: 54:22
    }

    bb6: {
        _10 = ((_7 as Some).0: &libproto::SignedTransaction); // scope 3 at cita-auth/src/txwal.rs:54:13: 54:15
        _12 = <&SignedTransaction as libproto::TryInto<Vec<u8>>>::try_into(_10) -> [return: bb9, unwind: bb19]; // scope 4 at cita-auth/src/txwal.rs:55:41: 55:54
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:55:44: 55:52
                                         // + literal: Const { ty: fn(&SignedTransaction) -> Result<Vec<u8>, <&SignedTransaction as libproto::TryInto<Vec<u8>>>::Error> {<&SignedTransaction as libproto::TryInto<Vec<u8>>>::try_into}, val: Value(<ZST>) }
    }

    bb7: {
        unreachable;                     // scope 3 at cita-auth/src/txwal.rs:54:19: 54:22
    }

    bb8: {
        _25 = &((*_1).0: std::sync::Arc<dyn cita_database::Database>); // scope 2 at cita-auth/src/txwal.rs:59:9: 60:46
        _24 = <Arc<dyn Database> as Deref>::deref(move _25) -> [return: bb14, unwind: bb19]; // scope 2 at cita-auth/src/txwal.rs:59:9: 60:46
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:59:9: 60:46
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<dyn Database>) -> &'a <Arc<dyn Database> as Deref>::Target {<Arc<dyn Database> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb9: {
        _11 = Result::<Vec<u8>, TryIntoConvertError>::unwrap(move _12) -> [return: bb10, unwind: bb19]; // scope 4 at cita-auth/src/txwal.rs:55:41: 55:63
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:55:55: 55:61
                                         // + literal: Const { ty: fn(Result<Vec<u8>, TryIntoConvertError>) -> Vec<u8> {Result::<Vec<u8>, TryIntoConvertError>::unwrap}, val: Value(<ZST>) }
    }

    bb10: {
        _14 = &mut _3;                   // scope 5 at cita-auth/src/txwal.rs:56:13: 56:38
        _15 = move _11;                  // scope 5 at cita-auth/src/txwal.rs:56:25: 56:37
        _13 = Vec::<Vec<u8>>::push(move _14, move _15) -> [return: bb11, unwind: bb19]; // scope 5 at cita-auth/src/txwal.rs:56:13: 56:38
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:56:20: 56:24
                                         // + literal: Const { ty: for<'a> fn(&'a mut Vec<Vec<u8>>, Vec<u8>) {Vec::<Vec<u8>>::push}, val: Value(<ZST>) }
    }

    bb11: {
        _17 = &mut _4;                   // scope 5 at cita-auth/src/txwal.rs:57:13: 57:49
        _20 = SignedTransaction::get_tx_hash(_10) -> [return: bb12, unwind: bb19]; // scope 5 at cita-auth/src/txwal.rs:57:23: 57:39
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:57:26: 57:37
                                         // + literal: Const { ty: for<'a> fn(&'a SignedTransaction) -> &'a [u8] {SignedTransaction::get_tx_hash}, val: Value(<ZST>) }
    }

    bb12: {
        _19 = _20;                       // scope 5 at cita-auth/src/txwal.rs:57:23: 57:48
        _18 = std::slice::<impl [u8]>::to_vec(move _19) -> [return: bb13, unwind: bb19]; // scope 5 at cita-auth/src/txwal.rs:57:23: 57:48
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:57:40: 57:46
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> Vec<u8> {std::slice::<impl [u8]>::to_vec}, val: Value(<ZST>) }
    }

    bb13: {
        _16 = Vec::<Vec<u8>>::push(move _17, move _18) -> [return: bb22, unwind: bb19]; // scope 5 at cita-auth/src/txwal.rs:57:13: 57:49
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:57:18: 57:22
                                         // + literal: Const { ty: for<'a> fn(&'a mut Vec<Vec<u8>>, Vec<u8>) {Vec::<Vec<u8>>::push}, val: Value(<ZST>) }
    }

    bb14: {
        _23 = _24;                       // scope 2 at cita-auth/src/txwal.rs:59:9: 60:46
        _26 = const std::option::Option::<DataCategory>::None; // scope 2 at cita-auth/src/txwal.rs:60:27: 60:31
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: std::option::Option<DataCategory>, val: Value(Scalar(0x07)) }
        _30 = const false;               // scope 2 at cita-auth/src/txwal.rs:60:33: 60:37
        _27 = move _4;                   // scope 2 at cita-auth/src/txwal.rs:60:33: 60:37
        _31 = const false;               // scope 2 at cita-auth/src/txwal.rs:60:39: 60:45
        _28 = move _3;                   // scope 2 at cita-auth/src/txwal.rs:60:39: 60:45
        _22 = <dyn Database as Database>::insert_batch(move _23, move _26, move _27, move _28) -> [return: bb15, unwind: bb19]; // scope 2 at cita-auth/src/txwal.rs:59:9: 60:46
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:60:14: 60:26
                                         // + literal: Const { ty: for<'a> fn(&'a dyn Database, std::option::Option<DataCategory>, Vec<Vec<u8>>, Vec<Vec<u8>>) -> Result<(), DatabaseError> {<dyn Database as Database>::insert_batch}, val: Value(<ZST>) }
    }

    bb15: {
        _29 = const "insert batch txs";  // scope 2 at cita-auth/src/txwal.rs:61:21: 61:39
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:61:21: 61:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _21 = Result::<(), DatabaseError>::expect(move _22, _29) -> [return: bb16, unwind: bb19]; // scope 2 at cita-auth/src/txwal.rs:59:9: 61:40
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:61:14: 61:20
                                         // + literal: Const { ty: for<'a> fn(Result<(), DatabaseError>, &'a str) {Result::<(), DatabaseError>::expect}, val: Value(<ZST>) }
    }

    bb16: {
        _30 = const false;               // scope 1 at cita-auth/src/txwal.rs:62:5: 62:6
        _31 = const false;               // scope 0 at cita-auth/src/txwal.rs:62:5: 62:6
        return;                          // scope 0 at cita-auth/src/txwal.rs:62:6: 62:6
    }

    bb17 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/txwal.rs:51:5: 62:6
    }

    bb18 (cleanup): {
        drop(_4) -> bb21;                // scope 1 at cita-auth/src/txwal.rs:62:5: 62:6
    }

    bb19 (cleanup): {
        switchInt(_30) -> [0: bb21, otherwise: bb18]; // scope 1 at cita-auth/src/txwal.rs:62:5: 62:6
    }

    bb20 (cleanup): {
        drop(_3) -> bb17;                // scope 0 at cita-auth/src/txwal.rs:62:5: 62:6
    }

    bb21 (cleanup): {
        switchInt(_31) -> [0: bb17, otherwise: bb20]; // scope 0 at cita-auth/src/txwal.rs:62:5: 62:6
    }

    bb22: {
        goto -> bb4;                     // scope 5 at cita-auth/src/txwal.rs:57:13: 57:49
    }
}

fn txwal::<impl at cita-auth/src/txwal.rs:29:1: 29:11>::delete_with_hash(_1: &mut TxWal, _2: &H256) -> () {
    debug self => _1;                    // in scope 0 at cita-auth/src/txwal.rs:64:29: 64:38
    debug tx_hash => _2;                 // in scope 0 at cita-auth/src/txwal.rs:64:40: 64:47
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/txwal.rs:64:56: 64:56
    let _3: ();                          // in scope 0 at cita-auth/src/txwal.rs:65:9: 65:65
    let mut _4: std::result::Result<(), cita_database::DatabaseError>; // in scope 0 at cita-auth/src/txwal.rs:65:9: 65:38
    let mut _5: &dyn cita_database::Database; // in scope 0 at cita-auth/src/txwal.rs:65:9: 65:38
    let _6: &dyn cita_database::Database; // in scope 0 at cita-auth/src/txwal.rs:65:9: 65:38
    let mut _7: &std::sync::Arc<dyn cita_database::Database>; // in scope 0 at cita-auth/src/txwal.rs:65:9: 65:38
    let mut _8: std::option::Option<cita_database::DataCategory>; // in scope 0 at cita-auth/src/txwal.rs:65:24: 65:28
    let mut _9: &[u8];                   // in scope 0 at cita-auth/src/txwal.rs:65:30: 65:37
    let _10: &[u8];                      // in scope 0 at cita-auth/src/txwal.rs:65:30: 65:37
    let _11: &str;                       // in scope 0 at cita-auth/src/txwal.rs:65:46: 65:64

    bb0: {
        _7 = &((*_1).0: std::sync::Arc<dyn cita_database::Database>); // scope 0 at cita-auth/src/txwal.rs:65:9: 65:38
        _6 = <Arc<dyn Database> as Deref>::deref(move _7) -> bb1; // scope 0 at cita-auth/src/txwal.rs:65:9: 65:38
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:65:9: 65:38
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<dyn Database>) -> &'a <Arc<dyn Database> as Deref>::Target {<Arc<dyn Database> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = _6;                         // scope 0 at cita-auth/src/txwal.rs:65:9: 65:38
        _8 = const std::option::Option::<DataCategory>::None; // scope 0 at cita-auth/src/txwal.rs:65:24: 65:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: std::option::Option<DataCategory>, val: Value(Scalar(0x07)) }
        _10 = <H256 as Deref>::deref(_2) -> bb2; // scope 0 at cita-auth/src/txwal.rs:65:30: 65:37
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:65:30: 65:37
                                         // + literal: Const { ty: for<'a> fn(&'a H256) -> &'a <H256 as Deref>::Target {<H256 as Deref>::deref}, val: Value(<ZST>) }
    }

    bb2: {
        _9 = _10;                        // scope 0 at cita-auth/src/txwal.rs:65:30: 65:37
        _4 = <dyn Database as Database>::remove(move _5, move _8, move _9) -> bb3; // scope 0 at cita-auth/src/txwal.rs:65:9: 65:38
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:65:17: 65:23
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a dyn Database, std::option::Option<DataCategory>, &'b [u8]) -> Result<(), DatabaseError> {<dyn Database as Database>::remove}, val: Value(<ZST>) }
    }

    bb3: {
        _11 = const "delete with hash";  // scope 0 at cita-auth/src/txwal.rs:65:46: 65:64
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:65:46: 65:64
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _3 = Result::<(), DatabaseError>::expect(move _4, _11) -> bb4; // scope 0 at cita-auth/src/txwal.rs:65:9: 65:65
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:65:39: 65:45
                                         // + literal: Const { ty: for<'a> fn(Result<(), DatabaseError>, &'a str) {Result::<(), DatabaseError>::expect}, val: Value(<ZST>) }
    }

    bb4: {
        return;                          // scope 0 at cita-auth/src/txwal.rs:66:6: 66:6
    }
}

fn txwal::<impl at cita-auth/src/txwal.rs:29:1: 29:11>::delete_with_hashes(_1: &mut TxWal, _2: &[H256]) -> () {
    debug self => _1;                    // in scope 0 at cita-auth/src/txwal.rs:68:31: 68:40
    debug tx_hashes => _2;               // in scope 0 at cita-auth/src/txwal.rs:68:42: 68:51
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/txwal.rs:68:62: 68:62
    let mut _3: std::vec::Vec<std::vec::Vec<u8>>; // in scope 0 at cita-auth/src/txwal.rs:69:13: 69:21
    let mut _4: std::slice::Iter<'_, cita_types::H256>; // in scope 0 at cita-auth/src/txwal.rs:70:24: 70:33
    let mut _6: std::option::Option<&cita_types::H256>; // in scope 0 at cita-auth/src/txwal.rs:70:24: 70:33
    let mut _7: &mut std::slice::Iter<'_, cita_types::H256>; // in scope 0 at cita-auth/src/txwal.rs:70:24: 70:33
    let mut _8: isize;                   // in scope 0 at cita-auth/src/txwal.rs:70:9: 72:10
    let _10: ();                         // in scope 0 at cita-auth/src/txwal.rs:71:13: 71:40
    let mut _11: &mut std::vec::Vec<std::vec::Vec<u8>>; // in scope 0 at cita-auth/src/txwal.rs:71:13: 71:40
    let mut _12: std::vec::Vec<u8>;      // in scope 0 at cita-auth/src/txwal.rs:71:23: 71:39
    let mut _13: &[u8];                  // in scope 0 at cita-auth/src/txwal.rs:71:23: 71:39
    let _14: &[u8];                      // in scope 0 at cita-auth/src/txwal.rs:71:23: 71:39
    let _15: ();                         // in scope 0 at cita-auth/src/txwal.rs:73:9: 75:42
    let mut _16: std::result::Result<(), cita_database::DatabaseError>; // in scope 0 at cita-auth/src/txwal.rs:73:9: 74:39
    let mut _17: &dyn cita_database::Database; // in scope 0 at cita-auth/src/txwal.rs:73:9: 74:39
    let _18: &dyn cita_database::Database; // in scope 0 at cita-auth/src/txwal.rs:73:9: 74:39
    let mut _19: &std::sync::Arc<dyn cita_database::Database>; // in scope 0 at cita-auth/src/txwal.rs:73:9: 74:39
    let mut _20: std::option::Option<cita_database::DataCategory>; // in scope 0 at cita-auth/src/txwal.rs:74:27: 74:31
    let mut _21: &[std::vec::Vec<u8>];   // in scope 0 at cita-auth/src/txwal.rs:74:33: 74:38
    let _22: &[std::vec::Vec<u8>];       // in scope 0 at cita-auth/src/txwal.rs:74:33: 74:38
    let _23: &std::vec::Vec<std::vec::Vec<u8>>; // in scope 0 at cita-auth/src/txwal.rs:74:33: 74:38
    let _24: &str;                       // in scope 0 at cita-auth/src/txwal.rs:75:21: 75:41
    scope 1 {
        debug keys => _3;                // in scope 1 at cita-auth/src/txwal.rs:69:13: 69:21
        let mut _5: std::slice::Iter<'_, cita_types::H256>; // in scope 1 at cita-auth/src/txwal.rs:70:24: 70:33
        scope 2 {
            debug iter => _5;            // in scope 2 at cita-auth/src/txwal.rs:70:24: 70:33
            let _9: &cita_types::H256;   // in scope 2 at cita-auth/src/txwal.rs:70:13: 70:20
            scope 3 {
                debug tx_hash => _9;     // in scope 3 at cita-auth/src/txwal.rs:70:13: 70:20
            }
        }
    }

    bb0: {
        _3 = Vec::<Vec<u8>>::new() -> bb1; // scope 0 at cita-auth/src/txwal.rs:69:38: 69:48
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:69:38: 69:46
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn() -> Vec<Vec<u8>> {Vec::<Vec<u8>>::new}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = <&[H256] as IntoIterator>::into_iter(_2) -> [return: bb2, unwind: bb15]; // scope 1 at cita-auth/src/txwal.rs:70:24: 70:33
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:70:24: 70:33
                                         // + literal: Const { ty: fn(&[H256]) -> <&[H256] as IntoIterator>::IntoIter {<&[H256] as IntoIterator>::into_iter}, val: Value(<ZST>) }
    }

    bb2: {
        _5 = move _4;                    // scope 1 at cita-auth/src/txwal.rs:70:24: 70:33
        goto -> bb3;                     // scope 2 at cita-auth/src/txwal.rs:70:9: 72:10
    }

    bb3: {
        _7 = &mut _5;                    // scope 2 at cita-auth/src/txwal.rs:70:24: 70:33
        _6 = <std::slice::Iter<'_, H256> as Iterator>::next(_7) -> [return: bb4, unwind: bb15]; // scope 2 at cita-auth/src/txwal.rs:70:24: 70:33
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:70:24: 70:33
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::slice::Iter<'_, H256>) -> std::option::Option<<std::slice::Iter<'_, H256> as Iterator>::Item> {<std::slice::Iter<'_, H256> as Iterator>::next}, val: Value(<ZST>) }
    }

    bb4: {
        _8 = discriminant(_6);           // scope 2 at cita-auth/src/txwal.rs:70:24: 70:33
        switchInt(move _8) -> [0: bb7, 1: bb5, otherwise: bb6]; // scope 2 at cita-auth/src/txwal.rs:70:24: 70:33
    }

    bb5: {
        _9 = ((_6 as Some).0: &cita_types::H256); // scope 2 at cita-auth/src/txwal.rs:70:13: 70:20
        _11 = &mut _3;                   // scope 3 at cita-auth/src/txwal.rs:71:13: 71:40
        _14 = <H256 as Deref>::deref(_9) -> [return: bb8, unwind: bb15]; // scope 3 at cita-auth/src/txwal.rs:71:23: 71:39
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:71:23: 71:39
                                         // + literal: Const { ty: for<'a> fn(&'a H256) -> &'a <H256 as Deref>::Target {<H256 as Deref>::deref}, val: Value(<ZST>) }
    }

    bb6: {
        unreachable;                     // scope 2 at cita-auth/src/txwal.rs:70:24: 70:33
    }

    bb7: {
        _19 = &((*_1).0: std::sync::Arc<dyn cita_database::Database>); // scope 1 at cita-auth/src/txwal.rs:73:9: 74:39
        _18 = <Arc<dyn Database> as Deref>::deref(move _19) -> [return: bb10, unwind: bb15]; // scope 1 at cita-auth/src/txwal.rs:73:9: 74:39
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:73:9: 74:39
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<dyn Database>) -> &'a <Arc<dyn Database> as Deref>::Target {<Arc<dyn Database> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb8: {
        _13 = _14;                       // scope 3 at cita-auth/src/txwal.rs:71:23: 71:39
        _12 = std::slice::<impl [u8]>::to_vec(move _13) -> [return: bb9, unwind: bb15]; // scope 3 at cita-auth/src/txwal.rs:71:23: 71:39
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:71:31: 71:37
                                         // + literal: Const { ty: for<'a> fn(&'a [u8]) -> Vec<u8> {std::slice::<impl [u8]>::to_vec}, val: Value(<ZST>) }
    }

    bb9: {
        _10 = Vec::<Vec<u8>>::push(move _11, move _12) -> [return: bb17, unwind: bb15]; // scope 3 at cita-auth/src/txwal.rs:71:13: 71:40
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:71:18: 71:22
                                         // + literal: Const { ty: for<'a> fn(&'a mut Vec<Vec<u8>>, Vec<u8>) {Vec::<Vec<u8>>::push}, val: Value(<ZST>) }
    }

    bb10: {
        _17 = _18;                       // scope 1 at cita-auth/src/txwal.rs:73:9: 74:39
        _20 = const std::option::Option::<DataCategory>::None; // scope 1 at cita-auth/src/txwal.rs:74:27: 74:31
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: std::option::Option<DataCategory>, val: Value(Scalar(0x07)) }
        _23 = &_3;                       // scope 1 at cita-auth/src/txwal.rs:74:33: 74:38
        _22 = <Vec<Vec<u8>> as Deref>::deref(_23) -> [return: bb11, unwind: bb15]; // scope 1 at cita-auth/src/txwal.rs:74:33: 74:38
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:74:33: 74:38
                                         // + literal: Const { ty: for<'a> fn(&'a Vec<Vec<u8>>) -> &'a <Vec<Vec<u8>> as Deref>::Target {<Vec<Vec<u8>> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb11: {
        _21 = _22;                       // scope 1 at cita-auth/src/txwal.rs:74:33: 74:38
        _16 = <dyn Database as Database>::remove_batch(move _17, move _20, move _21) -> [return: bb12, unwind: bb15]; // scope 1 at cita-auth/src/txwal.rs:73:9: 74:39
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:74:14: 74:26
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a dyn Database, std::option::Option<DataCategory>, &'b [Vec<u8>]) -> Result<(), DatabaseError> {<dyn Database as Database>::remove_batch}, val: Value(<ZST>) }
    }

    bb12: {
        _24 = const "delete with hashes"; // scope 1 at cita-auth/src/txwal.rs:75:21: 75:41
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:75:21: 75:41
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _15 = Result::<(), DatabaseError>::expect(move _16, _24) -> [return: bb13, unwind: bb15]; // scope 1 at cita-auth/src/txwal.rs:73:9: 75:42
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:75:14: 75:20
                                         // + literal: Const { ty: for<'a> fn(Result<(), DatabaseError>, &'a str) {Result::<(), DatabaseError>::expect}, val: Value(<ZST>) }
    }

    bb13: {
        drop(_3) -> bb14;                // scope 0 at cita-auth/src/txwal.rs:76:5: 76:6
    }

    bb14: {
        return;                          // scope 0 at cita-auth/src/txwal.rs:76:6: 76:6
    }

    bb15 (cleanup): {
        drop(_3) -> bb16;                // scope 0 at cita-auth/src/txwal.rs:76:5: 76:6
    }

    bb16 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/txwal.rs:68:5: 76:6
    }

    bb17: {
        goto -> bb3;                     // scope 3 at cita-auth/src/txwal.rs:71:13: 71:40
    }
}

fn txwal::<impl at cita-auth/src/txwal.rs:29:1: 29:11>::read_all(_1: &TxWal) -> Vec<SignedTransaction> {
    debug self => _1;                    // in scope 0 at cita-auth/src/txwal.rs:78:21: 78:26
    let mut _0: std::vec::Vec<libproto::SignedTransaction>; // return place in scope 0 at cita-auth/src/txwal.rs:78:31: 78:53
    let _2: rocksdb::db::DBIterator<'_>; // in scope 0 at cita-auth/src/txwal.rs:80:13: 80:18
    let mut _3: std::option::Option<rocksdb::db::DBIterator<'_>>; // in scope 0 at cita-auth/src/txwal.rs:80:21: 80:43
    let mut _4: &dyn cita_database::Database; // in scope 0 at cita-auth/src/txwal.rs:80:21: 80:43
    let _5: &dyn cita_database::Database; // in scope 0 at cita-auth/src/txwal.rs:80:21: 80:43
    let mut _6: &std::sync::Arc<dyn cita_database::Database>; // in scope 0 at cita-auth/src/txwal.rs:80:21: 80:43
    let mut _7: std::option::Option<cita_database::DataCategory>; // in scope 0 at cita-auth/src/txwal.rs:80:38: 80:42
    let mut _8: std::iter::Map<rocksdb::db::DBIterator<'_>, [closure@cita-auth/src/txwal.rs:83:18: 83:24]>; // in scope 0 at cita-auth/src/txwal.rs:82:9: 83:79
    let mut _9: rocksdb::db::DBIterator<'_>; // in scope 0 at cita-auth/src/txwal.rs:82:9: 82:14
    scope 1 {
        debug items => _2;               // in scope 1 at cita-auth/src/txwal.rs:80:13: 80:18
    }

    bb0: {
        _6 = &((*_1).0: std::sync::Arc<dyn cita_database::Database>); // scope 0 at cita-auth/src/txwal.rs:80:21: 80:43
        _5 = <Arc<dyn Database> as Deref>::deref(move _6) -> bb1; // scope 0 at cita-auth/src/txwal.rs:80:21: 80:43
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:80:21: 80:43
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<dyn Database>) -> &'a <Arc<dyn Database> as Deref>::Target {<Arc<dyn Database> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb1: {
        _4 = _5;                         // scope 0 at cita-auth/src/txwal.rs:80:21: 80:43
        _7 = const std::option::Option::<DataCategory>::None; // scope 0 at cita-auth/src/txwal.rs:80:38: 80:42
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: std::option::Option<DataCategory>, val: Value(Scalar(0x07)) }
        _3 = <dyn Database as Database>::iterator(move _4, move _7) -> bb2; // scope 0 at cita-auth/src/txwal.rs:80:21: 80:43
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:80:29: 80:37
                                         // + literal: Const { ty: for<'a> fn(&'a dyn Database, std::option::Option<DataCategory>) -> std::option::Option<rocksdb::db::DBIterator<'a>> {<dyn Database as Database>::iterator}, val: Value(<ZST>) }
    }

    bb2: {
        _2 = std::option::Option::<rocksdb::db::DBIterator<'_>>::unwrap(move _3) -> bb3; // scope 0 at cita-auth/src/txwal.rs:80:21: 80:52
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:80:44: 80:50
                                         // + literal: Const { ty: fn(std::option::Option<rocksdb::db::DBIterator<'_>>) -> rocksdb::db::DBIterator<'_> {std::option::Option::<rocksdb::db::DBIterator<'_>>::unwrap}, val: Value(<ZST>) }
    }

    bb3: {
        _9 = move _2;                    // scope 1 at cita-auth/src/txwal.rs:82:9: 82:14
        _8 = <rocksdb::db::DBIterator<'_> as Iterator>::map::<SignedTransaction, [closure@cita-auth/src/txwal.rs:83:18: 83:24]>(move _9, const ZeroSized: [closure@cita-auth/src/txwal.rs:83:18: 83:24]) -> bb4; // scope 1 at cita-auth/src/txwal.rs:82:9: 83:79
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:83:14: 83:17
                                         // + literal: Const { ty: fn(rocksdb::db::DBIterator<'_>, [closure@cita-auth/src/txwal.rs:83:18: 83:24]) -> std::iter::Map<rocksdb::db::DBIterator<'_>, [closure@cita-auth/src/txwal.rs:83:18: 83:24]> {<rocksdb::db::DBIterator<'_> as Iterator>::map::<SignedTransaction, [closure@cita-auth/src/txwal.rs:83:18: 83:24]>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: [closure@cita-auth/src/txwal.rs:83:18: 83:24], val: Value(<ZST>) }
    }

    bb4: {
        _0 = <std::iter::Map<rocksdb::db::DBIterator<'_>, [closure@cita-auth/src/txwal.rs:83:18: 83:24]> as Iterator>::collect::<Vec<SignedTransaction>>(move _8) -> bb5; // scope 1 at cita-auth/src/txwal.rs:82:9: 84:23
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:84:14: 84:21
                                         // + literal: Const { ty: fn(std::iter::Map<rocksdb::db::DBIterator<'_>, [closure@cita-auth/src/txwal.rs:83:18: 83:24]>) -> Vec<SignedTransaction> {<std::iter::Map<rocksdb::db::DBIterator<'_>, [closure@cita-auth/src/txwal.rs:83:18: 83:24]> as Iterator>::collect::<Vec<SignedTransaction>>}, val: Value(<ZST>) }
    }

    bb5: {
        return;                          // scope 0 at cita-auth/src/txwal.rs:85:6: 85:6
    }
}

fn txwal::<impl at cita-auth/src/txwal.rs:29:1: 29:11>::read_all::{closure#0}(_1: &mut [closure@cita-auth/src/txwal.rs:83:18: 83:24], _2: (Box<[u8]>, Box<[u8]>)) -> SignedTransaction {
    debug item => _2;                    // in scope 0 at cita-auth/src/txwal.rs:83:19: 83:23
    let mut _0: libproto::SignedTransaction; // return place in scope 0 at cita-auth/src/txwal.rs:83:25: 83:25
    let mut _3: std::result::Result<libproto::SignedTransaction, libproto::TryFromConvertError>; // in scope 0 at cita-auth/src/txwal.rs:83:25: 83:69
    let mut _4: &[u8];                   // in scope 0 at cita-auth/src/txwal.rs:83:53: 83:68
    let mut _5: &std::boxed::Box<[u8]>;  // in scope 0 at cita-auth/src/txwal.rs:83:53: 83:68

    bb0: {
        _5 = &(_2.1: std::boxed::Box<[u8]>); // scope 0 at cita-auth/src/txwal.rs:83:53: 83:68
        _4 = <Box<[u8]> as AsRef<[u8]>>::as_ref(move _5) -> [return: bb1, unwind: bb5]; // scope 0 at cita-auth/src/txwal.rs:83:53: 83:68
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:83:60: 83:66
                                         // + literal: Const { ty: for<'a> fn(&'a Box<[u8]>) -> &'a [u8] {<Box<[u8]> as AsRef<[u8]>>::as_ref}, val: Value(<ZST>) }
    }

    bb1: {
        _3 = <SignedTransaction as libproto::TryFrom<&[u8]>>::try_from(move _4) -> [return: bb2, unwind: bb5]; // scope 0 at cita-auth/src/txwal.rs:83:25: 83:69
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:83:25: 83:52
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[u8]) -> Result<SignedTransaction, <SignedTransaction as libproto::TryFrom<&[u8]>>::Error> {<SignedTransaction as libproto::TryFrom<&[u8]>>::try_from}, val: Value(<ZST>) }
    }

    bb2: {
        _0 = Result::<SignedTransaction, TryFromConvertError>::unwrap(move _3) -> [return: bb3, unwind: bb5]; // scope 0 at cita-auth/src/txwal.rs:83:25: 83:78
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:83:70: 83:76
                                         // + literal: Const { ty: fn(Result<SignedTransaction, TryFromConvertError>) -> SignedTransaction {Result::<SignedTransaction, TryFromConvertError>::unwrap}, val: Value(<ZST>) }
    }

    bb3: {
        drop(_2) -> bb4;                 // scope 0 at cita-auth/src/txwal.rs:83:77: 83:78
    }

    bb4: {
        return;                          // scope 0 at cita-auth/src/txwal.rs:83:78: 83:78
    }

    bb5 (cleanup): {
        drop(_2) -> bb6;                 // scope 0 at cita-auth/src/txwal.rs:83:77: 83:78
    }

    bb6 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/txwal.rs:83:18: 83:78
    }
}

fn txwal::<impl at cita-auth/src/txwal.rs:29:1: 29:11>::get(_1: &TxWal, _2: &[u8]) -> std::option::Option<SignedTransaction> {
    debug self => _1;                    // in scope 0 at cita-auth/src/txwal.rs:87:16: 87:21
    debug tx_hash => _2;                 // in scope 0 at cita-auth/src/txwal.rs:87:23: 87:30
    let mut _0: std::option::Option<libproto::SignedTransaction>; // return place in scope 0 at cita-auth/src/txwal.rs:87:42: 87:67
    let _3: std::option::Option<std::vec::Vec<u8>>; // in scope 0 at cita-auth/src/txwal.rs:89:13: 89:19
    let mut _4: std::result::Result<std::option::Option<std::vec::Vec<u8>>, cita_database::DatabaseError>; // in scope 0 at cita-auth/src/txwal.rs:89:22: 89:48
    let mut _5: &dyn cita_database::Database; // in scope 0 at cita-auth/src/txwal.rs:89:22: 89:48
    let _6: &dyn cita_database::Database; // in scope 0 at cita-auth/src/txwal.rs:89:22: 89:48
    let mut _7: &std::sync::Arc<dyn cita_database::Database>; // in scope 0 at cita-auth/src/txwal.rs:89:22: 89:48
    let mut _8: std::option::Option<cita_database::DataCategory>; // in scope 0 at cita-auth/src/txwal.rs:89:34: 89:38
    let mut _9: std::option::Option<std::vec::Vec<u8>>; // in scope 0 at cita-auth/src/txwal.rs:90:9: 90:15
    scope 1 {
        debug result => _3;              // in scope 1 at cita-auth/src/txwal.rs:89:13: 89:19
    }

    bb0: {
        _7 = &((*_1).0: std::sync::Arc<dyn cita_database::Database>); // scope 0 at cita-auth/src/txwal.rs:89:22: 89:48
        _6 = <Arc<dyn Database> as Deref>::deref(move _7) -> bb1; // scope 0 at cita-auth/src/txwal.rs:89:22: 89:48
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:89:22: 89:48
                                         // + literal: Const { ty: for<'a> fn(&'a Arc<dyn Database>) -> &'a <Arc<dyn Database> as Deref>::Target {<Arc<dyn Database> as Deref>::deref}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = _6;                         // scope 0 at cita-auth/src/txwal.rs:89:22: 89:48
        _8 = const std::option::Option::<DataCategory>::None; // scope 0 at cita-auth/src/txwal.rs:89:34: 89:38
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: std::option::Option<DataCategory>, val: Value(Scalar(0x07)) }
        _4 = <dyn Database as Database>::get(move _5, move _8, _2) -> bb2; // scope 0 at cita-auth/src/txwal.rs:89:22: 89:48
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:89:30: 89:33
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a dyn Database, std::option::Option<DataCategory>, &'b [u8]) -> Result<std::option::Option<Vec<u8>>, DatabaseError> {<dyn Database as Database>::get}, val: Value(<ZST>) }
    }

    bb2: {
        _3 = Result::<std::option::Option<Vec<u8>>, DatabaseError>::unwrap(move _4) -> bb3; // scope 0 at cita-auth/src/txwal.rs:89:22: 89:57
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:89:49: 89:55
                                         // + literal: Const { ty: fn(Result<std::option::Option<Vec<u8>>, DatabaseError>) -> std::option::Option<Vec<u8>> {Result::<std::option::Option<Vec<u8>>, DatabaseError>::unwrap}, val: Value(<ZST>) }
    }

    bb3: {
        _9 = move _3;                    // scope 1 at cita-auth/src/txwal.rs:90:9: 90:15
        _0 = std::option::Option::<Vec<u8>>::map::<SignedTransaction, [closure@cita-auth/src/txwal.rs:90:20: 90:26]>(move _9, const ZeroSized: [closure@cita-auth/src/txwal.rs:90:20: 90:26]) -> bb4; // scope 1 at cita-auth/src/txwal.rs:90:9: 90:71
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:90:16: 90:19
                                         // + literal: Const { ty: fn(std::option::Option<Vec<u8>>, [closure@cita-auth/src/txwal.rs:90:20: 90:26]) -> std::option::Option<SignedTransaction> {std::option::Option::<Vec<u8>>::map::<SignedTransaction, [closure@cita-auth/src/txwal.rs:90:20: 90:26]>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: [closure@cita-auth/src/txwal.rs:90:20: 90:26], val: Value(<ZST>) }
    }

    bb4: {
        return;                          // scope 0 at cita-auth/src/txwal.rs:91:6: 91:6
    }
}

fn txwal::<impl at cita-auth/src/txwal.rs:29:1: 29:11>::get::{closure#0}(_1: [closure@cita-auth/src/txwal.rs:90:20: 90:26], _2: Vec<u8>) -> SignedTransaction {
    debug item => _2;                    // in scope 0 at cita-auth/src/txwal.rs:90:21: 90:25
    let mut _0: libproto::SignedTransaction; // return place in scope 0 at cita-auth/src/txwal.rs:90:27: 90:27
    let mut _3: std::result::Result<libproto::SignedTransaction, libproto::TryFromConvertError>; // in scope 0 at cita-auth/src/txwal.rs:90:27: 90:61
    let mut _4: &std::vec::Vec<u8>;      // in scope 0 at cita-auth/src/txwal.rs:90:55: 90:60

    bb0: {
        _4 = &_2;                        // scope 0 at cita-auth/src/txwal.rs:90:55: 90:60
        _3 = <SignedTransaction as libproto::TryFrom<&Vec<u8>>>::try_from(move _4) -> [return: bb1, unwind: bb4]; // scope 0 at cita-auth/src/txwal.rs:90:27: 90:61
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:90:27: 90:54
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&Vec<u8>) -> Result<SignedTransaction, <SignedTransaction as libproto::TryFrom<&Vec<u8>>>::Error> {<SignedTransaction as libproto::TryFrom<&Vec<u8>>>::try_from}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = Result::<SignedTransaction, TryFromConvertError>::unwrap(move _3) -> [return: bb2, unwind: bb4]; // scope 0 at cita-auth/src/txwal.rs:90:27: 90:70
                                         // mir::Constant
                                         // + span: cita-auth/src/txwal.rs:90:62: 90:68
                                         // + literal: Const { ty: fn(Result<SignedTransaction, TryFromConvertError>) -> SignedTransaction {Result::<SignedTransaction, TryFromConvertError>::unwrap}, val: Value(<ZST>) }
    }

    bb2: {
        drop(_2) -> bb3;                 // scope 0 at cita-auth/src/txwal.rs:90:69: 90:70
    }

    bb3: {
        return;                          // scope 0 at cita-auth/src/txwal.rs:90:70: 90:70
    }

    bb4 (cleanup): {
        drop(_2) -> bb5;                 // scope 0 at cita-auth/src/txwal.rs:90:69: 90:70
    }

    bb5 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/txwal.rs:90:20: 90:70
    }
}

fn get_build_info_str(_1: bool) -> &str {
    debug short => _1;                   // in scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-auth-990af653ce04bf96/out/build_info.rs:4:35: 4:40
    let mut _0: &str;                    // return place in scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-auth-990af653ce04bf96/out/build_info.rs:4:51: 4:63

    bb0: {
        switchInt(_1) -> [0: bb2, otherwise: bb1]; // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-auth-990af653ce04bf96/out/build_info.rs:5:15: 5:20
    }

    bb1: {
        _0 = const "20.2.0-unknown";     // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-auth-990af653ce04bf96/out/build_info.rs:5:23: 5:39
                                         // mir::Constant
                                         // + span: /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-auth-990af653ce04bf96/out/build_info.rs:5:23: 5:39
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        goto -> bb3;                     // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-auth-990af653ce04bf96/out/build_info.rs:5:12: 5:2490
    }

    bb2: {
        _0 = const "20.2.0-unknown\n(rustc 1.70.0-nightly-2023-03-18)\n\n                       ..-nnmmmmnn-..\n                  .-nndNNNNNNmddddmmmho.\n                .smNNMMMNnn-         :nnmhn.\n              .dNMMMMMNs--:nosnno-.     ..dNn..   ....\n            .hNMMMMMMMNmmNNNMMMMMNmn     ..nMNNmmmmmmmmdnn.\n           .mMMMMMMMMMMMMMMMMMMMMMMN:  ..ohmNNNNNNmdhnsoonms\n          nNMMMMMMMMMMMMMMMMMMMMMMMMh.                 .-:dN:\n         :NMMMMMMMMMMMMMMMMMMMMMMMMMNdnnnhhddmmmNNNNNNNNNNNMn\n        .mMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNMMMMMMMMMMMMm dMN:\n        nNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMN sMMMMMMMNNNNNNdNMNn\n       .dMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNMMMMMNdn.--nohmNMmo.\n       nNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNmhnn       .:smNmhn.\n       .NMMMMMMMMMMMMMMMMMMMMMMMMMMMNmhhdddhsnn.             nmMNmn:\n       nMMMMMMMMMMMMMMMMMMMMMMMMMMMMh..              .:n:-.   oNddNNn\n       oMMMMMMMMMMMMMMMMMMMMMMMMMMMMh.             .:noshmdnndmn  -hm.\n       sMMMMMMMMMMMMMMMMMMMMMMMMMMMMNdsn-... .:.         -onsn:    .Nn\n       hMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNmmdmmNn                osssNn\n      .mMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMs   .nnnmNNmdhnnnnssonNn\n      oNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNsnsdNMMMMMMNhssnhdo.Ns\n     nmMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNnoN.\n    .nNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNdm\n   oNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMmn\n  :NMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNdnNMNn\n .mMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNds:\" nMMNn\n nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMd:.    nMMMNo.\nnNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNdo:...sMMMMNo\nnNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNmmNMMMMMm\n NMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMd\n  :mNNNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNNms\n     mMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMm\n   ._____. ._____.  _. ._   ._____. ._____.   ._.   ._____. ._____.\n   | .___| |___. | | | | |  |___. | |_____|   |_|   |___. | |_____|\n   | |     ._. | | | |_| |  ._. | |   ._.   ._____. ._. | | ._____.\n   | |     | | |_| \\_____/  | | |_/   | |   | ,_, | | | |_/ |_____|\n   | |___. | | ._.   ._.    | |       | |   | | | | | |     ._____.\n   |_____| |_| |_|   |_|    |_|       |_|   |_| |_| |_|     |_____|\n"; // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-auth-990af653ce04bf96/out/build_info.rs:5:49: 5:2488
                                         // mir::Constant
                                         // + span: /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-auth-990af653ce04bf96/out/build_info.rs:5:49: 5:2488
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        goto -> bb3;                     // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-auth-990af653ce04bf96/out/build_info.rs:5:12: 5:2490
    }

    bb3: {
        return;                          // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-auth-990af653ce04bf96/out/build_info.rs:6:10: 6:10
    }
}

fn get_build_info() -> (&str, std::option::Option<&str>, std::option::Option<&str>, std::option::Option<&str>, std::option::Option<&str>, (u64, u64, u64), std::option::Option<&str>, std::option::Option<&str>) {
    let mut _0: (&str, std::option::Option<&str>, std::option::Option<&str>, std::option::Option<&str>, std::option::Option<&str>, (u64, u64, u64), std::option::Option<&str>, std::option::Option<&str>); // return place in scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-auth-990af653ce04bf96/out/build_info.rs:10:36: 19:10
    let mut _1: std::option::Option<&str>; // in scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-auth-990af653ce04bf96/out/build_info.rs:20:2403: 20:2407
    let mut _2: std::option::Option<&str>; // in scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-auth-990af653ce04bf96/out/build_info.rs:20:2409: 20:2413
    let mut _3: std::option::Option<&str>; // in scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-auth-990af653ce04bf96/out/build_info.rs:20:2415: 20:2419
    let mut _4: std::option::Option<&str>; // in scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-auth-990af653ce04bf96/out/build_info.rs:20:2421: 20:2425
    let mut _5: (u64, u64, u64);         // in scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-auth-990af653ce04bf96/out/build_info.rs:20:2427: 20:2437
    let mut _6: std::option::Option<&str>; // in scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-auth-990af653ce04bf96/out/build_info.rs:20:2439: 20:2454
    let _7: &str;                        // in scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-auth-990af653ce04bf96/out/build_info.rs:20:2444: 20:2453
    let mut _8: std::option::Option<&str>; // in scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-auth-990af653ce04bf96/out/build_info.rs:20:2456: 20:2474
    let _9: &str;                        // in scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-auth-990af653ce04bf96/out/build_info.rs:20:2461: 20:2473

    bb0: {
        _1 = std::option::Option::<&str>::None; // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-auth-990af653ce04bf96/out/build_info.rs:20:2403: 20:2407
        _2 = std::option::Option::<&str>::None; // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-auth-990af653ce04bf96/out/build_info.rs:20:2409: 20:2413
        _3 = std::option::Option::<&str>::None; // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-auth-990af653ce04bf96/out/build_info.rs:20:2415: 20:2419
        _4 = std::option::Option::<&str>::None; // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-auth-990af653ce04bf96/out/build_info.rs:20:2421: 20:2425
        _5 = (const 1_u64, const 70_u64, const 0_u64); // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-auth-990af653ce04bf96/out/build_info.rs:20:2427: 20:2437
        _7 = const "nightly";            // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-auth-990af653ce04bf96/out/build_info.rs:20:2444: 20:2453
                                         // mir::Constant
                                         // + span: /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-auth-990af653ce04bf96/out/build_info.rs:20:2444: 20:2453
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = std::option::Option::<&str>::Some(_7); // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-auth-990af653ce04bf96/out/build_info.rs:20:2439: 20:2454
        _9 = const "2023-03-18";         // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-auth-990af653ce04bf96/out/build_info.rs:20:2461: 20:2473
                                         // mir::Constant
                                         // + span: /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-auth-990af653ce04bf96/out/build_info.rs:20:2461: 20:2473
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _8 = std::option::Option::<&str>::Some(_9); // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-auth-990af653ce04bf96/out/build_info.rs:20:2456: 20:2474
        _0 = (const "\n                       ..-nnmmmmnn-..\n                  .-nndNNNNNNmddddmmmho.\n                .smNNMMMNnn-         :nnmhn.\n              .dNMMMMMNs--:nosnno-.     ..dNn..   ....\n            .hNMMMMMMMNmmNNNMMMMMNmn     ..nMNNmmmmmmmmdnn.\n           .mMMMMMMMMMMMMMMMMMMMMMMN:  ..ohmNNNNNNmdhnsoonms\n          nNMMMMMMMMMMMMMMMMMMMMMMMMh.                 .-:dN:\n         :NMMMMMMMMMMMMMMMMMMMMMMMMMNdnnnhhddmmmNNNNNNNNNNNMn\n        .mMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNMMMMMMMMMMMMm dMN:\n        nNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMN sMMMMMMMNNNNNNdNMNn\n       .dMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNMMMMMNdn.--nohmNMmo.\n       nNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNmhnn       .:smNmhn.\n       .NMMMMMMMMMMMMMMMMMMMMMMMMMMMNmhhdddhsnn.             nmMNmn:\n       nMMMMMMMMMMMMMMMMMMMMMMMMMMMMh..              .:n:-.   oNddNNn\n       oMMMMMMMMMMMMMMMMMMMMMMMMMMMMh.             .:noshmdnndmn  -hm.\n       sMMMMMMMMMMMMMMMMMMMMMMMMMMMMNdsn-... .:.         -onsn:    .Nn\n       hMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNmmdmmNn                osssNn\n      .mMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMs   .nnnmNNmdhnnnnssonNn\n      oNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNsnsdNMMMMMMNhssnhdo.Ns\n     nmMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNnoN.\n    .nNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNdm\n   oNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMmn\n  :NMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNdnNMNn\n .mMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNds:\" nMMNn\n nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMd:.    nMMMNo.\nnNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNdo:...sMMMMNo\nnNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNmmNMMMMMm\n NMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMd\n  :mNNNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNNms\n     mMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMm\n   ._____. ._____.  _. ._   ._____. ._____.   ._.   ._____. ._____.\n   | .___| |___. | | | | |  |___. | |_____|   |_|   |___. | |_____|\n   | |     ._. | | | |_| |  ._. | |   ._.   ._____. ._. | | ._____.\n   | |     | | |_| \\_____/  | | |_/   | |   | ,_, | | | |_/ |_____|\n   | |___. | | ._.   ._.    | |       | |   | | | | | |     ._____.\n   |_____| |_| |_|   |_|    |_|       |_|   |_| |_| |_|     |_____|\n", move _1, move _2, move _3, move _4, move _5, move _6, move _8); // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-auth-990af653ce04bf96/out/build_info.rs:20:12: 20:2475
                                         // mir::Constant
                                         // + span: /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-auth-990af653ce04bf96/out/build_info.rs:20:13: 20:2401
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        return;                          // scope 0 at /media/workstation/nvme0n1p2/home/fxl/benchmarks_real/compile_time/blockchain/cita-20.2.0/target/debug/build/cita-auth-990af653ce04bf96/out/build_info.rs:21:10: 21:10
    }
}

fn profiler(_1: u64, _2: u64) -> () {
    debug flag_prof_start => _1;         // in scope 0 at cita-auth/src/main.rs:108:13: 108:28
    debug flag_prof_duration => _2;      // in scope 0 at cita-auth/src/main.rs:108:35: 108:53
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/main.rs:108:60: 108:60
    let _3: std::thread::JoinHandle<()>; // in scope 0 at cita-auth/src/main.rs:113:9: 122:11
    let mut _4: [closure@cita-auth/src/main.rs:113:23: 113:30]; // in scope 0 at cita-auth/src/main.rs:113:23: 122:10
    scope 1 {
        debug start => _1;               // in scope 1 at cita-auth/src/main.rs:111:13: 111:18
        scope 2 {
            debug duration => _2;        // in scope 2 at cita-auth/src/main.rs:112:13: 112:21
        }
    }

    bb0: {
        switchInt(move _2) -> [0: bb3, otherwise: bb1]; // scope 0 at cita-auth/src/main.rs:110:8: 110:31
    }

    bb1: {
        _4 = [closure@cita-auth/src/main.rs:113:23: 113:30] { start: _1, duration: _2 }; // scope 2 at cita-auth/src/main.rs:113:23: 122:10
                                         // closure
                                         // + def_id: DefId(0:352 ~ cita_auth[81d6]::profiler::{closure#0})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn(()),
                                         //     (u64, u64),
                                         // ]
        _3 = std::thread::spawn::<[closure@cita-auth/src/main.rs:113:23: 113:30], ()>(move _4) -> bb2; // scope 2 at cita-auth/src/main.rs:113:9: 122:11
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:113:9: 113:22
                                         // + literal: Const { ty: fn([closure@cita-auth/src/main.rs:113:23: 113:30]) -> JoinHandle<()> {std::thread::spawn::<[closure@cita-auth/src/main.rs:113:23: 113:30], ()>}, val: Value(<ZST>) }
    }

    bb2: {
        drop(_3) -> bb3;                 // scope 2 at cita-auth/src/main.rs:122:11: 122:12
    }

    bb3: {
        return;                          // scope 0 at cita-auth/src/main.rs:124:2: 124:2
    }
}

fn profiler::{closure#0}(_1: [closure@cita-auth/src/main.rs:113:23: 113:30]) -> () {
    debug start => (_1.0: u64);          // in scope 0 at cita-auth/src/main.rs:111:13: 111:18
    debug duration => (_1.1: u64);       // in scope 0 at cita-auth/src/main.rs:112:13: 112:21
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/main.rs:113:31: 113:31
    let _2: ();                          // in scope 0 at cita-auth/src/main.rs:114:13: 114:62
    let mut _3: std::time::Duration;     // in scope 0 at cita-auth/src/main.rs:114:27: 114:61
    let mut _4: u64;                     // in scope 0 at cita-auth/src/main.rs:114:52: 114:57
    let _5: ();                          // in scope 0 at cita-auth/src/main.rs:115:13: 119:42
    let mut _6: std::result::Result<(), cpuprofiler::error::Error>; // in scope 0 at cita-auth/src/main.rs:115:13: 118:42
    let mut _7: &mut cpuprofiler::Profiler; // in scope 0 at cita-auth/src/main.rs:115:13: 118:42
    let mut _8: &mut cpuprofiler::Profiler; // in scope 0 at cita-auth/src/main.rs:115:13: 118:42
    let mut _9: &mut std::sync::MutexGuard<'_, cpuprofiler::Profiler>; // in scope 0 at cita-auth/src/main.rs:115:13: 118:42
    let mut _10: std::sync::MutexGuard<'_, cpuprofiler::Profiler>; // in scope 0 at cita-auth/src/main.rs:115:13: 117:26
    let mut _11: std::result::Result<std::sync::MutexGuard<'_, cpuprofiler::Profiler>, std::sync::PoisonError<std::sync::MutexGuard<'_, cpuprofiler::Profiler>>>; // in scope 0 at cita-auth/src/main.rs:115:13: 116:24
    let mut _12: &std::sync::Mutex<cpuprofiler::Profiler>; // in scope 0 at cita-auth/src/main.rs:115:13: 116:24
    let _13: &std::sync::Mutex<cpuprofiler::Profiler>; // in scope 0 at cita-auth/src/main.rs:115:13: 116:24
    let _14: &cpuprofiler::PROFILER;     // in scope 0 at cita-auth/src/main.rs:115:13: 115:21
    let _15: &str;                       // in scope 0 at cita-auth/src/main.rs:119:25: 119:41
    let _16: ();                         // in scope 0 at cita-auth/src/main.rs:120:13: 120:65
    let mut _17: std::time::Duration;    // in scope 0 at cita-auth/src/main.rs:120:27: 120:64
    let mut _18: u64;                    // in scope 0 at cita-auth/src/main.rs:120:52: 120:60
    let _19: ();                         // in scope 0 at cita-auth/src/main.rs:121:13: 121:53
    let mut _20: std::result::Result<(), cpuprofiler::error::Error>; // in scope 0 at cita-auth/src/main.rs:121:13: 121:44
    let mut _21: &mut cpuprofiler::Profiler; // in scope 0 at cita-auth/src/main.rs:121:13: 121:44
    let mut _22: &mut cpuprofiler::Profiler; // in scope 0 at cita-auth/src/main.rs:121:13: 121:44
    let mut _23: &mut std::sync::MutexGuard<'_, cpuprofiler::Profiler>; // in scope 0 at cita-auth/src/main.rs:121:13: 121:44
    let mut _24: std::sync::MutexGuard<'_, cpuprofiler::Profiler>; // in scope 0 at cita-auth/src/main.rs:121:13: 121:37
    let mut _25: std::result::Result<std::sync::MutexGuard<'_, cpuprofiler::Profiler>, std::sync::PoisonError<std::sync::MutexGuard<'_, cpuprofiler::Profiler>>>; // in scope 0 at cita-auth/src/main.rs:121:13: 121:28
    let mut _26: &std::sync::Mutex<cpuprofiler::Profiler>; // in scope 0 at cita-auth/src/main.rs:121:13: 121:28
    let _27: &std::sync::Mutex<cpuprofiler::Profiler>; // in scope 0 at cita-auth/src/main.rs:121:13: 121:28
    let _28: &cpuprofiler::PROFILER;     // in scope 0 at cita-auth/src/main.rs:121:13: 121:21

    bb0: {
        _4 = (_1.0: u64);                // scope 0 at cita-auth/src/main.rs:114:52: 114:57
        _3 = Duration::new(move _4, const 0_u32) -> bb1; // scope 0 at cita-auth/src/main.rs:114:27: 114:61
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:114:27: 114:51
                                         // + literal: Const { ty: fn(u64, u32) -> Duration {Duration::new}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = sleep(move _3) -> bb2;      // scope 0 at cita-auth/src/main.rs:114:13: 114:62
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:114:13: 114:26
                                         // + literal: Const { ty: fn(Duration) {sleep}, val: Value(<ZST>) }
    }

    bb2: {
        _14 = const {alloc26: &PROFILER}; // scope 0 at cita-auth/src/main.rs:115:13: 115:21
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:115:13: 115:21
                                         // + literal: Const { ty: &PROFILER, val: Value(Scalar(alloc26)) }
        _13 = <PROFILER as Deref>::deref(_14) -> bb3; // scope 0 at cita-auth/src/main.rs:115:13: 116:24
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:115:13: 116:24
                                         // + literal: Const { ty: for<'a> fn(&'a PROFILER) -> &'a <PROFILER as Deref>::Target {<PROFILER as Deref>::deref}, val: Value(<ZST>) }
    }

    bb3: {
        _12 = _13;                       // scope 0 at cita-auth/src/main.rs:115:13: 116:24
        _11 = Mutex::<Profiler>::lock(move _12) -> bb4; // scope 0 at cita-auth/src/main.rs:115:13: 116:24
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:116:18: 116:22
                                         // + literal: Const { ty: for<'a> fn(&'a Mutex<Profiler>) -> Result<MutexGuard<'a, Profiler>, PoisonError<MutexGuard<'a, Profiler>>> {Mutex::<Profiler>::lock}, val: Value(<ZST>) }
    }

    bb4: {
        _10 = Result::<MutexGuard<'_, Profiler>, PoisonError<MutexGuard<'_, Profiler>>>::unwrap(move _11) -> bb5; // scope 0 at cita-auth/src/main.rs:115:13: 117:26
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:117:18: 117:24
                                         // + literal: Const { ty: fn(Result<MutexGuard<'_, Profiler>, PoisonError<MutexGuard<'_, Profiler>>>) -> MutexGuard<'_, Profiler> {Result::<MutexGuard<'_, Profiler>, PoisonError<MutexGuard<'_, Profiler>>>::unwrap}, val: Value(<ZST>) }
    }

    bb5: {
        _9 = &mut _10;                   // scope 0 at cita-auth/src/main.rs:115:13: 118:42
        _8 = <MutexGuard<'_, Profiler> as DerefMut>::deref_mut(move _9) -> [return: bb6, unwind: bb20]; // scope 0 at cita-auth/src/main.rs:115:13: 118:42
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:115:13: 118:42
                                         // + literal: Const { ty: for<'a> fn(&'a mut MutexGuard<'_, Profiler>) -> &'a mut <MutexGuard<'_, Profiler> as Deref>::Target {<MutexGuard<'_, Profiler> as DerefMut>::deref_mut}, val: Value(<ZST>) }
    }

    bb6: {
        _7 = _8;                         // scope 0 at cita-auth/src/main.rs:115:13: 118:42
        _6 = Profiler::start::<&str>(move _7, const "./auth.profiler") -> [return: bb7, unwind: bb20]; // scope 0 at cita-auth/src/main.rs:115:13: 118:42
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:118:18: 118:23
                                         // + literal: Const { ty: for<'a> fn(&'a mut Profiler, &str) -> Result<(), cpuprofiler::error::Error> {Profiler::start::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:118:24: 118:41
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb7: {
        _15 = const "Couldn't start";    // scope 0 at cita-auth/src/main.rs:119:25: 119:41
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:119:25: 119:41
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _5 = Result::<(), cpuprofiler::error::Error>::expect(move _6, _15) -> [return: bb8, unwind: bb20]; // scope 0 at cita-auth/src/main.rs:115:13: 119:42
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:119:18: 119:24
                                         // + literal: Const { ty: for<'a> fn(Result<(), cpuprofiler::error::Error>, &'a str) {Result::<(), cpuprofiler::error::Error>::expect}, val: Value(<ZST>) }
    }

    bb8: {
        drop(_10) -> bb9;                // scope 0 at cita-auth/src/main.rs:119:42: 119:43
    }

    bb9: {
        _18 = (_1.1: u64);               // scope 0 at cita-auth/src/main.rs:120:52: 120:60
        _17 = Duration::new(move _18, const 0_u32) -> bb10; // scope 0 at cita-auth/src/main.rs:120:27: 120:64
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:120:27: 120:51
                                         // + literal: Const { ty: fn(u64, u32) -> Duration {Duration::new}, val: Value(<ZST>) }
    }

    bb10: {
        _16 = sleep(move _17) -> bb11;   // scope 0 at cita-auth/src/main.rs:120:13: 120:65
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:120:13: 120:26
                                         // + literal: Const { ty: fn(Duration) {sleep}, val: Value(<ZST>) }
    }

    bb11: {
        _28 = const {alloc26: &PROFILER}; // scope 0 at cita-auth/src/main.rs:121:13: 121:21
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:121:13: 121:21
                                         // + literal: Const { ty: &PROFILER, val: Value(Scalar(alloc26)) }
        _27 = <PROFILER as Deref>::deref(_28) -> bb12; // scope 0 at cita-auth/src/main.rs:121:13: 121:28
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:121:13: 121:28
                                         // + literal: Const { ty: for<'a> fn(&'a PROFILER) -> &'a <PROFILER as Deref>::Target {<PROFILER as Deref>::deref}, val: Value(<ZST>) }
    }

    bb12: {
        _26 = _27;                       // scope 0 at cita-auth/src/main.rs:121:13: 121:28
        _25 = Mutex::<Profiler>::lock(move _26) -> bb13; // scope 0 at cita-auth/src/main.rs:121:13: 121:28
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:121:22: 121:26
                                         // + literal: Const { ty: for<'a> fn(&'a Mutex<Profiler>) -> Result<MutexGuard<'a, Profiler>, PoisonError<MutexGuard<'a, Profiler>>> {Mutex::<Profiler>::lock}, val: Value(<ZST>) }
    }

    bb13: {
        _24 = Result::<MutexGuard<'_, Profiler>, PoisonError<MutexGuard<'_, Profiler>>>::unwrap(move _25) -> bb14; // scope 0 at cita-auth/src/main.rs:121:13: 121:37
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:121:29: 121:35
                                         // + literal: Const { ty: fn(Result<MutexGuard<'_, Profiler>, PoisonError<MutexGuard<'_, Profiler>>>) -> MutexGuard<'_, Profiler> {Result::<MutexGuard<'_, Profiler>, PoisonError<MutexGuard<'_, Profiler>>>::unwrap}, val: Value(<ZST>) }
    }

    bb14: {
        _23 = &mut _24;                  // scope 0 at cita-auth/src/main.rs:121:13: 121:44
        _22 = <MutexGuard<'_, Profiler> as DerefMut>::deref_mut(move _23) -> [return: bb15, unwind: bb19]; // scope 0 at cita-auth/src/main.rs:121:13: 121:44
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:121:13: 121:44
                                         // + literal: Const { ty: for<'a> fn(&'a mut MutexGuard<'_, Profiler>) -> &'a mut <MutexGuard<'_, Profiler> as Deref>::Target {<MutexGuard<'_, Profiler> as DerefMut>::deref_mut}, val: Value(<ZST>) }
    }

    bb15: {
        _21 = _22;                       // scope 0 at cita-auth/src/main.rs:121:13: 121:44
        _20 = Profiler::stop(move _21) -> [return: bb16, unwind: bb19]; // scope 0 at cita-auth/src/main.rs:121:13: 121:44
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:121:38: 121:42
                                         // + literal: Const { ty: for<'a> fn(&'a mut Profiler) -> Result<(), cpuprofiler::error::Error> {Profiler::stop}, val: Value(<ZST>) }
    }

    bb16: {
        _19 = Result::<(), cpuprofiler::error::Error>::unwrap(move _20) -> [return: bb17, unwind: bb19]; // scope 0 at cita-auth/src/main.rs:121:13: 121:53
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:121:45: 121:51
                                         // + literal: Const { ty: fn(Result<(), cpuprofiler::error::Error>) {Result::<(), cpuprofiler::error::Error>::unwrap}, val: Value(<ZST>) }
    }

    bb17: {
        drop(_24) -> bb18;               // scope 0 at cita-auth/src/main.rs:121:53: 121:54
    }

    bb18: {
        return;                          // scope 0 at cita-auth/src/main.rs:122:10: 122:10
    }

    bb19 (cleanup): {
        drop(_24) -> bb21;               // scope 0 at cita-auth/src/main.rs:121:53: 121:54
    }

    bb20 (cleanup): {
        drop(_10) -> bb21;               // scope 0 at cita-auth/src/main.rs:119:42: 119:43
    }

    bb21 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/main.rs:113:23: 122:10
    }
}

alloc26 (static: PROFILER, size: 0, align: 1) {}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/main.rs:126:11: 126:11
    let _1: clap::ArgMatches<'_>;        // in scope 0 at cita-auth/src/main.rs:128:9: 128:16
    let mut _2: clap::App<'_, '_>;       // in scope 0 at cita-auth/src/main.rs:128:19: 136:10
    let mut _3: clap::App<'_, '_>;       // in scope 0 at cita-auth/src/main.rs:128:19: 132:56
    let mut _4: clap::App<'_, '_>;       // in scope 0 at cita-auth/src/main.rs:128:19: 131:28
    let mut _5: clap::App<'_, '_>;       // in scope 0 at cita-auth/src/main.rs:128:19: 130:49
    let mut _6: clap::App<'_, '_>;       // in scope 0 at cita-auth/src/main.rs:128:19: 129:43
    let mut _7: clap::App<'_, '_>;       // in scope 0 at cita-auth/src/main.rs:128:19: 128:35
    let mut _8: &str;                    // in scope 0 at cita-auth/src/main.rs:129:18: 129:42
    let mut _9: &str;                    // in scope 0 at cita-auth/src/main.rs:130:23: 130:48
    let _10: &str;                       // in scope 0 at cita-auth/src/main.rs:134:13: 135:57
    let mut _12: &clap::ArgMatches<'_>;  // in scope 0 at cita-auth/src/main.rs:139:18: 139:46
    let _13: std::option::Option<std::path::PathBuf>; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:21:9: 21:30
    let mut _14: std::result::Result<std::path::PathBuf, dotenv::Error>; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:21:9: 21:25
    let _15: ();                         // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:23:9: 23:54
    let _16: ();                         // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:26:9: 26:28
    let mut _17: bool;                   // in scope 0 at cita-auth/src/main.rs:140:51: 140:57
    let _18: ();                         // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:30:13: 30:64
    let _19: ();                         // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:32:13: 32:62
    let mut _21: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _22: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _23: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _24: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _25: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _26: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _27: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _28: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _29: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _30: &[&str];                // in scope 0 at cita-auth/src/main.rs:140:38: 140:49
    let mut _32: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    let mut _33: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
    let mut _34: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
    let mut _35: bool;                   // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
    let mut _36: &log::Level;            // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
    let mut _37: &log::LevelFilter;      // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _38: log::LevelFilter;           // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
    let _39: ();                         // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    let mut _40: std::fmt::Arguments<'_>; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _41: &[&str];                // in scope 0 at cita-auth/src/main.rs:141:11: 141:24
    let mut _42: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _43: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let _44: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
    let mut _45: core::fmt::ArgumentV1<'_>; // in scope 0 at cita-auth/src/main.rs:141:26: 141:50
    let _46: &&str;                      // in scope 0 at cita-auth/src/main.rs:141:26: 141:50
    let _47: &str;                       // in scope 0 at cita-auth/src/main.rs:141:26: 141:50
    let mut _49: std::option::Option<&str>; // in scope 0 at cita-auth/src/main.rs:143:23: 143:49
    let mut _50: &clap::ArgMatches<'_>;  // in scope 0 at cita-auth/src/main.rs:143:23: 143:49
    let _51: &str;                       // in scope 0 at cita-auth/src/main.rs:143:60: 143:71
    let mut _53: &str;                   // in scope 0 at cita-auth/src/main.rs:145:30: 145:41
    let _62: ();                         // in scope 0 at cita-auth/src/main.rs:157:5: 157:50
    let mut _65: (pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>, pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>); // in scope 0 at cita-auth/src/main.rs:164:28: 164:48
    let mut _68: (pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>, pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>); // in scope 0 at cita-auth/src/main.rs:165:28: 165:48
    let _69: ();                         // in scope 0 at cita-auth/src/main.rs:166:5: 181:6
    let _70: &str;                       // in scope 0 at cita-auth/src/main.rs:167:9: 167:15
    let mut _71: std::vec::Vec<libproto::router::RoutingKey>; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:20:39: 22:6
    let mut _72: std::boxed::Box<[libproto::router::RoutingKey]>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
    let mut _73: usize;                  // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
    let mut _74: usize;                  // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
    let mut _75: *mut u8;                // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
    let mut _76: std::boxed::Box<[libproto::router::RoutingKey; 9]>; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
    let mut _77: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _78: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _79: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _80: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _81: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _82: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _83: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _84: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _85: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _86: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _87: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _88: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _89: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _90: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _91: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _92: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _93: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _94: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _95: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _96: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _97: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _98: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _99: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _100: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _101: libproto::router::RoutingKey; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
    let mut _102: libproto::router::SubModules; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
    let mut _103: libproto::router::MsgType; // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
    let mut _104: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-auth/src/main.rs:179:9: 179:15
    let mut _105: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-auth/src/main.rs:180:9: 180:15
    let mut _107: &pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-auth/src/main.rs:184:26: 184:40
    let mut _110: (pubsub::crossbeam_channel::Sender<libproto::Request>, pubsub::crossbeam_channel::Receiver<libproto::Request>); // in scope 0 at cita-auth/src/main.rs:185:36: 185:56
    let _111: std::thread::JoinHandle<()>; // in scope 0 at cita-auth/src/main.rs:186:5: 190:7
    let mut _112: [closure@cita-auth/src/main.rs:186:19: 186:26]; // in scope 0 at cita-auth/src/main.rs:186:19: 190:6
    let mut _115: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-auth/src/main.rs:196:9: 196:15
    let mut _116: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-auth/src/main.rs:197:9: 197:15
    let mut _117: dispatcher::Dispatcher; // in scope 0 at cita-auth/src/main.rs:198:9: 198:19
    let mut _118: pubsub::crossbeam_channel::Sender<libproto::Request>; // in scope 0 at cita-auth/src/main.rs:199:9: 199:19
    let _119: ();                        // in scope 0 at cita-auth/src/main.rs:204:5: 204:36
    let mut _120: &mut handler::MsgHandler; // in scope 0 at cita-auth/src/main.rs:204:5: 204:36
    let mut _129: bool;                  // in scope 0 at cita-auth/src/main.rs:205:1: 205:2
    let mut _130: bool;                  // in scope 0 at cita-auth/src/main.rs:205:1: 205:2
    let mut _131: bool;                  // in scope 0 at cita-auth/src/main.rs:205:1: 205:2
    let mut _132: bool;                  // in scope 0 at cita-auth/src/main.rs:205:1: 205:2
    let mut _133: bool;                  // in scope 0 at cita-auth/src/main.rs:205:1: 205:2
    let mut _134: bool;                  // in scope 0 at cita-auth/src/main.rs:205:1: 205:2
    let mut _135: bool;                  // in scope 0 at cita-auth/src/main.rs:205:1: 205:2
    let mut _136: bool;                  // in scope 0 at cita-auth/src/main.rs:130:48: 130:49
    let mut _137: bool;                  // in scope 0 at cita-auth/src/main.rs:129:42: 129:43
    let mut _138: *const [libproto::router::RoutingKey; 9]; // in scope 0 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
    scope 1 {
        debug matches => _1;             // in scope 1 at cita-auth/src/main.rs:128:9: 128:16
        let _11: bool;                   // in scope 1 at cita-auth/src/main.rs:139:9: 139:15
        scope 2 {
            debug stdout => _11;         // in scope 2 at cita-auth/src/main.rs:139:9: 139:15
            let _20: log::Level;         // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let _31: log::Level;         // in scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
            let _48: &str;               // in scope 2 at cita-auth/src/main.rs:143:9: 143:20
            let mut _127: &logger::LogFavour<'_>; // in scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:32:33: 32:61
            let mut _128: &logger::LogFavour<'_>; // in scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:30:33: 30:63
            scope 3 {
                debug lvl => _20;        // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _124: &(&str, &str, &str, u32); // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _125: &[&str; 1]; // in scope 3 at cita-auth/src/main.rs:140:38: 140:49
                let mut _126: &log::LevelFilter; // in scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
            scope 4 {
                debug lvl => _31;        // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:35:13: 35:16
                let mut _121: &(&str, &str, &str, u32); // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                let mut _122: &[&str; 1]; // in scope 4 at cita-auth/src/main.rs:141:11: 141:24
                let mut _123: &log::LevelFilter; // in scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
            }
            scope 5 {
                debug config_path => _48; // in scope 5 at cita-auth/src/main.rs:143:9: 143:20
                let _52: config::Config; // in scope 5 at cita-auth/src/main.rs:145:9: 145:15
                scope 6 {
                    debug config => _52; // in scope 6 at cita-auth/src/main.rs:145:9: 145:15
                    let _54: usize;      // in scope 6 at cita-auth/src/main.rs:147:9: 147:24
                    scope 7 {
                        debug count_per_batch => _54; // in scope 7 at cita-auth/src/main.rs:147:9: 147:24
                        let _55: u64;    // in scope 7 at cita-auth/src/main.rs:148:9: 148:24
                        scope 8 {
                            debug buffer_duration => _55; // in scope 8 at cita-auth/src/main.rs:148:9: 148:24
                            let _56: usize; // in scope 8 at cita-auth/src/main.rs:149:9: 149:29
                            scope 9 {
                                debug tx_verify_thread_num => _56; // in scope 9 at cita-auth/src/main.rs:149:9: 149:29
                                let _57: usize; // in scope 9 at cita-auth/src/main.rs:150:9: 150:29
                                scope 10 {
                                    debug tx_verify_cache_size => _57; // in scope 10 at cita-auth/src/main.rs:150:9: 150:29
                                    let _58: usize; // in scope 10 at cita-auth/src/main.rs:151:9: 151:22
                                    scope 11 {
                                        debug tx_pool_limit => _58; // in scope 11 at cita-auth/src/main.rs:151:9: 151:22
                                        let _59: bool; // in scope 11 at cita-auth/src/main.rs:152:9: 152:19
                                        scope 12 {
                                            debug wal_enable => _59; // in scope 12 at cita-auth/src/main.rs:152:9: 152:19
                                            let _60: u64; // in scope 12 at cita-auth/src/main.rs:155:9: 155:24
                                            scope 13 {
                                                debug flag_prof_start => _60; // in scope 13 at cita-auth/src/main.rs:155:9: 155:24
                                                let _61: u64; // in scope 13 at cita-auth/src/main.rs:156:9: 156:27
                                                scope 14 {
                                                    debug flag_prof_duration => _61; // in scope 14 at cita-auth/src/main.rs:156:9: 156:27
                                                    let _63: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 14 at cita-auth/src/main.rs:164:10: 164:16
                                                    let _64: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>; // in scope 14 at cita-auth/src/main.rs:164:18: 164:24
                                                    scope 15 {
                                                        debug tx_sub => _63; // in scope 15 at cita-auth/src/main.rs:164:10: 164:16
                                                        debug rx_sub => _64; // in scope 15 at cita-auth/src/main.rs:164:18: 164:24
                                                        let _66: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 15 at cita-auth/src/main.rs:165:10: 165:16
                                                        let _67: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>; // in scope 15 at cita-auth/src/main.rs:165:18: 165:24
                                                        scope 16 {
                                                            debug tx_pub => _66; // in scope 16 at cita-auth/src/main.rs:165:10: 165:16
                                                            debug rx_pub => _67; // in scope 16 at cita-auth/src/main.rs:165:18: 165:24
                                                            let _106: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 16 at cita-auth/src/main.rs:184:9: 184:23
                                                            scope 17 {
                                                            }
                                                            scope 18 {
                                                                debug tx_pub_forward => _106; // in scope 18 at cita-auth/src/main.rs:184:9: 184:23
                                                                let _108: pubsub::crossbeam_channel::Sender<libproto::Request>; // in scope 18 at cita-auth/src/main.rs:185:10: 185:20
                                                                let _109: pubsub::crossbeam_channel::Receiver<libproto::Request>; // in scope 18 at cita-auth/src/main.rs:185:22: 185:32
                                                                scope 19 {
                                                                    debug tx_request => _108; // in scope 19 at cita-auth/src/main.rs:185:10: 185:20
                                                                    debug rx_request => _109; // in scope 19 at cita-auth/src/main.rs:185:22: 185:32
                                                                    let _113: dispatcher::Dispatcher; // in scope 19 at cita-auth/src/main.rs:192:9: 192:19
                                                                    scope 20 {
                                                                        debug dispatcher => _113; // in scope 20 at cita-auth/src/main.rs:192:9: 192:19
                                                                        let mut _114: handler::MsgHandler; // in scope 20 at cita-auth/src/main.rs:195:9: 195:24
                                                                        scope 21 {
                                                                            debug msg_handler => _114; // in scope 21 at cita-auth/src/main.rs:195:9: 195:24
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _129 = const false;              // scope 0 at cita-auth/src/main.rs:128:9: 128:16
        _131 = const false;              // scope 0 at cita-auth/src/main.rs:128:9: 128:16
        _135 = const false;              // scope 0 at cita-auth/src/main.rs:128:9: 128:16
        _137 = const false;              // scope 0 at cita-auth/src/main.rs:128:9: 128:16
        _132 = const false;              // scope 0 at cita-auth/src/main.rs:128:9: 128:16
        _134 = const false;              // scope 0 at cita-auth/src/main.rs:128:9: 128:16
        _130 = const false;              // scope 0 at cita-auth/src/main.rs:128:9: 128:16
        _136 = const false;              // scope 0 at cita-auth/src/main.rs:128:9: 128:16
        _133 = const false;              // scope 0 at cita-auth/src/main.rs:128:9: 128:16
        _137 = const true;               // scope 0 at cita-auth/src/main.rs:128:19: 128:35
        _7 = App::<'_, '_>::new::<&str>(const "auth") -> bb1; // scope 0 at cita-auth/src/main.rs:128:19: 128:35
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:128:19: 128:27
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&str) -> App<'_, '_> {App::<'_, '_>::new::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:128:28: 128:34
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb1: {
        _8 = get_build_info_str(const true) -> [return: bb2, unwind: bb77]; // scope 0 at cita-auth/src/main.rs:129:18: 129:42
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:129:18: 129:36
                                         // + literal: Const { ty: fn(bool) -> &'static str {get_build_info_str}, val: Value(<ZST>) }
    }

    bb2: {
        _137 = const false;              // scope 0 at cita-auth/src/main.rs:128:19: 129:43
        _6 = App::<'_, '_>::version::<&str>(move _7, move _8) -> [return: bb3, unwind: bb77]; // scope 0 at cita-auth/src/main.rs:128:19: 129:43
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:129:10: 129:17
                                         // + literal: Const { ty: fn(App<'_, '_>, &str) -> App<'_, '_> {App::<'_, '_>::version::<&str>}, val: Value(<ZST>) }
    }

    bb3: {
        _136 = const true;               // scope 0 at cita-auth/src/main.rs:129:42: 129:43
        _137 = const false;              // scope 0 at cita-auth/src/main.rs:129:42: 129:43
        _9 = get_build_info_str(const false) -> [return: bb4, unwind: bb75]; // scope 0 at cita-auth/src/main.rs:130:23: 130:48
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:130:23: 130:41
                                         // + literal: Const { ty: fn(bool) -> &'static str {get_build_info_str}, val: Value(<ZST>) }
    }

    bb4: {
        _136 = const false;              // scope 0 at cita-auth/src/main.rs:128:19: 130:49
        _5 = App::<'_, '_>::long_version::<&str>(move _6, move _9) -> [return: bb5, unwind: bb75]; // scope 0 at cita-auth/src/main.rs:128:19: 130:49
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:130:10: 130:22
                                         // + literal: Const { ty: fn(App<'_, '_>, &str) -> App<'_, '_> {App::<'_, '_>::long_version::<&str>}, val: Value(<ZST>) }
    }

    bb5: {
        _136 = const false;              // scope 0 at cita-auth/src/main.rs:130:48: 130:49
        _4 = App::<'_, '_>::author::<&str>(move _5, const "Rivtower") -> bb6; // scope 0 at cita-auth/src/main.rs:128:19: 131:28
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:131:10: 131:16
                                         // + literal: Const { ty: fn(App<'_, '_>, &str) -> App<'_, '_> {App::<'_, '_>::author::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:131:17: 131:27
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb6: {
        _3 = App::<'_, '_>::about::<&str>(move _4, const "CITA Block Chain Node powered by Rust") -> bb7; // scope 0 at cita-auth/src/main.rs:128:19: 132:56
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:132:10: 132:15
                                         // + literal: Const { ty: fn(App<'_, '_>, &str) -> App<'_, '_> {App::<'_, '_>::about::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:132:16: 132:55
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb7: {
        _10 = const "-c, --config=[FILE] 'Sets a custom config file'\n                          -s, --stdout 'Log to console'"; // scope 0 at cita-auth/src/main.rs:134:13: 135:57
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:134:13: 135:57
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = App::<'_, '_>::args_from_usage(move _3, _10) -> bb8; // scope 0 at cita-auth/src/main.rs:128:19: 136:10
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:133:10: 133:25
                                         // + literal: Const { ty: fn(App<'_, '_>, &str) -> App<'_, '_> {App::<'_, '_>::args_from_usage}, val: Value(<ZST>) }
    }

    bb8: {
        _1 = App::<'_, '_>::get_matches(move _2) -> bb9; // scope 0 at cita-auth/src/main.rs:128:19: 137:23
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:137:10: 137:21
                                         // + literal: Const { ty: fn(App<'_, '_>) -> ArgMatches<'_> {App::<'_, '_>::get_matches}, val: Value(<ZST>) }
    }

    bb9: {
        _12 = &_1;                       // scope 1 at cita-auth/src/main.rs:139:18: 139:46
        _11 = ArgMatches::<'_>::is_present::<&str>(move _12, const "stdout") -> [return: bb10, unwind: bb62]; // scope 1 at cita-auth/src/main.rs:139:18: 139:46
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:139:26: 139:36
                                         // + literal: Const { ty: for<'a> fn(&'a ArgMatches<'_>, &str) -> bool {ArgMatches::<'_>::is_present::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:139:37: 139:45
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb10: {
        _14 = dotenv() -> [return: bb11, unwind: bb62]; // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:21:9: 21:25
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:21:9: 21:23
                                         // + literal: Const { ty: fn() -> Result<PathBuf, dotenv::Error> {dotenv}, val: Value(<ZST>) }
    }

    bb11: {
        _13 = Result::<PathBuf, dotenv::Error>::ok(move _14) -> [return: bb12, unwind: bb62]; // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:21:9: 21:30
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:21:26: 21:28
                                         // + literal: Const { ty: fn(Result<PathBuf, dotenv::Error>) -> std::option::Option<PathBuf> {Result::<PathBuf, dotenv::Error>::ok}, val: Value(<ZST>) }
    }

    bb12: {
        drop(_13) -> [return: bb13, unwind: bb62]; // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:21:30: 21:31
    }

    bb13: {
        _15 = set_var::<&str, &str>(const "RUST_BACKTRACE", const "full") -> [return: bb14, unwind: bb62]; // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:23:9: 23:54
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:23:9: 23:28
                                         // + literal: Const { ty: fn(&str, &str) {set_var::<&str, &str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:23:29: 23:45
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:23:47: 23:53
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb14: {
        _16 = set_panic_handler() -> [return: bb15, unwind: bb62]; // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:26:9: 26:28
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:26:9: 26:26
                                         // + literal: Const { ty: fn() {set_panic_handler}, val: Value(<ZST>) }
    }

    bb15: {
        _17 = _11;                       // scope 2 at cita-auth/src/main.rs:140:51: 140:57
        switchInt(move _17) -> [0: bb17, otherwise: bb16]; // scope 2 at cita-auth/src/main.rs:140:51: 140:57
    }

    bb16: {
        _128 = const _;                  // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:30:33: 30:63
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:30:33: 30:63
                                         // + literal: Const { ty: &LogFavour<'_>, val: Unevaluated(main, [], Some(promoted[7])) }
        _18 = init_config(_128) -> [return: bb78, unwind: bb62]; // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:30:13: 30:64
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:30:13: 30:32
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a LogFavour<'b>) {init_config}, val: Value(<ZST>) }
    }

    bb17: {
        _127 = const _;                  // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:32:33: 32:61
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:32:33: 32:61
                                         // + literal: Const { ty: &LogFavour<'_>, val: Unevaluated(main, [], Some(promoted[6])) }
        _19 = init_config(_127) -> [return: bb79, unwind: bb62]; // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:32:13: 32:62
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:32:13: 32:32
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a LogFavour<'b>) {init_config}, val: Value(<ZST>) }
    }

    bb18: {
        _20 = log::Level::Info;          // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _23 = &_20;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _126 = const _;                  // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(main, [], Some(promoted[5])) }
        _22 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _23, _126) -> [return: bb22, unwind: bb62]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb19: {
        _21 = const false;               // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb21;                    // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb20: {
        _25 = &_20;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _27 = log::max_level() -> [return: bb23, unwind: bb62]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb21: {
        switchInt(move _21) -> [0: bb27, otherwise: bb25]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb22: {
        switchInt(move _22) -> [0: bb19, otherwise: bb20]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb23: {
        _26 = &_27;                      // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _24 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _25, move _26) -> [return: bb24, unwind: bb62]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb24: {
        _21 = move _24;                  // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb21;                    // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb25: {
        _125 = const _;                  // scope 3 at cita-auth/src/main.rs:140:38: 140:49
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:140:38: 140:49
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[4])) }
        _30 = _125 as &[&str] (Pointer(Unsize)); // scope 3 at cita-auth/src/main.rs:140:38: 140:49
        _29 = Arguments::<'_>::new_const(move _30) -> [return: bb26, unwind: bb62]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&[&'static str]) -> Arguments<'_> {Arguments::<'_>::new_const}, val: Value(<ZST>) }
    }

    bb26: {
        _124 = const _;                  // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(main, [], Some(promoted[3])) }
        _28 = log::__private_api_log(move _29, _20, _124) -> [return: bb80, unwind: bb62]; // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb27: {
        _31 = log::Level::Info;          // scope 2 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:117:14: 117:33
        _34 = &_31;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:15
        _123 = const _;                  // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: &log::LevelFilter, val: Unevaluated(main, [], Some(promoted[2])) }
        _33 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _34, _123) -> [return: bb31, unwind: bb62]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:43
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb28: {
        _32 = const false;               // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb30;                    // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb29: {
        _36 = &_31;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:50
        _38 = log::max_level() -> [return: bb32, unwind: bb62]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:71
                                         // + literal: Const { ty: fn() -> log::LevelFilter {log::max_level}, val: Value(<ZST>) }
    }

    bb30: {
        switchInt(move _32) -> [0: bb38, otherwise: bb34]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb31: {
        switchInt(move _33) -> [0: bb28, otherwise: bb29]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb32: {
        _37 = &_38;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:54: 36:73
        _35 = <log::Level as PartialOrd<log::LevelFilter>>::le(move _36, move _37) -> [return: bb33, unwind: bb62]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:47: 36:73
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a log::Level, &'b log::LevelFilter) -> bool {<log::Level as PartialOrd<log::LevelFilter>>::le}, val: Value(<ZST>) }
    }

    bb33: {
        _32 = move _35;                  // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
        goto -> bb30;                    // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:12: 36:73
    }

    bb34: {
        _122 = const _;                  // scope 4 at cita-auth/src/main.rs:141:11: 141:24
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:141:11: 141:24
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[1])) }
        _41 = _122 as &[&str] (Pointer(Unsize)); // scope 4 at cita-auth/src/main.rs:141:11: 141:24
        _47 = get_build_info_str(const true) -> [return: bb35, unwind: bb62]; // scope 4 at cita-auth/src/main.rs:141:26: 141:50
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:141:26: 141:44
                                         // + literal: Const { ty: fn(bool) -> &'static str {get_build_info_str}, val: Value(<ZST>) }
    }

    bb35: {
        _46 = &_47;                      // scope 4 at cita-auth/src/main.rs:141:26: 141:50
        _45 = core::fmt::ArgumentV1::<'_>::new_display::<&str>(_46) -> [return: bb36, unwind: bb62]; // scope 4 at cita-auth/src/main.rs:141:26: 141:50
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:141:26: 141:50
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b &str) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<&str>}, val: Value(<ZST>) }
    }

    bb36: {
        _44 = [move _45];                // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _43 = &_44;                      // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _42 = _43 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
        _40 = Arguments::<'_>::new_v1(move _41, move _42) -> [return: bb37, unwind: bb62]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:227:9: 227:32
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb37: {
        _121 = const _;                  // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
                                         // + literal: Const { ty: &(&str, &str, &str, u32), val: Unevaluated(main, [], Some(promoted[0])) }
        _39 = log::__private_api_log(move _40, _31, _121) -> [return: bb81, unwind: bb62]; // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 37:38
                                         // + literal: Const { ty: for<'a, 'b, 'c, 'd, 'e> fn(Arguments<'a>, log::Level, &'b (&'c str, &'d str, &'e str, u32)) {log::__private_api_log}, val: Value(<ZST>) }
    }

    bb38: {
        _50 = &_1;                       // scope 2 at cita-auth/src/main.rs:143:23: 143:49
        _49 = ArgMatches::<'_>::value_of::<&str>(move _50, const "config") -> [return: bb39, unwind: bb62]; // scope 2 at cita-auth/src/main.rs:143:23: 143:49
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:143:31: 143:39
                                         // + literal: Const { ty: for<'a> fn(&'a ArgMatches<'_>, &str) -> std::option::Option<&'a str> {ArgMatches::<'_>::value_of::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:143:40: 143:48
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb39: {
        _51 = const "auth.toml";         // scope 2 at cita-auth/src/main.rs:143:60: 143:71
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:143:60: 143:71
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _48 = std::option::Option::<&str>::unwrap_or(move _49, _51) -> [return: bb40, unwind: bb62]; // scope 2 at cita-auth/src/main.rs:143:23: 143:72
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:143:50: 143:59
                                         // + literal: Const { ty: fn(std::option::Option<&str>, &str) -> &str {std::option::Option::<&str>::unwrap_or}, val: Value(<ZST>) }
    }

    bb40: {
        _53 = _48;                       // scope 5 at cita-auth/src/main.rs:145:30: 145:41
        _52 = config::Config::new(move _53) -> [return: bb41, unwind: bb62]; // scope 5 at cita-auth/src/main.rs:145:18: 145:42
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:145:18: 145:29
                                         // + literal: Const { ty: for<'a> fn(&'a str) -> config::Config {config::Config::new}, val: Value(<ZST>) }
    }

    bb41: {
        _54 = (_52.0: usize);            // scope 6 at cita-auth/src/main.rs:147:27: 147:49
        _55 = (_52.1: u64);              // scope 7 at cita-auth/src/main.rs:148:27: 148:49
        _56 = (_52.2: usize);            // scope 8 at cita-auth/src/main.rs:149:32: 149:59
        _57 = (_52.3: usize);            // scope 9 at cita-auth/src/main.rs:150:32: 150:59
        _58 = (_52.4: usize);            // scope 10 at cita-auth/src/main.rs:151:25: 151:45
        _59 = (_52.5: bool);             // scope 11 at cita-auth/src/main.rs:152:22: 152:39
        _60 = (_52.6: u64);              // scope 12 at cita-auth/src/main.rs:155:27: 155:44
        _61 = (_52.7: u64);              // scope 13 at cita-auth/src/main.rs:156:30: 156:50
        _62 = profiler(_60, _61) -> [return: bb42, unwind: bb62]; // scope 14 at cita-auth/src/main.rs:157:5: 157:50
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:157:5: 157:13
                                         // + literal: Const { ty: fn(u64, u64) {profiler}, val: Value(<ZST>) }
    }

    bb42: {
        _65 = unbounded::<(std::string::String, Vec<u8>)>() -> [return: bb43, unwind: bb62]; // scope 14 at cita-auth/src/main.rs:164:28: 164:48
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:164:28: 164:46
                                         // + literal: Const { ty: fn() -> (pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, pubsub::crossbeam_channel::Receiver<(std::string::String, Vec<u8>)>) {unbounded::<(std::string::String, Vec<u8>)>}, val: Value(<ZST>) }
    }

    bb43: {
        _135 = const true;               // scope 14 at cita-auth/src/main.rs:164:10: 164:16
        _63 = move (_65.0: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 14 at cita-auth/src/main.rs:164:10: 164:16
        _134 = const true;               // scope 14 at cita-auth/src/main.rs:164:18: 164:24
        _64 = move (_65.1: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>); // scope 14 at cita-auth/src/main.rs:164:18: 164:24
        _68 = unbounded::<(std::string::String, Vec<u8>)>() -> [return: bb44, unwind: bb60]; // scope 15 at cita-auth/src/main.rs:165:28: 165:48
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:165:28: 165:46
                                         // + literal: Const { ty: fn() -> (pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, pubsub::crossbeam_channel::Receiver<(std::string::String, Vec<u8>)>) {unbounded::<(std::string::String, Vec<u8>)>}, val: Value(<ZST>) }
    }

    bb44: {
        _133 = const true;               // scope 15 at cita-auth/src/main.rs:165:10: 165:16
        _66 = move (_68.0: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 15 at cita-auth/src/main.rs:165:10: 165:16
        _132 = const true;               // scope 15 at cita-auth/src/main.rs:165:18: 165:24
        _67 = move (_68.1: pubsub::crossbeam_channel::Receiver<(std::string::String, std::vec::Vec<u8>)>); // scope 15 at cita-auth/src/main.rs:165:18: 165:24
        _70 = const "auth";              // scope 16 at cita-auth/src/main.rs:167:9: 167:15
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:167:9: 167:15
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _73 = const 18_usize;            // scope 17 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
        _74 = const 1_usize;             // scope 17 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
        _75 = alloc::alloc::exchange_malloc(move _73, move _74) -> [return: bb45, unwind: bb70]; // scope 17 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
                                         // + literal: Const { ty: unsafe fn(usize, usize) -> *mut u8 {alloc::alloc::exchange_malloc}, val: Value(<ZST>) }
    }

    bb45: {
        _76 = ShallowInitBox(move _75, [libproto::router::RoutingKey; 9]); // scope 16 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
        _78 = const Consensus;           // scope 16 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x03)) }
        _79 = const libproto::router::MsgType::VerifyBlockReq; // scope 16 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x0e)) }
        _77 = RoutingKey(move _78, move _79); // scope 16 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _81 = const libproto::router::SubModules::Chain; // scope 16 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x02)) }
        _82 = const libproto::router::MsgType::BlockTxHashes; // scope 16 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x0c)) }
        _80 = RoutingKey(move _81, move _82); // scope 16 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _84 = const Executor;            // scope 16 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x05)) }
        _85 = const libproto::router::MsgType::BlackList; // scope 16 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x15)) }
        _83 = RoutingKey(move _84, move _85); // scope 16 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _87 = const Jsonrpc;             // scope 16 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x00)) }
        _88 = const RequestNewTxBatch;   // scope 16 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x1d)) }
        _86 = RoutingKey(move _87, move _88); // scope 16 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _90 = const Net;                 // scope 16 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x01)) }
        _91 = const libproto::router::MsgType::Request; // scope 16 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x01)) }
        _89 = RoutingKey(move _90, move _91); // scope 16 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _93 = const libproto::router::SubModules::Snapshot; // scope 16 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x07)) }
        _94 = const libproto::router::MsgType::SnapshotReq; // scope 16 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x11)) }
        _92 = RoutingKey(move _93, move _94); // scope 16 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _96 = const Executor;            // scope 16 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x05)) }
        _97 = const libproto::router::MsgType::Miscellaneous; // scope 16 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x13)) }
        _95 = RoutingKey(move _96, move _97); // scope 16 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _99 = const Net;                 // scope 16 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x01)) }
        _100 = const libproto::router::MsgType::GetBlockTxn; // scope 16 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x17)) }
        _98 = RoutingKey(move _99, move _100); // scope 16 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _102 = const Net;                // scope 16 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:28:13: 28:28
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: SubModules, val: Value(Scalar(0x01)) }
        _103 = const libproto::router::MsgType::BlockTxn; // scope 16 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:29:13: 29:25
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: MsgType, val: Value(Scalar(0x18)) }
        _101 = RoutingKey(move _102, move _103); // scope 16 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/libproto/src/router.rs:27:9: 30:10
        _138 = (((_76.0: std::ptr::Unique<[libproto::router::RoutingKey; 9]>).0: std::ptr::NonNull<[libproto::router::RoutingKey; 9]>).0: *const [libproto::router::RoutingKey; 9]); // scope 16 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:37: 54:46
        (*_138) = [move _77, move _80, move _83, move _86, move _89, move _92, move _95, move _98, move _101]; // scope 16 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:37: 54:46
        _72 = move _76 as std::boxed::Box<[libproto::router::RoutingKey]> (Pointer(Unsize)); // scope 16 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:54:13: 54:47
        _71 = std::slice::<impl [RoutingKey]>::into_vec::<std::alloc::Global>(move _72) -> [return: bb46, unwind: bb70]; // scope 16 at /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:50:36: 55:10
                                         // mir::Constant
                                         // + span: /rustc/4a04d086cac54a41517d5657b59d5fe2caca2d71/library/alloc/src/macros.rs:50:36: 50:51
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(Box<[RoutingKey]>) -> Vec<RoutingKey> {std::slice::<impl [RoutingKey]>::into_vec::<std::alloc::Global>}, val: Value(<ZST>) }
    }

    bb46: {
        _135 = const false;              // scope 16 at cita-auth/src/main.rs:179:9: 179:15
        _104 = move _63;                 // scope 16 at cita-auth/src/main.rs:179:9: 179:15
        _132 = const false;              // scope 16 at cita-auth/src/main.rs:180:9: 180:15
        _105 = move _67;                 // scope 16 at cita-auth/src/main.rs:180:9: 180:15
        _69 = start_pubsub::<RoutingKey>(_70, move _71, move _104, move _105) -> [return: bb47, unwind: bb70]; // scope 16 at cita-auth/src/main.rs:166:5: 181:6
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:166:5: 166:17
                                         // + literal: Const { ty: for<'a> fn(&'a str, Vec<RoutingKey>, pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, pubsub::crossbeam_channel::Receiver<(std::string::String, Vec<u8>)>) {start_pubsub::<RoutingKey>}, val: Value(<ZST>) }
    }

    bb47: {
        _107 = &_66;                     // scope 16 at cita-auth/src/main.rs:184:26: 184:40
        _106 = <pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)> as Clone>::clone(move _107) -> [return: bb48, unwind: bb70]; // scope 16 at cita-auth/src/main.rs:184:26: 184:40
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:184:33: 184:38
                                         // + literal: Const { ty: for<'a> fn(&'a pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>) -> pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)> {<pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)> as Clone>::clone}, val: Value(<ZST>) }
    }

    bb48: {
        _131 = const true;               // scope 16 at cita-auth/src/main.rs:184:39: 184:40
        _110 = unbounded::<libproto::Request>() -> [return: bb49, unwind: bb68]; // scope 18 at cita-auth/src/main.rs:185:36: 185:56
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:185:36: 185:54
                                         // + literal: Const { ty: fn() -> (pubsub::crossbeam_channel::Sender<libproto::Request>, pubsub::crossbeam_channel::Receiver<libproto::Request>) {unbounded::<libproto::Request>}, val: Value(<ZST>) }
    }

    bb49: {
        _130 = const true;               // scope 18 at cita-auth/src/main.rs:185:10: 185:20
        _108 = move (_110.0: pubsub::crossbeam_channel::Sender<libproto::Request>); // scope 18 at cita-auth/src/main.rs:185:10: 185:20
        _129 = const true;               // scope 18 at cita-auth/src/main.rs:185:22: 185:32
        _109 = move (_110.1: pubsub::crossbeam_channel::Receiver<libproto::Request>); // scope 18 at cita-auth/src/main.rs:185:22: 185:32
        _129 = const false;              // scope 19 at cita-auth/src/main.rs:186:19: 190:6
        _131 = const false;              // scope 19 at cita-auth/src/main.rs:186:19: 190:6
        _112 = [closure@cita-auth/src/main.rs:186:19: 186:26] { count_per_batch: _54, buffer_duration: _55, rx_request: move _109, tx_pub_forward: move _106 }; // scope 19 at cita-auth/src/main.rs:186:19: 190:6
                                         // closure
                                         // + def_id: DefId(0:354 ~ cita_auth[81d6]::main::{closure#0})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn(()),
                                         //     (usize, u64, pubsub::crossbeam_channel::Receiver<libproto::Request>, pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>),
                                         // ]
        _111 = std::thread::spawn::<[closure@cita-auth/src/main.rs:186:19: 186:26], ()>(move _112) -> [return: bb50, unwind: bb65]; // scope 19 at cita-auth/src/main.rs:186:5: 190:7
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:186:5: 186:18
                                         // + literal: Const { ty: fn([closure@cita-auth/src/main.rs:186:19: 186:26]) -> JoinHandle<()> {std::thread::spawn::<[closure@cita-auth/src/main.rs:186:19: 186:26], ()>}, val: Value(<ZST>) }
    }

    bb50: {
        drop(_111) -> [return: bb51, unwind: bb65]; // scope 19 at cita-auth/src/main.rs:190:7: 190:8
    }

    bb51: {
        _113 = Dispatcher::new(_59) -> [return: bb52, unwind: bb65]; // scope 19 at cita-auth/src/main.rs:192:22: 192:49
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:192:22: 192:37
                                         // + literal: Const { ty: fn(bool) -> Dispatcher {Dispatcher::new}, val: Value(<ZST>) }
    }

    bb52: {
        _134 = const false;              // scope 20 at cita-auth/src/main.rs:196:9: 196:15
        _115 = move _64;                 // scope 20 at cita-auth/src/main.rs:196:9: 196:15
        _133 = const false;              // scope 20 at cita-auth/src/main.rs:197:9: 197:15
        _116 = move _66;                 // scope 20 at cita-auth/src/main.rs:197:9: 197:15
        _117 = move _113;                // scope 20 at cita-auth/src/main.rs:198:9: 198:19
        _130 = const false;              // scope 20 at cita-auth/src/main.rs:199:9: 199:19
        _118 = move _108;                // scope 20 at cita-auth/src/main.rs:199:9: 199:19
        _114 = MsgHandler::new(move _115, move _116, move _117, move _118, _58, _56, _57) -> [return: bb53, unwind: bb65]; // scope 20 at cita-auth/src/main.rs:195:27: 203:6
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:195:27: 195:42
                                         // + literal: Const { ty: fn(pubsub::crossbeam_channel::Receiver<(std::string::String, Vec<u8>)>, pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>, Dispatcher, pubsub::crossbeam_channel::Sender<libproto::Request>, usize, usize, usize) -> MsgHandler {MsgHandler::new}, val: Value(<ZST>) }
    }

    bb53: {
        _120 = &mut _114;                // scope 21 at cita-auth/src/main.rs:204:5: 204:36
        _119 = MsgHandler::handle_remote_msg(move _120) -> [return: bb54, unwind: bb57]; // scope 21 at cita-auth/src/main.rs:204:5: 204:36
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:204:17: 204:34
                                         // + literal: Const { ty: for<'a> fn(&'a mut MsgHandler) {MsgHandler::handle_remote_msg}, val: Value(<ZST>) }
    }

    bb54: {
        drop(_114) -> [return: bb55, unwind: bb65]; // scope 20 at cita-auth/src/main.rs:205:1: 205:2
    }

    bb55: {
        _129 = const false;              // scope 18 at cita-auth/src/main.rs:205:1: 205:2
        _130 = const false;              // scope 18 at cita-auth/src/main.rs:205:1: 205:2
        _131 = const false;              // scope 16 at cita-auth/src/main.rs:205:1: 205:2
        _132 = const false;              // scope 15 at cita-auth/src/main.rs:205:1: 205:2
        _133 = const false;              // scope 15 at cita-auth/src/main.rs:205:1: 205:2
        _134 = const false;              // scope 14 at cita-auth/src/main.rs:205:1: 205:2
        _135 = const false;              // scope 14 at cita-auth/src/main.rs:205:1: 205:2
        drop(_1) -> bb56;                // scope 0 at cita-auth/src/main.rs:205:1: 205:2
    }

    bb56: {
        return;                          // scope 0 at cita-auth/src/main.rs:205:2: 205:2
    }

    bb57 (cleanup): {
        drop(_114) -> bb65;              // scope 20 at cita-auth/src/main.rs:205:1: 205:2
    }

    bb58 (cleanup): {
        switchInt(_130) -> [0: bb68, otherwise: bb66]; // scope 18 at cita-auth/src/main.rs:205:1: 205:2
    }

    bb59 (cleanup): {
        switchInt(_133) -> [0: bb60, otherwise: bb71]; // scope 15 at cita-auth/src/main.rs:205:1: 205:2
    }

    bb60 (cleanup): {
        switchInt(_134) -> [0: bb61, otherwise: bb72]; // scope 14 at cita-auth/src/main.rs:205:1: 205:2
    }

    bb61 (cleanup): {
        switchInt(_135) -> [0: bb62, otherwise: bb73]; // scope 14 at cita-auth/src/main.rs:205:1: 205:2
    }

    bb62 (cleanup): {
        drop(_1) -> bb63;                // scope 0 at cita-auth/src/main.rs:205:1: 205:2
    }

    bb63 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/main.rs:126:1: 205:2
    }

    bb64 (cleanup): {
        drop(_109) -> bb58;              // scope 18 at cita-auth/src/main.rs:205:1: 205:2
    }

    bb65 (cleanup): {
        switchInt(_129) -> [0: bb58, otherwise: bb64]; // scope 18 at cita-auth/src/main.rs:205:1: 205:2
    }

    bb66 (cleanup): {
        drop(_108) -> bb68;              // scope 18 at cita-auth/src/main.rs:205:1: 205:2
    }

    bb67 (cleanup): {
        drop(_106) -> bb70;              // scope 16 at cita-auth/src/main.rs:205:1: 205:2
    }

    bb68 (cleanup): {
        switchInt(_131) -> [0: bb70, otherwise: bb67]; // scope 16 at cita-auth/src/main.rs:205:1: 205:2
    }

    bb69 (cleanup): {
        drop(_67) -> bb59;               // scope 15 at cita-auth/src/main.rs:205:1: 205:2
    }

    bb70 (cleanup): {
        switchInt(_132) -> [0: bb59, otherwise: bb69]; // scope 15 at cita-auth/src/main.rs:205:1: 205:2
    }

    bb71 (cleanup): {
        drop(_66) -> bb60;               // scope 15 at cita-auth/src/main.rs:205:1: 205:2
    }

    bb72 (cleanup): {
        drop(_64) -> bb61;               // scope 14 at cita-auth/src/main.rs:205:1: 205:2
    }

    bb73 (cleanup): {
        drop(_63) -> bb62;               // scope 14 at cita-auth/src/main.rs:205:1: 205:2
    }

    bb74 (cleanup): {
        drop(_6) -> bb63;                // scope 0 at cita-auth/src/main.rs:130:48: 130:49
    }

    bb75 (cleanup): {
        switchInt(_136) -> [0: bb63, otherwise: bb74]; // scope 0 at cita-auth/src/main.rs:130:48: 130:49
    }

    bb76 (cleanup): {
        drop(_7) -> bb63;                // scope 0 at cita-auth/src/main.rs:129:42: 129:43
    }

    bb77 (cleanup): {
        switchInt(_137) -> [0: bb63, otherwise: bb76]; // scope 0 at cita-auth/src/main.rs:129:42: 129:43
    }

    bb78: {
        goto -> bb18;                    // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:30:13: 30:64
    }

    bb79: {
        goto -> bb18;                    // scope 2 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:32:13: 32:62
    }

    bb80: {
        goto -> bb27;                    // scope 3 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }

    bb81: {
        goto -> bb38;                    // scope 4 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:37:13: 41:14
    }
}

promoted[0] in main: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/main.rs:141:5: 141:51
    let mut _7: &str;                    // in scope 0 at cita-auth/src/main.rs:141:5: 141:51

    bb0: {
        _3 = const "cita_auth";          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth";          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/main.rs"; // scope 0 at cita-auth/src/main.rs:141:5: 141:51
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:141:5: 141:51
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/main.rs:141:5: 141:51
        _1 = (move _2, move _4, move _6, const 141_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[1] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/main.rs:141:11: 141:24
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/main.rs:141:11: 141:24

    bb0: {
        _1 = [const "Version: "];        // scope 0 at cita-auth/src/main.rs:141:11: 141:24
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:141:11: 141:24
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/main.rs:141:11: 141:24
        return;                          // scope 0 at cita-auth/src/main.rs:141:11: 141:24
    }
}

promoted[2] in main: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[3] in main: &(&str, &str, &str, u32) = {
    let mut _0: &(&str, &str, &str, u32); // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    let mut _1: (&str, &str, &str, u32); // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
    let mut _2: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _3: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _4: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _5: &str;                    // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
    let mut _6: &str;                    // in scope 0 at cita-auth/src/main.rs:140:5: 140:58
    let mut _7: &str;                    // in scope 0 at cita-auth/src/main.rs:140:5: 140:58

    bb0: {
        _3 = const "cita_auth";          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _5 = const "cita_auth";          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _4 = &(*_5);                     // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:235:9: 235:23
        _7 = const "cita-auth/src/main.rs"; // scope 0 at cita-auth/src/main.rs:140:5: 140:58
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:140:5: 140:58
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _6 = &(*_7);                     // scope 0 at cita-auth/src/main.rs:140:5: 140:58
        _1 = (move _2, move _4, move _6, const 140_u32); // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:18: 40:79
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:40:17: 40:79
    }
}

promoted[4] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at cita-auth/src/main.rs:140:38: 140:49
    let mut _1: [&str; 1];               // in scope 0 at cita-auth/src/main.rs:140:38: 140:49

    bb0: {
        _1 = [const "CITA:auth"];        // scope 0 at cita-auth/src/main.rs:140:38: 140:49
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:140:38: 140:49
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at cita-auth/src/main.rs:140:38: 140:49
        return;                          // scope 0 at cita-auth/src/main.rs:140:38: 140:49
    }
}

promoted[5] in main: &log::LevelFilter = {
    let mut _0: &log::LevelFilter;       // return place in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    let mut _1: log::LevelFilter;        // in scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43

    bb0: {
        _1 = const _;                    // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // mir::Constant
                                         // + span: /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
                                         // + literal: Const { ty: log::LevelFilter, val: Unevaluated(log::STATIC_MAX_LEVEL, [], None) }
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
        return;                          // scope 0 at /home/workstation/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/macros.rs:36:19: 36:43
    }
}

promoted[6] in main: &LogFavour<'_> = {
    let mut _0: &logger::LogFavour<'_>;  // return place in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:32:33: 32:61
    let mut _1: logger::LogFavour<'_>;   // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:32:34: 32:61
    let mut _2: &str;                    // in scope 0 at cita-auth/src/main.rs:140:25: 140:36
    let mut _3: &str;                    // in scope 0 at cita-auth/src/main.rs:140:25: 140:36

    bb0: {
        _3 = const "cita-auth";          // scope 0 at cita-auth/src/main.rs:140:25: 140:36
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:140:25: 140:36
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at cita-auth/src/main.rs:140:25: 140:36
        _1 = LogFavour::<'_>::File(move _2); // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:32:34: 32:61
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:32:33: 32:61
        return;                          // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:32:33: 32:61
    }
}

promoted[7] in main: &LogFavour<'_> = {
    let mut _0: &logger::LogFavour<'_>;  // return place in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:30:33: 30:63
    let mut _1: logger::LogFavour<'_>;   // in scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:30:34: 30:63
    let mut _2: &str;                    // in scope 0 at cita-auth/src/main.rs:140:25: 140:36
    let mut _3: &str;                    // in scope 0 at cita-auth/src/main.rs:140:25: 140:36

    bb0: {
        _3 = const "cita-auth";          // scope 0 at cita-auth/src/main.rs:140:25: 140:36
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:140:25: 140:36
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _2 = &(*_3);                     // scope 0 at cita-auth/src/main.rs:140:25: 140:36
        _1 = LogFavour::<'_>::Stdout(move _2); // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:30:34: 30:63
        _0 = &_1;                        // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:30:33: 30:63
        return;                          // scope 0 at /home/workstation/.cargo/git/checkouts/cita-common-1cdbc5a3f2d672a3/50b22af/util/src/init.rs:30:33: 30:63
    }
}

fn main::{closure#0}(_1: [closure@cita-auth/src/main.rs:186:19: 186:26]) -> () {
    debug count_per_batch => (_1.0: usize); // in scope 0 at cita-auth/src/main.rs:147:9: 147:24
    debug buffer_duration => (_1.1: u64); // in scope 0 at cita-auth/src/main.rs:148:9: 148:24
    debug rx_request => (_1.2: pubsub::crossbeam_channel::Receiver<libproto::Request>); // in scope 0 at cita-auth/src/main.rs:185:22: 185:32
    debug tx_pub_forward => (_1.3: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // in scope 0 at cita-auth/src/main.rs:184:9: 184:23
    let mut _0: ();                      // return place in scope 0 at cita-auth/src/main.rs:186:27: 186:27
    let mut _2: batch_forward::BatchForward; // in scope 0 at cita-auth/src/main.rs:187:13: 187:30
    let mut _3: usize;                   // in scope 0 at cita-auth/src/main.rs:188:31: 188:46
    let mut _4: u64;                     // in scope 0 at cita-auth/src/main.rs:188:48: 188:63
    let mut _5: pubsub::crossbeam_channel::Receiver<libproto::Request>; // in scope 0 at cita-auth/src/main.rs:188:65: 188:75
    let mut _6: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>; // in scope 0 at cita-auth/src/main.rs:188:77: 188:91
    let _7: ();                          // in scope 0 at cita-auth/src/main.rs:189:9: 189:28
    let mut _8: &mut batch_forward::BatchForward; // in scope 0 at cita-auth/src/main.rs:189:9: 189:28
    scope 1 {
        debug batch_forward => _2;       // in scope 1 at cita-auth/src/main.rs:187:13: 187:30
    }

    bb0: {
        _3 = (_1.0: usize);              // scope 0 at cita-auth/src/main.rs:188:31: 188:46
        _4 = (_1.1: u64);                // scope 0 at cita-auth/src/main.rs:188:48: 188:63
        _5 = move (_1.2: pubsub::crossbeam_channel::Receiver<libproto::Request>); // scope 0 at cita-auth/src/main.rs:188:65: 188:75
        _6 = move (_1.3: pubsub::crossbeam_channel::Sender<(std::string::String, std::vec::Vec<u8>)>); // scope 0 at cita-auth/src/main.rs:188:77: 188:91
        _2 = BatchForward::new(move _3, move _4, move _5, move _6) -> bb1; // scope 0 at cita-auth/src/main.rs:188:13: 188:92
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:188:13: 188:30
                                         // + literal: Const { ty: fn(usize, u64, pubsub::crossbeam_channel::Receiver<libproto::Request>, pubsub::crossbeam_channel::Sender<(std::string::String, Vec<u8>)>) -> BatchForward {BatchForward::new}, val: Value(<ZST>) }
    }

    bb1: {
        _8 = &mut _2;                    // scope 1 at cita-auth/src/main.rs:189:9: 189:28
        _7 = BatchForward::run(move _8) -> [return: bb2, unwind: bb4]; // scope 1 at cita-auth/src/main.rs:189:9: 189:28
                                         // mir::Constant
                                         // + span: cita-auth/src/main.rs:189:23: 189:26
                                         // + literal: Const { ty: for<'a> fn(&'a mut BatchForward) {BatchForward::run}, val: Value(<ZST>) }
    }

    bb2: {
        drop(_2) -> bb3;                 // scope 0 at cita-auth/src/main.rs:190:5: 190:6
    }

    bb3: {
        return;                          // scope 0 at cita-auth/src/main.rs:190:6: 190:6
    }

    bb4 (cleanup): {
        drop(_2) -> bb5;                 // scope 0 at cita-auth/src/main.rs:190:5: 190:6
    }

    bb5 (cleanup): {
        resume;                          // scope 0 at cita-auth/src/main.rs:186:19: 190:6
    }
}

fn ChainId::V0(_1: u32) -> ChainId {
    let mut _0: handler::ChainId;        // return place in scope 0 at cita-auth/src/handler.rs:82:5: 82:7

    bb0: {
        _0 = ChainId::V0(move _1);       // scope 0 at cita-auth/src/handler.rs:82:5: 82:7
        return;                          // scope 0 at cita-auth/src/handler.rs:82:5: 82:7
    }
}

// MIR FOR CTFE
fn ChainId::V0(_1: u32) -> ChainId {
    let mut _0: handler::ChainId;        // return place in scope 0 at cita-auth/src/handler.rs:82:5: 82:7

    bb0: {
        _0 = ChainId::V0(move _1);       // scope 0 at cita-auth/src/handler.rs:82:5: 82:7
        return;                          // scope 0 at cita-auth/src/handler.rs:82:5: 82:7
    }
}

fn ChainId::V1(_1: U256) -> ChainId {
    let mut _0: handler::ChainId;        // return place in scope 0 at cita-auth/src/handler.rs:83:5: 83:7

    bb0: {
        _0 = ChainId::V1(move _1);       // scope 0 at cita-auth/src/handler.rs:83:5: 83:7
        return;                          // scope 0 at cita-auth/src/handler.rs:83:5: 83:7
    }
}

// MIR FOR CTFE
fn ChainId::V1(_1: U256) -> ChainId {
    let mut _0: handler::ChainId;        // return place in scope 0 at cita-auth/src/handler.rs:83:5: 83:7

    bb0: {
        _0 = ChainId::V1(move _1);       // scope 0 at cita-auth/src/handler.rs:83:5: 83:7
        return;                          // scope 0 at cita-auth/src/handler.rs:83:5: 83:7
    }
}
